Notebook[{

Cell[CellGroupData[{
Cell["SI Brochure Data", "Title",
 TaggingRules->{},
 CellChangeTimes->{{3.8749051691539354`*^9, 3.874905173253255*^9}},
 CellTags->{"DefaultContent", "Name", "TemplateCell"},
 CellID->806838874,ExpressionUUID->"fd596ed7-38de-4aa9-9907-ebd041a53f1d"],

Cell["\<\
This data contains data from the SI Brochure published by the BIPM\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8749051819167366`*^9, 3.8749051959542313`*^9}, 
   3.874912153768207*^9},
 CellTags->{"DefaultContent", "Description", "TemplateCell"},
 CellID->163956104,ExpressionUUID->"ffb301c3-aaba-4103-9d51-b38e923b89dc"],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed description of the data, including information about \
the size, structure, and history of the content elements.\n\nThis section may \
include multiple cells, bullet lists, tables, hyperlinks and additional \
styles/structures as needed.\n\nAdd any other information that may be \
relevant, such as when the data was first created or how and why it is used \
within a given field. Include all relevant background or contextual \
information related to the data, its development, and its usage.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5f52dbcb-f84a-4f76-b048-61fe8b02a4cd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellLabel->"In[66]:=",
 CellID->161845329,ExpressionUUID->"8e7b2109-8a30-4975-b905-4a763c794b32"],

Cell["\<\
We recommend using shorter key terms formatted with CamelCase if they are  \
and having a table in the Details section; e.g.,

\"BaseQuantities\" -> \"base quantities and units\"\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4Khycxu039fzb7h8+Nozorqqdsusihu9joc/e6INPdE34dSAGqCnZS0LrgO+\
XX6/mz25vrP+25GvY6cJL4nG9PTefyMCdfvLL0qRkA35NRmg=="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.875353545597912`16.340886318169574*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8753535585646887`*^9, 3.875353657655921*^9}, {
  3.875353701606853*^9, 3.8753537199340076`*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->349315046,ExpressionUUID->"f550f32c-7948-4eca-b927-977ee9fbc451"],

Cell["\<\
Do I need to replace all keys like hyperfine-transition-frequency-of-Cs as \
HyperfineTransitionFrequencyOfCs? I want to make sure I understand the issue.\
\>", "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4Kc44GtExrkrs6a+76whfSuSfci+P/z/\
kyLabucPkOfWuODUBVwU4KLjcLYxYpXth1UPb+wQWVmTeEUjv0n3zTv3fr2ISVt6+/bQIApppRew==\
"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8753557437297983`17.340886564504853*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8753557466021643`*^9, 3.8753557941542215`*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->391985262,ExpressionUUID->"159eb074-00f3-4508-a8e9-e49e9ffdac74"],

Cell["\<\
As a general matter, we recommend using CamelCase (e.g. \
HyperfineTransitionFrequencyOfCs) for a good balance of readability and \
conciseness. If you would prefer to keep your keys as they are they're OK, \
but we recommend this style to all submitters.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KH4qfFUruOjej7uOa+Rp73mSe+\
sCmueBHRvttrwZXi6znJ4Gqgp0U4lsWa4VtiZku1Pkv5u0K9jTGg1Om7Gn5of31I+/\
X48tSeQDiB1Cr"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.875958425195059`16.340954099178205*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875958722499671*^9, 3.875958730673959*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->182797446,ExpressionUUID->"c9b91669-6f7d-4087-9e1e-d0ebd8a97334"],

Cell["\<\
I think I don't want to go through the work of renaming all the keys so I'm \
going to leave it as it is. I based on the naming convention for GitHub \
repositories.\
\>", "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KU7dd2cjFurvxnhLXqfubJ+QmyOV/+fZcdNG+\
gpct3Gq38oGqgp0UVPPrWM8f4lDeejK3mP/7kv6w9N1hWkcC3jUIza6wyX65GABqVU2m"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8759803793616063`17.34095655909788*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8759803813001943`*^9, 3.8759804060225205`*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->640223056,ExpressionUUID->"149c376c-b482-44c1-927a-e8b9f450a6e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Data Definitions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ContentElements", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Define the content of the resource by assigning values to ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "ResourceData", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/ResourceData", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], ". The ", 
           Cell[
            BoxData[
             StyleBox[
              InterpretationBox[
               TagBox[
                FrameBox[
                 StyleBox[
                  GridBox[{{
                    DynamicBox[
                    If[
                    TrueQ[
                    StringQ[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                    "], {{0, 0}, {38., 41.}}, {0, 255}, 
                    ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                    ImageSize -> {Automatic, 12}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}}], 
                    "\"the ResourceObject defined by this notebook\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "the ResourceObject defined by this notebook", 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                    "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel, ImageResolution -> {72, 72}], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {38., 41.}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}, 
                    ImageSize -> {Automatic, 12}], 
                    "\"only defined in a definition notebook\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "only defined in a definition notebook", 
                    "Tooltip"]& ]], SingleEvaluation -> True]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], 
                  FontSize -> (11 Inherited)/13, ShowStringCharacters -> 
                  False], FrameMargins -> {{3, 3}, {3, 0}}, FrameStyle -> 
                 Directive[
                   GrayLevel[0.5, 0.35], 
                   AbsoluteThickness[0.5]], RoundingRadius -> 4, Background -> 
                 GrayLevel[0.5, 0.15], 
                 BaseStyle -> {
                  "Text", LineSpacing -> {0, 0}, LineBreakWithin -> False}], 
                "ResourceObjectNotebook"], 
               ResourceObject[
                EvaluationNotebook[]], Selectable -> False, 
               SelectWithContents -> True], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " icon inside ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "ResourceData", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/ResourceData", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " below represents the ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " defined within this notebook.\n\nEvaluating the ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                RowBox[{"ResourceData", "[", 
                  InterpretationBox[
                   TagBox[
                    FrameBox[
                    StyleBox[
                    GridBox[{{
                    DynamicBox[
                    If[
                    TrueQ[
                    StringQ[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                    "], {{0, 0}, {38., 41.}}, {0, 255}, 
                    ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                    ImageSize -> {Automatic, 12}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}}], 
                    "\"the ResourceObject defined by this notebook\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "the ResourceObject defined by this notebook", 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                    "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel, ImageResolution -> {72, 72}], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {38., 41.}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}, 
                    ImageSize -> {Automatic, 12}], 
                    "\"only defined in a definition notebook\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "only defined in a definition notebook", 
                    "Tooltip"]& ]], SingleEvaluation -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], 
                    FontSize -> (11 Inherited)/13, ShowStringCharacters -> 
                    False], FrameMargins -> {{3, 3}, {3, 0}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.35], 
                    AbsoluteThickness[0.5]], RoundingRadius -> 4, Background -> 
                    GrayLevel[0.5, 0.15], 
                    BaseStyle -> {
                    "Text", LineSpacing -> {0, 0}, LineBreakWithin -> False}],
                     "ResourceObjectNotebook"], 
                   ResourceObject[
                    EvaluationNotebook[]], Selectable -> False, 
                   SelectWithContents -> True], "]"}], "=", "xxxx"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], 
           " cell below defines the default content element of this resource, \
which will be returned by ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "ResourceData", "SymbolsRefLink", ShowStringCharacters -> 
                   True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                  Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceData", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                StyleBox["obj", "TI"], "]"}], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           ".\n\nEvaluating the subsequent cells defines additional content \
elements with the specified element names. The element name is used to access \
the associated content via ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "ResourceData", "SymbolsRefLink", ShowStringCharacters -> 
                   True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                  Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceData", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  StyleBox["obj", "TI"], ",", 
                  StyleBox["element", "TI"]}], "]"}], ShowStringCharacters -> 
              True, FontFamily -> "Source Sans Pro"]]], 
           ".\n\nThe default content element is assigned a name either based \
on the ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "Head", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/Head", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " of the data or set to ", 
           Cell[
            BoxData[
             StyleBox[
             "\"Content\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], 
           ".\n\nDefine as many elements as needed using different element \
names. You can insert the icon using the \"Insert ResourceObject\" button in \
the \"Tools\" above.\n\nElements set to ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "CloudObject", "SymbolsRefLink", ShowStringCharacters -> True,
                  FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/CloudObject", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], ", ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "File", "SymbolsRefLink", ShowStringCharacters -> True, 
                 FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/File", ContentPadding -> 
                False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], ", or ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "LocalObject", "SymbolsRefLink", ShowStringCharacters -> True,
                  FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/LocalObject", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " values will be interpreted as the content of those locations.\n\n\
Each content element must have a string name, preferably camel case. (Typical \
names describe the content element, and include ", 
           Cell[
            BoxData[
             StyleBox[
             "\"Dataset\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ", ", 
           Cell[
            BoxData[
             StyleBox[
             "\"Text\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], " and ", 
           Cell[
            BoxData[
             StyleBox[
             "\"TimeSeries\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], 
           ").\n\nElements defined as functions are automatically applied to \
the other elements of the resource. For example, ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                RowBox[{"ResourceData", "[", 
                  RowBox[{
                    InterpretationBox[
                    TagBox[
                    FrameBox[
                    StyleBox[
                    GridBox[{{
                    DynamicBox[
                    If[
                    TrueQ[
                    StringQ[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                    "], {{0, 0}, {38., 41.}}, {0, 255}, 
                    ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                    ImageSize -> {Automatic, 12}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}}], 
                    "\"the ResourceObject defined by this notebook\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "the ResourceObject defined by this notebook", 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                    "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                    GrayLevel, ImageResolution -> {72, 72}], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                    Selectable -> False], DefaultBaseStyle -> "ImageGraphics",
                     ImageSizeRaw -> {38., 41.}, 
                    PlotRange -> {{0, 38.}, {0, 41.}}, 
                    ImageSize -> {Automatic, 12}], 
                    "\"only defined in a definition notebook\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "only defined in a definition notebook", 
                    "Tooltip"]& ]], SingleEvaluation -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], 
                    FontSize -> (11 Inherited)/13, ShowStringCharacters -> 
                    False], FrameMargins -> {{3, 3}, {3, 0}}, FrameStyle -> 
                    Directive[
                    GrayLevel[0.5, 0.35], 
                    AbsoluteThickness[0.5]], RoundingRadius -> 4, Background -> 
                    GrayLevel[0.5, 0.15], 
                    BaseStyle -> {
                    "Text", LineSpacing -> {0, 0}, LineBreakWithin -> False}],
                     "ResourceObjectNotebook"], 
                    ResourceObject[
                    EvaluationNotebook[]], Selectable -> False, 
                    SelectWithContents -> True], ",", "\"Vertices\""}], "]"}],
                 "=", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"VertexList", "[", "#Graph", "]"}], "&"}], 
                  ")"}]}], ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], " will define an element named ", 
           Cell[
            BoxData[
             StyleBox[
             "\"Vertices\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], " which is derived from the ", 
           Cell[
            BoxData[
             StyleBox[
             "\"Graph\"", ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], " element when requested by the user."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContentElements"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0353d5b0-e5d2-45f7-b8a4-cdb421ae7645"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContentElements"},
 CellTags->{"ContentElements", "Data Definitions", "TemplateCellGroup"},
 CellID->190470799,ExpressionUUID->"0cbfb52a-d00b-4949-8ba9-4e318753729d"],

Cell[CellGroupData[{

Cell["Primary Content", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->"PrimaryContent",
 CellLabel->"In[1]:=",
 CellID->739468720,ExpressionUUID->"21a87da0-7c8c-4204-8cb0-2d1e0434fb03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   InterpretationBox[
    TagBox[
     FrameBox[
      StyleBox[GridBox[{
         {
          DynamicBox[If[
            TrueQ[
             StringQ[
              CurrentValue[
               EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                "], {{0, 0}, {38., 41.}}, {0, 255}, 
                ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
               ImageSize -> {Automatic, 12}, 
                PlotRange -> {{0, 38.}, {0, 41.}}}], 
              "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
              "TextStyling"], 
             Annotation[#, "the ResourceObject defined by this notebook", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                 "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel, ImageResolution -> {72, 72}], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}}, 
               ImageSize -> {Automatic, 12}], 
              "\"only defined in a definition notebook\"", LabelStyle -> 
              "TextStyling"], 
             Annotation[#, "only defined in a definition notebook", 
              "Tooltip"]& ]],
           ImageSizeCache->{11.121951219512194`, {3., 9.}},
           SingleEvaluation->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       ShowStringCharacters->False,
       FontSize->(11 Inherited)/13],
      Background->GrayLevel[0.5, 0.15],
      BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
      FrameMargins->{{3, 3}, {3, 0}},
      FrameStyle->Directive[
        GrayLevel[0.5, 0.35], 
        AbsoluteThickness[0.5]],
      RoundingRadius->4],
     "ResourceObjectNotebook"],
    ResourceObject[
     EvaluationNotebook[]],
    SelectWithContents->True,
    Selectable->False], "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<hyperfine-transition-frequency-of-Cs\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "9192631770"}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<Hz\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<speed-of-light-in-vacuum\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "299792458"}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Planck-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"6.62607015", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "34"}]]}]}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<J s\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<elementary-charge\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"1.602176634", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "19"}]]}]}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<C\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Boltzmann-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"1.380649", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "23"}]]}]}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Avogadro-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"6.02214076", " ", 
          SuperscriptBox["10", "23"]}]}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<luminous-efficacy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "683"}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)\>\""}]}], "|>"}]}]}], 
    "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8749052021542273`*^9, 3.874905519480975*^9}, {
   3.8749063492373133`*^9, 3.87490636926714*^9}, {3.874912174943288*^9, 
   3.8749122011744933`*^9}, 3.8749123248567867`*^9, {3.8759804880666475`*^9, 
   3.8759804895500937`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[1]:=",
 CellID->799020373,ExpressionUUID->"0ae8fbc2-d88e-485e-a4c8-458c90005516"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "hyperfine-transition-frequency-of-Cs" -> <|
        "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
       "speed-of-light-in-vacuum" -> <|
        "numerical-value" -> 299792458, "unit" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "Planck-constant" -> <|
        "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
       "elementary-charge" -> <|
        "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
       "Boltzmann-constant" -> <|
        "numerical-value" -> 1.380649*^-23, "unit" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "Avogadro-constant" -> <|
        "numerical-value" -> 6.02214076*^23, "unit" -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       "luminous-efficacy" -> <|
        "numerical-value" -> 683, "unit" -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["numerical-value", 
                  Style[
                  "numerical-value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "numerical-value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hyperfine-transition-frequency-of-Cs", 
                  Style[
                  "hyperfine-transition-frequency-of-Cs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9192631770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-of-light-in-vacuum", 
                  Style[
                  "speed-of-light-in-vacuum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299792458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Planck-constant", 
                  Style[
                  "Planck-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["elementary-charge", 
                  Style[
                  "elementary-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Boltzmann-constant", 
                  Style[
                  "Boltzmann-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avogadro-constant", 
                  Style[
                  "Avogadro-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-efficacy", 
                  Style[
                  "luminous-efficacy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["683"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8749055207082148`*^9, {3.8749063625100503`*^9, 3.8749063696478596`*^9}, {
   3.874912196194047*^9, 3.874912226272425*^9}, 3.874912325864659*^9, 
   3.8753548151537046`*^9, 3.8759803395454025`*^9, 3.8759804905102787`*^9, 
   3.8762259645183697`*^9, 3.8762260070037055`*^9, 3.876226061859346*^9, 
   3.8763192960228157`*^9, 3.8763216794701586`*^9, 3.876342394122697*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[1]=",
 CellID->524479931,ExpressionUUID->"116df81a-1ab0-4d64-bdee-97a5726dc2ff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Additional Data Elements (optional)", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->"AdditionalDataElements",
 CellLabel->"In[2]:=",
 CellID->651134066,ExpressionUUID->"c50b28d9-17cd-43ef-a933-9f4681153844"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<defining-constants-of-the-SI\>\""}], "]"}],
   "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<hyperfine-transition-frequency-of-Cs\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "9192631770"}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<Hz\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<speed-of-light-in-vacuum\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "299792458"}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Planck-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"6.62607015", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "34"}]]}]}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<J s\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<elementary-charge\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"1.602176634", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "19"}]]}]}], ",", 
        RowBox[{"\"\<unit\>\"", "->", "\"\<C\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Boltzmann-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"1.380649", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "23"}]]}]}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Avogadro-constant\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", 
         RowBox[{"6.02214076", " ", 
          SuperscriptBox["10", "23"]}]}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<luminous-efficacy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<numerical-value\>\"", "->", "683"}], ",", 
        RowBox[{
        "\"\<unit\>\"", "->", 
         "\"\<lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)\>\""}]}], "|>"}]}]}], 
    "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellLabel->"In[1]:=",
 CellID->722052718,ExpressionUUID->"1cd940e1-9794-485d-af76-14488549ba71"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "hyperfine-transition-frequency-of-Cs" -> <|
        "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
       "speed-of-light-in-vacuum" -> <|
        "numerical-value" -> 299792458, "unit" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "Planck-constant" -> <|
        "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
       "elementary-charge" -> <|
        "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
       "Boltzmann-constant" -> <|
        "numerical-value" -> 1.380649*^-23, "unit" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "Avogadro-constant" -> <|
        "numerical-value" -> 6.02214076*^23, "unit" -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       "luminous-efficacy" -> <|
        "numerical-value" -> 683, "unit" -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["numerical-value", 
                  Style[
                  "numerical-value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "numerical-value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hyperfine-transition-frequency-of-Cs", 
                  Style[
                  "hyperfine-transition-frequency-of-Cs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9192631770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-of-light-in-vacuum", 
                  Style[
                  "speed-of-light-in-vacuum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299792458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Planck-constant", 
                  Style[
                  "Planck-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["elementary-charge", 
                  Style[
                  "elementary-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Boltzmann-constant", 
                  Style[
                  "Boltzmann-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avogadro-constant", 
                  Style[
                  "Avogadro-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-efficacy", 
                  Style[
                  "luminous-efficacy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["683"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.874912247118375*^9, 3.875980412111176*^9, 
  3.875980492438657*^9, 3.876225966702366*^9, 3.876226064171314*^9, 
  3.876319298377679*^9, 3.8763423977364583`*^9},
 CellLabel->"Out[1]=",
 CellID->51594224,ExpressionUUID->"e939066b-3e57-402d-81d9-48bab01085db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<base-quantities-and-units\>\""}], "]"}], 
  "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<time\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<quantity-name\>\"", "->", "\"\<time\>\""}], ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<t\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<second\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<s\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<length\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<quantity-name\>\"", "->", "\"\<length\>\""}], ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<l\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<meter\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<m\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<mass\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<quantity-name\>\"", "->", "\"\<mass\>\""}], ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<l\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<kilogram\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<kg\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<electric-current\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<quantity-name\>\"", "->", "\"\<electric-current\>\""}], 
        ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<i\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<ampere\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<A\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<thermodynamic-temperature\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<quantity-name\>\"", "->", "\"\<thermodynamic-temperature\>\""}], 
        ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<T\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<kelvin\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<K\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<amount-of-substance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<quantity-name\>\"", "->", "\"\<amount-of-substance\>\""}], ",", 
        RowBox[{"\"\<typical-quantity-symbol\>\"", "->", "\"\<n\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<mole\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<mol\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<luminous-intensity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<quantity-name\>\"", "->", "\"\<luminous-intensity\>\""}],
         ",", 
        RowBox[{
        "\"\<typical-quantity-symbol\>\"", "->", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(v\)]\)\>\""}], ",", 
        RowBox[{"\"\<unit-name\>\"", "->", "\"\<candela\>\""}], ",", 
        RowBox[{"\"\<unit-symbol\>\"", "->", "\"\<cd\>\""}]}], "|>"}]}]}], 
    "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8749056075547266`*^9, 3.874905934813162*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[2]:=",
 CellID->391330976,ExpressionUUID->"f4bd39a8-ca3d-4289-93e2-1fc5e9214510"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "time" -> <|
        "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
         "unit-name" -> "second", "unit-symbol" -> "s"|>, 
       "length" -> <|
        "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
         "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
       "mass" -> <|
        "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
         "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
       "electric-current" -> <|
        "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
         "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
       "thermodynamic-temperature" -> <|
        "quantity-name" -> "thermodynamic-temperature", 
         "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
         "unit-symbol" -> "K"|>, 
       "amount-of-substance" -> <|
        "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
         "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
       "luminous-intensity" -> <|
        "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
         "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
         "unit-symbol" -> "cd"|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "quantity-name"} -> 
        1, {All, "typical-quantity-symbol"} -> 1, {All, "unit-name"} -> 
        1, {All, "unit-symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
             "typical-quantity-symbol" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "unit-name" -> 
             TypeSystem`PackageScope`AtomShape[89.60000000000001], 
             "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 4, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "quantity-name", "typical-quantity-symbol", "unit-name", 
         "unit-symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "quantity-name"} -> 
        1, {All, "typical-quantity-symbol"} -> 1, {All, "unit-name"} -> 
        1, {All, "unit-symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "quantity-name" -> TypeSystem`PackageScope`AtomShape[280.], 
             "typical-quantity-symbol" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "unit-name" -> 
             TypeSystem`PackageScope`AtomShape[89.60000000000001], 
             "unit-symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 4, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "quantity-name", "typical-quantity-symbol", "unit-name", 
         "unit-symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 4, "DataRowCount" -> 7, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantity-name", 
                  Style[
                  "quantity-name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "quantity-name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "quantity-name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["typical-quantity-symbol", 
                  Style[
                  "typical-quantity-symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "typical-quantity-symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "typical-quantity-symbol"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit-name", 
                  Style[
                  "unit-name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit-name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit-name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit-symbol", 
                  Style[
                  "unit-symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit-symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit-symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time", 
                  Style[
                  "time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["time", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["t", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["second", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["length", 
                  Style[
                  "length", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["l", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mass", 
                  Style[
                  "mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["mass", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["l", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-current", 
                  Style[
                  "electric-current", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["electric-current", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["i", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ampere", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thermodynamic-temperature", 
                  Style[
                  "thermodynamic-temperature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["thermodynamic-temperature", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["K", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["amount-of-substance", 
                  Style[
                  "amount-of-substance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amount-of-substance", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mole", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mol", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-intensity", 
                  Style[
                  "luminous-intensity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["luminous-intensity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["quantity-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["typical-quantity-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["candela", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["unit-name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["unit-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.874905779465577*^9, 3.874905841745756*^9, 
  3.8749059352199955`*^9, 3.8759804147922306`*^9, 3.875980453313097*^9, 
  3.8759804940175295`*^9, 3.8762259702383685`*^9, 3.8762260660673323`*^9, 
  3.8763192989357147`*^9, 3.876342398247456*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[2]=",
 CellID->60572951,ExpressionUUID->"21ccaaa3-4ac0-44ab-8db3-3947f3602bfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<base-quantities-and-dimensions\>\""}], 
   "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<time\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<t\>\""}], 
        ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<T\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<length\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<l\>\""}], 
        ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<L\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<mass\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<m\>\""}], 
        ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<M\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<electric-current\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<i\>\""}], 
        ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<I\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<thermodynamic-temperature\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<T\>\""}], 
        ",", 
        RowBox[{
        "\"\<symbol-for-dimension\>\"", "->", "\"\<\[CapitalTheta]\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<amount-of-substance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol-for-quantity\>\"", "->", "\"\<n\>\""}], 
        ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<N\>\""}]}], 
       "|>"}]}], ",", 
     RowBox[{"\"\<luminous-intensity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<typical-symbol-for-quantity\>\"", "->", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(v\)]\)\>\""}], ",", 
        RowBox[{"\"\<symbol-for-dimension\>\"", "->", "\"\<J\>\""}]}], 
       "|>"}]}]}], "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.874905966264216*^9, 3.874906090719015*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->391330977,ExpressionUUID->"3f209a67-27b7-48f8-8f7e-2a3ead5a9e73"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "time" -> <|
        "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> "T"|>,
        "length" -> <|
        "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> "L"|>,
        "mass" -> <|
        "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> "M"|>,
        "electric-current" -> <|
        "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> "I"|>,
        "thermodynamic-temperature" -> <|
        "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
         "\[CapitalTheta]"|>, 
       "amount-of-substance" -> <|
        "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> "N"|>,
        "luminous-intensity" -> <|
        "typical-symbol-for-quantity" -> "\!\(\*SubscriptBox[\(I\), \(v\)]\)",
          "symbol-for-dimension" -> "J"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 
        1, {All, "typical-symbol-for-quantity"} -> 
        1, {All, "symbol-for-dimension"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "typical-symbol-for-quantity" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "symbol-for-dimension" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "typical-symbol-for-quantity", "symbol-for-dimension"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 
        1, {All, "typical-symbol-for-quantity"} -> 
        1, {All, "symbol-for-dimension"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[280.], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "typical-symbol-for-quantity" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "symbol-for-dimension" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "typical-symbol-for-quantity", "symbol-for-dimension"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["typical-symbol-for-quantity", 
                  Style[
                  "typical-symbol-for-quantity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "typical-symbol-for-quantity"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "typical-symbol-for-quantity"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol-for-dimension", 
                  Style[
                  "symbol-for-dimension", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol-for-dimension"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol-for-dimension"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time", 
                  Style[
                  "time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["t", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["length", 
                  Style[
                  "length", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["l", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["L", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mass", 
                  Style[
                  "mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-current", 
                  Style[
                  "electric-current", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["i", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["I", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-current"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thermodynamic-temperature", 
                  Style[
                  "thermodynamic-temperature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\[CapitalTheta]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermodynamic-temperature"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["amount-of-substance", 
                  Style[
                  "amount-of-substance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-intensity", 
                  Style[
                  "luminous-intensity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["typical-symbol-for-quantity"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-intensity"], 
                 Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{734., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{734., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.87490604465248*^9, 3.8749060910305505`*^9, 
  3.875980416946252*^9, 3.87598049554099*^9, 3.876225972222374*^9, 
  3.876226067861833*^9, 3.876319299476*^9, 3.8763423987585807`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->318421691,ExpressionUUID->"b9d5dff2-413e-4d6e-9e78-020d7961c755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", 
    "\"\<SI-units-with-special-names-and-symbols\>\""}], "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<plane-angle\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<radian\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<rad=m/m\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<solid-angle\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<steradian\>\""}], 
        ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<frequency\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<hertz\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<force\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<newton\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<pressure-or-stress\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<pascal\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<energy-or-work-or-amount-of-heat\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<joule\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<N m\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<power-or-radiant-flux\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<watt\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-3\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<J/s\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<electric-charge\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<coulomb\>\""}], 
        ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", "\"\<C=A s\>\""}],
         ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<electric-potential-difference\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<volt\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<W/A\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<capacitance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<farad\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<C/V\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<electric-resistance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<ohm\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)\>\
\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<V/A\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<electric-conductance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<siemens\>\""}], 
        ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<A/V\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<magnetic-flux\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<weber\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)\>\
\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<V s\>\""}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<magnetic-flux-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<tesla\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}]}], "|>"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"\"\<inductance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<henry\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<Wb/A\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<Celsius-temperature\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<special-name-of-unit\>\"", "->", "\"\<degree Celsius\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<\[Degree]C=K\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<luminous-flux\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<lumen\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<lm=cd sr\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<illuminance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<lux\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<activity-referred-to-a-radionuclide\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<becquerel\>\""}], 
        ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<absorbed-dose-or-kerma\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<gray\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<J/kg\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<dose-equivalent\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<sievert\>\""}], 
        ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<J/kg\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<catalytic-activity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<special-name-of-unit\>\"", "->", "\"\<katal\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-terms-of-base-units\>\"", "->", 
         "\"\<kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<unit-expressed-in-terms-of-other-SI-units\>\"", "->", 
         "\"\<\>\""}]}], "|>"}]}]}], "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellLabel->"In[4]:=",
 CellID->130092555,ExpressionUUID->"ebc91e50-1ef6-4e3d-ba57-1e446f5d1d5d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "plane-angle" -> <|
        "special-name-of-unit" -> "radian", 
         "unit-expressed-terms-of-base-units" -> "rad=m/m", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "solid-angle" -> <|
        "special-name-of-unit" -> "steradian", 
         "unit-expressed-terms-of-base-units" -> 
         "sr=\!\(\*SuperscriptBox[\(m\), \(2\)]\)/\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "frequency" -> <|
        "special-name-of-unit" -> "hertz", 
         "unit-expressed-terms-of-base-units" -> 
         "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "force" -> <|
        "special-name-of-unit" -> "newton", 
         "unit-expressed-terms-of-base-units" -> 
         "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "pressure-or-stress" -> <|
        "special-name-of-unit" -> "pascal", 
         "unit-expressed-terms-of-base-units" -> 
         "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "energy-or-work-or-amount-of-heat" -> <|
        "special-name-of-unit" -> "joule", 
         "unit-expressed-terms-of-base-units" -> 
         "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
       "power-or-radiant-flux" -> <|
        "special-name-of-unit" -> "watt", 
         "unit-expressed-terms-of-base-units" -> 
         "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
       "electric-charge" -> <|
        "special-name-of-unit" -> "coulomb", 
         "unit-expressed-terms-of-base-units" -> "C=A s", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "electric-potential-difference" -> <|
        "special-name-of-unit" -> "volt", 
         "unit-expressed-terms-of-base-units" -> 
         "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
       "capacitance" -> <|
        "special-name-of-unit" -> "farad", 
         "unit-expressed-terms-of-base-units" -> 
         "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
       "electric-resistance" -> <|
        "special-name-of-unit" -> "ohm", "unit-expressed-terms-of-base-units" -> 
         "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
       "electric-conductance" -> <|
        "special-name-of-unit" -> "siemens", 
         "unit-expressed-terms-of-base-units" -> 
         "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
       "magnetic-flux" -> <|
        "special-name-of-unit" -> "weber", 
         "unit-expressed-terms-of-base-units" -> 
         "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
       "magnetic-flux-density" -> <|
        "special-name-of-unit" -> "tesla", 
         "unit-expressed-terms-of-base-units" -> 
         "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\
\), \(-1\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> 
         "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
       "inductance" -> <|
        "special-name-of-unit" -> "henry", 
         "unit-expressed-terms-of-base-units" -> 
         "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
       "Celsius-temperature" -> <|
        "special-name-of-unit" -> "degree Celsius", 
         "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "luminous-flux" -> <|
        "special-name-of-unit" -> "lumen", 
         "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "illuminance" -> <|
        "special-name-of-unit" -> "lux", "unit-expressed-terms-of-base-units" -> 
         "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> 
         "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
       "activity-referred-to-a-radionuclide" -> <|
        "special-name-of-unit" -> "becquerel", 
         "unit-expressed-terms-of-base-units" -> 
         "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
       "absorbed-dose-or-kerma" -> <|
        "special-name-of-unit" -> "gray", 
         "unit-expressed-terms-of-base-units" -> 
         "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
       "dose-equivalent" -> <|
        "special-name-of-unit" -> "sievert", 
         "unit-expressed-terms-of-base-units" -> 
         "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
       "catalytic-activity" -> <|
        "special-name-of-unit" -> "katal", 
         "unit-expressed-terms-of-base-units" -> 
         "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 
        1, {All, "special-name-of-unit"} -> 
        1, {All, "unit-expressed-terms-of-base-units"} -> 
        1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "special-name-of-unit" -> 
             TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
             "unit-expressed-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "unit-expressed-in-terms-of-other-SI-units" -> 
             TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "special-name-of-unit", "unit-expressed-terms-of-base-units", 
         "unit-expressed-in-terms-of-other-SI-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 
        1, {All, "special-name-of-unit"} -> 
        1, {All, "unit-expressed-terms-of-base-units"} -> 
        1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "special-name-of-unit" -> 
             TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
             "unit-expressed-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "unit-expressed-in-terms-of-other-SI-units" -> 
             TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "special-name-of-unit", "unit-expressed-terms-of-base-units", 
         "unit-expressed-in-terms-of-other-SI-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 22, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["special-name-of-unit", 
                  Style[
                  "special-name-of-unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "special-name-of-unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "special-name-of-unit"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit-expressed-terms-of-base-units", 
                  Style[
                  "unit-expressed-terms-of-base-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit-expressed-terms-of-base-units"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit-expressed-terms-of-base-units"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit-expressed-in-terms-of-other-SI-units", 
                  Style[
                  "unit-expressed-in-terms-of-other-SI-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit-expressed-in-terms-of-other-SI-units"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit-expressed-in-terms-of-other-SI-units"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["plane-angle", 
                  Style[
                  "plane-angle", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["plane-angle"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["rad=m/m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["plane-angle"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["solid-angle", 
                  Style[
                  "solid-angle", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["solid-angle"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["steradian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["solid-angle"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["frequency", 
                  Style[
                  "frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["frequency"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["hertz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["frequency"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["force", 
                  Style[
                  "force", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["force"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["force"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pressure-or-stress", 
                  Style[
                  "pressure-or-stress", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pressure-or-stress"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["pascal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pressure-or-stress"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy-or-work-or-amount-of-heat", 
                  Style[
                  "energy-or-work-or-amount-of-heat", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-or-work-or-amount-of-heat"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["power-or-radiant-flux", 
                  Style[
                  "power-or-radiant-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J/s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["power-or-radiant-flux"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-charge", 
                  Style[
                  "electric-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C=A s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-potential-difference", 
                  Style[
                  "electric-potential-difference", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-potential-difference"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["volt", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["W/A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-potential-difference"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["capacitance", 
                  Style[
                  "capacitance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["capacitance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["farad", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C/V", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["capacitance"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-resistance", 
                  Style[
                  "electric-resistance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-resistance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ohm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["V/A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-resistance"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-conductance", 
                  Style[
                  "electric-conductance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-conductance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["siemens", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A/V", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-conductance"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["magnetic-flux", 
                  Style[
                  "magnetic-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["weber", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["V s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["magnetic-flux-density", 
                  Style[
                  "magnetic-flux-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tesla", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-flux-density"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["inductance", 
                  Style[
                  "inductance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["inductance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["henry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wb/A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["inductance"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Celsius-temperature", 
                  Style[
                  "Celsius-temperature", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Celsius-temperature"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["degree Celsius", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\[Degree]C=K", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Celsius-temperature"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-flux", 
                  Style[
                  "luminous-flux", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-flux"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lumen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm=cd sr", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-flux"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["illuminance", 
                  Style[
                  "illuminance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["illuminance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lux", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["illuminance"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["activity-referred-to-a-radionuclide", 
                  Style[
                  "activity-referred-to-a-radionuclide", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["becquerel", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["activity-referred-to-a-radionuclide"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["absorbed-dose-or-kerma", 
                  Style[
                  "absorbed-dose-or-kerma", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["gray", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"], 
                 Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"], 
                 Key["unit-expressed-terms-of-base-units"]}, "Item", False], 
               "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J/kg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["absorbed-dose-or-kerma"], 
                 Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1149., {299.6340332872234, 305.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1149., {299.6340332872234, 305.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8749085062670603`*^9, 3.8759804186478944`*^9, 
  3.875980497271177*^9, 3.87622597400637*^9, 3.876226069581845*^9, 
  3.8763193000327454`*^9, 3.876342399225808*^9},
 CellLabel->"Out[4]=",
 CellID->765798366,ExpressionUUID->"cec77969-5a4a-4479-8a11-1b5758472a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", 
    "\"\<coherent-derived-units-in-the-SI-expressed-terms-of-base-units\>\""}]\
, "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<area\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<A\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<volume\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<V\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(3\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<speed-or-velocity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<v\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<acceleration\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<a\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<wavenumber\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<\[Sigma]\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<density-or-mass-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<\[Rho]\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<surface-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<typical-symbol\>\"", "->", 
         "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<specific-volume\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<\[Nu]\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<current-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<j\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<magnetic-field-strength\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<H\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<amount-of-substance-concentration\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<typical-symbol\>\"", "->", "\"\<c\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<mass-concentration\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<typical-symbol\>\"", "->", "\"\<\[Rho]-or-\[Gamma]\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<luminance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<typical-symbol\>\"", "->", 
         "\"\<\!\(\*SubscriptBox[\(L\), \(v\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}]}], "|>"}]}]}], 
    "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8749061195177817`*^9, 3.874906335257965*^9}, {
  3.874906407718383*^9, 3.8749069492904024`*^9}, {3.874906982124991*^9, 
  3.8749072896701727`*^9}, {3.8749073750522795`*^9, 3.8749074067157526`*^9}, {
  3.8749074776047525`*^9, 3.874907503125951*^9}, {3.8749075442666073`*^9, 
  3.8749075993383107`*^9}, {3.874907672101289*^9, 3.874907696770706*^9}, {
  3.87490775835032*^9, 3.8749077632379427`*^9}, {3.8749078028961926`*^9, 
  3.87490781007533*^9}, {3.874907847786213*^9, 3.874907848782881*^9}, {
  3.874907946054517*^9, 3.874908142283992*^9}, {3.874908181146536*^9, 
  3.8749084270422645`*^9}, {3.874908462448321*^9, 3.8749084752114644`*^9}},
 CellLabel->"In[5]:=",
 CellID->957565525,ExpressionUUID->"16b5fd30-a178-4f16-a095-390ab47a8938"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "area" -> <|
        "typical-symbol" -> "A", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
       "volume" -> <|
        "typical-symbol" -> "V", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
       "speed-or-velocity" -> <|
        "typical-symbol" -> "v", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "acceleration" -> <|
        "typical-symbol" -> "a", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "wavenumber" -> <|
        "typical-symbol" -> "\[Sigma]", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
       "density-or-mass-density" -> <|
        "typical-symbol" -> "\[Rho]", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
       "surface-density" -> <|
        "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "specific-volume" -> <|
        "typical-symbol" -> "\[Nu]", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
       "current-density" -> <|
        "typical-symbol" -> "j", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "magnetic-field-strength" -> <|
        "typical-symbol" -> "H", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
       "amount-of-substance-concentration" -> <|
        "typical-symbol" -> "c", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
       "mass-concentration" -> <|
        "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
       "luminance" -> <|
        "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "typical-symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[257.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "typical-symbol" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 2, {All}]]], 13, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 13], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 1, {All, "typical-symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[257.6], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "typical-symbol" -> 
             TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 2, {All}]]], 13, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 13], "Path" -> {}, "DisplayedRowCount" -> 
     13, "DisplayedColumnCount" -> 2, "DataRowCount" -> 13, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["typical-symbol", 
                  Style[
                  "typical-symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "typical-symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "typical-symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                  Style[
                  "derived-unit-expressed-in-terms-of-base-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "derived-unit-expressed-in-terms-of-base-units"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["area", 
                  Style[
                  "area", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["area"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["area"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["area"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["area"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["volume", 
                  Style[
                  "volume", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["volume"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["volume"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["V", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["volume"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(m\), \(3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["volume"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-or-velocity", 
                  Style[
                  "speed-or-velocity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-or-velocity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-or-velocity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["v", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-or-velocity"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-or-velocity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceleration", 
                  Style[
                  "acceleration", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["acceleration"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["acceleration"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["acceleration"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["acceleration"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["wavenumber", 
                  Style[
                  "wavenumber", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["wavenumber"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["wavenumber"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\[Sigma]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["wavenumber"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["wavenumber"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["density-or-mass-density", 
                  Style[
                  "density-or-mass-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["density-or-mass-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["density-or-mass-density"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\[Rho]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["density-or-mass-density"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["density-or-mass-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["surface-density", 
                  Style[
                  "surface-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-density"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-density"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["specific-volume", 
                  Style[
                  "specific-volume", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-volume"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-volume"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\[Nu]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-volume"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-volume"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["current-density", 
                  Style[
                  "current-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["current-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["current-density"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["j", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["current-density"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["current-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["magnetic-field-strength", 
                  Style[
                  "magnetic-field-strength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-field-strength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-field-strength"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-field-strength"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["magnetic-field-strength"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["amount-of-substance-concentration", 
                  Style[
                  "amount-of-substance-concentration", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance-concentration"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance-concentration"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance-concentration"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["amount-of-substance-concentration"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mass-concentration", 
                  Style[
                  "mass-concentration", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass-concentration"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass-concentration"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\[Rho]-or-\[Gamma]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass-concentration"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mass-concentration"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminance", 
                  Style[
                  "luminance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminance"], 
                 Key["typical-symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminance"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1134., {194.63403328722342`, 200.36596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8749064431459875`*^9, 3.8749064956048717`*^9, 3.8749066150760727`*^9, {
   3.8749066986799192`*^9, 3.8749067079026413`*^9}, 3.8749067789712124`*^9, 
   3.874906825224721*^9, 3.8749068626775846`*^9, 3.8749070835536156`*^9, 
   3.874907120710614*^9, 3.8749071795900526`*^9, 3.8749072148248367`*^9, 
   3.874907290114688*^9, 3.874907407290633*^9, {3.8749074862239847`*^9, 
   3.8749075043759837`*^9}, 3.8749075495317936`*^9, 3.8749076028231473`*^9, {
   3.8749076762333174`*^9, 3.8749076978533545`*^9}, 3.8749077638192616`*^9, 
   3.8749078125595074`*^9, 3.874907849231267*^9, 3.8749079716616554`*^9, 
   3.8749080054686747`*^9, 3.8749081264198213`*^9, 3.874908201121927*^9, 
   3.874908280875285*^9, 3.8749083492783775`*^9, 3.874908427477539*^9, 
   3.874908475644638*^9, 3.8749085691530128`*^9, 3.8759804208782597`*^9, 
   3.875980499348175*^9, 3.876225976510367*^9, 3.8762260734455323`*^9, 
   3.8763193007950506`*^9, 3.876342399909586*^9},
 CellLabel->"Out[5]=",
 CellID->112605643,ExpressionUUID->"88662e86-8ab0-414b-b388-697399ee2f3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", 
    "\"\<coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols\>\""}], "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<dynamic-viscosity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<pascal second\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<Pa s\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<moment-of-force\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<newton meter\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<N m\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<surface-tension\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<newton per meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<angular-velocity-or-angular-frequency\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<radian per second\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<angular-acceleration\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<radian per second squared\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<heat-flux-density-or-irradiance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<watt per square meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<heat-capacity-or-entropy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per kelvin\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\
\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<specific-heat-capacity-or-specific-entropy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per kilogram kelvin\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\
\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<specific-energy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per kilogram\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<thermal-conductivity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<watt per meter kelvin\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<energy-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per cubic meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<electric-field-strength\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<volt per meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<electric-charge-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<coulomb per cubic meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<surface-charge-density\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<coulomb per square meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<electric-flux-density-or-electric-displacement\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<coulomb per square meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<permittivity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<farad per meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<permeability\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<henry per meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<molar-energy\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per mole\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\
\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<molar-entropy-or-molar-heat-capacity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<joule per mole kelvin\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<exposure(x-and-\[Gamma]-rays)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<coulomb per kilogram\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<absorbed-dose-rate\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<gray per second\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<radiant-intensity\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<watt per steradian\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<radiance\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<watt per square meter steradian\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)\>\""}]}], "|>"}]}], 
     ",", 
     RowBox[{"\"\<catalytic-activity-concentration\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<name-of-coherent-derived-unit\>\"", "->", 
         "\"\<katal per cubic meter\>\""}], ",", 
        RowBox[{
        "\"\<symbol\>\"", "->", 
         "\"\<kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)\>\""}], ",", 
        RowBox[{
        "\"\<derived-unit-expressed-in-terms-of-base-units\>\"", "->", 
         "\"\<mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(m\), \(-3\)]\)\>\""}]}], "|>"}]}]}], "|>"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvXriB4Yz9944Oji+kAbR//58UwHRv7xWZoDot/8P
54BoviLTySDabc3DuSC66Pm1hSBaKWrzKhB9iv3JWhDN08GxGUQXXn61E0Qf
smU+DKIXrJQ4BqIvmZ4+C6Kt5qafA9Fz1sZcBtFSmU5XQPQKjZ83QHQMr+RN
ED1rn+NTEF0mdvIviM7ZsITpLJC2jkpUBNFLI86pgujAI2nqIPqZlo0liPb3
+O0Pol2ZNoeAaLH8m4UgOiL10BsQ/U2h9QeItgzTZTkHpKusuWVBNN8hN0UQ
7ez4xR9EXz19IxhEL9l+KhVEsxmszwLROSfUGkF096Wz7SDavz5lM4gGANZR
zWQ=
  "],
 CellLabel->"In[6]:=",
 CellID->607569443,ExpressionUUID->"29a47416-278f-4af8-8763-78d26bc3d87a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "dynamic-viscosity" -> <|
        "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
         "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "moment-of-force" -> <|
        "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> "N m", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
       "surface-tension" -> <|
        "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
         "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "angular-velocity-or-angular-frequency" -> <|
        "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
         "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "angular-acceleration" -> <|
        "name-of-coherent-derived-unit" -> "radian per second squared", 
         "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "heat-flux-density-or-irradiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter", "symbol" -> 
         "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
       "heat-capacity-or-entropy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "specific-heat-capacity-or-specific-entropy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
         "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "specific-energy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
       "thermal-conductivity" -> <|
        "name-of-coherent-derived-unit" -> "watt per meter kelvin", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(K\
\), \(-1\)]\)"|>, 
       "energy-density" -> <|
        "name-of-coherent-derived-unit" -> "joule per cubic meter", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "electric-field-strength" -> <|
        "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
         "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\
\), \(-1\)]\)"|>, 
       "electric-charge-density" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
       "surface-charge-density" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per square meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "electric-flux-density-or-electric-displacement" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per square meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "permittivity" -> <|
        "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
         "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\), \
\(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\(\*SuperscriptBox[\(A\), \
\(2\)]\)"|>, 
       "permeability" -> <|
        "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
         "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\
\), \(-2\)]\)"|>, 
       "molar-energy" -> <|
        "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       "molar-entropy-or-molar-heat-capacity" -> <|
        "name-of-coherent-derived-unit" -> "joule per mole kelvin", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
       "exposure(x-and-\[Gamma]-rays)" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
         "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
       "absorbed-dose-rate" -> <|
        "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
         "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
       "radiant-intensity" -> <|
        "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
       "radiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter steradian", 
         "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
       "catalytic-activity-concentration" -> <|
        "name-of-coherent-derived-unit" -> "katal per cubic meter", "symbol" -> 
         "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[515.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[515.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 24, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name-of-coherent-derived-unit", 
                  Style[
                  "name-of-coherent-derived-unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name-of-coherent-derived-unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name-of-coherent-derived-unit"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol", 
                  Style[
                  "symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                  Style[
                  "derived-unit-expressed-in-terms-of-base-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "derived-unit-expressed-in-terms-of-base-units"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dynamic-viscosity", 
                  Style[
                  "dynamic-viscosity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic-viscosity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["pascal second", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Pa s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["moment-of-force", 
                  Style[
                  "moment-of-force", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["moment-of-force"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["surface-tension", 
                  Style[
                  "surface-tension", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-tension"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["angular-velocity-or-angular-frequency", 
                  Style[
                  "angular-velocity-or-angular-frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-velocity-or-angular-frequency"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian per second", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["angular-acceleration", 
                  Style[
                  "angular-acceleration", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-acceleration"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian per second squared", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["heat-flux-density-or-irradiance", 
                  Style[
                  "heat-flux-density-or-irradiance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"]}, "RowHeader", False],
                "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["heat-capacity-or-entropy", 
                  Style[
                  "heat-capacity-or-entropy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-capacity-or-entropy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["specific-heat-capacity-or-specific-entropy", 
                  Style[
                  "specific-heat-capacity-or-specific-entropy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kilogram kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["specific-energy", 
                  Style[
                  "specific-energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-energy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thermal-conductivity", 
                  Style[
                  "thermal-conductivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per meter kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy-density", 
                  Style[
                  "energy-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per cubic meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-field-strength", 
                  Style[
                  "electric-field-strength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-field-strength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["volt per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-charge-density", 
                  Style[
                  "electric-charge-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per cubic meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["surface-charge-density", 
                  Style[
                  "surface-charge-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-charge-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-flux-density-or-electric-displacement", 
                  Style[
                  "electric-flux-density-or-electric-displacement", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["permittivity", 
                  Style[
                  "permittivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permittivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["farad per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["permeability", 
                  Style[
                  "permeability", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permeability"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["henry per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["molar-energy", 
                  Style[
                  "molar-energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-energy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per mole", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["molar-entropy-or-molar-heat-capacity", 
                  Style[
                  "molar-entropy-or-molar-heat-capacity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per mole kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["exposure(x-and-\[Gamma]-rays)", 
                  Style[
                  "exposure(x-and-\[Gamma]-rays)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.874910685355168*^9, 3.874910769170288*^9, {3.8749108153966417`*^9, 
   3.8749108480559683`*^9}, {3.874910935021521*^9, 3.874910962213827*^9}, {
   3.8749109963517656`*^9, 3.8749110227030745`*^9}, 3.8749110911350727`*^9, 
   3.8749111848650985`*^9, 3.8749112416850395`*^9, 3.8749113931342964`*^9, 
   3.8749114391764145`*^9, 3.874911489090517*^9, 3.8749115514540977`*^9, 
   3.8749115966797757`*^9, 3.8749116436544075`*^9, 3.874911825513545*^9, 
   3.875980422353733*^9, 3.8759805009480114`*^9, 3.876225978734372*^9, 
   3.8762260759415255`*^9, 3.8763193013705606`*^9, 3.8763424004195824`*^9},
 CellLabel->"Out[6]=",
 CellID->5635478,ExpressionUUID->"09e3d61a-f2b3-4d5e-8446-b760dfa50bfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", LabelStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11.121951219512194`, {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<SI-prefixes\>\""}], "]"}], "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(3\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(3\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<kilo\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<k\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<mega\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<M\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(9\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(9\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<giga\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<G\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(12\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(12\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<tera\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<T\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(15\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(15\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<peta\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<P\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(18\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(18\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<exa\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<E\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(21\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(21\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<zetta\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<Z\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(24\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(24\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<yotta\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<Y\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-3\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<milli\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<m\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<micro\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<\[Mu]\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-9\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-9\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<nano\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<n\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-12\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-12\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<pico\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<p\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-15\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-15\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<femto\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<f\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-18\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-18\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<atto\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<a\>\""}]}], "|>"}]}], ",", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-21\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-21\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<zepto\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<z\>\""}]}], "|>"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-24\)]\)\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<factor\>\"", "->", 
         "\"\<\!\(\*SuperscriptBox[\(10\), \(-24\)]\)\>\""}], ",", 
        RowBox[{"\"\<name\>\"", "->", "\"\<yocto\>\""}], ",", 
        RowBox[{"\"\<symbol\>\"", "->", "\"\<y\>\""}]}], "|>"}]}]}], "|>"}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvXriB4Yz9944Oji+kAbR//58UwHRv7xWZoDot/8P
54BoviLTySDabc3DuSC66Pm1hSBaKWrzKhB9iv3JWhDN08GxGUQXXn61E0Qf
smU+DKIXrJQ4BqIvmZ4+C6Kt5qafA9Fz1sZcBtFSmU5XQPQKjZ83QHQMr+RN
ED1rn+NTEF0mdvIviM7ZsITpLJC2jkpUBNFLI86pgujAI2nqIPqZlo0liPb3
+O0Pol2ZNoeAaLH8m4UgOiL10BsQ/U2h9QeItgzTZTkHpKusuWVBNN8hN0UQ
7ez4xR9EXz19IxhEL9l+KhVEsxmszwLROSfUGkF096Wz7SDavz5lM4jeJKm8
G0T3eHpeBdELpPJvg+gwlwdvQDQAuM/g0A==
  "],
 CellLabel->"In[7]:=",
 CellID->179910024,ExpressionUUID->"b3558ff5-7424-4591-9b0c-1167b22319c4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> "kilo",
          "symbol" -> "k"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> "mega",
          "symbol" -> "M"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> "giga",
          "symbol" -> "G"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
         "tera", "symbol" -> "T"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
         "peta", "symbol" -> "P"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> "exa",
          "symbol" -> "E"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
         "zetta", "symbol" -> "Z"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
         "yotta", "symbol" -> "Y"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
         "milli", "symbol" -> "m"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
         "micro", "symbol" -> "\[Mu]"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
         "nano", "symbol" -> "n"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
         "pico", "symbol" -> "p"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
         "femto", "symbol" -> "f"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
         "atto", "symbol" -> "a"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
         "zepto", "symbol" -> "z"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
         "yocto", "symbol" -> "y"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "factor"} -> 
        1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "factor" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 3, {All}]]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"factor", "name", "symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, "factor"} -> 
        1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "factor" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 3, {All}]]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"factor", "name", "symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["factor", 
                  Style[
                  "factor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "factor"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "factor"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol", 
                  Style[
                  "symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kilo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["k", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mega", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["giga", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["G", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["tera", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["peta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["P", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["E", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["zetta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["yotta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milli", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["micro", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\[Mu]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nano", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["pico", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["p", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["femto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["f", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["atto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["zepto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["yocto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{827., {235.13403328722342`, 240.86596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{827., {235.13403328722342`, 240.86596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8749117759255257`*^9, {3.8749118085341115`*^9, 3.8749118345421157`*^9}, 
   3.8749119147315598`*^9, {3.874911966954154*^9, 3.8749119786066365`*^9}, {
   3.874912075913125*^9, 3.8749121043449535`*^9}, 3.875980424355154*^9, 
   3.8759805029119453`*^9, 3.876225981340357*^9, 3.8762260816460505`*^9, 
   3.8763193021234064`*^9, 3.8763424011178637`*^9},
 CellLabel->"Out[7]=",
 CellID->127143456,ExpressionUUID->"7a58b3a7-8757-4393-ada0-624963c4643a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the data's usage, starting with the most basic use \
case and describing each example in a preceding text cell.\n\nWithin a group, \
individual examples can be delimited by inserting page breaks between them \
(using Tools \[FilledRightTriangle] Insert Delimiter).\n\nExamples should be \
grouped into Subsection and Subsubsection cells similarly to existing \
documentation pages. Here are some typical Subsection names and the types of \
examples they normally contain:\n\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "show the breadth of the data\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the data relates to other data\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bffc1b17-9a1b-4b30-9d28-ab04022abdd5"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->661218443,ExpressionUUID->"93939c96-75ec-4815-8d0c-8bf037822a04"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellLabel->"In[8]:=",
 CellID->462042388,ExpressionUUID->"ebccf43f-6d66-430b-ba06-6f1966fc9fe7"],

Cell["Retrieve the data for the defining constants of the SI:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8749125108641334`*^9, 3.874912516109622*^9}},
 CellTags->"DefaultContent",
 CellID->395385424,ExpressionUUID->"f54f5ac9-5349-48af-b188-ceed47b0e655"],

Cell[TextData[{
 "It is inappropriate to use a CloudObject in the Examples notebook. Please \
use\n",
 Cell[BoxData[
  RowBox[{"ResourceData", "[", 
   InterpretationBox[
    TagBox[
     FrameBox[
      StyleBox[GridBox[{
         {
          DynamicBox[If[
            TrueQ[
             StringQ[
              CurrentValue[
               EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                "], {{0, 0}, {38., 41.}}, {0, 255}, 
                ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
               ImageSize -> {Automatic, 12}, 
                PlotRange -> {{0, 38.}, {0, 41.}}}], 
              "\"the ResourceObject defined by this notebook\"", LabelStyle -> 
              "TextStyling"], 
             Annotation[#, "the ResourceObject defined by this notebook", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                 "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel, ImageResolution -> {72, 72}], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}}, 
               ImageSize -> {Automatic, 12}], 
              "\"only defined in a definition notebook\"", LabelStyle -> 
              "TextStyling"], 
             Annotation[#, "only defined in a definition notebook", 
              "Tooltip"]& ]],
           ImageSizeCache->{11.121951219512194`, {4., 8.}},
           SingleEvaluation->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxSpacings->{"Columns" -> {{0.25}}}],
       ShowStringCharacters->False,
       FontSize->(11 Inherited)/13],
      Background->GrayLevel[0.5, 0.15],
      BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
      FrameMargins->{{3, 3}, {3, 0}},
      FrameStyle->Directive[
        GrayLevel[0.5, 0.35], 
        AbsoluteThickness[0.5]],
      RoundingRadius->4],
     "ResourceObjectNotebook"],
    ResourceObject[
     EvaluationNotebook[]],
    SelectWithContents->True,
    Selectable->False], "]"}]],
  TaggingRules->{},
  CellChangeTimes->{{3.875355231868902*^9, 3.875355234097937*^9}},
  ExpressionUUID->"e7aaedee-85d0-4754-b84e-4de3f70d904a"]
}], "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4K8al6+6KSj+6Z3SrdYtnRc+\
D144cHTHdf83wcuP7er7et6kBVwU4Kxu1BbAs9lwnUvA9x5VnWs3/H1BXu/\
x4tePvTPlND8ZrMJwCr7FAY"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.875965437440806`16.340954884887584*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875965438797995*^9, 3.875965503079726*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1812011665,ExpressionUUID->"cd1df666-d170-4d5e-bebd-d0f65af4f66d"],

Cell[TextData[{
 "I changed code to include ResourceData[",
 Cell[BoxData[
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneSelectorBox[{True->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"The ResourceObject defined by this notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "The ResourceObject defined by this notebook", 
        "Tooltip"]& ], False->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"Not defined for the current notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]}, 
      Dynamic[
       StringQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
     Background->GrayLevel[0.5, 0.15],
     BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
     FrameMargins->{{3, 3}, {4, 0}},
     FrameStyle->Directive[
       GrayLevel[0.5, 0.35], 
       AbsoluteThickness[0.5]],
     RoundingRadius->4,
     StripOnInput->False],
    "ResourceObjectNotebook"],
   ResourceObject[
    EvaluationNotebook[]],
   SelectWithContents->True,
   Selectable->False]],ExpressionUUID->"4ea84103-95e3-4fbf-b2ab-e6357ccc9875"],
 "]."
}], "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KTreTXn129Js888+WH49MjkzfLJDhuGHPsjdVDnG7hO84rwSqCnZSyGer+\
j1top5K48kPn89uX6Y3x6Kq9bGBj2nWw88yT5X+CQMA4btQag=="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8759805758490003`17.34095658111383*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8759805771694074`*^9, 3.87598059734737*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->143082064,ExpressionUUID->"842cc4e7-4806-4cdb-8bf2-b4cada156365"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneSelectorBox[{True->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"The ResourceObject defined by this notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "The ResourceObject defined by this notebook", 
        "Tooltip"]& ], False->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"Not defined for the current notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]}, 
      Dynamic[
       StringQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
     Background->GrayLevel[0.5, 0.15],
     BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
     FrameMargins->{{3, 3}, {4, 0}},
     FrameStyle->Directive[
       GrayLevel[0.5, 0.35], 
       AbsoluteThickness[0.5]],
     RoundingRadius->4,
     StripOnInput->False],
    "ResourceObjectNotebook"],
   ResourceObject[
    EvaluationNotebook[]],
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8759803539530716`*^9, 3.875980358489637*^9}},
 CellLabel->"In[1]:=",
 CellID->72621601,ExpressionUUID->"d5beb760-03bf-4535-b355-756933ef0933"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "hyperfine-transition-frequency-of-Cs" -> <|
        "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
       "speed-of-light-in-vacuum" -> <|
        "numerical-value" -> 299792458, "unit" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "Planck-constant" -> <|
        "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
       "elementary-charge" -> <|
        "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
       "Boltzmann-constant" -> <|
        "numerical-value" -> 1.380649*^-23, "unit" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "Avogadro-constant" -> <|
        "numerical-value" -> 6.02214076*^23, "unit" -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       "luminous-efficacy" -> <|
        "numerical-value" -> 683, "unit" -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "numerical-value"} -> 
        1, {All, "unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[
              358.40000000000003`]|>], 
           DirectedInfinity[1], 2, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 2, "DataRowCount" -> 7, "DataColumnCount" -> 
     2, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["numerical-value", 
                  Style[
                  "numerical-value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "numerical-value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hyperfine-transition-frequency-of-Cs", 
                  Style[
                  "hyperfine-transition-frequency-of-Cs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9192631770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-of-light-in-vacuum", 
                  Style[
                  "speed-of-light-in-vacuum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299792458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Planck-constant", 
                  Style[
                  "Planck-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["elementary-charge", 
                  Style[
                  "elementary-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Boltzmann-constant", 
                  Style[
                  "Boltzmann-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avogadro-constant", 
                  Style[
                  "Avogadro-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-efficacy", 
                  Style[
                  "luminous-efficacy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["683"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8759803664461727`*^9, 3.8759805109328613`*^9, 
  3.876226094406025*^9, 3.8763193081855135`*^9, 3.8763424091680717`*^9},
 CellLabel->"Out[1]=",
 CellID->594011182,ExpressionUUID->"5a9e992b-7a8e-4e30-ac5a-7cc885f638ff"]
}, Open  ]],

Cell["Find the units for the constants:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8749137621130056`*^9, 3.8749137682418175`*^9}},
 CellID->475874182,ExpressionUUID->"357000ae-cddb-4809-b7f9-16a5b5f69290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneSelectorBox[{True->
       TagBox[
        TooltipBox[
         GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
           "], {{0, 0}, {50., 50.}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 14},
          PlotRange->{{0, 50.}, {0, 50.}}],
         "\"The ResourceObject defined by this notebook\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "The ResourceObject defined by this notebook", 
         "Tooltip"]& ], False->
       TagBox[
        TooltipBox[
         GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
           "], {{0, 0}, {50., 50.}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 14},
          PlotRange->{{0, 50.}, {0, 50.}}],
         "\"Not defined for the current notebook\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]}, 
       Dynamic[
        StringQ[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
      Background->GrayLevel[0.5, 0.15],
      BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
      FrameMargins->{{3, 3}, {4, 0}},
      FrameStyle->Directive[
        GrayLevel[0.5, 0.35], 
        AbsoluteThickness[0.5]],
      RoundingRadius->4,
      StripOnInput->False],
     "ResourceObjectNotebook"],
    ResourceObject[
     EvaluationNotebook[]],
    SelectWithContents->True,
    Selectable->False], "]"}], "[", 
  RowBox[{"All", ",", "\"\<unit\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8749137438846674`*^9, 3.8749137783607903`*^9}, 
   3.8753553769658055`*^9, 3.875980437596791*^9},
 CellLabel->"In[2]:=",
 CellID->465510867,ExpressionUUID->"34e7c495-2da2-4318-9c58-c01848ee4272"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "hyperfine-transition-frequency-of-Cs" -> "Hz", 
       "speed-of-light-in-vacuum" -> 
       "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", "Planck-constant" -> "J s", 
       "elementary-charge" -> "C", "Boltzmann-constant" -> 
       "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", "Avogadro-constant" -> 
       "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", "luminous-efficacy" -> 
       "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>, "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[378.], 
         TypeSystem`PackageScope`AtomShape[358.40000000000003`]]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Avogadro-constant", "Boltzmann-constant", "elementary-charge", 
         "hyperfine-transition-frequency-of-Cs", "luminous-efficacy", 
         "Planck-constant", "speed-of-light-in-vacuum"]], 
       TypeSystem`Atom[String], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[378.], 
         TypeSystem`PackageScope`AtomShape[358.40000000000003`]]], 7, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Avogadro-constant", "Boltzmann-constant", "elementary-charge", 
         "hyperfine-transition-frequency-of-Cs", "luminous-efficacy", 
         "Planck-constant", "speed-of-light-in-vacuum"]], 
       TypeSystem`Atom[String], 7], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hyperfine-transition-frequency-of-Cs", 
                  Style[
                  "hyperfine-transition-frequency-of-Cs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "Item", False],
                "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-of-light-in-vacuum", 
                  Style[
                  "speed-of-light-in-vacuum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Planck-constant", 
                  Style[
                  "Planck-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["elementary-charge", 
                  Style[
                  "elementary-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Boltzmann-constant", 
                  Style[
                  "Boltzmann-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avogadro-constant", 
                  Style[
                  "Avogadro-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-efficacy", 
                  Style[
                  "luminous-efficacy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{754., {100.13403328722343`, 105.86596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{754., {100.13403328722343`, 105.86596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.874913774204672*^9, 3.8749137786490436`*^9}, 
   3.875355378187544*^9, {3.87598043836145*^9, 3.8759804600425096`*^9}, 
   3.8763193087375093`*^9, 3.876342409722161*^9},
 CellLabel->"Out[2]=",
 CellID->24354940,ExpressionUUID->"29fd9fce-622e-42ec-af00-843e7f684abf"]
}, Open  ]],

Cell["\<\
Retrieve coherent derived units whose names and symbols include SI coherent \
derived units with special names and symbols:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8749125198889537`*^9, 3.8749125398032312`*^9}},
 CellID->195997733,ExpressionUUID->"9e19dc53-fe53-42db-ac7e-193f20faf1f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
   InterpretationBox[
    TagBox[
     FrameBox[
      PaneSelectorBox[{True->
       TagBox[
        TooltipBox[
         GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
           "], {{0, 0}, {50., 50.}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 14},
          PlotRange->{{0, 50.}, {0, 50.}}],
         "\"The ResourceObject defined by this notebook\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "The ResourceObject defined by this notebook", 
         "Tooltip"]& ], False->
       TagBox[
        TooltipBox[
         GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
           "], {{0, 0}, {50., 50.}}, {0, 255},
           ColorFunction->RGBColor],
          ImageSize->{Automatic, 14},
          PlotRange->{{0, 50.}, {0, 50.}}],
         "\"Not defined for the current notebook\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]}, 
       Dynamic[
        StringQ[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
      Background->GrayLevel[0.5, 0.15],
      BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
      FrameMargins->{{3, 3}, {4, 0}},
      FrameStyle->Directive[
        GrayLevel[0.5, 0.35], 
        AbsoluteThickness[0.5]],
      RoundingRadius->4,
      StripOnInput->False],
     "ResourceObjectNotebook"],
    ResourceObject[
     EvaluationNotebook[]],
    SelectWithContents->True,
    Selectable->False], ",", 
   "\"\<coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8749122123211236`*^9, 3.87491223185935*^9}, {
   3.8749122734546795`*^9, 3.874912312859481*^9}, 3.875355240727374*^9, {
   3.8753552996536903`*^9, 3.875355306454915*^9}, 3.875980442889062*^9},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->158705759,ExpressionUUID->"5a06e3a2-a89a-4229-86ce-f5f738991a53"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "dynamic-viscosity" -> <|
        "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
         "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "moment-of-force" -> <|
        "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> "N m", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
       "surface-tension" -> <|
        "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
         "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "angular-velocity-or-angular-frequency" -> <|
        "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
         "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       "angular-acceleration" -> <|
        "name-of-coherent-derived-unit" -> "radian per second squared", 
         "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "heat-flux-density-or-irradiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter", "symbol" -> 
         "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
       "heat-capacity-or-entropy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "specific-heat-capacity-or-specific-entropy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
         "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       "specific-energy" -> <|
        "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
       "thermal-conductivity" -> <|
        "name-of-coherent-derived-unit" -> "watt per meter kelvin", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(K\
\), \(-1\)]\)"|>, 
       "energy-density" -> <|
        "name-of-coherent-derived-unit" -> "joule per cubic meter", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
       "electric-field-strength" -> <|
        "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
         "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\
\), \(-1\)]\)"|>, 
       "electric-charge-density" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
       "surface-charge-density" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per square meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "electric-flux-density-or-electric-displacement" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per square meter", 
         "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
       "permittivity" -> <|
        "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
         "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\), \
\(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\(\*SuperscriptBox[\(A\), \
\(2\)]\)"|>, 
       "permeability" -> <|
        "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
         "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\
\), \(-2\)]\)"|>, 
       "molar-energy" -> <|
        "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       "molar-entropy-or-molar-heat-capacity" -> <|
        "name-of-coherent-derived-unit" -> "joule per mole kelvin", "symbol" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
       "exposure(x-and-\[Gamma]-rays)" -> <|
        "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
         "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
       "absorbed-dose-rate" -> <|
        "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
         "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
       "radiant-intensity" -> <|
        "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
       "radiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter steradian", 
         "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
       "catalytic-activity-concentration" -> <|
        "name-of-coherent-derived-unit" -> "katal per cubic meter", "symbol" -> 
         "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[515.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 24], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[515.2], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 24], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 24, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name-of-coherent-derived-unit", 
                  Style[
                  "name-of-coherent-derived-unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name-of-coherent-derived-unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name-of-coherent-derived-unit"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol", 
                  Style[
                  "symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                  Style[
                  "derived-unit-expressed-in-terms-of-base-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "derived-unit-expressed-in-terms-of-base-units"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dynamic-viscosity", 
                  Style[
                  "dynamic-viscosity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic-viscosity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["pascal second", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Pa s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["dynamic-viscosity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["moment-of-force", 
                  Style[
                  "moment-of-force", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["moment-of-force"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["moment-of-force"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["surface-tension", 
                  Style[
                  "surface-tension", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-tension"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["newton per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-tension"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["angular-velocity-or-angular-frequency", 
                  Style[
                  "angular-velocity-or-angular-frequency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-velocity-or-angular-frequency"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian per second", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-velocity-or-angular-frequency"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["angular-acceleration", 
                  Style[
                  "angular-acceleration", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-acceleration"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["radian per second squared", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["angular-acceleration"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["heat-flux-density-or-irradiance", 
                  Style[
                  "heat-flux-density-or-irradiance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"]}, "RowHeader", False],
                "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["heat-capacity-or-entropy", 
                  Style[
                  "heat-capacity-or-entropy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-capacity-or-entropy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-capacity-or-entropy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["specific-heat-capacity-or-specific-entropy", 
                  Style[
                  "specific-heat-capacity-or-specific-entropy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kilogram kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-heat-capacity-or-specific-entropy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["specific-energy", 
                  Style[
                  "specific-energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-energy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["specific-energy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thermal-conductivity", 
                  Style[
                  "thermal-conductivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per meter kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["energy-density", 
                  Style[
                  "energy-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per cubic meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["energy-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-field-strength", 
                  Style[
                  "electric-field-strength", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-field-strength"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["volt per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-field-strength"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-charge-density", 
                  Style[
                  "electric-charge-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per cubic meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-charge-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["surface-charge-density", 
                  Style[
                  "surface-charge-density", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-charge-density"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["surface-charge-density"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["electric-flux-density-or-electric-displacement", 
                  Style[
                  "electric-flux-density-or-electric-displacement", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["electric-flux-density-or-electric-displacement"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["permittivity", 
                  Style[
                  "permittivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permittivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["farad per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permittivity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["permeability", 
                  Style[
                  "permeability", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permeability"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["henry per meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["permeability"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["molar-energy", 
                  Style[
                  "molar-energy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-energy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per mole", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-energy"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["molar-entropy-or-molar-heat-capacity", 
                  Style[
                  "molar-entropy-or-molar-heat-capacity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["joule per mole kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["molar-entropy-or-molar-heat-capacity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["exposure(x-and-\[Gamma]-rays)", 
                  Style[
                  "exposure(x-and-\[Gamma]-rays)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["coulomb per kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["exposure(x-and-\[Gamma]-rays)"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1967., {299.6340332872234, 305.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8749123103399057`*^9, 3.8749123134353*^9}, 
   3.875355242158278*^9, {3.875355304901165*^9, 3.875355307911234*^9}, {
   3.8759804435785575`*^9, 3.875980461797464*^9}, 3.8759805194059687`*^9, 
   3.8763193092190824`*^9, 3.876342410169175*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->191786894,ExpressionUUID->"afeb32a5-84f1-4b74-b320-996abb3edbc1"]
}, Open  ]],

Cell["\<\
Add 1 or more example showing an example of what can be done with this data \
in the Wolfram Language.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KZlfPTBQ7qaEoK2J+++16f7+\
z04oWXLHlElr85vyE2Pzl9kBVwU4K0v0xE3TXlPFKTJmwddX9p7r7pebr7nW0X7XLYDJjlX7RDgABw\
ksL"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.875353807882845`16.340886347562737*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8753538111999903`*^9, 3.875353848655182*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1500169805,ExpressionUUID->"4bf8f0d4-0e01-42ed-9795-d0a7d7bd118f"],

Cell["I added more examples including analysis examples.", "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4Km3190zUztV4Vf3A4/6umf8eGol9V7mFbF6ndlJfexDuBC6gq2Ekh2vaAc+\
3HaXo1/nu3ssQELg6V9xRrPq3d/M3M/V6RdOodACWRS1M="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8753556867773733`17.34088655812244*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875355688002721*^9, 3.8753556962462687`*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->98616756,ExpressionUUID->"0dfac9e2-e8ae-4e9e-9010-7cf1c3d147fa"]
}, Open  ]],

Cell["Scope & Additional Elements", "Subsection",
 TaggingRules->{},
 CellLabel->"In[4]:=",
 CellID->979821957,ExpressionUUID->"9be20ece-5b14-4b3e-a878-930700ddaffa"],

Cell["Visualizations", "Subsection",
 TaggingRules->{},
 CellLabel->"In[1]:=",
 CellID->50804313,ExpressionUUID->"a5d62140-0a70-4256-8ac2-82bb02deb487"],

Cell[CellGroupData[{

Cell["Analysis", "Subsection",
 TaggingRules->{},
 CellLabel->"In[1]:=",
 CellID->866856397,ExpressionUUID->"c2d82714-35e2-4ed6-b7c4-c503ba8534f3"],

Cell["Find coherent derived units composed of watts:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8749129717849817`*^9, 3.8749129948041334`*^9}},
 CellID->228009298,ExpressionUUID->"74c99ece-19ea-441e-b4af-af2cbf85409f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceData", "[", 
   RowBox[{
    InterpretationBox[
     TagBox[
      FrameBox[
       PaneSelectorBox[{True->
        TagBox[
         TooltipBox[
          GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
            "], {{0, 0}, {50., 50.}}, {0, 255},
            ColorFunction->RGBColor],
           ImageSize->{Automatic, 14},
           PlotRange->{{0, 50.}, {0, 50.}}],
          "\"The ResourceObject defined by this notebook\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "The ResourceObject defined by this notebook", 
          "Tooltip"]& ], False->
        TagBox[
         TooltipBox[
          GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
            "], {{0, 0}, {50., 50.}}, {0, 255},
            ColorFunction->RGBColor],
           ImageSize->{Automatic, 14},
           PlotRange->{{0, 50.}, {0, 50.}}],
          "\"Not defined for the current notebook\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]},
         Dynamic[
         StringQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
       FrameMargins->{{3, 3}, {4, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4,
       StripOnInput->False],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", 
    "\"\<coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols\>\""}], "]"}], "[", 
  RowBox[{"Select", "[", 
   RowBox[{"Function", "[", 
    RowBox[{"arg", ",", 
     RowBox[{"StringContainsQ", "[", 
      RowBox[{
       RowBox[{"arg", "[", "\"\<name-of-coherent-derived-unit\>\"", "]"}], 
       ",", "\"\<watt\>\""}], "]"}]}], "]"}], "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.874912938050259*^9, 3.874912946327704*^9}, 
   3.875355353872608*^9, 3.875980526764504*^9},
 CellLabel->"In[1]:=",
 CellID->50197429,ExpressionUUID->"60e0e97d-c463-4ae8-937d-7e9a700b89ed"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "heat-flux-density-or-irradiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter", "symbol" -> 
         "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
       "thermal-conductivity" -> <|
        "name-of-coherent-derived-unit" -> "watt per meter kelvin", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(K\
\), \(-1\)]\)"|>, 
       "radiant-intensity" -> <|
        "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
       "radiance" -> <|
        "name-of-coherent-derived-unit" -> "watt per square meter steradian", 
         "symbol" -> 
         "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
         "derived-unit-expressed-in-terms-of-base-units" -> 
         "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 
        1, {All, "name-of-coherent-derived-unit"} -> 1, {All, "symbol"} -> 
        1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "name-of-coherent-derived-unit" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[560.], 
             "derived-unit-expressed-in-terms-of-base-units" -> 
             TypeSystem`PackageScope`AtomShape[560.]|>], 
           DirectedInfinity[1], 3, {All}]]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "name-of-coherent-derived-unit", "symbol", 
         "derived-unit-expressed-in-terms-of-base-units"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 4], "Path" -> {}, "DisplayedRowCount" -> 
     4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 4, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name-of-coherent-derived-unit", 
                  Style[
                  "name-of-coherent-derived-unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name-of-coherent-derived-unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name-of-coherent-derived-unit"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol", 
                  Style[
                  "symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                  Style[
                  "derived-unit-expressed-in-terms-of-base-units", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "derived-unit-expressed-in-terms-of-base-units"}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "derived-unit-expressed-in-terms-of-base-units"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["heat-flux-density-or-irradiance", 
                  Style[
                  "heat-flux-density-or-irradiance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"]}, "RowHeader", False],
                "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per square meter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["heat-flux-density-or-irradiance"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["thermal-conductivity", 
                  Style[
                  "thermal-conductivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per meter kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["thermal-conductivity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["radiant-intensity", 
                  Style[
                  "radiant-intensity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["radiant-intensity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiant-intensity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per steradian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiant-intensity"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiant-intensity"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiant-intensity"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["radiance", 
                  Style[
                  "radiance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["radiance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["watt per square meter steradian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiance"], 
                 Key["name-of-coherent-derived-unit"]}, "Item", False], 
               "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(m\), \(-2\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiance"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["radiance"], 
                 Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1848., {73.13403328722343, 78.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1848., {73.13403328722343, 78.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.874912955273814*^9, 3.87491299577203*^9, {3.8753553500962076`*^9, 
   3.8753553550672865`*^9}, 3.875980527443996*^9, 3.876319309942159*^9, 
   3.876342410862593*^9},
 CellLabel->"Out[1]=",
 CellID->315153824,ExpressionUUID->"c25a2df1-7f72-4c37-9d3e-a65cd848eb04"]
}, Open  ]],

Cell["Add quantities to the dataset for constants:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.875355410897663*^9, 3.875355420215562*^9}},
 CellID->143017832,ExpressionUUID->"b87574a7-a8fd-4dda-8f78-10030f9e5aa2"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"Normal", "@", 
   RowBox[{
    RowBox[{"ResourceData", "[", 
     RowBox[{"ResourceObject", "[", 
      InterpretationBox[
       TagBox[
        FrameBox[
         PaneSelectorBox[{True->
          TagBox[
           TooltipBox[
            GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
              "], {{0, 0}, {50., 50.}}, {0, 255},
              ColorFunction->RGBColor],
             ImageSize->{Automatic, 14},
             PlotRange->{{0, 50.}, {0, 50.}}],
            "\"The ResourceObject defined by this notebook\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "The ResourceObject defined by this notebook", 
            "Tooltip"]& ], False->
          TagBox[
           TooltipBox[
            GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
              "], {{0, 0}, {50., 50.}}, {0, 255},
              ColorFunction->RGBColor],
             ImageSize->{Automatic, 14},
             PlotRange->{{0, 50.}, {0, 50.}}],
            "\"Not defined for the current notebook\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Not defined for the current notebook", 
            "Tooltip"]& ]}, Dynamic[
           StringQ[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
         Background->GrayLevel[0.5, 0.15],
         BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
         FrameMargins->{{3, 3}, {4, 0}},
         FrameStyle->Directive[
           GrayLevel[0.5, 0.35], 
           AbsoluteThickness[0.5]],
         RoundingRadius->4,
         StripOnInput->False],
        "ResourceObjectNotebook"],
       ResourceObject[
        EvaluationNotebook[]],
       SelectWithContents->True,
       Selectable->False], "]"}], "]"}], "[", "Values", "]"}]}]],
  TaggingRules->{},
  CellChangeTimes->{
   3.874914490679213*^9, {3.874935150759788*^9, 3.87493515763823*^9}, {
    3.8753554217787123`*^9, 3.875355449995393*^9}, {3.875980541025062*^9, 
    3.8759805447689753`*^9}},
  NumberMarks->False,ExpressionUUID->"2058aa01-9a39-4af2-8582-df0e9f6a03fd"],
 "\n\nNeeds to be changed to\n\n",
 Cell[BoxData[
  RowBox[{"Normal", "@", 
   RowBox[{
    RowBox[{"ResourceData", "[", 
     InterpretationBox[
      TagBox[
       FrameBox[
        PaneSelectorBox[{True->
         TagBox[
          TooltipBox[
           GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
             "], {{0, 0}, {50., 50.}}, {0, 255},
             ColorFunction->RGBColor],
            ImageSize->{Automatic, 14},
            PlotRange->{{0, 50.}, {0, 50.}}],
           "\"The ResourceObject defined by this notebook\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "The ResourceObject defined by this notebook", 
           "Tooltip"]& ], False->
         TagBox[
          TooltipBox[
           GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
             "], {{0, 0}, {50., 50.}}, {0, 255},
             ColorFunction->RGBColor],
            ImageSize->{Automatic, 14},
            PlotRange->{{0, 50.}, {0, 50.}}],
           "\"Not defined for the current notebook\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "Not defined for the current notebook", 
           "Tooltip"]& ]}, Dynamic[
          StringQ[
           CurrentValue[
            EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
        Background->GrayLevel[0.5, 0.15],
        BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
        FrameMargins->{{3, 3}, {4, 0}},
        FrameStyle->Directive[
          GrayLevel[0.5, 0.35], 
          AbsoluteThickness[0.5]],
        RoundingRadius->4,
        StripOnInput->False],
       "ResourceObjectNotebook"],
      ResourceObject[
       EvaluationNotebook[]],
      SelectWithContents->True,
      Selectable->False], "]"}], "[", "Values", "]"}]}]],
  TaggingRules->{},
  CellChangeTimes->{
   3.874914490679213*^9, {3.874935150759788*^9, 3.87493515763823*^9}, {
    3.8753554217787123`*^9, 3.875355449995393*^9}, {3.875980541025062*^9, 
    3.8759805447689753`*^9}},
  NumberMarks->False,ExpressionUUID->"b8e53937-1fbd-484d-9556-62bd8ae9e097"],
 "\n\nfor the below Example to correctly execute."
}], "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KiglVfw9lHewvq1G633jzwZtJtckLYlYqP1mcZdvHbX2YG6gq2EnB6N3Oor8\
LuHgPP35oos2sq91z1DR2ZrrJYiGfHLf/DtdVAG1aTD0="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.876217325906791`16.340983107589295*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8762173718740807`*^9, 3.876217412109047*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1845321974,ExpressionUUID->"425bcaa6-803f-4cb9-9fb6-45f631beb51f"],

Cell["I changed the code.", "AuthorComment",
 TaggingRules->{},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"Author\"", ShowStringCharacters -> False, StripOnInput -> False], 
        3.8762262324404305`17.34098410548328*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.876226233520547*^9, 3.876226235952429*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->199919797,ExpressionUUID->"0da2db24-b141-4f80-9b71-627d3c53642c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIDefiningConstantsDatasetWithQuantitiesAdded", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{
       RowBox[{"ResourceData", "[", 
        InterpretationBox[
         TagBox[
          FrameBox[
           PaneSelectorBox[{True->
            TagBox[
             TooltipBox[
              GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
                "], {{0, 0}, {50., 50.}}, {0, 255},
                ColorFunction->RGBColor],
               ImageSize->{Automatic, 14},
               PlotRange->{{0, 50.}, {0, 50.}}],
              "\"The ResourceObject defined by this notebook\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "The ResourceObject defined by this notebook", 
              "Tooltip"]& ], False->
            TagBox[
             TooltipBox[
              GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
                "], {{0, 0}, {50., 50.}}, {0, 255},
                ColorFunction->RGBColor],
               ImageSize->{Automatic, 14},
               PlotRange->{{0, 50.}, {0, 50.}}],
              "\"Not defined for the current notebook\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Not defined for the current notebook", 
              "Tooltip"]& ]}, Dynamic[
             StringQ[
              CurrentValue[
               EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
           Background->GrayLevel[0.5, 0.15],
           
           BaseStyle->{
            "Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
           FrameMargins->{{3, 3}, {4, 0}},
           FrameStyle->Directive[
             GrayLevel[0.5, 0.35], 
             AbsoluteThickness[0.5]],
           RoundingRadius->4,
           StripOnInput->False],
          "ResourceObjectNotebook"],
         ResourceObject[
          EvaluationNotebook[]],
         SelectWithContents->True,
         Selectable->False], "]"}], "[", "Keys", "]"}]}], "->", 
     RowBox[{"Join", "@@@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Normal", "@", 
          RowBox[{
           RowBox[{"ResourceData", "[", 
            InterpretationBox[
             TagBox[
              FrameBox[
               PaneSelectorBox[{True->
                TagBox[
                 TooltipBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
                    "], {{0, 0}, {50., 50.}}, {0, 255},
                    ColorFunction->RGBColor],
                   ImageSize->{Automatic, 14},
                   PlotRange->{{0, 50.}, {0, 50.}}],
                  "\"The ResourceObject defined by this notebook\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "The ResourceObject defined by this notebook", 
                  "Tooltip"]& ], False->
                TagBox[
                 TooltipBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
                    "], {{0, 0}, {50., 50.}}, {0, 255},
                    ColorFunction->RGBColor],
                   ImageSize->{Automatic, 14},
                   PlotRange->{{0, 50.}, {0, 50.}}],
                  "\"Not defined for the current notebook\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Not defined for the current notebook", 
                  "Tooltip"]& ]}, Dynamic[
                 StringQ[
                  CurrentValue[
                   EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
               Background->GrayLevel[0.5, 0.15],
               
               BaseStyle->{
                "Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
               FrameMargins->{{3, 3}, {4, 0}},
               FrameStyle->Directive[
                 GrayLevel[0.5, 0.35], 
                 AbsoluteThickness[0.5]],
               RoundingRadius->4,
               StripOnInput->False],
              "ResourceObjectNotebook"],
             ResourceObject[
              EvaluationNotebook[]],
             SelectWithContents->True,
             Selectable->False], "]"}], "[", "Values", "]"}]}], ",", 
         RowBox[{"Association", "/@", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"\"\<quantity-unit\>\"", ",", "7"}], "]"}], "->", 
            RowBox[{"Quantity", "/@", 
             RowBox[{"{", 
              RowBox[{"\"\<Hertz\>\"", ",", 
               RowBox[{"\"\<Meters\>\"", 
                SuperscriptBox["\"\<Seconds\>\"", 
                 RowBox[{"-", "1"}]]}], ",", 
               RowBox[{"\"\<Joules\>\"", "\"\<Seconds\>\""}], ",", 
               "\"\<Coulombs\>\"", ",", 
               RowBox[{"\"\<Joules\>\"", 
                SuperscriptBox["\"\<Kelvin\>\"", 
                 RowBox[{"-", "1"}]]}], ",", 
               SuperscriptBox["\"\<Moles\>\"", 
                RowBox[{"-", "1"}]], ",", 
               RowBox[{"\"\<Lumens\>\"", 
                SuperscriptBox["\"\<Watts\>\"", 
                 RowBox[{"-", "1"}]]}]}], "}"}]}]}], "]"}]}]}], "}"}], 
       "]"}]}]}], "]"}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.874914490679213*^9, {3.874935150759788*^9, 3.87493515763823*^9}, {
   3.8753554217787123`*^9, 3.875355449995393*^9}, {3.875980541025062*^9, 
   3.8759805447689753`*^9}, {3.8762259098179927`*^9, 3.876225911249967*^9}},
 NumberMarks->False,
 CellLabel->"In[2]:=",
 CellID->14656873,ExpressionUUID->"df7a7d76-fa82-4723-9af3-46af3c4f81a8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "hyperfine-transition-frequency-of-Cs" -> <|
        "numerical-value" -> 9192631770, "unit" -> "Hz", "quantity-unit" -> 
         Quantity[1, "Hertz"]|>, 
       "speed-of-light-in-vacuum" -> <|
        "numerical-value" -> 299792458, "unit" -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", "quantity-unit" -> 
         Quantity[1, "Meters"/"Seconds"]|>, 
       "Planck-constant" -> <|
        "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s", 
         "quantity-unit" -> Quantity[1, "Joules" "Seconds"]|>, 
       "elementary-charge" -> <|
        "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C", 
         "quantity-unit" -> Quantity[1, "Coulombs"]|>, 
       "Boltzmann-constant" -> <|
        "numerical-value" -> 1.380649*^-23, "unit" -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", "quantity-unit" -> 
         Quantity[1, "Joules"/"Kelvins"]|>, 
       "Avogadro-constant" -> <|
        "numerical-value" -> 6.02214076*^23, "unit" -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", "quantity-unit" -> 
         Quantity[1, "Moles"^(-1)]|>, 
       "luminous-efficacy" -> <|
        "numerical-value" -> 683, "unit" -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", "quantity-unit" -> 
         Quantity[1, "Lumens"/"Watts"]|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, "numerical-value"} -> 1, {All, "unit"} -> 
        1, {All, "quantity-unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`],
              "quantity-unit" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 3, {All}]]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit", "quantity-unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], TypeSystem`AnyType}], 7], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, "numerical-value"} -> 1, {All, "unit"} -> 
        1, {All, "quantity-unit"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "numerical-value" -> TypeSystem`PackageScope`AtomShape[60], 
             "unit" -> TypeSystem`PackageScope`AtomShape[358.40000000000003`],
              "quantity-unit" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 3, {All}]]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"numerical-value", "unit", "quantity-unit"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[String], TypeSystem`AnyType}], 7], "Path" -> {}, 
     "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     7, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["numerical-value", 
                  Style[
                  "numerical-value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "numerical-value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["quantity-unit", 
                  Style[
                  "quantity-unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "quantity-unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "quantity-unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hyperfine-transition-frequency-of-Cs", 
                  Style[
                  "hyperfine-transition-frequency-of-Cs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9192631770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Hz\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hyperfine-transition-frequency-of-Cs"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["speed-of-light-in-vacuum", 
                  Style[
                  "speed-of-light-in-vacuum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
               "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299792458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  
                  RowBox[{
                   "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                     "\"s\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["speed-of-light-in-vacuum"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Planck-constant", 
                  Style[
                  "Planck-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Planck-constant"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["elementary-charge", 
                  Style[
                  "elementary-charge", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"C\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["elementary-charge"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Boltzmann-constant", 
                  Style[
                  "Boltzmann-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  
                  RowBox[{
                   "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                     "\"K\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Boltzmann-constant"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Avogadro-constant", 
                  Style[
                  "Avogadro-constant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{"\"/\"", "\[InvisibleSpace]", "\"mol\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Avogadro-constant"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["luminous-efficacy", 
                  Style[
                  "luminous-efficacy", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["683"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["numerical-value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  
                  RowBox[{
                   "\"lm\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"W\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["luminous-efficacy"], 
                 Key["quantity-unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1020., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8749144882536764`*^9, 3.8749144910510817`*^9}, 
   3.874935158514522*^9, {3.8753554418977776`*^9, 3.8753554520193253`*^9}, {
   3.8759805334143543`*^9, 3.8759805455699215`*^9}, 3.8762259254099617`*^9, 
   3.876225987090253*^9, 3.876226105694053*^9, 3.8763193104317904`*^9, 
   3.8763424113220987`*^9},
 CellLabel->"Out[2]=",
 CellID->211560460,ExpressionUUID->"46ea3705-c948-4594-ba55-ccc66943dd11"]
}, Open  ]],

Cell["Retrieve the quantities:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8753554626357636`*^9, 3.875355479649086*^9}},
 CellID->121596666,ExpressionUUID->"a07a9cf5-26d1-473c-b2cf-f5ce96044d23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Values", "@", 
   RowBox[{"SIDefiningConstantsDatasetWithQuantitiesAdded", "[", 
    RowBox[{"All", ",", "\"\<quantity-unit\>\""}], "]"}]}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.8753554888932886`*^9},
 CellLabel->"In[3]:=",
 CellID->136160904,ExpressionUUID->"74d375d1-6fd5-4958-9f91-542b347a94ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meter per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}], "second joule", 
     RowBox[{"\"Joules\"", " ", "\"Seconds\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"K\""}], 
     "joule per kelvin", 
     FractionBox["\"Joules\"", "\"Kelvins\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"/\"", "\[InvisibleSpace]", "\"mol\""}], "reciprocal mole", 
     FractionBox["1", "\"Moles\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"lm\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"W\""}], 
     "lumen per watt", 
     FractionBox["\"Lumens\"", "\"Watts\""]},
    "Quantity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.875355489903227*^9, 3.8759805489518166`*^9, 
  3.876226241320408*^9, 3.8763193109087753`*^9, 3.8763424117416525`*^9},
 CellLabel->"Out[3]=",
 CellID->501349026,ExpressionUUID->"3496de07-2962-4cab-a502-282ed9c2e79e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<PhysicalQuantity\>\"", "]"}], "[", 
  "\"\<length\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.87631935358097*^9, 3.8763193620774517`*^9}},
 CellLabel->"In[4]:=",
 CellID->33727512,ExpressionUUID->"5adf9141-f744-4e83-a9e6-238bc0ccb7a2"],

Cell[BoxData[
 TemplateBox[{"\"Length\""},
  "QuantityVariable",
  DisplayFunction->(TooltipBox[
    StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
    "TextStyling"]& )]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.876319369382845*^9, 3.8763424210344353`*^9},
 CellLabel->"Out[4]=",
 CellID->325521341,ExpressionUUID->"ba08d3f5-5c40-4b5f-b405-e6eb5d0bcdd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"force\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"Force\""}], "]"}], 
    "\"Entity[\\\"PhysicalQuantity\\\", \\\"Force\\\"]\"", 
    "\"physical quantity\""},
   "Entity"], "[", "\"\<Dimensions\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763193912275953`*^9, 3.876319413809684*^9}},
 CellLabel->"In[5]:=",
 CellID->600226472,ExpressionUUID->"38717879-393d-40f7-b990-8a29e3f4775d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TimeUnit\"\>", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.876319389374709*^9, 3.876319414052464*^9}, 
   3.8763424214175534`*^9},
 CellLabel->"Out[5]=",
 CellID->123015401,ExpressionUUID->"0527439c-a341-429b-8ce7-d5c137cb5043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{
   TemplateBox[{"\"force\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Force\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Force\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763194167998238`*^9, 3.876319417925693*^9}, {
  3.876319459403822*^9, 3.876319467184907*^9}},
 CellLabel->"In[6]:=",
 CellID->354532860,ExpressionUUID->"29f827fa-cbcf-4be7-93c7-ed77ee3790fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"MassUnit\"\>", 
     ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.876319467517947*^9, 3.8763424216885595`*^9},
 CellLabel->"Out[6]=",
 CellID->180085447,ExpressionUUID->"d260d412-1991-4375-9f32-40c96af0ff6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  SuperscriptBox[
   RowBox[{
    TemplateBox[{"\"force\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Force\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Force\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.876319469549892*^9, 3.876319470445114*^9}},
 CellLabel->"In[7]:=",
 CellID->516113165,ExpressionUUID->"0d4a3d83-3169-4e32-8aec-ae9f0dfb91d6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"MassUnit\"\>", 
   ",", "\<\"TimeUnit\"\>"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8763194707403846`*^9, 3.8763424219715605`*^9},
 CellLabel->"Out[7]=",
 CellID->464735964,ExpressionUUID->"d0f30f14-ea3c-42c3-8fef-ed28dea5cbf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", "\"\<TimeUnit\>\"", 
     ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
   RowBox[{"First", "[", 
    SuperscriptBox[
     RowBox[{
      TemplateBox[{"\"force\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Force\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Force\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], "]"}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763194727640247`*^9, 3.876319490106308*^9}},
 CellLabel->"In[8]:=",
 CellID->81658421,ExpressionUUID->"81419374-2f80-463c-b858-d707e79abab3"],

Cell[BoxData["True"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8763194903981657`*^9, 3.876342422236556*^9},
 CellLabel->"Out[8]=",
 CellID->36139949,ExpressionUUID->"3d6032f7-9ec2-49e1-bf6f-6ec1c1fbe8c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quantitiesSpannedByPlanckUnits", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"ContainsAll", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
         "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
       RowBox[{"First", "[", 
        SuperscriptBox[
         RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
        "]"}]}], "]"}], "&"}], "]"}], "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "0"}], 
      "&"}], "]"}], "[", 
    RowBox[{"EntityList", "[", 
     RowBox[{"EntityClass", "[", 
      RowBox[{"\"\<PhysicalQuantity\>\"", ",", "All"}], "]"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763195339009237`*^9, 3.8763195878908234`*^9}, {
  3.876319621752405*^9, 3.876319648592494*^9}},
 CellLabel->"In[9]:=",
 CellID->72703205,ExpressionUUID->"97174ff0-1b05-4c54-a50d-5d0ff4e1a262"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         TemplateBox[{"\"absackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abseleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abseleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abserk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absnap\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute global warming potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteGlobalWarmingPotential\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteGlobalWarmingPotential\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absolute humidity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteHumidity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteHumidity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMass\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteVorticity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity vertical component\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteVorticityVerticalComponent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteVorticityVerticalComponent\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absop\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absop\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absop\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbed dose of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorbed dose rate of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseRateOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseRateOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Acceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Acceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration gradient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationGradient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration spectral density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationSpectralDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationSpectralDensity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"acceptor density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAttenutationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticImpedance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcousticImpedance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acousto\[Hyphen]optical figure of merit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcoustoOpticalFigureOfMerit\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcoustoOpticalFigureOfMerit\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"actinic dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActinicDose\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActinicDose\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"action\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Action\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Action\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActiveEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActiveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActivePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"actual exhaust speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActualExhaustSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic bulk modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticBulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticBulkModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticCompressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic linear compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticLinearCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLinearCompressibility\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticWork\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aerodynamic force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AerodynamicForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AerodynamicForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"age\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AgriculturalYield\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYield\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AgriculturalYieldRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYieldRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airflow permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alpha disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlphaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlphaDisintegrationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularDiameterDistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular impulse\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularImpulse\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularImpulse\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularMomentum\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularMomentum\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular reciprocal lattice vector\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularReciprocalLatticeVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anharmonicity constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnharmonicityConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant B\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantB\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apoapsis distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApoapsisDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"applied moment of force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AppliedMomentOfForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AppliedMomentOfForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arc length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area heating capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaHeatingCapacity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaHeatingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area under flow\[Hyphen]volume curve\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaUnderFlowVolumeCurve\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaUnderFlowVolumeCurve\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"assignable area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssignableArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atmospheric pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtmosphericPressure\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicBindingEnergy\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicBindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"mass of atom\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"atomic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttenuationLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attractive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttractiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttractiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"authalic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AuthalicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"autoignition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AutoignitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingPace\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingPace\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageMovingSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial area moment of inertia\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AxialAreaMomentOfInertia\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialAreaMomentOfInertia\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialStress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialStress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"backward absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bandwidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bandwidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barycentric mass flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarycentricMassFlux\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarycentricMassFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baseband bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasebandBandwidth\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasebandBandwidth\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basis weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasisWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasisWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryEnergyCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity volume density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityVolumeDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityVolumeDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy self\[Hyphen]discharge rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergySelfDischargeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergySelfDischargeRate\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery power capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryPowerCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryPowerCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"beat frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeatFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bending moment of force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BendingMomentOfForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BendingMomentOfForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bending stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BendingStiffness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BendingStiffness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bend radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"best pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BestPace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BestPace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beta disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BetaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BetaDisintegrationEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BiaxialCompression\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BiaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BindingEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bin width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biogas energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BiogasEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"BiogasEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Biomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Biomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body mass index\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyMassIndex\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BodyMassIndex\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"boiling temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BoilingTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BoilingTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bollard pull\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BollardPull\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BollardPull\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bolometric luminosity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BolometricLuminosity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BolometricLuminosity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond force constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondForceConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondForceConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"brake specific fuel consumption\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BrakeSpecificFuelConsumption\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrakeSpecificFuelConsumption\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"breadth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"breaking length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BreakingLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"brightness temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BrightnessTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BrightnessTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Brillouin gain factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BrillouinGainFactor\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrillouinGainFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"broad\[Hyphen]beam attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BroadBeamAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BroadBeamAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bulk density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BulkDensity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bulk modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BulkModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bulk viscosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkViscosity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BulkViscosity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"buoyancy flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BuoyancyFlux\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"BuoyancyFlux\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"buoyancy force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BuoyancyForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BuoyancyForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Burgers vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BurgersVector\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bus speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BusSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BusSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cabbeling coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CabbelingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CabbelingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"caliber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"calibrated airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CalibratedAirspeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CalibratedAirspeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"caliper\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"canopy surface resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CanopySurfaceResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CanopySurfaceResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"capacitor insulation resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CapacitorInsulationResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CapacitorInsulationResistance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"capacitor leakage current rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CapacitorLeakageCurrentRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CapacitorLeakageCurrentRate\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Capacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Capacity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"carrier lifetime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CarrierLifetime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CarrierLifetime\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate z\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateZ\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateZ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Casimir force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CasimirForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"CasimirForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Casimir pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CasimirPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CasimirPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cell wall density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CellWallDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CellWallDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centrifugal acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CentrifugalAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentrifugalAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centrifugal force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CentrifugalForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentrifugalForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centripetal acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CentripetalAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentripetalAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centripetal force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CentripetalForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentripetalForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicAcousticImpedance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicAcousticImpedance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"characteristic frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicMass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicMass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic radius\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicSpeed\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicTime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicTime\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"charge radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Charpy impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharpyImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharpyImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Charpy notched impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharpyNotchedImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharpyNotchedImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"chemical energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChemicalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemicalEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chemical mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChemicalMassDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemicalMassDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chemistry electron density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ChemistryElectronDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChemistryElectronDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ch\[EAcute]zy coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChezyCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChezyCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chiller efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillerEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChillerEfficiency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chill temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChillTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circulation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circulation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circulation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circulation area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CirculationArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CirculationArea\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circumference\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Circumference\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circumradius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cleavage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Cleavage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Cleavage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"climate change velocity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ClimateChangeVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClimateChangeVelocity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"clock rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ClockRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClockRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cloud point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CloudPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CloudPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"cogging torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoggingTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoggingTorque\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cohesive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CohesiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CohesiveForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil core factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilCoreFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilCoreFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil effective area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilEffectiveArea\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil effective length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"color temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ColorTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ColorTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"column density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ColumnDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ColumnDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"combustion engine emission\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CombustionEngineEmissions\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CombustionEngineEmissions\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"committed dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommittedDose\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommittedDose\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"committed dose equivalent\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CommittedDoseEquivalent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommittedDoseEquivalent\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"common area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommonArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CommonArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"community biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommunityBiomass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommunityBiomass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"comoving distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"comoving transverse distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ComovingTransverseDistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingTransverseDistance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compressibility\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Compressibility\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"Compressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Compression\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Compression\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compressive strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CompressiveStrength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CompressiveStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Compton wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComptonWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"condensed matter physics angular wavenumber\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterPhysicsAngularWavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsAngularWavenumber\\\"]\"", "\"physical quantity\""},
           "Entity"], ",", 
         TemplateBox[{"\"condensed matter physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"condensed matter relaxation time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterRelaxationTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterRelaxationTime\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"contact\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"contact density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ContactDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ContactDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"convective available potential energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ConvectiveAvailablePotentialEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ConvectiveAvailablePotentialEnergy\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"tonnage rating\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoolingTonnageRating\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoolingTonnageRating\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"core body temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoreBodyTemperature\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoreBodyTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoriolisAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis deceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoriolisDeceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoriolisForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"correlated color temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CorrelatedColorTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CorrelatedColorTemperature\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"cosmological vacuum energy density length\[Hyphen]based \
proportionality factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFac\
tor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb attraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombAttraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoulombAttraction\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoulombForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb repulsion\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombRepulsion\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoulombRepulsion\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"covalent radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CovalentRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"CPU speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CPUSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CPUSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"crackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Crackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Crackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"creep rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CreepRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CreepRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"creep strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CreepStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CreepStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalTemperature\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cross sectional area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CrossSectionalArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CrossSectionalArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cumulative radon exposure\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CumulativeRadonExposure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CumulativeRadonExposure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Curie constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurieConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Curie temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurieTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"curvature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Curvature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Curvature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"curvature vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurvatureVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurvatureVorticity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cutoff frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffFrequency\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cutoff wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CutoffWavelength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cyclotron frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CyclotronFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CyclotronFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cylinder stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CylinderStress\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CylinderStress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"damping coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DampingCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"data transfer time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DataTransferTime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DataTransferTime\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"deadweight tonnage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DeadweightTonnage\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DeadweightTonnage\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"de Broglie wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DeBroglieWavelength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Debye temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DebyeTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DebyeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"decadic absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DecadicLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DecadicLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Deceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Deceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density excess\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityExcess\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DensityExcess\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityGradient\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density of vibrational states\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DensityOfVibrationalStates\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityOfVibrationalStates\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth of field\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth of focus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"dew point temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DewPointTemperature\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DewPointTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diagonal length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiagonalLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diameter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"diameter at breast height (1.3 meters above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"diameter at breast height (1.4 meters above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"dietary energy intake rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DietaryEnergyIntakeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"dietary recommended intake\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DietaryRecommendedIntake\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DietaryRecommendedIntake\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"differential flux per energy interval\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DifferentialFluxPerEnergyInterval\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialFluxPerEnergyInterval\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"differential radar reflectivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DifferentialRadarReflectivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialRadarReflectivity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"850"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{
          "\"spectral radiant exposure with respect to frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExposureWithRespectToFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExposureWithRespectToFrequency\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant exposure with respect to wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExposureWithRespectToWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExposureWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectral radiant flux (with respect to frequency)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantFluxWithRespectToFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantFluxWithRespectToFrequency\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant flux (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantFluxWithRespectToWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantFluxWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectroscopic term value\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectroscopicTermValue\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicTermValue\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectroscopic wavenumber\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectroscopicWavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicWavenumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Speed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Speed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"speed squared\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedSquared\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedSquared\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"x\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedX\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"y\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedY\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"z\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedZ\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedZ\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spherical irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SphericalIrradiance\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SphericalIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spin\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Spin\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Spin\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spring constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpringConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpringConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stagnation temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StagnationTemperature\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StagnationTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"standard gravitational parameter\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StandardGravitationalParameter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StandardGravitationalParameter\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"static friction force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StaticFrictionForce\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StaticFrictionForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"static pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StaticPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StaticPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits1D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits2D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits4D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits5D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"stellar luminosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StellarLuminosity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StellarLuminosity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Stiffness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Stiffness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"storage modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StorageModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StorageModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stowage factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StowageFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StowageFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain noise density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainNoiseDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StrainNoiseDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StrainRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain sensitivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StrainSensitivity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Stress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Stress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StressCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StressCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress corrosion cracking fracture toughness\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StressCorrosionCrackingFractureToughness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StressCorrosionCrackingFractureToughness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress\[Hyphen]energy tensor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StressEnergyTensor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StressEnergyTensor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress optical coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StressOpticalCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StressOpticalCoefficient\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"struck measure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StruckMeasure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StruckMeasure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"structural load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StructuralLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StructuralLoad\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"sublimation temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SublimationTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SublimationTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"superconductor coherence length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SuperconductingCoherenceLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"superconduction transition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SuperconductionTransitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductionTransitionTemperature\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface energy density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SurfaceEnergyDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceMassDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceMassDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface power density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfacePowerDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfacePowerDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfacePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfacePressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"swimming speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SwimmingSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SwimmingSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"synchotron frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SynchotronFrequency\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SynchotronFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"synthesis gas flow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SynthesisGasFlow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SynthesisGasFlow\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"systematic vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SystematicVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SystematicVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"tachyonic speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TachyonicSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TachyonicSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tangential acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TangentialAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TangentialAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tangential speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TangentialSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TangentialSpeed\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tare area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TareArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tare weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TareWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tear strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TearStrength\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TearStrength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TemperaturePerMass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TemperaturePerMass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature per pressure\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TemperaturePerPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TemperaturePerPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tempergy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tempergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tempergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TensileImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TensileImpactStrength\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStiffness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileStiffness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStress\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileStress\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile toughness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileToughness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileToughness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile yield strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TensileYieldStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileYieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tension\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tension\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal capacitance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalCapacitance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCapacitance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thermal de Broglie wavelength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalDeBroglieWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalDeBroglieWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal diffusion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalDiffusionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDiffusionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thermal diffusivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalDiffusivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDiffusivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal inductance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal time constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalTimeConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalTimeConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic beta\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermodynamicBeta\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermodynamicBeta\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic density of states\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermodynamicDensityOfStates\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermodynamicDensityOfStates\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"thermodynamic free energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermodynamicFreeEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermodynamicFreeEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermodynamicWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermodynamicWork\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermoelectromotive force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermoelectromotiveForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermoelectromotiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermophoretic velocity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermophoreticVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermophoreticVelocity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thickness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thickness frequency product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThicknessFrequencyProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThicknessFrequencyProduct\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thin film permeability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThinFilmPermeability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThinFilmPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"third ionization energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThirdIonizationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThirdIonizationEnergy\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thrust\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Thrust\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thrust\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thrust specific fuel consumption\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThrustSpecificFuelConsumption\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThrustSpecificFuelConsumption\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"tidal energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TidalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TidalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tidal power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TidalPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TidalPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time\[Hyphen]averaged sound intensity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TimeAveragedSoundIntensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeAveragedSoundIntensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeConstant\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeConstant\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time difference\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeDifference\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimeDifference\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimePerArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimePerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time shift\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeShift\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeShift\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time squared\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeSquared\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeSquared\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TimeTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimeTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tomperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tomperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tomperature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tonnage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tonnage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tonnage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Torque\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Torque\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorqueGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorqueGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorsionalConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentum\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentum\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total floor area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalFloorArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radioactive activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioactiveActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalRadioactiveActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalScatteringCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"total surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalSurfaceArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"toughness modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ToughnessModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ToughnessModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"first Townsend coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"track gauge\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer area product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerAreaProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer core geometry coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transformer specific weight\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSpecificWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSpecificWeight\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transformer VA density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerVADensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerVADensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"translational damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TranslationalDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TranslationalDampingCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transpiration rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TranspirationRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TranspirationRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transportation cost\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransportationCost\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransportationCost\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAirspeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAirspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueVaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueVaporPressure\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"turbulent kinetic energy dissipation rate per mass\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurbulentKineticEnergyDissipationRatePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TurbulentKineticEnergyDissipationRatePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turnover frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnoverFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"enzymology turnover number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurnoverNumberEnzymology\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverNumberEnzymology\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twistability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Twistability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Twistability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCoefficient\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"typographic length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypographicLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ultimate tensile strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UltimateTensileStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UltimateTensileStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ungel point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UngelPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UngelPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uniaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UniaxialCompression\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"universal spectral irradiance (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"unnotched Izod impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UnnotchedIzodImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnnotchedIzodImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Unruh temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnruhTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uptime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UpwardIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward scalar irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardScalarIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardScalarIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward vector irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardVectorIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardVectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergyDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum pump leakage rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VacuumPumpLeakageRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumPumpLeakageRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VanDerWaalsRadius\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeability\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPermeability\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPermeance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporResistance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporResistivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vascular resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VascularResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vector irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VectorIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDeceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle distance traveled\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VehicleDistanceTraveled\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Velocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Velocity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity distribution function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VelocityDistributionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VelocityDistributionFunction\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"vergence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VibrationalConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalEnergy\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibration strain gauge factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VibrationStrainGaugeFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationStrainGaugeFactor\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virtual work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirtualWork\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirtualWork\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousDampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous drag torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousDragTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousDragTorque\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume cross section\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume density rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeDensityRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeDensityRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume erosion rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeErosionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeErosionRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate per time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeFlowRatePerTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeFlowRatePerTime\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGainRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGainRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume growth rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGrowthRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGrowthRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume loss rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeLossRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeLossRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume spread rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume synthesis rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSynthesisRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSynthesisRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric airflow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricAirflow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricAirflow\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric radioactive activity density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricRadioactiveActivityDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadioactiveActivityDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumetric radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumic total cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumicTotalCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vorticity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vorticity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity advection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VorticityAdvection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VorticityAdvection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"walking speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"warping constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water potential\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterPotential\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaterPotential\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave amplitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAmplitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAttenuationCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DMomentumRepresentation\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DMomentumRepresentation\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WavelengthTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WavelengthTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"wave mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WavePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WavePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Weight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Weight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weiss constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WeissConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBiomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBiomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet bulb globe temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WetBulbGlobeTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wetted perimeter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing loading\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingLoading\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingLoading\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wingspan\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Work\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Work\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkFunction\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkFunction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkingTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work per weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkPerWeight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkPerWeight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to elastic limit\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to maximum load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToMaximumLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkToMaximumLoad\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray detector sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"XRayDetectorSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayDetectorSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YardYield\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YardYield\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn inverse linear density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"YarnInverseLinearDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yield strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Young modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"YoungModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zero\[Hyphen]point energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zoomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"]}], "}"}], Short[#, 5]& ], 
   "line" -> 9, "sessionID" -> 19507220242782537097, "byteCount" -> 217232, 
   "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.876319543206341*^9, 3.8763195887056203`*^9, {3.8763196336089725`*^9, 
   3.8763196606235914`*^9}, 3.8763424431592765`*^9},
 CellLabel->"Out[9]=",
 CellID->130039057,ExpressionUUID->"f80321e7-8a38-49a8-a7df-5573671359f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "quantitiesSpannedByPlanckUnits", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.876319671488087*^9, 3.876319673380993*^9}},
 CellLabel->"In[10]:=",
 CellID->559173782,ExpressionUUID->"db8a2c91-2d05-45fb-a82b-c235a130a27f"],

Cell[BoxData["1362"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8763196735992937`*^9, 3.876342444241206*^9},
 CellLabel->"Out[10]=",
 CellID->773297891,ExpressionUUID->"5e08efad-d8b6-4442-b4da-931834fe84a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "&"}], ",", 
   "quantitiesSpannedByPlanckUnits"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.876319681329623*^9, 3.8763196890781126`*^9}},
 CellLabel->"In[11]:=",
 CellID->263889277,ExpressionUUID->"914482ca-ff10-4a99-a9bc-2ceef2ff35d3"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{
           TemplateBox[{"\"absackle\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "6"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"abseleration\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], 
               "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Abseleration\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "3"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"absement\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"abserk\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "4"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"absity\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "2"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"absnap\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"absolute altitude\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
               "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], "}"}]}], ",", 
         TemplateBox[{"1349"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{
           TemplateBox[{"\"yarn inverse linear density\"", 
             RowBox[{"Entity", "[", 
               
               RowBox[{
                "\"PhysicalQuantity\"", ",", "\"YarnInverseLinearDensity\""}],
                "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"yarn linear density\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}],
                "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YarnLinearDensity\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", "1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"yield strength\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
               "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YieldStrength\\\
\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"Young modulus\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], 
               "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YoungModulus\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", 
                   RowBox[{"-", "1"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"zero\[Hyphen]point energy\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
               "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\
\\\"]\"", "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"\"LengthUnit\"", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{
           TemplateBox[{"\"zoomass\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
             "\"physical quantity\""}, "Entity"], "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"{", 
               RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], "}"}]}]}], 
       "\[RightAssociation]"}], Short[#, 5]& ], "line" -> 11, "sessionID" -> 
   19507220242782537097, "byteCount" -> 723632, "size" -> 5, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8763196964669495`*^9, 3.876342458361102*^9},
 CellLabel->"Out[11]=",
 CellID->576591,ExpressionUUID->"f76b0d2f-7b94-46b3-910f-ff76bd316344"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "&"}], ",", 
     "quantitiesSpannedByPlanckUnits"}], "]"}], ",", "1"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.876319681329623*^9, 3.8763196890781126`*^9}, {
  3.8763197370217485`*^9, 3.87631976327079*^9}},
 CellLabel->"In[12]:=",
 CellID->94099796,ExpressionUUID->"1ee3bbd4-d376-4277-b5c6-ff7c9a7c86a2"],

Cell[BoxData["$Aborted"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.876319743159869*^9, 3.8763197659471717`*^9}, 
   3.876342458826757*^9},
 CellLabel->"Out[12]=",
 CellID->297649069,ExpressionUUID->"f6226c93-a8b2-4920-b107-92100a8ce8f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LengthUnit\>\"", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TimeUnit\>\"", ",", "6"}], "}"}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<LengthUnit\>\"", "->", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"l\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck lengths", 
       "\"PlanckLength\""},
      "Quantity"]}], ",", 
    RowBox[{"\"\<TimeUnit\>\"", "->", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"t\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck times", 
       "\"PlanckTime\""},
      "Quantity"]}]}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763197778096485`*^9, 3.8763197932957115`*^9}},
 CellLabel->"In[24]:=",
 CellID->373751741,ExpressionUUID->"acfd9545-efbc-4ab8-8829-ea86a6950bdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"l\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck length", 
       "\"PlanckLength\""},
      "Quantity"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"t\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck time", 
       "\"PlanckTime\""},
      "Quantity"], ",", "6"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.876319796596407*^9, 3.8763197990023894`*^9}},
 CellLabel->"Out[24]=",
 CellID->57712624,ExpressionUUID->"a50dd386-fb08-47e9-a3be-369fae305ab4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Times", "@@", 
   RowBox[{"Power", "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<LengthUnit\>\"", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<TimeUnit\>\"", ",", "6"}], "}"}]}], "}"}]}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<LengthUnit\>\"", "->", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"l\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck lengths", 
       "\"PlanckLength\""},
      "Quantity"]}], ",", 
    RowBox[{"\"\<TimeUnit\>\"", "->", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"t\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck times", 
       "\"PlanckTime\""},
      "Quantity"]}]}], "}"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.876319801577826*^9, 3.876319813105862*^9}},
 CellLabel->"In[27]:=",
 CellID->68895965,ExpressionUUID->"3af6279e-6c1b-4760-beee-73d5e3cd20c9"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{
     SubscriptBox[
      StyleBox["\"l\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
     SubsuperscriptBox[
      StyleBox["\"t\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
   "Planck length Planck time to the 6", 
   RowBox[{"\"PlanckLength\"", " ", 
     SuperscriptBox["\"PlanckTime\"", "6"]}]},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.876319806467472*^9, 3.8763198135984898`*^9}},
 CellLabel->"Out[27]=",
 CellID->21981539,ExpressionUUID->"7162516c-d325-4268-8f4a-3912af083b03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Times", "@@", 
     RowBox[{"Power", "@@@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<LengthUnit\>\"", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TimeUnit\>\"", ",", "6"}], "}"}]}], "}"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<LengthUnit\>\"", "->", 
       TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1], 
         SubscriptBox[
          StyleBox["\"l\"", Italic, StripOnInput -> False], 
          StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck lengths",
          "\"PlanckLength\""},
        "Quantity"]}], ",", 
      RowBox[{"\"\<TimeUnit\>\"", "->", 
       TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1], 
         SubscriptBox[
          StyleBox["\"t\"", Italic, StripOnInput -> False], 
          StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck times", 
         "\"PlanckTime\""},
        "Quantity"]}]}], "}"}]}], ",", "\"\<SIBase\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8763198184922986`*^9, 3.8763198309107885`*^9}},
 CellLabel->"In[29]:=",
 CellID->330159700,ExpressionUUID->"ff78449f-5031-4e94-b57a-5f7d2c7e5205"],

Cell[BoxData[
 TemplateBox[{"3.9686724679723`3.807366987428356*^-295", 
   RowBox[{"\"m\"", "\[ThinSpace]", 
     SuperscriptBox["\"s\"", "6"]}], "meter seconds to the 6", 
   RowBox[{"\"Meters\"", " ", 
     SuperscriptBox["\"Seconds\"", "6"]}]},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8763198206764793`*^9, 3.8763198311621447`*^9}},
 CellLabel->"Out[29]=",
 CellID->124716752,ExpressionUUID->"7b490bb2-62d0-4078-a263-e071b21c57f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", 
  InterpretationBox[
   RowBox[{"CloudObject", "[", 
    TemplateBox[{
     "\"https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
      "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"},
     "HyperlinkURL"], "]"}],
   CloudObject[
   "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"],
   SelectWithContents->True], "]"}]], "Input",
 CellChangeTimes->{3.8763951848868647`*^9},
 CellLabel->"In[1]:=",
 CellID->450180596,ExpressionUUID->"a83e4cad-d314-4c12-90e3-ba08eeef0f9d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ImageResolution -> 
                 144., ColorFunction -> GrayLevel], {
                AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
                 None, FrameTicks -> None, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 
                    13.7794}, {6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 
                    13.8454}, {7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 
                    13.8994}, {6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, {
                 ImageSize -> 12, AspectRatio -> Automatic, 
                  ImageSize -> {15., 15.}, 
                  PlotRange -> {{0., 15.}, {0., 15.}}}], ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit", 
                Alignment -> {Right, Bottom}]}, Alignment -> {Right, Bottom}],
              CacheGraphics -> False, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ImageResolution -> 
                 144., ColorFunction -> GrayLevel], {
                AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
                 None, FrameTicks -> None, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 
                    13.7794}, {6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 
                    13.8454}, {7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 
                    13.8994}, {6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, {
                 ImageSize -> 12, AspectRatio -> Automatic, 
                  ImageSize -> {15., 15.}, 
                  PlotRange -> {{0., 15.}, {0., 15.}}}], ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit", 
                Alignment -> {Right, Bottom}]}, Alignment -> {Right, Bottom}],
              CacheGraphics -> False, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Mathematics\"", "\"Chemistry\"", 
                    "\"Engineering\"", "\"Physical Sciences\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Text\"", "\"Numerical Data\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"metrology\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"], "SummaryItem"]}], 
               ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "298f8d63-64c1-457a-a098-1f2cc1bab6a4"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"298f8d63-64c1-457a-a098-1f2cc1bab6a4\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.984`", "\"kB\"", "kilobytes", "\"Kilobytes\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"base-quantities-and-dimensions\"", ",", 
                    "\"base-quantities-and-units\"", ",", 
                    "\"coherent-derived-units-in-the-SI-expressed-terms-of-\
base-units\"", ",", 
                    RowBox[{"\"coherent-\"", "\[Ellipsis]", "\"d-symbols\""}],
                     ",", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"t\""}], ",", 
                    "\"defining-constants-of-the-SI\"", ",", 
                    "\"SI-prefixes\"", ",", 
                    "\"SI-units-with-special-names-and-symbols\""}], 
                   Short[#, 2]& ], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[<|
   "DocumentationLink" -> 
    URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"], "ResourceLocations" -> {
      CloudObject[
      "https://www.wolframcloud.com/obj/burbery1/Resources/298/298f8d63-64c1-\
457a-a098-1f2cc1bab6a4"]}, "Name" -> "SI Brochure Data", "UUID" -> 
    "298f8d63-64c1-457a-a098-1f2cc1bab6a4", "RepositoryLocation" -> None, 
    "ResourceType" -> "DataResource", "ContentSize" -> 
    Quantity[4.984, "Kilobytes"], "Version" -> None, "Description" -> 
    "This data contains data from the SI Brochure published by the BIPM", 
    "ContentTypes" -> {"Text", "Numerical Data"}, 
    "Categories" -> {
     "Mathematics", "Chemistry", "Engineering", "Physical Sciences"}, 
    "Keywords" -> {"metrology"}, "ContentElementAccessType" -> "Dataset", 
    "ContentValues" -> <||>, 
    "ContributorInformation" -> <|"ContributedBy" -> "Peter Cullen Burbery"|>,
     "DefaultContentElement" -> "Dataset", "ExampleNotebook" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data/SI Brochure Data-ExampleNotebook.nb"], "ExampleNotebookData" -> 
    Automatic, 
    "RelatedSymbols" -> {"UnitSimplify", "NondimensionalizationTransform"}, 
    "SeeAlso" -> {"PlanckUnitConversion"}, "SourceMetadata" -> <|"Citation" -> {
        TextData[{
          ButtonBox["NIST SI Brochure", BaseStyle -> "Hyperlink", ButtonData -> {
             URL[
             "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.\
330-2019.pdf"], None}, ButtonNote -> 
           "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], "."}]}|>, 
    "ContentElements" -> {
     "base-quantities-and-dimensions", "base-quantities-and-units", 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units", 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols", "Dataset", 
      "defining-constants-of-the-SI", "SI-prefixes", 
      "SI-units-with-special-names-and-symbols"}, 
    "ContentElementLocations" -> <||>, 
    "InformationElements" -> <|
     "Dataset" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "defining-constants-of-the-SI" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], "base-quantities-and-units" -> 
      Dataset[<|"time" -> <|
          "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
           "unit-name" -> "second", "unit-symbol" -> "s"|>, 
         "length" -> <|
          "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
         "mass" -> <|
          "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
         "electric-current" -> <|
          "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
           "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
         "thermodynamic-temperature" -> <|
          "quantity-name" -> "thermodynamic-temperature", 
           "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
           "unit-symbol" -> "K"|>, 
         "amount-of-substance" -> <|
          "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
           "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
         "luminous-intensity" -> <|
          "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
           "unit-symbol" -> "cd"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "base-quantities-and-dimensions" -> 
      Dataset[<|"time" -> <|
          "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
           "T"|>, "length" -> <|
          "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
           "L"|>, "mass" -> <|
          "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
           "M"|>, "electric-current" -> <|
          "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
           "I"|>, "thermodynamic-temperature" -> <|
          "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
           "\[CapitalTheta]"|>, 
         "amount-of-substance" -> <|
          "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
           "N"|>, "luminous-intensity" -> <|
          "typical-symbol-for-quantity" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
           "J"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "SI-units-with-special-names-and-symbols" -> 
      Dataset[<|"plane-angle" -> <|
          "special-name-of-unit" -> "radian", 
           "unit-expressed-terms-of-base-units" -> "rad=m/m", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "solid-angle" -> <|
          "special-name-of-unit" -> "steradian", 
           "unit-expressed-terms-of-base-units" -> 
           "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "frequency" -> <|
          "special-name-of-unit" -> "hertz", 
           "unit-expressed-terms-of-base-units" -> 
           "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "force" -> <|
          "special-name-of-unit" -> "newton", 
           "unit-expressed-terms-of-base-units" -> 
           "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "pressure-or-stress" -> <|
          "special-name-of-unit" -> "pascal", 
           "unit-expressed-terms-of-base-units" -> 
           "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "energy-or-work-or-amount-of-heat" -> <|
          "special-name-of-unit" -> "joule", 
           "unit-expressed-terms-of-base-units" -> 
           "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
         "power-or-radiant-flux" -> <|
          "special-name-of-unit" -> "watt", 
           "unit-expressed-terms-of-base-units" -> 
           "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
         "electric-charge" -> <|
          "special-name-of-unit" -> "coulomb", 
           "unit-expressed-terms-of-base-units" -> "C=A s", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "electric-potential-difference" -> <|
          "special-name-of-unit" -> "volt", 
           "unit-expressed-terms-of-base-units" -> 
           "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
         "capacitance" -> <|
          "special-name-of-unit" -> "farad", 
           "unit-expressed-terms-of-base-units" -> 
           "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
         "electric-resistance" -> <|
          "special-name-of-unit" -> "ohm", 
           "unit-expressed-terms-of-base-units" -> 
           "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
         "electric-conductance" -> <|
          "special-name-of-unit" -> "siemens", 
           "unit-expressed-terms-of-base-units" -> 
           "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
         "magnetic-flux" -> <|
          "special-name-of-unit" -> "weber", 
           "unit-expressed-terms-of-base-units" -> 
           "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
         "magnetic-flux-density" -> <|
          "special-name-of-unit" -> "tesla", 
           "unit-expressed-terms-of-base-units" -> 
           "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "inductance" -> <|
          "special-name-of-unit" -> "henry", 
           "unit-expressed-terms-of-base-units" -> 
           "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
         "Celsius-temperature" -> <|
          "special-name-of-unit" -> "degree Celsius", 
           "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "luminous-flux" -> <|
          "special-name-of-unit" -> "lumen", 
           "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "illuminance" -> <|
          "special-name-of-unit" -> "lux", 
           "unit-expressed-terms-of-base-units" -> 
           "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "activity-referred-to-a-radionuclide" -> <|
          "special-name-of-unit" -> "becquerel", 
           "unit-expressed-terms-of-base-units" -> 
           "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "absorbed-dose-or-kerma" -> <|
          "special-name-of-unit" -> "gray", 
           "unit-expressed-terms-of-base-units" -> 
           "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "dose-equivalent" -> <|
          "special-name-of-unit" -> "sievert", 
           "unit-expressed-terms-of-base-units" -> 
           "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "catalytic-activity" -> <|
          "special-name-of-unit" -> "katal", 
           "unit-expressed-terms-of-base-units" -> 
           "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], <||>], 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units" -> 
      Dataset[<|"area" -> <|
          "typical-symbol" -> "A", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "volume" -> <|
          "typical-symbol" -> "V", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
         "speed-or-velocity" -> <|
          "typical-symbol" -> "v", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "acceleration" -> <|
          "typical-symbol" -> "a", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "wavenumber" -> <|
          "typical-symbol" -> "\[Sigma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "density-or-mass-density" -> <|
          "typical-symbol" -> "\[Rho]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-density" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "specific-volume" -> <|
          "typical-symbol" -> "\[Nu]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
         "current-density" -> <|
          "typical-symbol" -> "j", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "magnetic-field-strength" -> <|
          "typical-symbol" -> "H", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "amount-of-substance-concentration" -> <|
          "typical-symbol" -> "c", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "mass-concentration" -> <|
          "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "luminance" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], <||>], 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols" -> 
      Dataset[<|"dynamic-viscosity" -> <|
          "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
           "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-1\)]\)"|>, 
         "moment-of-force" -> <|
          "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
           "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "surface-tension" -> <|
          "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
           "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "angular-velocity-or-angular-frequency" -> <|
          "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
           "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "angular-acceleration" -> <|
          "name-of-coherent-derived-unit" -> "radian per second squared", 
           "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "heat-flux-density-or-irradiance" -> <|
          "name-of-coherent-derived-unit" -> "watt per square meter", 
           "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "heat-capacity-or-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
         "specific-heat-capacity-or-specific-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "specific-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
         "thermal-conductivity" -> <|
          "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
           "symbol" -> 
           "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "energy-density" -> <|
          "name-of-coherent-derived-unit" -> "joule per cubic meter", 
           "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
         "electric-field-strength" -> <|
          "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
           "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
         "electric-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "electric-flux-density-or-electric-displacement" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "permittivity" -> <|
          "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
           "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
         "permeability" -> <|
          "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
           "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
         "molar-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, 
         "molar-entropy-or-molar-heat-capacity" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "exposure(x-and-\[Gamma]-rays)" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
           "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
         "absorbed-dose-rate" -> <|
          "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
           "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
         "radiant-intensity" -> <|
          "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "radiance" -> <|
          "name-of-coherent-derived-unit" -> 
           "watt per square meter steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "catalytic-activity-concentration" -> <|
          "name-of-coherent-derived-unit" -> "katal per cubic meter", 
           "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], <||>], "SI-prefixes" -> 
      Dataset[<|"\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
           "kilo", "symbol" -> "k"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
           "mega", "symbol" -> "M"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
           "giga", "symbol" -> "G"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
           "tera", "symbol" -> "T"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
           "peta", "symbol" -> "P"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
           "exa", "symbol" -> "E"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
           "zetta", "symbol" -> "Z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
           "yotta", "symbol" -> "Y"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
           "milli", "symbol" -> "m"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
           "micro", "symbol" -> "\[Mu]"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
           "nano", "symbol" -> "n"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
           "pico", "symbol" -> "p"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
           "femto", "symbol" -> "f"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
           "atto", "symbol" -> "a"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
           "zepto", "symbol" -> "z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
           "yocto", "symbol" -> "y"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], <||>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8763951913748627`*^9},
 CellLabel->"Out[1]=",
 CellID->18336588,ExpressionUUID->"cc505865-cfc8-4b05-9528-cc43eeeaaeaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", 
  InterpretationBox[
   RowBox[{"CloudObject", "[", 
    TemplateBox[{
     "\"https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
      "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"},
     "HyperlinkURL"], "]"}],
   CloudObject[
   "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"],
   SelectWithContents->True], "]"}]], "Input",
 CellChangeTimes->{{3.876395461409293*^9, 3.8763954751913643`*^9}},
 CellLabel->"In[5]:=",
 CellID->2605380,ExpressionUUID->"7b70cff1-c4c6-4498-942e-c219991ec268"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ImageResolution -> 
                 144., ColorFunction -> GrayLevel], {
                AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
                 None, FrameTicks -> None, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 
                    13.7794}, {6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 
                    13.8454}, {7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 
                    13.8994}, {6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, {
                 ImageSize -> 12, AspectRatio -> Automatic, 
                  ImageSize -> {15., 15.}, 
                  PlotRange -> {{0., 15.}, {0., 15.}}}], ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit", 
                Alignment -> {Right, Bottom}]}, Alignment -> {Right, Bottom}],
              CacheGraphics -> False, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ImageResolution -> 
                 144., ColorFunction -> GrayLevel], {
                AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
                 None, FrameTicks -> None, ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3},
                     {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                    1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 13.7794}, {
                    6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 13.8454}, {
                    7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 13.8994}, {
                    6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, {
                 ImageSize -> 12, AspectRatio -> Automatic, 
                  ImageSize -> {15., 15.}, 
                  PlotRange -> {{0., 15.}, {0., 15.}}}], ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit", 
                Alignment -> {Right, Bottom}]}, Alignment -> {Right, Bottom}],
              CacheGraphics -> False, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Mathematics\"", "\"Chemistry\"", 
                    "\"Engineering\"", "\"Physical Sciences\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Text\"", "\"Numerical Data\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"metrology\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"], "SummaryItem"]}], 
               ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "298f8d63-64c1-457a-a098-1f2cc1bab6a4"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"298f8d63-64c1-457a-a098-1f2cc1bab6a4\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.984`", "\"kB\"", "kilobytes", "\"Kilobytes\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"base-quantities-and-dimensions\"", ",", 
                    "\"base-quantities-and-units\"", ",", 
                    "\"coherent-derived-units-in-the-SI-expressed-terms-of-\
base-units\"", ",", 
                    RowBox[{"\"coherent-\"", "\[Ellipsis]", "\"d-symbols\""}],
                     ",", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"t\""}], ",", 
                    "\"defining-constants-of-the-SI\"", ",", 
                    "\"SI-prefixes\"", ",", 
                    "\"SI-units-with-special-names-and-symbols\""}], 
                   Short[#, 2]& ], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[<|
   "DocumentationLink" -> 
    URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"], "ResourceLocations" -> {
      CloudObject[
      "https://www.wolframcloud.com/obj/burbery1/Resources/298/298f8d63-64c1-\
457a-a098-1f2cc1bab6a4"]}, "Name" -> "SI Brochure Data", "UUID" -> 
    "298f8d63-64c1-457a-a098-1f2cc1bab6a4", "RepositoryLocation" -> None, 
    "ResourceType" -> "DataResource", "ContentSize" -> 
    Quantity[4.984, "Kilobytes"], "Version" -> None, "Description" -> 
    "This data contains data from the SI Brochure published by the BIPM", 
    "ContentTypes" -> {"Text", "Numerical Data"}, 
    "Categories" -> {
     "Mathematics", "Chemistry", "Engineering", "Physical Sciences"}, 
    "Keywords" -> {"metrology"}, "ContentElementAccessType" -> "Dataset", 
    "ContentValues" -> <||>, 
    "ContributorInformation" -> <|"ContributedBy" -> "Peter Cullen Burbery"|>,
     "DefaultContentElement" -> "Dataset", "ExampleNotebook" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data/SI Brochure Data-ExampleNotebook.nb"], "ExampleNotebookData" -> 
    Automatic, 
    "RelatedSymbols" -> {"UnitSimplify", "NondimensionalizationTransform"}, 
    "SeeAlso" -> {"PlanckUnitConversion"}, "SourceMetadata" -> <|"Citation" -> {
        TextData[{
          ButtonBox["NIST SI Brochure", BaseStyle -> "Hyperlink", ButtonData -> {
             URL[
             "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.\
330-2019.pdf"], None}, ButtonNote -> 
           "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], "."}]}|>, 
    "ContentElements" -> {
     "base-quantities-and-dimensions", "base-quantities-and-units", 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units", 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols", "Dataset", 
      "defining-constants-of-the-SI", "SI-prefixes", 
      "SI-units-with-special-names-and-symbols"}, 
    "ContentElementLocations" -> <||>, 
    "InformationElements" -> <|
     "Dataset" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "defining-constants-of-the-SI" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], "base-quantities-and-units" -> 
      Dataset[<|"time" -> <|
          "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
           "unit-name" -> "second", "unit-symbol" -> "s"|>, 
         "length" -> <|
          "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
         "mass" -> <|
          "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
         "electric-current" -> <|
          "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
           "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
         "thermodynamic-temperature" -> <|
          "quantity-name" -> "thermodynamic-temperature", 
           "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
           "unit-symbol" -> "K"|>, 
         "amount-of-substance" -> <|
          "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
           "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
         "luminous-intensity" -> <|
          "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
           "unit-symbol" -> "cd"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "base-quantities-and-dimensions" -> 
      Dataset[<|"time" -> <|
          "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
           "T"|>, "length" -> <|
          "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
           "L"|>, "mass" -> <|
          "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
           "M"|>, "electric-current" -> <|
          "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
           "I"|>, "thermodynamic-temperature" -> <|
          "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
           "\[CapitalTheta]"|>, 
         "amount-of-substance" -> <|
          "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
           "N"|>, "luminous-intensity" -> <|
          "typical-symbol-for-quantity" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
           "J"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "SI-units-with-special-names-and-symbols" -> 
      Dataset[<|"plane-angle" -> <|
          "special-name-of-unit" -> "radian", 
           "unit-expressed-terms-of-base-units" -> "rad=m/m", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "solid-angle" -> <|
          "special-name-of-unit" -> "steradian", 
           "unit-expressed-terms-of-base-units" -> 
           "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "frequency" -> <|
          "special-name-of-unit" -> "hertz", 
           "unit-expressed-terms-of-base-units" -> 
           "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "force" -> <|
          "special-name-of-unit" -> "newton", 
           "unit-expressed-terms-of-base-units" -> 
           "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "pressure-or-stress" -> <|
          "special-name-of-unit" -> "pascal", 
           "unit-expressed-terms-of-base-units" -> 
           "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "energy-or-work-or-amount-of-heat" -> <|
          "special-name-of-unit" -> "joule", 
           "unit-expressed-terms-of-base-units" -> 
           "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
         "power-or-radiant-flux" -> <|
          "special-name-of-unit" -> "watt", 
           "unit-expressed-terms-of-base-units" -> 
           "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
         "electric-charge" -> <|
          "special-name-of-unit" -> "coulomb", 
           "unit-expressed-terms-of-base-units" -> "C=A s", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "electric-potential-difference" -> <|
          "special-name-of-unit" -> "volt", 
           "unit-expressed-terms-of-base-units" -> 
           "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
         "capacitance" -> <|
          "special-name-of-unit" -> "farad", 
           "unit-expressed-terms-of-base-units" -> 
           "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
         "electric-resistance" -> <|
          "special-name-of-unit" -> "ohm", 
           "unit-expressed-terms-of-base-units" -> 
           "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
         "electric-conductance" -> <|
          "special-name-of-unit" -> "siemens", 
           "unit-expressed-terms-of-base-units" -> 
           "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
         "magnetic-flux" -> <|
          "special-name-of-unit" -> "weber", 
           "unit-expressed-terms-of-base-units" -> 
           "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
         "magnetic-flux-density" -> <|
          "special-name-of-unit" -> "tesla", 
           "unit-expressed-terms-of-base-units" -> 
           "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "inductance" -> <|
          "special-name-of-unit" -> "henry", 
           "unit-expressed-terms-of-base-units" -> 
           "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
         "Celsius-temperature" -> <|
          "special-name-of-unit" -> "degree Celsius", 
           "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "luminous-flux" -> <|
          "special-name-of-unit" -> "lumen", 
           "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "illuminance" -> <|
          "special-name-of-unit" -> "lux", 
           "unit-expressed-terms-of-base-units" -> 
           "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "activity-referred-to-a-radionuclide" -> <|
          "special-name-of-unit" -> "becquerel", 
           "unit-expressed-terms-of-base-units" -> 
           "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "absorbed-dose-or-kerma" -> <|
          "special-name-of-unit" -> "gray", 
           "unit-expressed-terms-of-base-units" -> 
           "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "dose-equivalent" -> <|
          "special-name-of-unit" -> "sievert", 
           "unit-expressed-terms-of-base-units" -> 
           "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "catalytic-activity" -> <|
          "special-name-of-unit" -> "katal", 
           "unit-expressed-terms-of-base-units" -> 
           "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], <||>], 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units" -> 
      Dataset[<|"area" -> <|
          "typical-symbol" -> "A", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "volume" -> <|
          "typical-symbol" -> "V", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
         "speed-or-velocity" -> <|
          "typical-symbol" -> "v", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "acceleration" -> <|
          "typical-symbol" -> "a", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "wavenumber" -> <|
          "typical-symbol" -> "\[Sigma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "density-or-mass-density" -> <|
          "typical-symbol" -> "\[Rho]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-density" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "specific-volume" -> <|
          "typical-symbol" -> "\[Nu]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
         "current-density" -> <|
          "typical-symbol" -> "j", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "magnetic-field-strength" -> <|
          "typical-symbol" -> "H", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "amount-of-substance-concentration" -> <|
          "typical-symbol" -> "c", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "mass-concentration" -> <|
          "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "luminance" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], <||>], 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols" -> 
      Dataset[<|"dynamic-viscosity" -> <|
          "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
           "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-1\)]\)"|>, 
         "moment-of-force" -> <|
          "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
           "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "surface-tension" -> <|
          "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
           "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "angular-velocity-or-angular-frequency" -> <|
          "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
           "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "angular-acceleration" -> <|
          "name-of-coherent-derived-unit" -> "radian per second squared", 
           "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "heat-flux-density-or-irradiance" -> <|
          "name-of-coherent-derived-unit" -> "watt per square meter", 
           "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "heat-capacity-or-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
         "specific-heat-capacity-or-specific-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "specific-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
         "thermal-conductivity" -> <|
          "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
           "symbol" -> 
           "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "energy-density" -> <|
          "name-of-coherent-derived-unit" -> "joule per cubic meter", 
           "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
         "electric-field-strength" -> <|
          "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
           "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
         "electric-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "electric-flux-density-or-electric-displacement" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "permittivity" -> <|
          "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
           "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
         "permeability" -> <|
          "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
           "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
         "molar-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, 
         "molar-entropy-or-molar-heat-capacity" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "exposure(x-and-\[Gamma]-rays)" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
           "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
         "absorbed-dose-rate" -> <|
          "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
           "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
         "radiant-intensity" -> <|
          "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "radiance" -> <|
          "name-of-coherent-derived-unit" -> 
           "watt per square meter steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "catalytic-activity-concentration" -> <|
          "name-of-coherent-derived-unit" -> "katal per cubic meter", 
           "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], <||>], "SI-prefixes" -> 
      Dataset[<|"\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
           "kilo", "symbol" -> "k"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
           "mega", "symbol" -> "M"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
           "giga", "symbol" -> "G"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
           "tera", "symbol" -> "T"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
           "peta", "symbol" -> "P"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
           "exa", "symbol" -> "E"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
           "zetta", "symbol" -> "Z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
           "yotta", "symbol" -> "Y"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
           "milli", "symbol" -> "m"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
           "micro", "symbol" -> "\[Mu]"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
           "nano", "symbol" -> "n"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
           "pico", "symbol" -> "p"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
           "femto", "symbol" -> "f"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
           "atto", "symbol" -> "a"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
           "zepto", "symbol" -> "z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
           "yocto", "symbol" -> "y"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], <||>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.876395462653274*^9, 3.876395497787429*^9}},
 CellLabel->"Out[5]=",
 CellID->598577237,ExpressionUUID->"5c700c70-f771-40bd-ac5b-3df6477faef4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "@", 
  RowBox[{"ResourceObject", "[", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
       "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"],
    SelectWithContents->True], "]"}]}]], "Input",
 CellChangeTimes->{{3.8763954998858237`*^9, 3.8763955019358006`*^9}},
 CellLabel->"In[6]:=",
 CellID->144181392,ExpressionUUID->"fb3bdd33-d281-47d6-99db-ed1d69a06bbc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox["\<\" Resource Object\"\>", "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False, False, False, False, False, 
              False, False, False, False, False, False, False, False, False, 
              False, False, False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Documentation Link\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"DocumentationLink\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "DocumentationLink", "Tooltip"]& ], 
                 RowBox[{"URL", "[", 
                  
                  TemplateBox[{
                   "\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data\""},
                   "URLArgument"], "]"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Resource Locations\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ResourceLocations\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ResourceLocations", "Tooltip"]& ], 
                 InterpretationBox[
                  RowBox[{"CloudObject", "[", 
                   
                   TemplateBox[{
                    "\"https://www.wolframcloud.com/obj/burbery1/Resources/\
298/298f8d63-64c1-457a-a098-1f2cc1bab6a4\"", 
                    "https://www.wolframcloud.com/obj/burbery1/Resources/298/\
298f8d63-64c1-457a-a098-1f2cc1bab6a4"},
                    "HyperlinkURL"], "]"}],
                  CloudObject[
                  "https://www.wolframcloud.com/obj/burbery1/Resources/298/\
298f8d63-64c1-457a-a098-1f2cc1bab6a4"],
                  SelectWithContents->True]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Name\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Name", 
                   "Tooltip"]& ], "\<\"SI Brochure Data\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" UUID\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"UUID\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "UUID", 
                   "Tooltip"]& ], "\<\"298f8d63-64c1-457a-a098-1f2cc1bab6a4\"\
\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Resource Type\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ResourceType\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "ResourceType", 
                   "Tooltip"]& ], "\<\"DataResource\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Content Size\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContentSize\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ContentSize", "Tooltip"]& ], 
                 
                 TemplateBox[{
                  "4.984`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                  "Quantity"]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Description\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Description\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Description", 
                   "Tooltip"]& ], "\<\"This data contains data from the SI \
Brochure published by the BIPM\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Content Types\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContentTypes\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ContentTypes", "Tooltip"]& ], 
                 RowBox[{"{", 
                  RowBox[{"\<\"Text\"\>", ",", "\<\"Numerical Data\"\>"}], 
                  "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Categories\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Categories\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Categories", "Tooltip"]& ], 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"Mathematics\"\>", ",", "\<\"Chemistry\"\>", 
                   ",", "\<\"Engineering\"\>", 
                   ",", "\<\"Physical Sciences\"\>"}], "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Keywords\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Keywords\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Keywords", 
                   "Tooltip"]& ], "\<\"metrology\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Content Element Access Type\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContentElementAccessType\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "ContentElementAccessType", 
                   "Tooltip"]& ], "\<\"Dataset\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Content Values\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContentValues\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ContentValues", "Tooltip"]& ], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Contributor Information\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContributorInformation\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ContributorInformation", "Tooltip"]& ], 
                 RowBox[{"\[LeftAssociation]", 
                  
                  RowBox[{"\<\"ContributedBy\"\>", 
                   "\[Rule]", "\<\"Peter Cullen Burbery\"\>"}], 
                  "\[RightAssociation]"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Default Content Element\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"DefaultContentElement\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "DefaultContentElement", 
                   "Tooltip"]& ], "\<\"Dataset\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Example Notebook\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"ExampleNotebook\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ExampleNotebook", "Tooltip"]& ], 
                 InterpretationBox[
                  RowBox[{"CloudObject", "[", 
                   
                   TemplateBox[{
                    "\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data/SI Brochure \
Data-ExampleNotebook.nb\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data/SI Brochure Data-ExampleNotebook.nb"},
                    "HyperlinkURL"], "]"}],
                  CloudObject[
                  "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data/SI Brochure Data-ExampleNotebook.nb"],
                  SelectWithContents->True]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Example Notebook Data\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ExampleNotebookData\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ExampleNotebookData", "Tooltip"]& ], 
                 "Automatic"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Related Symbols\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"RelatedSymbols\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "RelatedSymbols", "Tooltip"]& ], 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"UnitSimplify\"\>", 
                   ",", "\<\"NondimensionalizationTransform\"\>"}], "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" See Also\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"SeeAlso\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "SeeAlso", 
                   "Tooltip"]& ], "\<\"PlanckUnitConversion\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Source Metadata\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"SourceMetadata\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SourceMetadata", "Tooltip"]& ], 
                 RowBox[{"\[LeftAssociation]", 
                  RowBox[{"\<\"Citation\"\>", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"TextData", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ButtonBox", "[", 
                    RowBox[{"\<\"NIST SI Brochure\"\>", ",", 
                    RowBox[{"BaseStyle", "\[Rule]", "\<\"Hyperlink\"\>"}], 
                    ",", 
                    RowBox[{"ButtonData", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"URL", "[", 
                    
                    TemplateBox[{
                    "\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/\
NIST.SP.330-2019.pdf\""},
                    "URLArgument"], "]"}], ",", "None"}], "}"}]}], ",", 
                    RowBox[{
                    "ButtonNote", 
                    "\[Rule]", \
"\<\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-2019.\
pdf\"\>"}]}], "]"}], ",", "\<\".\"\>"}], "}"}], "]"}], "}"}]}], 
                  "\[RightAssociation]"}]},
                {
                 PaneSelectorBox[{True->
                  ButtonBox[
                   PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"ContentElements\"", "InformationRowLabel", 
                    StripOnInput -> False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"ContentElements\"", "InformationRowLabel", 
                    StripOnInput -> False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Appearance->None,
                   BaseStyle->None,
                   
                   ButtonFunction:>(Part[System`InformationDump`open$$, 21] = 
                    False),
                   Evaluator->Automatic,
                   FrameMargins->0,
                   ImageMargins->0,
                   Method->"Preemptive"], False->
                  ButtonBox[
                   PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"ContentElements\"", "InformationRowLabel", 
                    StripOnInput -> False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"ContentElements\"", "InformationRowLabel", 
                    StripOnInput -> False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Appearance->None,
                   BaseStyle->None,
                   
                   ButtonFunction:>(Part[System`InformationDump`open$$, 21] = 
                    True),
                   Evaluator->Automatic,
                   FrameMargins->0,
                   ImageMargins->0,
                   Method->"Preemptive"]}, Dynamic[
                   FEPrivate`Part[System`InformationDump`open$$, 21]]], 
                 PaneSelectorBox[{True->GridBox[{
                    {"\<\"base-quantities-and-dimensions\"\>"},
                    {"\<\"base-quantities-and-units\"\>"},
                    {"\<\"coherent-derived-units-in-the-SI-expressed-terms-of-\
base-units\"\>"},
                    {"\<\"coherent-derived-units-whose-names-and-symbols-\
include-SI-coherent-derived-units-with-special-names-and-symbols\"\>"},
                    {"\<\"Dataset\"\>"},
                    {"\<\"defining-constants-of-the-SI\"\>"},
                    {"\<\"SI-prefixes\"\>"},
                    {"\<\"SI-units-with-special-names-and-symbols\"\>"},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                   },
                   BaselinePosition->{Baseline, {1, 1}},
                   DefaultBaseStyle->"Column",
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                  
                  RowBox[{"\<\"base-quantities-and-dimensions\"\>", 
                   "\[ThinSpace]", 
                   StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "8", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                   FEPrivate`Part[System`InformationDump`open$$, 21]],
                  BaselinePosition->Baseline,
                  ImageSize->Automatic]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Content Element Locations\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"ContentElementLocations\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "ContentElementLocations", "Tooltip"]& ], 
                 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]},
                {
                 TagBox[
                  TooltipBox[
                   
                   StyleBox["\<\" Information Elements\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                   "\"InformationElements\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "InformationElements", "Tooltip"]& ], 
                 RowBox[{"\[LeftAssociation]", 
                  RowBox[{
                   RowBox[{"\<\"Dataset\"\>", "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "hyperfine-transition-frequency-of-Cs" -> <|
                    "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
                    "speed-of-light-in-vacuum" -> <|
                    "numerical-value" -> 299792458, "unit" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "Planck-constant" -> <|
                    "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> 
                    "J s"|>, 
                    "elementary-charge" -> <|
                    "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> 
                    "C"|>, "Boltzmann-constant" -> <|
                    "numerical-value" -> 1.380649*^-23, "unit" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "Avogadro-constant" -> <|
                    "numerical-value" -> 6.02214076*^23, "unit" -> 
                    "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
                    "luminous-efficacy" -> <|
                    "numerical-value" -> 683, "unit" -> 
                    "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
                    "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "numerical-value" -> 
                    TypeSystem`PackageScope`AtomShape[60], "unit" -> 
                    TypeSystem`PackageScope`AtomShape[358.40000000000003`]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[0]} -> 
                    1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "numerical-value" -> 
                    TypeSystem`PackageScope`AtomShape[60], "unit" -> 
                    TypeSystem`PackageScope`AtomShape[358.40000000000003`]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], "Path" -> {}, 
                    "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 7, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["numerical-value", 
                    Style[
                    "numerical-value", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "numerical-value"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["hyperfine-transition-frequency-of-Cs", 
                    Style[
                    "hyperfine-transition-frequency-of-Cs", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader",
                     False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["9192631770"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Hz", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["speed-of-light-in-vacuum", 
                    Style[
                    "speed-of-light-in-vacuum", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{403.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["299792458"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Planck-constant", 
                    Style[
                    "Planck-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.000000000000000000000000000000000662607"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["elementary-charge", 
                    Style[
                    "elementary-charge", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.000000000000000000160218"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Boltzmann-constant", 
                    Style[
                    "Boltzmann-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.0000000000000000000000138065"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Avogadro-constant", 
                    Style[
                    "Avogadro-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["602214000000000000000000."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminous-efficacy", 
                    Style[
                    "luminous-efficacy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["683"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1069., {114.43359379926696`, 118.56640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1069., {114.43359379926696`, 118.56640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   RowBox[{"\<\"defining-constants-of-the-SI\"\>", "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "hyperfine-transition-frequency-of-Cs" -> <|
                    "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
                    "speed-of-light-in-vacuum" -> <|
                    "numerical-value" -> 299792458, "unit" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "Planck-constant" -> <|
                    "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> 
                    "J s"|>, 
                    "elementary-charge" -> <|
                    "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> 
                    "C"|>, "Boltzmann-constant" -> <|
                    "numerical-value" -> 1.380649*^-23, "unit" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "Avogadro-constant" -> <|
                    "numerical-value" -> 6.02214076*^23, "unit" -> 
                    "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
                    "luminous-efficacy" -> <|
                    "numerical-value" -> 683, "unit" -> 
                    "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
                    "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[1]} -> 
                    1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "numerical-value" -> 
                    TypeSystem`PackageScope`AtomShape[60], "unit" -> 
                    TypeSystem`PackageScope`AtomShape[358.40000000000003`]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[1]} -> 
                    1, {All, "numerical-value"} -> 1, {All, "unit"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "numerical-value" -> 
                    TypeSystem`PackageScope`AtomShape[60], "unit" -> 
                    TypeSystem`PackageScope`AtomShape[358.40000000000003`]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], "Path" -> {}, 
                    "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 7, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["numerical-value", 
                    Style[
                    "numerical-value", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "numerical-value"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "numerical-value"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["hyperfine-transition-frequency-of-Cs", 
                    Style[
                    "hyperfine-transition-frequency-of-Cs", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"]}, "RowHeader",
                     False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["9192631770"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Hz", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["hyperfine-transition-frequency-of-Cs"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["speed-of-light-in-vacuum", 
                    Style[
                    "speed-of-light-in-vacuum", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-of-light-in-vacuum"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{403.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["299792458"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-of-light-in-vacuum"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Planck-constant", 
                    Style[
                    "Planck-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Planck-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.000000000000000000000000000000000662607"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Planck-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["elementary-charge", 
                    Style[
                    "elementary-charge", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["elementary-charge"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.000000000000000000160218"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["elementary-charge"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Boltzmann-constant", 
                    Style[
                    "Boltzmann-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Boltzmann-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["0.0000000000000000000000138065"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Boltzmann-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Avogadro-constant", 
                    Style[
                    "Avogadro-constant", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Avogadro-constant"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["602214000000000000000000."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Avogadro-constant"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminous-efficacy", 
                    Style[
                    "luminous-efficacy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-efficacy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    RawBoxes["683"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["numerical-value"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-efficacy"], 
                    Key["unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1069., {114.43359379926696`, 118.56640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1069., {114.43359379926696`, 118.56640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   RowBox[{"\<\"base-quantities-and-units\"\>", "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "time" -> <|
                    "quantity-name" -> "time", "typical-quantity-symbol" -> 
                    "t", "unit-name" -> "second", "unit-symbol" -> "s"|>, 
                    "length" -> <|
                    "quantity-name" -> "length", "typical-quantity-symbol" -> 
                    "l", "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
                    "mass" -> <|
                    "quantity-name" -> "mass", "typical-quantity-symbol" -> 
                    "l", "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
                    "electric-current" -> <|
                    "quantity-name" -> "electric-current", 
                    "typical-quantity-symbol" -> "i", "unit-name" -> "ampere",
                     "unit-symbol" -> "A"|>, 
                    "thermodynamic-temperature" -> <|
                    "quantity-name" -> "thermodynamic-temperature", 
                    "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin",
                     "unit-symbol" -> "K"|>, 
                    "amount-of-substance" -> <|
                    "quantity-name" -> "amount-of-substance", 
                    "typical-quantity-symbol" -> "n", "unit-name" -> "mole", 
                    "unit-symbol" -> "mol"|>, 
                    "luminous-intensity" -> <|
                    "quantity-name" -> "luminous-intensity", 
                    "typical-quantity-symbol" -> 
                    "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> 
                    "candela", "unit-symbol" -> "cd"|>|>, "AllowEmbedding" -> 
                    True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, "quantity-name"} -> 
                    1, {All, "typical-quantity-symbol"} -> 
                    1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[280.], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "quantity-name" -> 
                    TypeSystem`PackageScope`AtomShape[280.], 
                    "typical-quantity-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "unit-name" -> 
                    TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                    "unit-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 4, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "quantity-name", "typical-quantity-symbol", "unit-name", 
                    "unit-symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, "quantity-name"} -> 
                    1, {All, "typical-quantity-symbol"} -> 
                    1, {All, "unit-name"} -> 1, {All, "unit-symbol"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[280.], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "quantity-name" -> 
                    TypeSystem`PackageScope`AtomShape[280.], 
                    "typical-quantity-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "unit-name" -> 
                    TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                    "unit-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 4, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "quantity-name", "typical-quantity-symbol", "unit-name", 
                    "unit-symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], "Path" -> {}, 
                    "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 4, 
                    "DataRowCount" -> 7, "DataColumnCount" -> 4, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["quantity-name", 
                    Style[
                    "quantity-name", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "quantity-name"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "quantity-name"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["typical-quantity-symbol", 
                    Style[
                    "typical-quantity-symbol", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-quantity-symbol"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "typical-quantity-symbol"}, "ColumnHeader", True], 
                    "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit-name", 
                    Style[
                    "unit-name", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-name"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit-name"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit-symbol", 
                    Style[
                    "unit-symbol", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-symbol"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit-symbol"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["time", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["t", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["second", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["length", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["l", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["mass", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["l", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kilogram", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["electric-current", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["i", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["ampere", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["thermodynamic-temperature", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["T", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kelvin", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["K", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["amount-of-substance", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["n", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["mole", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["mol", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["luminous-intensity", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["quantity-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["typical-quantity-symbol"]}, "Item", False], "Mouse"],
                     ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["candela", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["cd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["unit-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1056., {114.43359379926696`, 118.56640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1056., {114.43359379926696`, 118.56640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   
                   RowBox[{"\<\"base-quantities-and-dimensions\"\>", 
                    "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "time" -> <|
                    "typical-symbol-for-quantity" -> "t", 
                    "symbol-for-dimension" -> "T"|>, 
                    "length" -> <|
                    "typical-symbol-for-quantity" -> "l", 
                    "symbol-for-dimension" -> "L"|>, 
                    "mass" -> <|
                    "typical-symbol-for-quantity" -> "m", 
                    "symbol-for-dimension" -> "M"|>, 
                    "electric-current" -> <|
                    "typical-symbol-for-quantity" -> "i", 
                    "symbol-for-dimension" -> "I"|>, 
                    "thermodynamic-temperature" -> <|
                    "typical-symbol-for-quantity" -> "T", 
                    "symbol-for-dimension" -> "\[CapitalTheta]"|>, 
                    "amount-of-substance" -> <|
                    "typical-symbol-for-quantity" -> "n", 
                    "symbol-for-dimension" -> "N"|>, 
                    "luminous-intensity" -> <|
                    "typical-symbol-for-quantity" -> 
                    "\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                    "symbol-for-dimension" -> "J"|>|>, "AllowEmbedding" -> 
                    True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[3]} -> 
                    1, {All, "typical-symbol-for-quantity"} -> 
                    1, {All, "symbol-for-dimension"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[280.], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "typical-symbol-for-quantity" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "symbol-for-dimension" -> 
                    TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol-for-quantity", "symbol-for-dimension"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[3]} -> 
                    1, {All, "typical-symbol-for-quantity"} -> 
                    1, {All, "symbol-for-dimension"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[280.], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "typical-symbol-for-quantity" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "symbol-for-dimension" -> 
                    TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 2, {All}]]], 7, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol-for-quantity", "symbol-for-dimension"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], "Path" -> {}, 
                    "DisplayedRowCount" -> 7, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 7, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["typical-symbol-for-quantity", 
                    Style[
                    "typical-symbol-for-quantity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-symbol-for-quantity"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "typical-symbol-for-quantity"}, "ColumnHeader", 
                    True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["symbol-for-dimension", 
                    Style[
                    "symbol-for-dimension", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol-for-dimension"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "symbol-for-dimension"}, "ColumnHeader", True], 
                    "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["time", 
                    Style[
                    "time", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["t", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["T", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["time"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["length", 
                    Style[
                    "length", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["l", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["L", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["length"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["mass", 
                    Style[
                    "mass", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["M", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-current", 
                    Style[
                    "electric-current", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-current"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["i", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["I", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-current"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["thermodynamic-temperature", 
                    Style[
                    "thermodynamic-temperature", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermodynamic-temperature"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["T", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\[CapitalTheta]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermodynamic-temperature"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["amount-of-substance", 
                    Style[
                    "amount-of-substance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["n", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["N", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminous-intensity", 
                    Style[
                    "luminous-intensity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-intensity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["typical-symbol-for-quantity"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{291.20000000000005`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-intensity"], 
                    Key["symbol-for-dimension"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    734., {114.43359379926696`, 118.56640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    734., {114.43359379926696`, 118.56640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   
                   RowBox[{"\<\"SI-units-with-special-names-and-symbols\"\>", 
                    "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "plane-angle" -> <|
                    "special-name-of-unit" -> "radian", 
                    "unit-expressed-terms-of-base-units" -> "rad=m/m", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "solid-angle" -> <|
                    "special-name-of-unit" -> "steradian", 
                    "unit-expressed-terms-of-base-units" -> 
                    "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "frequency" -> <|
                    "special-name-of-unit" -> "hertz", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "force" -> <|
                    "special-name-of-unit" -> "newton", 
                    "unit-expressed-terms-of-base-units" -> 
                    "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "pressure-or-stress" -> <|
                    "special-name-of-unit" -> "pascal", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "energy-or-work-or-amount-of-heat" -> <|
                    "special-name-of-unit" -> "joule", 
                    "unit-expressed-terms-of-base-units" -> 
                    "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
                    "power-or-radiant-flux" -> <|
                    "special-name-of-unit" -> "watt", 
                    "unit-expressed-terms-of-base-units" -> 
                    "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
                    "electric-charge" -> <|
                    "special-name-of-unit" -> "coulomb", 
                    "unit-expressed-terms-of-base-units" -> "C=A s", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "electric-potential-difference" -> <|
                    "special-name-of-unit" -> "volt", 
                    "unit-expressed-terms-of-base-units" -> 
                    "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
                    "capacitance" -> <|
                    "special-name-of-unit" -> "farad", 
                    "unit-expressed-terms-of-base-units" -> 
                    "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
                    "electric-resistance" -> <|
                    "special-name-of-unit" -> "ohm", 
                    "unit-expressed-terms-of-base-units" -> 
                    "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
                    "electric-conductance" -> <|
                    "special-name-of-unit" -> "siemens", 
                    "unit-expressed-terms-of-base-units" -> 
                    "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
                    "magnetic-flux" -> <|
                    "special-name-of-unit" -> "weber", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
                    "magnetic-flux-density" -> <|
                    "special-name-of-unit" -> "tesla", 
                    "unit-expressed-terms-of-base-units" -> 
                    "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "inductance" -> <|
                    "special-name-of-unit" -> "henry", 
                    "unit-expressed-terms-of-base-units" -> 
                    "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
                    "Celsius-temperature" -> <|
                    "special-name-of-unit" -> "degree Celsius", 
                    "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "luminous-flux" -> <|
                    "special-name-of-unit" -> "lumen", 
                    "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "illuminance" -> <|
                    "special-name-of-unit" -> "lux", 
                    "unit-expressed-terms-of-base-units" -> 
                    "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "activity-referred-to-a-radionuclide" -> <|
                    "special-name-of-unit" -> "becquerel", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "absorbed-dose-or-kerma" -> <|
                    "special-name-of-unit" -> "gray", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
                    "dose-equivalent" -> <|
                    "special-name-of-unit" -> "sievert", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
                    "catalytic-activity" -> <|
                    "special-name-of-unit" -> "katal", 
                    "unit-expressed-terms-of-base-units" -> 
                    "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
                    "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, "special-name-of-unit"} -> 
                    1, {All, "unit-expressed-terms-of-base-units"} -> 
                    1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "special-name-of-unit" -> 
                    TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                    "unit-expressed-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.], 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
                    DirectedInfinity[1], 3, {All}]]], 20, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "special-name-of-unit", 
                    "unit-expressed-terms-of-base-units", 
                    "unit-expressed-in-terms-of-other-SI-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 22], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, "special-name-of-unit"} -> 
                    1, {All, "unit-expressed-terms-of-base-units"} -> 
                    1, {All, "unit-expressed-in-terms-of-other-SI-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[392.00000000000006`], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`RowShape[<|
                    "special-name-of-unit" -> 
                    TypeSystem`PackageScope`AtomShape[100.80000000000001`], 
                    "unit-expressed-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.], 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>], 
                    DirectedInfinity[1], 3, {All}]]], 20, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "special-name-of-unit", 
                    "unit-expressed-terms-of-base-units", 
                    "unit-expressed-in-terms-of-other-SI-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 22], "Path" -> {}, 
                    "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, 
                    "DataRowCount" -> 22, "DataColumnCount" -> 3, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["special-name-of-unit", 
                    Style[
                    "special-name-of-unit", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "special-name-of-unit"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "special-name-of-unit"}, "ColumnHeader", True], 
                    "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit-expressed-terms-of-base-units", 
                    Style[
                    "unit-expressed-terms-of-base-units", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-terms-of-base-units"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit-expressed-terms-of-base-units"}, 
                    "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["unit-expressed-in-terms-of-other-SI-units", 
                    Style[
                    "unit-expressed-in-terms-of-other-SI-units", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unit-expressed-in-terms-of-other-SI-units"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unit-expressed-in-terms-of-other-SI-units"}, 
                    "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["plane-angle", 
                    Style[
                    "plane-angle", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["plane-angle"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["radian", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["rad=m/m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["plane-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["solid-angle", 
                    Style[
                    "solid-angle", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["solid-angle"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["steradian", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["solid-angle"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["frequency", 
                    Style[
                    "frequency", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["frequency"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["hertz", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["frequency"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["force", 
                    Style[
                    "force", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["force"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["newton", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["force"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["pressure-or-stress", 
                    Style[
                    "pressure-or-stress", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pressure-or-stress"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["pascal", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["pressure-or-stress"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["energy-or-work-or-amount-of-heat", 
                    Style[
                    "energy-or-work-or-amount-of-heat", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-or-work-or-amount-of-heat"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"]}, "RowHeader", 
                    False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["N m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-or-work-or-amount-of-heat"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["power-or-radiant-flux", 
                    Style[
                    "power-or-radiant-flux", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["power-or-radiant-flux"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["watt", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J/s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["power-or-radiant-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-charge", 
                    Style[
                    "electric-charge", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["coulomb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C=A s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-potential-difference", 
                    Style[
                    "electric-potential-difference", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-potential-difference"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"]}, "RowHeader", 
                    False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["volt", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["W/A", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-potential-difference"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["capacitance", 
                    Style[
                    "capacitance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["capacitance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["farad", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C/V", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["capacitance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-resistance", 
                    Style[
                    "electric-resistance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-resistance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["ohm", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["V/A", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-resistance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-conductance", 
                    Style[
                    "electric-conductance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-conductance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["siemens", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A/V", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-conductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["magnetic-flux", 
                    Style[
                    "magnetic-flux", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["weber", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["V s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["magnetic-flux-density", 
                    Style[
                    "magnetic-flux-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-flux-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["tesla", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-flux-density"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["inductance", 
                    Style[
                    "inductance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["inductance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["henry", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Wb/A", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["inductance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Celsius-temperature", 
                    Style[
                    "Celsius-temperature", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Celsius-temperature"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["degree Celsius", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\[Degree]C=K", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Celsius-temperature"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminous-flux", 
                    Style[
                    "luminous-flux", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminous-flux"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["lumen", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["lm=cd sr", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminous-flux"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["illuminance", 
                    Style[
                    "illuminance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["illuminance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["lux", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["illuminance"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["activity-referred-to-a-radionuclide", 
                    Style[
                    "activity-referred-to-a-radionuclide", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["activity-referred-to-a-radionuclide"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"]}, "RowHeader", 
                    False], "Mouse"], 
                    ImageSize -> {{392.00000000000006`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["becquerel", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["activity-referred-to-a-radionuclide"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["absorbed-dose-or-kerma", 
                    Style[
                    "absorbed-dose-or-kerma", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["absorbed-dose-or-kerma"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{392.00000000000006`, Full}, 
                    Automatic}, ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["gray", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["special-name-of-unit"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    
                    "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-terms-of-base-units"]}, "Item", 
                    False], "Mouse"], ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J/kg", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["absorbed-dose-or-kerma"], 
                    Key["unit-expressed-in-terms-of-other-SI-units"]}, "Item",
                     False], "Mouse"], 
                    ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Deploy[
                    Pane[
                    Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                    ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                    RGBColor[0.9764705882352941, 0.9764705882352941, 
                    0.9764705882352941], Alignment -> {Left, Top}], 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1402., {300.433593799267, 304.566406200733}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1402., {300.433593799267, 304.566406200733}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   
                   RowBox[{"\<\"coherent-derived-units-in-the-SI-expressed-\
terms-of-base-units\"\>", "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "area" -> <|
                    "typical-symbol" -> "A", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "volume" -> <|
                    "typical-symbol" -> "V", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
                    "speed-or-velocity" -> <|
                    "typical-symbol" -> "v", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "acceleration" -> <|
                    "typical-symbol" -> "a", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "wavenumber" -> <|
                    "typical-symbol" -> "\[Sigma]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
                    "density-or-mass-density" -> <|
                    "typical-symbol" -> "\[Rho]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "surface-density" -> <|
                    "typical-symbol" -> 
                    "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "specific-volume" -> <|
                    "typical-symbol" -> "\[Nu]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
                    "current-density" -> <|
                    "typical-symbol" -> "j", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "magnetic-field-strength" -> <|
                    "typical-symbol" -> "H", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
                    "amount-of-substance-concentration" -> <|
                    "typical-symbol" -> "c", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "mass-concentration" -> <|
                    "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "luminance" -> <|
                    "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
                    "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[5]} -> 
                    1, {All, "typical-symbol"} -> 
                    1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[257.6], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "typical-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All}]]], 13, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 13], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[5]} -> 
                    1, {All, "typical-symbol"} -> 
                    1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[257.6], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "typical-symbol" -> 
                    TypeSystem`PackageScope`AtomShape[291.20000000000005`], 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All}]]], 13, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 13], "Path" -> {}, 
                    "DisplayedRowCount" -> 13, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 13, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["typical-symbol", 
                    Style[
                    "typical-symbol", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "typical-symbol"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "typical-symbol"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["area", 
                    Style[
                    "area", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["area"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["area"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["A", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["area"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["area"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["volume", 
                    Style[
                    "volume", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["volume"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["volume"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["V", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["volume"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(m\), \(3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["volume"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["speed-or-velocity", 
                    Style[
                    "speed-or-velocity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["speed-or-velocity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-or-velocity"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["v", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-or-velocity"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["speed-or-velocity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["acceleration", 
                    Style[
                    "acceleration", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["acceleration"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acceleration"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acceleration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acceleration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["wavenumber", 
                    Style[
                    "wavenumber", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["wavenumber"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["wavenumber"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\[Sigma]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["wavenumber"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["wavenumber"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["density-or-mass-density", 
                    Style[
                    "density-or-mass-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["density-or-mass-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["density-or-mass-density"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\[Rho]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["density-or-mass-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["density-or-mass-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["surface-density", 
                    Style[
                    "surface-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-density"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["specific-volume", 
                    Style[
                    "specific-volume", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-volume"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-volume"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\[Nu]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-volume"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-volume"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["current-density", 
                    Style[
                    "current-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["current-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["current-density"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["j", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["current-density"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["current-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["magnetic-field-strength", 
                    Style[
                    "magnetic-field-strength", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["magnetic-field-strength"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-field-strength"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["H", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-field-strength"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["magnetic-field-strength"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["amount-of-substance-concentration", 
                    Style[
                    "amount-of-substance-concentration", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["amount-of-substance-concentration"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance-concentration"]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{257.6, Full}, Automatic},
                     ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance-concentration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["amount-of-substance-concentration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["mass-concentration", 
                    Style[
                    "mass-concentration", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mass-concentration"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass-concentration"]}, "RowHeader", False], "Mouse"],
                     ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\[Rho]-or-\[Gamma]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass-concentration"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["mass-concentration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["luminance", 
                    Style[
                    "luminance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["luminance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminance"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{257.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminance"], 
                    Key["typical-symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["luminance"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1134., {195.43359379926696`, 199.56640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1134., {195.43359379926696`, 199.56640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   
                   RowBox[{"\<\"coherent-derived-units-whose-names-and-\
symbols-include-SI-coherent-derived-units-with-special-names-and-symbols\"\>",
                     "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "dynamic-viscosity" -> <|
                    "name-of-coherent-derived-unit" -> "pascal second", 
                    "symbol" -> "Pa s", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "moment-of-force" -> <|
                    "name-of-coherent-derived-unit" -> "newton meter", 
                    "symbol" -> "N m", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "surface-tension" -> <|
                    "name-of-coherent-derived-unit" -> "newton per meter", 
                    "symbol" -> "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "angular-velocity-or-angular-frequency" -> <|
                    "name-of-coherent-derived-unit" -> "radian per second", 
                    "symbol" -> "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "angular-acceleration" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "radian per second squared", "symbol" -> 
                    "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "heat-flux-density-or-irradiance" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per square meter", "symbol" -> 
                    "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "heat-capacity-or-entropy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per kelvin", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, "specific-heat-capacity-or-specific-entropy" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per kilogram kelvin", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, "specific-energy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per kilogram", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "thermal-conductivity" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per meter kelvin", "symbol" -> 
                    "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "energy-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per cubic meter", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "electric-field-strength" -> <|
                    "name-of-coherent-derived-unit" -> "volt per meter", 
                    "symbol" -> "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
                    "electric-charge-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per cubic meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "surface-charge-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per square meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "electric-flux-density-or-electric-displacement" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per square meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "permittivity" -> <|
                    "name-of-coherent-derived-unit" -> "farad per meter", 
                    "symbol" -> "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
                    "permeability" -> <|
                    "name-of-coherent-derived-unit" -> "henry per meter", 
                    "symbol" -> "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
                    "molar-energy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per mole", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, "molar-entropy-or-molar-heat-capacity" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per mole kelvin", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "exposure(x-and-\[Gamma]-rays)" -> <|
                    "name-of-coherent-derived-unit" -> "coulomb per kilogram",
                     "symbol" -> "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
                    "absorbed-dose-rate" -> <|
                    "name-of-coherent-derived-unit" -> "gray per second", 
                    "symbol" -> "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "radiant-intensity" -> <|
                    "name-of-coherent-derived-unit" -> "watt per steradian", 
                    "symbol" -> "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "radiance" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per square meter steradian", "symbol" -> 
                    "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "catalytic-activity-concentration" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "katal per cubic meter", "symbol" -> 
                    "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, "AllowEmbedding" -> True, 
                    "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, "name-of-coherent-derived-unit"} -> 
                    1, {All, "symbol"} -> 
                    1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[515.2], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "name-of-coherent-derived-unit" -> 
                    TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
                    TypeSystem`PackageScope`AtomShape[560.], 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 3, {All}]]], 20, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "name-of-coherent-derived-unit", "symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 24], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[6]} -> 
                    1, {All, "name-of-coherent-derived-unit"} -> 
                    1, {All, "symbol"} -> 
                    1, {All, "derived-unit-expressed-in-terms-of-base-units"} -> 
                    1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[515.2], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "name-of-coherent-derived-unit" -> 
                    TypeSystem`PackageScope`AtomShape[280.], "symbol" -> 
                    TypeSystem`PackageScope`AtomShape[560.], 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 3, {All}]]], 20, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "name-of-coherent-derived-unit", "symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 24], "Path" -> {}, 
                    "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, 
                    "DataRowCount" -> 24, "DataColumnCount" -> 3, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["name-of-coherent-derived-unit", 
                    Style[
                    "name-of-coherent-derived-unit", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name-of-coherent-derived-unit"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "name-of-coherent-derived-unit"}, "ColumnHeader", 
                    True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["derived-unit-expressed-in-terms-of-base-units", 
                    Style[
                    "derived-unit-expressed-in-terms-of-base-units", 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "derived-unit-expressed-in-terms-of-base-units"}, 
                    "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["dynamic-viscosity", 
                    Style[
                    "dynamic-viscosity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic-viscosity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["pascal second", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Pa s", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic-viscosity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["moment-of-force", 
                    Style[
                    "moment-of-force", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["moment-of-force"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["newton meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["N m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["moment-of-force"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["surface-tension", 
                    Style[
                    "surface-tension", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-tension"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["newton per meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-tension"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["angular-velocity-or-angular-frequency", 
                    Style[
                    "angular-velocity-or-angular-frequency", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-velocity-or-angular-frequency"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["radian per second", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-velocity-or-angular-frequency"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["angular-acceleration", 
                    Style[
                    "angular-acceleration", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["angular-acceleration"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["radian per second squared", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["angular-acceleration"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["heat-flux-density-or-irradiance", 
                    Style[
                    "heat-flux-density-or-irradiance", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-flux-density-or-irradiance"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic},
                     ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["watt per square meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-flux-density-or-irradiance"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["heat-capacity-or-entropy", 
                    Style[
                    "heat-capacity-or-entropy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["heat-capacity-or-entropy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per kelvin", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["heat-capacity-or-entropy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["specific-heat-capacity-or-specific-entropy", 
                    Style[
                    "specific-heat-capacity-or-specific-entropy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per kilogram kelvin", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-heat-capacity-or-specific-entropy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["specific-energy", 
                    Style[
                    "specific-energy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["specific-energy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per kilogram", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["specific-energy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["thermal-conductivity", 
                    Style[
                    "thermal-conductivity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["thermal-conductivity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["watt per meter kelvin", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["thermal-conductivity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["energy-density", 
                    Style["energy-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["energy-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per cubic meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["energy-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-field-strength", 
                    Style[
                    "electric-field-strength", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-field-strength"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["volt per meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-field-strength"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["electric-charge-density", 
                    Style[
                    "electric-charge-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-charge-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["coulomb per cubic meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-charge-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["surface-charge-density", 
                    Style[
                    "surface-charge-density", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["surface-charge-density"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"]}, "RowHeader", False], 
                    "Mouse"], ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["coulomb per square meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["surface-charge-density"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "electric-flux-density-or-electric-displacement", 
                    Style[
                    "electric-flux-density-or-electric-displacement", 
                    FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                    1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["coulomb per square meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["electric-flux-density-or-electric-displacement"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["permittivity", 
                    Style[
                    "permittivity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permittivity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["farad per meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permittivity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["permeability", 
                    Style[
                    "permeability", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["permeability"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["henry per meter", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["permeability"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["molar-energy", 
                    Style[
                    "molar-energy", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-energy"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per mole", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-energy"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["molar-entropy-or-molar-heat-capacity", 
                    Style[
                    "molar-entropy-or-molar-heat-capacity", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"]}, "RowHeader",
                     False], "Mouse"], 
                    ImageSize -> {{515.2, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["joule per mole kelvin", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["molar-entropy-or-molar-heat-capacity"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["exposure(x-and-\[Gamma]-rays)", 
                    Style[
                    "exposure(x-and-\[Gamma]-rays)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"]}, "RowHeader", 
                    False], "Mouse"], ImageSize -> {{515.2, Full}, Automatic},
                     ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["coulomb per kilogram", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["name-of-coherent-derived-unit"]}, "Item", False], 
                    "Mouse"], ImageSize -> {{280., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["exposure(x-and-\[Gamma]-rays)"], 
                    Key["derived-unit-expressed-in-terms-of-base-units"]}, 
                    "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Deploy[
                    Pane[
                    Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 24, 1], {1, 24 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[24, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 24, 1], {1, 24 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                    ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                    RGBColor[0.9764705882352941, 0.9764705882352941, 
                    0.9764705882352941], Alignment -> {Left, Top}], 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    1967., {300.433593799267, 304.566406200733}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    1967., {300.433593799267, 304.566406200733}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}], ",", 
                   RowBox[{"\<\"SI-prefixes\"\>", "\[Rule]", 
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    "name" -> "kilo", "symbol" -> "k"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    "name" -> "mega", "symbol" -> "M"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    "name" -> "giga", "symbol" -> "G"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    "name" -> "tera", "symbol" -> "T"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    "name" -> "peta", "symbol" -> "P"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    "name" -> "exa", "symbol" -> "E"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    "name" -> "zetta", "symbol" -> "Z"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    "name" -> "yotta", "symbol" -> "Y"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    "name" -> "milli", "symbol" -> "m"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    "name" -> "micro", "symbol" -> "\[Mu]"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    "name" -> "nano", "symbol" -> "n"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    "name" -> "pico", "symbol" -> "p"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    "name" -> "femto", "symbol" -> "f"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    "name" -> "atto", "symbol" -> "a"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    "name" -> "zepto", "symbol" -> "z"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    "name" -> "yocto", "symbol" -> "y"|>|>, "AllowEmbedding" -> 
                    True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[7]} -> 
                    1, {All, "factor"} -> 1, {All, "name"} -> 
                    1, {All, "symbol"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "factor" -> TypeSystem`PackageScope`AtomShape[
                    347.20000000000005`], "name" -> 
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    "symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 3, {All}]]], 16, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"factor", "name", "symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 16], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, 
                    TypeSystem`PackageScope`KeyDummy[7]} -> 
                    1, {All, "factor"} -> 1, {All, "name"} -> 
                    1, {All, "symbol"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "factor" -> TypeSystem`PackageScope`AtomShape[
                    347.20000000000005`], "name" -> 
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    "symbol" -> TypeSystem`PackageScope`AtomShape[33.6]|>], 
                    DirectedInfinity[1], 3, {All}]]], 16, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"factor", "name", "symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 16], "Path" -> {}, 
                    "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 3, 
                    "DataRowCount" -> 16, "DataColumnCount" -> 3, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["factor", 
                    Style[
                    "factor", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "factor"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "factor"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "name"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "symbol"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["kilo", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["k", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["mega", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["M", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["giga", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["G", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["tera", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["T", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["peta", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["P", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["exa", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["E", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["zetta", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Z", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["yotta", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["Y", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["milli", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["m", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["micro", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["\[Mu]", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["nano", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["n", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["pico", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["p", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["femto", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["atto", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["zepto", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["z", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    Style[
                    "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 
                    "RowHeader", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["factor"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["yocto", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["name"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["y", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                    Key["symbol"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{33.6, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
 = Null}, 
                    DynamicWrapperBox[
                    DynamicBox[ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm],
                    
                    ImageSizeCache->{
                    827., {235.93359379926696`, 240.06640620073304`}},
                    
                    TrackedSymbols:>{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[],
                    
                    ImageSizeCache->{
                    827., {235.93359379926696`, 240.06640620073304`}}],
                    BaseStyle->{LineBreakWithin -> False},
                    DynamicModuleValues:>{},
                    
                    Initialization:>(
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]),
                    
                    UnsavedVariables:>{
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
                    Deploy,
                    DefaultBaseStyle->"Deploy"],
                    Dataset`InterpretDataset[1],
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False]}]}], "\[RightAssociation]"}]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "DocumentationLink" -> 
    URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"], "ResourceLocations" -> {
      CloudObject[
      "https://www.wolframcloud.com/obj/burbery1/Resources/298/298f8d63-64c1-\
457a-a098-1f2cc1bab6a4"]}, "Name" -> "SI Brochure Data", "UUID" -> 
    "298f8d63-64c1-457a-a098-1f2cc1bab6a4", "RepositoryLocation" -> None, 
    "ResourceType" -> "DataResource", "ContentSize" -> 
    Quantity[4.984, "Kilobytes"], "Version" -> None, "Description" -> 
    "This data contains data from the SI Brochure published by the BIPM", 
    "ContentTypes" -> {"Text", "Numerical Data"}, 
    "Categories" -> {
     "Mathematics", "Chemistry", "Engineering", "Physical Sciences"}, 
    "Keywords" -> {"metrology"}, "ContentElementAccessType" -> "Dataset", 
    "ContentValues" -> <||>, 
    "ContributorInformation" -> <|"ContributedBy" -> "Peter Cullen Burbery"|>,
     "DefaultContentElement" -> "Dataset", "ExampleNotebook" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data/SI Brochure Data-ExampleNotebook.nb"], "ExampleNotebookData" -> 
    Automatic, 
    "RelatedSymbols" -> {"UnitSimplify", "NondimensionalizationTransform"}, 
    "SeeAlso" -> {"PlanckUnitConversion"}, "SourceMetadata" -> <|"Citation" -> {
        TextData[{
          ButtonBox["NIST SI Brochure", BaseStyle -> "Hyperlink", ButtonData -> {
             URL[
             "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.\
330-2019.pdf"], None}, ButtonNote -> 
           "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], "."}]}|>, 
    "ContentElements" -> {
     "base-quantities-and-dimensions", "base-quantities-and-units", 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units", 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols", "Dataset", 
      "defining-constants-of-the-SI", "SI-prefixes", 
      "SI-units-with-special-names-and-symbols"}, 
    "ContentElementLocations" -> <||>, 
    "InformationElements" -> <|
     "Dataset" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "defining-constants-of-the-SI" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], "base-quantities-and-units" -> 
      Dataset[<|"time" -> <|
          "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
           "unit-name" -> "second", "unit-symbol" -> "s"|>, 
         "length" -> <|
          "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
         "mass" -> <|
          "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
         "electric-current" -> <|
          "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
           "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
         "thermodynamic-temperature" -> <|
          "quantity-name" -> "thermodynamic-temperature", 
           "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
           "unit-symbol" -> "K"|>, 
         "amount-of-substance" -> <|
          "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
           "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
         "luminous-intensity" -> <|
          "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
           "unit-symbol" -> "cd"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "base-quantities-and-dimensions" -> 
      Dataset[<|"time" -> <|
          "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
           "T"|>, "length" -> <|
          "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
           "L"|>, "mass" -> <|
          "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
           "M"|>, "electric-current" -> <|
          "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
           "I"|>, "thermodynamic-temperature" -> <|
          "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
           "\[CapitalTheta]"|>, 
         "amount-of-substance" -> <|
          "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
           "N"|>, "luminous-intensity" -> <|
          "typical-symbol-for-quantity" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
           "J"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "SI-units-with-special-names-and-symbols" -> 
      Dataset[<|"plane-angle" -> <|
          "special-name-of-unit" -> "radian", 
           "unit-expressed-terms-of-base-units" -> "rad=m/m", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "solid-angle" -> <|
          "special-name-of-unit" -> "steradian", 
           "unit-expressed-terms-of-base-units" -> 
           "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "frequency" -> <|
          "special-name-of-unit" -> "hertz", 
           "unit-expressed-terms-of-base-units" -> 
           "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "force" -> <|
          "special-name-of-unit" -> "newton", 
           "unit-expressed-terms-of-base-units" -> 
           "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "pressure-or-stress" -> <|
          "special-name-of-unit" -> "pascal", 
           "unit-expressed-terms-of-base-units" -> 
           "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "energy-or-work-or-amount-of-heat" -> <|
          "special-name-of-unit" -> "joule", 
           "unit-expressed-terms-of-base-units" -> 
           "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
         "power-or-radiant-flux" -> <|
          "special-name-of-unit" -> "watt", 
           "unit-expressed-terms-of-base-units" -> 
           "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
         "electric-charge" -> <|
          "special-name-of-unit" -> "coulomb", 
           "unit-expressed-terms-of-base-units" -> "C=A s", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "electric-potential-difference" -> <|
          "special-name-of-unit" -> "volt", 
           "unit-expressed-terms-of-base-units" -> 
           "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
         "capacitance" -> <|
          "special-name-of-unit" -> "farad", 
           "unit-expressed-terms-of-base-units" -> 
           "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
         "electric-resistance" -> <|
          "special-name-of-unit" -> "ohm", 
           "unit-expressed-terms-of-base-units" -> 
           "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
         "electric-conductance" -> <|
          "special-name-of-unit" -> "siemens", 
           "unit-expressed-terms-of-base-units" -> 
           "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
         "magnetic-flux" -> <|
          "special-name-of-unit" -> "weber", 
           "unit-expressed-terms-of-base-units" -> 
           "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
         "magnetic-flux-density" -> <|
          "special-name-of-unit" -> "tesla", 
           "unit-expressed-terms-of-base-units" -> 
           "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "inductance" -> <|
          "special-name-of-unit" -> "henry", 
           "unit-expressed-terms-of-base-units" -> 
           "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
         "Celsius-temperature" -> <|
          "special-name-of-unit" -> "degree Celsius", 
           "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "luminous-flux" -> <|
          "special-name-of-unit" -> "lumen", 
           "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "illuminance" -> <|
          "special-name-of-unit" -> "lux", 
           "unit-expressed-terms-of-base-units" -> 
           "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "activity-referred-to-a-radionuclide" -> <|
          "special-name-of-unit" -> "becquerel", 
           "unit-expressed-terms-of-base-units" -> 
           "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "absorbed-dose-or-kerma" -> <|
          "special-name-of-unit" -> "gray", 
           "unit-expressed-terms-of-base-units" -> 
           "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "dose-equivalent" -> <|
          "special-name-of-unit" -> "sievert", 
           "unit-expressed-terms-of-base-units" -> 
           "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "catalytic-activity" -> <|
          "special-name-of-unit" -> "katal", 
           "unit-expressed-terms-of-base-units" -> 
           "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], <||>], 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units" -> 
      Dataset[<|"area" -> <|
          "typical-symbol" -> "A", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "volume" -> <|
          "typical-symbol" -> "V", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
         "speed-or-velocity" -> <|
          "typical-symbol" -> "v", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "acceleration" -> <|
          "typical-symbol" -> "a", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "wavenumber" -> <|
          "typical-symbol" -> "\[Sigma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "density-or-mass-density" -> <|
          "typical-symbol" -> "\[Rho]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-density" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "specific-volume" -> <|
          "typical-symbol" -> "\[Nu]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
         "current-density" -> <|
          "typical-symbol" -> "j", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "magnetic-field-strength" -> <|
          "typical-symbol" -> "H", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "amount-of-substance-concentration" -> <|
          "typical-symbol" -> "c", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "mass-concentration" -> <|
          "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "luminance" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], <||>], 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols" -> 
      Dataset[<|"dynamic-viscosity" -> <|
          "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
           "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-1\)]\)"|>, 
         "moment-of-force" -> <|
          "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
           "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "surface-tension" -> <|
          "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
           "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "angular-velocity-or-angular-frequency" -> <|
          "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
           "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "angular-acceleration" -> <|
          "name-of-coherent-derived-unit" -> "radian per second squared", 
           "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "heat-flux-density-or-irradiance" -> <|
          "name-of-coherent-derived-unit" -> "watt per square meter", 
           "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "heat-capacity-or-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
         "specific-heat-capacity-or-specific-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "specific-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
         "thermal-conductivity" -> <|
          "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
           "symbol" -> 
           "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "energy-density" -> <|
          "name-of-coherent-derived-unit" -> "joule per cubic meter", 
           "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
         "electric-field-strength" -> <|
          "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
           "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
         "electric-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "electric-flux-density-or-electric-displacement" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "permittivity" -> <|
          "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
           "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
         "permeability" -> <|
          "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
           "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
         "molar-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, 
         "molar-entropy-or-molar-heat-capacity" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "exposure(x-and-\[Gamma]-rays)" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
           "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
         "absorbed-dose-rate" -> <|
          "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
           "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
         "radiant-intensity" -> <|
          "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "radiance" -> <|
          "name-of-coherent-derived-unit" -> 
           "watt per square meter steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "catalytic-activity-concentration" -> <|
          "name-of-coherent-derived-unit" -> "katal per cubic meter", 
           "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], <||>], "SI-prefixes" -> 
      Dataset[<|"\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
           "kilo", "symbol" -> "k"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
           "mega", "symbol" -> "M"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
           "giga", "symbol" -> "G"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
           "tera", "symbol" -> "T"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
           "peta", "symbol" -> "P"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
           "exa", "symbol" -> "E"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
           "zetta", "symbol" -> "Z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
           "yotta", "symbol" -> "Y"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
           "milli", "symbol" -> "m"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
           "micro", "symbol" -> "\[Mu]"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
           "nano", "symbol" -> "n"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
           "pico", "symbol" -> "p"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
           "femto", "symbol" -> "f"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
           "atto", "symbol" -> "a"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
           "zepto", "symbol" -> "z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
           "yocto", "symbol" -> "y"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], <||>]|>, "ObjectType" -> 
    "ResourceObject"|>, True]]], "Output",
 CellChangeTimes->{3.8763955069270945`*^9},
 CellLabel->"Out[6]=",
 CellID->363132022,ExpressionUUID->"3ee55a01-ef74-426f-84e3-b3ce0eb328de"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceData", "[", 
  RowBox[{
   RowBox[{"ResourceObject", "[", 
    InterpretationBox[
     RowBox[{"CloudObject", "[", 
      TemplateBox[{
       "\"https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
        "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"},
       "HyperlinkURL"], "]"}],
     CloudObject[
     "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"],
     SelectWithContents->True], "]"}], ",", "\"\<SI-prefixes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8763955901187816`*^9, 3.876395607403653*^9}},
 CellLabel->"In[7]:=",
 CellID->111493745,ExpressionUUID->"093912e6-8252-4279-a823-a56000daff80"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> "kilo",
          "symbol" -> "k"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> "mega",
          "symbol" -> "M"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> "giga",
          "symbol" -> "G"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
         "tera", "symbol" -> "T"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
         "peta", "symbol" -> "P"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> "exa",
          "symbol" -> "E"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
         "zetta", "symbol" -> "Z"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
         "yotta", "symbol" -> "Y"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
         "milli", "symbol" -> "m"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
         "micro", "symbol" -> "\[Mu]"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
         "nano", "symbol" -> "n"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
         "pico", "symbol" -> "p"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
         "femto", "symbol" -> "f"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
         "atto", "symbol" -> "a"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
         "zepto", "symbol" -> "z"|>, 
       "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
        "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
         "yocto", "symbol" -> "y"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "factor"} -> 
        1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "factor" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 3, {All}]]], 16, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"factor", "name", "symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 16], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 1, {All, "factor"} -> 
        1, {All, "name"} -> 1, {All, "symbol"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[347.20000000000005`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "factor" -> 
             TypeSystem`PackageScope`AtomShape[347.20000000000005`], "name" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "symbol" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 3, {All}]]], 16, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"factor", "name", "symbol"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 16], "Path" -> {}, "DisplayedRowCount" -> 
     16, "DisplayedColumnCount" -> 3, "DataRowCount" -> 16, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["factor", 
                  Style[
                  "factor", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "factor"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "factor"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["symbol", 
                  Style[
                  "symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "symbol"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["kilo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["k", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(3\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mega", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(6\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["giga", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["G", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(9\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["tera", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(12\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["peta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["P", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(15\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exa", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["E", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(18\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["zetta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(21\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["yotta", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(24\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["milli", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-3\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["micro", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["\[Mu]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-6\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"]}, "RowHeader", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nano", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-9\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["pico", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["p", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-12\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["femto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["f", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-15\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["atto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-18\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["zepto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-21\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                  Style[
                  "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"]}, "RowHeader",
                 False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["factor"]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["yocto", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\!\(\*SuperscriptBox[\(10\), \(-24\)]\)"], 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{818., {235.13403328722342`, 240.86596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{818., {235.13403328722342`, 240.86596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8763956081399984`*^9},
 CellLabel->"Out[7]=",
 CellID->86905643,ExpressionUUID->"b9d18eca-29b5-4c2c-91f6-0f3a8be42799"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"quantitiesSpannedByPlanckUnits", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"ContainsAll", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
          "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
        RowBox[{"First", "[", 
         SuperscriptBox[
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
         "]"}]}], "]"}], "&"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "0"}], 
       "&"}], "]"}], "[", 
     RowBox[{"EntityList", "[", 
      RowBox[{"EntityClass", "[", 
       RowBox[{"\"\<PhysicalQuantity\>\"", ",", "All"}], "]"}], "]"}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.876395861666134*^9},
 CellLabel->"In[11]:=",
 CellID->131722775,ExpressionUUID->"9b315403-2d01-4c15-9375-17a8c80d510e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"#2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}], ",", "#1", ",", 
     "#2"}], "}"}], "&"}], "@@@", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"First", "[", "quantitiesSpannedByPlanckUnits", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<CanonicalName\>\"", ",", "\"\<Dimensions\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.8763959496848397`*^9},
 CellLabel->"In[11]:=",
 CellID->476337754,ExpressionUUID->"0cedc317-dbc8-404b-9f3c-bbf7439ce0f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Absackle\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", "6"}], "}"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "6"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8763959501858993`*^9},
 CellLabel->"Out[11]=",
 CellID->203861183,ExpressionUUID->"305d53bc-d24c-4494-a564-1d3c3f0890b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dimensionsizes", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"#2", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}], ",", "#1", ",", 
      "#2"}], "}"}], "&"}], "@@@", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"quantitiesSpannedByPlanckUnits", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<CanonicalName\>\"", ",", "\"\<Dimensions\>\""}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87639597472578*^9, 3.876396002744454*^9}},
 CellLabel->"In[12]:=",
 CellID->518347429,ExpressionUUID->"1dda6e55-28e3-4560-a64d-3f82a1c350df"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"7", ",", "\"Absackle\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", "6"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", "\"Abseleration\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", "3"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"2", ",", "\"Absement\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", "1"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", "\"Abserk\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", "4"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"3", ",", "\"Absity\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", "2"}], "}"}]}], "}"}]}], 
           "}"}], ",", 
         TemplateBox[{"1353"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", "\"YieldStrength\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"4", ",", "\"YoungModulus\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"5", ",", "\"ZeroPointEnergy\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"1", ",", "\"Zoomass\"", ",", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], "}"}]}], "}"}]}], 
       "}"}], Short[#, 5]& ], "line" -> 12, "sessionID" -> 
   19507768529962138124, "byteCount" -> 562704, "size" -> 5, "stored" -> 
   False, "expr" -> Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.876395983931347*^9, 3.876396006385682*^9}, 
   3.8764286305184827`*^9},
 CellLabel->"Out[12]=",
 CellID->453768934,ExpressionUUID->"76e70e66-0d9c-4d17-8138-edbaf6953514"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}]], "Input",
 CellChangeTimes->{{3.8763960059206543`*^9, 3.876396010077228*^9}},
 CellLabel->"In[15]:=",
 CellID->11555346,ExpressionUUID->"8278ce3a-d1e3-45b4-8c71-3f7f23575692"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"20", ",", "\"QuarticCauchyCoefficients\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "8"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"MassUnit\"", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", 
                    RowBox[{"-", "8"}]}], "}"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"18", ",", "\"QuarticCasimirOperatorPoincareGroup\"", ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"LengthUnit\"", ",", "8"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"MassUnit\"", ",", "4"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"TimeUnit\"", ",", 
                    RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}], ",", 
         TemplateBox[{"1359"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{
             FractionBox["1", "2"], ",", "\"LaserPhaseNoise\"", ",", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"\"TimeUnit\"", ",", 
                   RowBox[{"-", 
                    FractionBox["1", "2"]}]}], "}"}], "}"}]}], "}"}]}], "}"}],
      Short[#, 5]& ], "line" -> 15, "sessionID" -> 19507584420570549628, 
   "byteCount" -> 562704, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.876396010318063*^9},
 CellLabel->"Out[15]=",
 CellID->3519720,ExpressionUUID->"362e6d48-a97e-480c-ab95-f4e89a495cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.876396020653438*^9, 3.876396022849812*^9}},
 CellLabel->"In[14]:=",
 CellID->171832047,ExpressionUUID->"281f61c0-00e1-4fed-8496-e9bd40402297"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "\<\"QuarticCauchyCoefficients\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "8"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "\<\"QuarticCasimirOperatorPoincareGroup\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "6"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\<\"StefanBoltzmannConstantUnits5D\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\<\"PositionMomentumDistributionFunction\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\<\"PhaseSpaceVolume\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "\<\"UniversalSpectralIrradianceWithRespectToWavelength\"\>", 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"StefanBoltzmannConstantUnits4D\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"QuadraticHiggsLangrangianCoefficient\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"QuadraticCauchyCoefficients\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"QuadraticCasimirOperatorPoincareGroup\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"InverseQuadraticCauchyCoefficient\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"InverseEnergySquared\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"ThermalInductance\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "4"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"PositionVelocityDistributionFunction\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "6"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"PauliLubanskiPseudovector\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"MomentumDistributionFunction\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["17", "2"], 
     ",", "\<\"WaveFunctionScatteringState4DMomentumRepresentation\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", 
         RowBox[{"-", 
          FractionBox["5", "2"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"StefanBoltzmannConstantUnits2D\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"StefanBoltzmannConstantUnits1D\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"StefanBoltzmannConstantUnits\"\>", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TemperatureUnit\"\>", ",", 
         RowBox[{"-", "4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", 
         RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8763960232266607`*^9, {3.876428631036877*^9, 3.8764286399027452`*^9}},
 CellLabel->"Out[14]=",
 CellID->67509081,ExpressionUUID->"a7a8b3a6-065f-4ba4-b626-26ced659d51c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8764285954237456`*^9, 3.876428602960991*^9}},
 CellLabel->"In[15]:=",
 CellID->25701910,ExpressionUUID->"d6d57e09-71dc-4e59-afd6-35a6da384cae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"QuarticCauchyCoefficients\"\>", 
   ",", "\<\"QuarticCasimirOperatorPoincareGroup\"\>", 
   ",", "\<\"StefanBoltzmannConstantUnits5D\"\>", 
   ",", "\<\"PositionMomentumDistributionFunction\"\>", 
   ",", "\<\"PhaseSpaceVolume\"\>", 
   ",", "\<\"UniversalSpectralIrradianceWithRespectToWavelength\"\>", 
   ",", "\<\"StefanBoltzmannConstantUnits4D\"\>", 
   ",", "\<\"QuadraticHiggsLangrangianCoefficient\"\>", 
   ",", "\<\"QuadraticCauchyCoefficients\"\>", 
   ",", "\<\"QuadraticCasimirOperatorPoincareGroup\"\>", 
   ",", "\<\"InverseQuadraticCauchyCoefficient\"\>", 
   ",", "\<\"InverseEnergySquared\"\>", ",", "\<\"ThermalInductance\"\>", 
   ",", "\<\"PositionVelocityDistributionFunction\"\>", 
   ",", "\<\"PauliLubanskiPseudovector\"\>", 
   ",", "\<\"MomentumDistributionFunction\"\>", 
   ",", "\<\"WaveFunctionScatteringState4DMomentumRepresentation\"\>", 
   ",", "\<\"StefanBoltzmannConstantUnits2D\"\>", 
   ",", "\<\"StefanBoltzmannConstantUnits1D\"\>", 
   ",", "\<\"StefanBoltzmannConstantUnits\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8764286035933094`*^9, 3.8764286440624285`*^9},
 CellLabel->"Out[15]=",
 CellID->200458588,ExpressionUUID->"4363bdad-b90f-4e2e-8fe3-bbd943677c7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8764285954237456`*^9, 3.876428602960991*^9}, {
  3.876428647765176*^9, 3.8764286571482067`*^9}},
 CellLabel->"In[16]:=",
 CellID->8821108,ExpressionUUID->"ee4f7c8a-5c88-4e31-b904-8d2ae3270464"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.876428657594051*^9},
 CellLabel->"Out[16]=",
 CellID->100694380,ExpressionUUID->"abd82e8a-02cc-4f5e-b3a6-1bfad994d65a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"ContainsAll", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", "\"\<TimeUnit\>\"",
         ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
      RowBox[{"First", "[", 
       SuperscriptBox[
        RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
       "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "0"}], 
     "&"}], "]"}], "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.876428714799589*^9, 3.876428715575941*^9}},
 CellLabel->"In[18]:=",
 CellID->9271950,ExpressionUUID->"38f82676-2c25-469c-9050-094f2a585c4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8764287162229953`*^9},
 CellLabel->"Out[18]=",
 CellID->882152905,ExpressionUUID->"4af1ede9-4cdf-4e5a-a512-ce046d4deb50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DimensionalCombinations", "[", 
    RowBox[{
     RowBox[{"{", "#", "}"}], ",", 
     RowBox[{"IncludeQuantities", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
        "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], "}"}]}]}], 
    "]"}], "&"}], "@", 
  TemplateBox[{
   "\"universal spectral irradiance (with respect to wavelength)\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"PhysicalQuantity\"", ",", 
        "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
    "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
    "\"physical quantity\""},
   "Entity"]}]], "Input",
 CellChangeTimes->{{3.8764290542657356`*^9, 3.8764290696228876`*^9}},
 CellLabel->"In[48]:=",
 CellID->33203239,ExpressionUUID->"a389f319-0da9-4ca2-983a-9f7e9ab5e328"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
        "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"T\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck length Planck time cubed Planck temperature to the fifth per \
Planck mass", 
      FractionBox[
       RowBox[{"\"PlanckLength\"", " ", 
         SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
         SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
     "Quantity"], ")"}], " ", 
   TemplateBox[{"\"UniversalSpectralIrradianceWithRespectToWavelength\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{
       "Quantity variable:", 
        " universal spectral irradiance (with respect to wavelength)"}], 
      TooltipStyle -> "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.876429056368662*^9, 3.8764290701633377`*^9}},
 CellLabel->"Out[48]=",
 CellID->429425981,ExpressionUUID->"9f9d1ea9-d655-486b-a0ca-f93a73c45612"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DimensionalCombinations", "[", 
      RowBox[{
       RowBox[{"{", "#", "}"}], ",", 
       RowBox[{"IncludeQuantities", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
          "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], "}"}]}]}],
       "]"}], "&"}], "@", 
    TemplateBox[{
     "\"universal spectral irradiance (with respect to wavelength)\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], ",", 
   RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.876429086946706*^9, 3.8764290996609855`*^9}},
 CellLabel->"In[51]:=",
 CellID->220482554,ExpressionUUID->"7f19951e-3c0b-4eea-ba31-8937cf39bd9d"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"1", 
    RowBox[{
      SubscriptBox[
       StyleBox["\"l\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
      SubsuperscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
      "\[InvisibleSpace]", 
      SubsuperscriptBox[
       StyleBox["\"T\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
      "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
      SubscriptBox[
       StyleBox["\"m\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
    "Planck length Planck time cubed Planck temperature to the fifth per \
Planck mass", 
    FractionBox[
     RowBox[{"\"PlanckLength\"", " ", 
       SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
       SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{{3.87642909383147*^9, 3.876429099966617*^9}},
 CellLabel->"Out[51]=",
 CellID->109170625,ExpressionUUID->"cff3288b-2a7b-4896-aa52-f5a49a45ae55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"DimensionalCombinations", "[", 
       RowBox[{
        RowBox[{"{", "#", "}"}], ",", 
        RowBox[{"IncludeQuantities", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
           "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
          "}"}]}]}], "]"}], "&"}], "@", 
     TemplateBox[{
      "\"universal spectral irradiance (with respect to wavelength)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], ",", 
    RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8764291075542326`*^9, 3.876429108448932*^9}},
 CellLabel->"In[52]:=",
 CellID->122179074,ExpressionUUID->"c6aa262f-dee2-41d7-9164-18e4a9281ccf"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{
     SubscriptBox[
      StyleBox["\"l\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
     SubsuperscriptBox[
      StyleBox["\"t\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
     "\[InvisibleSpace]", 
     SubsuperscriptBox[
      StyleBox["\"T\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
     "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
     SubscriptBox[
      StyleBox["\"m\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
   "Planck length Planck time cubed Planck temperature to the fifth per \
Planck mass", 
   FractionBox[
    RowBox[{"\"PlanckLength\"", " ", 
      SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
      SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.876429108752899*^9},
 CellLabel->"Out[52]=",
 CellID->85470618,ExpressionUUID->"4fbabb1d-469f-4750-a830-8bc84a1d5bcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DimensionalCombinations", "[", 
        RowBox[{
         RowBox[{"{", "#", "}"}], ",", 
         RowBox[{"IncludeQuantities", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
            "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
           "}"}]}]}], "]"}], "[", "#", "]"}], ",", 
      RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], "&"}], "[", 
  TemplateBox[{
   "\"universal spectral irradiance (with respect to wavelength)\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"PhysicalQuantity\"", ",", 
        "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
    "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
    "\"physical quantity\""},
   "Entity"], "]"}]], "Input",
 CellChangeTimes->{{3.8764291075542326`*^9, 3.876429108448932*^9}, {
  3.8764291688784575`*^9, 3.876429193581332*^9}},
 CellLabel->"In[54]:=",
 CellID->94909962,ExpressionUUID->"48079b5c-512b-4d92-851d-23440b9cc50f"],

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"{", "}"}], "]"}]], "Output",
 CellChangeTimes->{3.8764291941937847`*^9},
 CellLabel->"Out[54]=",
 CellID->511129323,ExpressionUUID->"e1ab5a10-d4ce-4ea5-9ee9-0963cc7af6d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<NaturalUnits\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<PlanckForm\>\"", "->", 
         RowBox[{"Numerator", "[", 
          RowBox[{"First", "[", 
           RowBox[{"DimensionalCombinations", "[", 
            RowBox[{
             RowBox[{"{", "#", "}"}], ",", 
             RowBox[{"IncludeQuantities", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                "\"\<PlanckMass\>\""}], "}"}]}]}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"Numerator", "[", 
            RowBox[{"First", "[", 
             RowBox[{"DimensionalCombinations", "[", 
              RowBox[{
               RowBox[{"{", "#", "}"}], ",", 
               RowBox[{"IncludeQuantities", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                  "\"\<PlanckMass\>\""}], "}"}]}]}], "]"}], "]"}], "]"}], 
           ",", "\"\<SIBase\>\""}], "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"quartic Cauchy coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
      "Entity"]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->149795874,ExpressionUUID->"4e932d04-bd1d-4527-933e-2a5307a13390"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"quartic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"]}], 
           
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "8"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.464020717570756807`3.3521538207738626*^37", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "8"]}], 
           "kilogram to the fourth meters to the 8 per second to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "8"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"4.255255889824194373696261068`3.3979864688511756*^-50", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "6"]}], 
           "kilogram to the fourth meters to the 8 per second to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8764285729131613`*^9},
 CellLabel->"Out[9]=",
 CellID->146612205,ExpressionUUID->"57e79fb7-4e80-4b93-a69c-344e5091ebb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"ContainsAll", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", "\"\<TimeUnit\>\"",
         ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
      RowBox[{"First", "[", 
       SuperscriptBox[
        RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
       "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "0"}], 
     "&"}], "]"}], "[", 
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Entity", "[", 
        RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
       "]"}]}], ")"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8764287529326906`*^9, 3.876428758638193*^9}},
 CellLabel->"In[21]:=",
 CellID->279092553,ExpressionUUID->"77026769-53f9-4c6b-ad28-6add9af50036"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.876428746429556*^9, 3.8764287591593056`*^9}},
 CellLabel->"Out[21]=",
 CellID->452070901,ExpressionUUID->"f0d27f89-10e1-4b9f-a063-79e2656c5e57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "&"}], "@", 
  TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
    RowBox[{"Entity", "[", 
      RowBox[{
       "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
      "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
   "Entity"]}]], "Input",
 CellChangeTimes->{{3.8764287894135437`*^9, 3.8764288055364227`*^9}, {
  3.8764288459637823`*^9, 3.876428849575653*^9}, {3.876428910422*^9, 
  3.8764289147910366`*^9}},
 CellLabel->"In[37]:=",
 CellID->249905389,ExpressionUUID->"021b021a-776d-48e4-b20a-eb19dbdc44c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TemperatureUnit\"\>", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TimeUnit\"\>", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8764287957192717`*^9, 3.876428806026072*^9}, 
   3.876428853517066*^9, {3.876428910633877*^9, 3.876428915298082*^9}},
 CellLabel->"Out[37]=",
 CellID->301596400,ExpressionUUID->"e2da3ca0-e907-40d5-8a95-1f6a4de2cdeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "&"}], "@", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.87642891923429*^9, 3.8764289202984514`*^9}},
 CellLabel->"In[38]:=",
 CellID->130725474,ExpressionUUID->"350557b2-a420-47fa-b24a-4b9523034b0a"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8764289205717983`*^9},
 CellLabel->"Out[38]=",
 CellID->53002890,ExpressionUUID->"4ca6fbea-670b-412c-abf7-fb353ed01e36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Entity", "[", 
    RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
   "]"}]}]], "Input",
 CellLabel->"In[39]:=",
 CellID->121718,ExpressionUUID->"bc5a7632-6657-4d80-9f80-2848f4155b67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8764289411271396`*^9},
 CellLabel->"Out[39]=",
 CellID->117114,ExpressionUUID->"b8bf96a5-378b-42ba-a855-412ae9113cbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "1"}], "&"}],
    "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8764289475503798`*^9, 3.876428960975505*^9}},
 CellLabel->"In[40]:=",
 CellID->169836894,ExpressionUUID->"b06d73f0-5061-4042-ba24-537f1ccc7d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.876428961385339*^9},
 CellLabel->"Out[40]=",
 CellID->652249811,ExpressionUUID->"2439ffa4-ed97-41b9-9b35-cd56cea17eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"ContainsAll", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", "\"\<TimeUnit\>\"",
         ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
      RowBox[{"First", "[", 
       SuperscriptBox[
        RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
       "]"}]}], "]"}], "&"}], "]"}], "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], ">", "1"}], 
     "&"}], "]"}], "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{
      RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.876428965898224*^9, 3.8764289781159573`*^9}},
 CellLabel->"In[41]:=",
 CellID->27640514,ExpressionUUID->"02ebfb36-bc56-482d-9b99-8fb8884954ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"quartic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionMomentumDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase space volume\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"universal spectral irradiance (with respect to wavelength)\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Higgs coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inverse energy squared\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseEnergySquared\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"PositionVelocityDistributionFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"momentum distribution function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"4\[Hyphen]dimensional scattering state momentum space wave function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8764289785387588`*^9},
 CellLabel->"Out[41]=",
 CellID->75480379,ExpressionUUID->"fa79409a-9c2c-4758-ba0b-69e6780bbd2b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
     "0"}], "&"}], "]"}], "[", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
      "]"}]}], ")"}], "]"}], "]"}]], "Input",
 CellLabel->"",
 CellID->90981325,ExpressionUUID->"42a73478-1ece-423e-9b9c-aa0427414940"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<NaturalUnits\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<PlanckForm\>\"", "->", 
         RowBox[{"First", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"DimensionalCombinations", "[", 
             RowBox[{
              RowBox[{"{", "#", "}"}], ",", 
              RowBox[{"IncludeQuantities", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                 "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                "}"}]}]}], "]"}], ",", 
            RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], ",", 
           "\"\<SIBase\>\""}], "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"ContainsAll", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
          "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
        RowBox[{"First", "[", 
         SuperscriptBox[
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
         "]"}]}], "]"}], "&"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "[", 
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
        "0"}], "&"}], "]"}], "[", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
         "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876428665233429*^9, 3.8764286698154917`*^9}, 
   3.876428724757661*^9, 3.8764287674636965`*^9, {3.8764288146530175`*^9, 
   3.8764288249635825`*^9}, {3.876429010400464*^9, 3.876429020503779*^9}, {
   3.87642928006714*^9, 3.8764292996712017`*^9}, 3.876429357913543*^9},
 CellLabel->"In[60]:=",
 CellID->60079970,ExpressionUUID->"c672a4de-80d4-43c0-b7b9-60f36fb4b421"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"quartic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"]}], 
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "8"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.464020717570756807`3.3521538207738626*^37", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "8"]}], 
           "kilogram to the fourth meters to the 8 per second to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "8"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"4.255255889824194373696261068`3.3979864688511756*^-50", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "6"]}], 
           "kilogram to the fourth meters to the 8 per second to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length squared Planck time cubed Planck temperature to the \
6 per Planck mass", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              SuperscriptBox["\"PlanckTemperature\"", "6"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"15.2112117261454623716`3.5704173664167653", 
           RowBox[{
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter squared second cubed kelvins to the 6 per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "6"], " ", 
              SuperscriptBox["\"Meters\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"PositionMomentumDistributionFunction\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length to the 6 per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.1728112017825`3.574171693096742*^-102", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters to the 6 per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"phase space volume\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length to the 6 per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.1728112017825`3.574171693096742*^-102", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters to the 6 per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"universal spectral irradiance (with respect to wavelength)\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length Planck time cubed Planck temperature to the fifth \
per Planck mass", 
           FractionBox[
            RowBox[{"\"PlanckLength\"", " ", 
              SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"6642.7863763809591113796`3.6496843907312444", 
           RowBox[{"\"m\"", "\[ThinSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter second cubed kelvins to the fifth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "5"], " ", "\"Meters\"", " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length Planck time cubed Planck temperature to the fifth \
per Planck mass", 
           FractionBox[
            RowBox[{"\"PlanckLength\"", " ", 
              SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"6642.7863763809591113796`3.6496843907312444", 
           RowBox[{"\"m\"", "\[ThinSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter second cubed kelvins to the fifth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "5"], " ", "\"Meters\"", " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quadratic Higgs coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quadratic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"inverse energy squared\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseEnergySquared\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"thermal inductance\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time to the fourth Planck temperature squared per Planck \
mass Planck length squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "2"], " ", 
              SuperscriptBox["\"PlanckTime\"", "4"]}], 
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.98262697026927437654369172`3.6972194539804604*^-32", 
           RowBox[{
             SuperscriptBox["\"s\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\")\""}], 
           "second to the fourth kelvins squared per kilogram meter squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "4"]}], 
            RowBox[{"\"Kilograms\"", " ", 
              SuperscriptBox["\"Meters\"", "2"]}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"PositionVelocityDistributionFunction\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck time cubed per Planck length to the 6", 
           FractionBox[
            SuperscriptBox["\"PlanckTime\"", "3"], 
            SuperscriptBox["\"PlanckLength\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"8.79039518786390445561`3.6980650490200913*^78", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"]}], 
           "seconds cubed per meter to the 6", 
           FractionBox[
            SuperscriptBox["\"Seconds\"", "3"], 
            SuperscriptBox["\"Meters\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.0628271594645`3.699016464515157*^-25", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram squared meters to the fourth per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"momentum distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length cubed per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "3"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"277.7783930123559672608`3.6994929550110505", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters cubed per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "3"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck mass to the fifth Planck length to the 6 per Planck time \
to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "5"]}], 
            SuperscriptBox["\"PlanckTime\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.545287181900632162762409899`3.4231242209056605*^12", 
           RowBox[{
             SuperscriptBox["\"kg\"", "5"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "6"]}], 
           "kilogram to the fifth meters to the 6 per second to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "5"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time cubed Planck temperature cubed per Planck mass Planck \
length", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "3"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], 
            RowBox[{"\"PlanckLength\"", " ", "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.2668442839027641512496847069`3.7474815884056807*^9", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "3"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", "\"m\"", 
             "\[InvisibleSpace]", "\")\""}], 
           "second cubed kelvins cubed per kilogram meter", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "3"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], 
            RowBox[{"\"Kilograms\"", " ", "\"Meters\""}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time cubed Planck temperature squared per Planck mass \
Planck length squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "2"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], 
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"5.53235080913428302245688806876`3.748241400892419*^11", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\")\""}], 
           "second cubed kelvins squared per kilogram meter squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], 
            RowBox[{"\"Kilograms\"", " ", 
              SuperscriptBox["\"Meters\"", "2"]}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck time cubed Planck temperature to the fourth per Planck \
mass", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "4"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.9009267398721695844737538`3.7467231029146055*^6", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "second cubed kelvins to the fourth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "4"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8764286717380905`*^9, 3.876428726300242*^9, 3.8764287692658434`*^9, {
   3.8764288169175572`*^9, 3.876428828647724*^9}, {3.8764289997749014`*^9, 
   3.876429021711666*^9}, {3.8764292822417088`*^9, 3.8764293009118896`*^9}, 
   3.876429359407523*^9},
 CellLabel->"Out[60]=",
 CellID->173453358,ExpressionUUID->"3f529005-ed16-4497-a880-d71a5eeb60ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<NaturalUnits\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<PlanckForm\>\"", "->", 
         RowBox[{"First", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{"DimensionalCombinations", "[", 
             RowBox[{
              RowBox[{"{", "#", "}"}], ",", 
              RowBox[{"IncludeQuantities", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                 "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                "}"}]}]}], "]"}], ",", 
            RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], ",", 
           "\"\<SIBase\>\""}], "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"ContainsAll", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
          "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
        RowBox[{"First", "[", 
         SuperscriptBox[
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
         "]"}]}], "]"}], "&"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "[", 
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
        "0"}], "&"}], "]"}], "[", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
         "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876428665233429*^9, 3.8764286698154917`*^9}, 
   3.876428724757661*^9, 3.8764287674636965`*^9, {3.8764288146530175`*^9, 
   3.8764288249635825`*^9}, {3.876429010400464*^9, 3.876429020503779*^9}, {
   3.87642928006714*^9, 3.8764292996712017`*^9}, {3.876429357913543*^9, 
   3.876429422831274*^9}, {3.8764294639550266`*^9, 3.876429520691367*^9}},
 CellLabel->"In[63]:=",
 CellID->205822502,ExpressionUUID->"1cddf100-c71e-4430-bca9-466d68aabcff"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"quartic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"QuarticCauchyCoefficients\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"]}], 
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "8"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.464020717570756807`3.3521538207738626*^37", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "8"]}], 
           "kilogram to the fourth meters to the 8 per second to the 8", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "8"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quartic Casimir operator of the Poincar\[EAcute] group\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuarticCasimirOperatorPoincareGroup\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck mass to the fourth Planck length to the 8 per Planck time \
to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "8"], " ", 
              SuperscriptBox["\"PlanckMass\"", "4"]}], 
            SuperscriptBox["\"PlanckTime\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"4.255255889824194373696261068`3.3979864688511756*^-50", 
           RowBox[{
             SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "6"]}], 
           "kilogram to the fourth meters to the 8 per second to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "4"], " ", 
              SuperscriptBox["\"Meters\"", "8"]}], 
            SuperscriptBox["\"Seconds\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits5D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length squared Planck time cubed Planck temperature to the \
6 per Planck mass", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              SuperscriptBox["\"PlanckTemperature\"", "6"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"15.2112117261454623716`3.5704173664167653", 
           RowBox[{
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter squared second cubed kelvins to the 6 per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "6"], " ", 
              SuperscriptBox["\"Meters\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"position\[Hyphen]momentum distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"PositionMomentumDistributionFunction\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionMomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length to the 6 per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.1728112017825`3.574171693096742*^-102", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters to the 6 per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"phase space volume\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpaceVolume\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpaceVolume\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length to the 6 per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.1728112017825`3.574171693096742*^-102", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters to the 6 per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"universal spectral irradiance (with respect to wavelength)\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length Planck time cubed Planck temperature to the fifth \
per Planck mass", 
           FractionBox[
            RowBox[{"\"PlanckLength\"", " ", 
              SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"6642.7863763809591113796`3.6496843907312444", 
           RowBox[{"\"m\"", "\[ThinSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter second cubed kelvins to the fifth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "5"], " ", "\"Meters\"", " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits4D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck length Planck time cubed Planck temperature to the fifth \
per Planck mass", 
           FractionBox[
            RowBox[{"\"PlanckLength\"", " ", 
              SuperscriptBox["\"PlanckTemperature\"", "5"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"6642.7863763809591113796`3.6496843907312444", 
           RowBox[{"\"m\"", "\[ThinSpace]", 
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "meter second cubed kelvins to the fifth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "5"], " ", "\"Meters\"", " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quadratic Higgs coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuadraticHiggsLangrangianCoefficient\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticHiggsLangrangianCoefficient\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quadratic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"QuadraticCauchyCoefficients\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCauchyCoefficients\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"quadratic Casimir operator of the Poincar\[EAcute] group\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuadraticCasimirOperatorPoincareGroup\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticCasimirOperatorPoincareGroup\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"inverse quadratic Cauchy coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"InverseQuadraticCauchyCoefficient\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InverseQuadraticCauchyCoefficient\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"inverse energy squared\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseEnergySquared\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseEnergySquared\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "4"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.826252366965300953`3.653183816437844*^18", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "4"]}], 
           "kilogram squared meters to the fourth per second to the fourth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "4"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"thermal inductance\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time to the fourth Planck temperature squared per Planck \
mass Planck length squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "2"], " ", 
              SuperscriptBox["\"PlanckTime\"", "4"]}], 
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.98262697026927437654369172`3.6972194539804604*^-32", 
           RowBox[{
             SuperscriptBox["\"s\"", "4"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\")\""}], 
           "second to the fourth kelvins squared per kilogram meter squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "4"]}], 
            RowBox[{"\"Kilograms\"", " ", 
              SuperscriptBox["\"Meters\"", "2"]}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"position\[Hyphen]velocity distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"PositionVelocityDistributionFunction\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositionVelocityDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck time cubed per Planck length to the 6", 
           FractionBox[
            SuperscriptBox["\"PlanckTime\"", "3"], 
            SuperscriptBox["\"PlanckLength\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"8.79039518786390445561`3.6980650490200913*^78", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"]}], 
           "seconds cubed per meter to the 6", 
           FractionBox[
            SuperscriptBox["\"Seconds\"", "3"], 
            SuperscriptBox["\"Meters\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Pauli\[Hyphen]Lubanski pseudovector\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"PauliLubanskiPseudovector\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PauliLubanskiPseudovector\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass squared Planck length to the fourth per Planck time \
cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "4"], " ", 
              SuperscriptBox["\"PlanckMass\"", "2"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.0628271594645`3.699016464515157*^-25", 
           RowBox[{
             SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram squared meters to the fourth per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "2"], " ", 
              SuperscriptBox["\"Meters\"", "4"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"momentum distribution function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"MomentumDistributionFunction\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MomentumDistributionFunction\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
           "Planck mass cubed Planck length cubed per Planck time cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "3"], " ", 
              SuperscriptBox["\"PlanckMass\"", "3"]}], 
            SuperscriptBox["\"PlanckTime\"", "3"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"277.7783930123559672608`3.6994929550110505", 
           RowBox[{
             SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "3"]}], 
           "kilogram cubed meters cubed per second cubed", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "3"], " ", 
              SuperscriptBox["\"Meters\"", "3"]}], 
            SuperscriptBox["\"Seconds\"", "3"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{
     "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "6"]}], 
           "Planck mass to the fifth Planck length to the 6 per Planck time \
to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "6"], " ", 
              SuperscriptBox["\"PlanckMass\"", "5"]}], 
            SuperscriptBox["\"PlanckTime\"", "6"]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"3.545287181900632162762409899`3.4231242209056605*^12", 
           RowBox[{
             SuperscriptBox["\"kg\"", "5"], "\[InvisibleSpace]", 
             SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "6"]}], 
           "kilogram to the fifth meters to the 6 per second to the 6", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kilograms\"", "5"], " ", 
              SuperscriptBox["\"Meters\"", "6"]}], 
            SuperscriptBox["\"Seconds\"", "6"]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits2D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time cubed Planck temperature cubed per Planck mass Planck \
length", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "3"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], 
            RowBox[{"\"PlanckLength\"", " ", "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"1.2668442839027641512496847069`3.7474815884056807*^9", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "3"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", "\"m\"", 
             "\[InvisibleSpace]", "\")\""}], 
           "second cubed kelvins cubed per kilogram meter", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "3"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], 
            RowBox[{"\"Kilograms\"", " ", "\"Meters\""}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits1D\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]], 
             "\[ThinSpace]", 
             SubsuperscriptBox[
              StyleBox["\"l\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\")\""}], 
           "Planck time cubed Planck temperature squared per Planck mass \
Planck length squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "2"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], 
            RowBox[{
              SuperscriptBox["\"PlanckLength\"", "2"], " ", 
              "\"PlanckMass\""}]]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"5.53235080913428302245688806876`3.748241400892419*^11", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", "\"/(\"",
              "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
             SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\")\""}], 
           "second cubed kelvins squared per kilogram meter squared", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "2"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], 
            RowBox[{"\"Kilograms\"", " ", 
              SuperscriptBox["\"Meters\"", "2"]}]]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", "\"StefanBoltzmannConstantUnits\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"NaturalUnits\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
         TemplateBox[{"1", 
           RowBox[{
             SubsuperscriptBox[
              StyleBox["\"t\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
             "\[InvisibleSpace]", 
             SubsuperscriptBox[
              StyleBox["\"T\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
             "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
             SubscriptBox[
              StyleBox["\"m\"", Italic, StripOnInput -> False], 
              StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
           "Planck time cubed Planck temperature to the fourth per Planck \
mass", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"PlanckTemperature\"", "4"], " ", 
              SuperscriptBox["\"PlanckTime\"", "3"]}], "\"PlanckMass\""]},
          "Quantity"]}], ",", 
        RowBox[{"\<\"ApproximateSIEquivalentOfPlanckUnits\"\>", "\[Rule]", 
         TemplateBox[{"2.9009267398721695844737538`3.7467231029146055*^6", 
           RowBox[{
             SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
             SuperscriptBox["\"K\"", "4"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"kg\""}], 
           "second cubed kelvins to the fourth per kilogram", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"Kelvins\"", "4"], " ", 
              SuperscriptBox["\"Seconds\"", "3"]}], "\"Kilograms\""]},
          "Quantity"]}]}], "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.876429522153923*^9},
 CellLabel->"Out[63]=",
 CellID->275325847,ExpressionUUID->"e73e40b2-50c5-4347-9633-9399e86cad94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"naturalUnitsData", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<NaturalUnits\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<PlanckForm\>\"", "->", 
           RowBox[{"First", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"DimensionalCombinations", "[", 
                 RowBox[{
                  RowBox[{"{", "#", "}"}], ",", 
                  RowBox[{"IncludeQuantities", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                    "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], 
             ",", "\"\<SIBase\>\""}], "]"}]}], ",", 
          RowBox[{"\"\<exponentNeeded\>\"", "->", 
           RowBox[{"Floor", "[", 
            RowBox[{"Log", "[", 
             RowBox[{"10", ",", 
              RowBox[{"QuantityMagnitude", "@", 
               RowBox[{"UnitConvert", "[", 
                RowBox[{
                 RowBox[{"First", "[", 
                  RowBox[{"Cases", "[", 
                   RowBox[{
                    RowBox[{"DimensionalCombinations", "[", 
                    RowBox[{
                    RowBox[{"{", "#", "}"}], ",", 
                    RowBox[{"IncludeQuantities", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                    "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                    RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}],
                  ",", "\"\<SIBase\>\""}], "]"}]}]}], "]"}], "]"}]}]}], 
         "|>"}]}], "|>"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ContainsAll", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
            "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
          RowBox[{"First", "[", 
           SuperscriptBox[
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
           "]"}]}], "]"}], "&"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", 
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
          "0"}], "&"}], "]"}], "[", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Entity", "[", 
            RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
           "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8764293226597795`*^9, 3.8764293468361316`*^9}, {
  3.8764769766923647`*^9, 3.876477001349099*^9}, {3.876477045149158*^9, 
  3.8764770529597054`*^9}},
 NumberMarks->False,
 CellLabel->"In[135]:=",
 CellID->238634227,ExpressionUUID->"c68412ea-4df3-4cce-ae3b-5703e39fe10d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["PhysicalQuantity", "QuarticCauchyCoefficients"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^8 "PlanckMass"^4 "PlanckTime"^(-8)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            1.464020717570756807`3.3521538207738626*^37, "Kilograms"^4 
             "Meters"^8 "Seconds"^(-8)], "exponentNeeded" -> 37|>|>, 
       Entity["PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^8 "PlanckMass"^4 "PlanckTime"^(-6)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            4.255255889824194373696261068`3.3979864688511756*^-50, 
             "Kilograms"^4 "Meters"^8 "Seconds"^(-6)], 
           "exponentNeeded" -> -50|>|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits5D"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength"^2 "PlanckMass"^(-1) "PlanckTemperature"^6 
             "PlanckTime"^3], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            15.2112117261454623716`3.5704173664167653, "Kelvins"^6 
             "Kilograms"^(-1) "Meters"^2 "Seconds"^3], "exponentNeeded" -> 
           1|>|>, Entity[
        "PhysicalQuantity", "PositionMomentumDistributionFunction"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^6 "PlanckMass"^3 "PlanckTime"^(-3)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            1.1728112017825`3.574171693096742*^-102, "Kilograms"^3 "Meters"^6 
             "Seconds"^(-3)], "exponentNeeded" -> -102|>|>, 
       Entity["PhysicalQuantity", "PhaseSpaceVolume"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^6 "PlanckMass"^3 "PlanckTime"^(-3)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            1.1728112017825`3.574171693096742*^-102, "Kilograms"^3 "Meters"^6 
             "Seconds"^(-3)], "exponentNeeded" -> -102|>|>, 
       Entity["PhysicalQuantity", 
         "UniversalSpectralIrradianceWithRespectToWavelength"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength" "PlanckMass"^(-1) "PlanckTemperature"^5 
             "PlanckTime"^3], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            6642.7863763809591113796`3.6496843907312444, "Kelvins"^5 
             "Kilograms"^(-1) "Meters" "Seconds"^3], "exponentNeeded" -> 
           3|>|>, Entity[
        "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength" "PlanckMass"^(-1) "PlanckTemperature"^5 
             "PlanckTime"^3], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            6642.7863763809591113796`3.6496843907312444, "Kelvins"^5 
             "Kilograms"^(-1) "Meters" "Seconds"^3], "exponentNeeded" -> 
           3|>|>, Entity[
        "PhysicalQuantity", "QuadraticHiggsLangrangianCoefficient"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-4)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.826252366965300953`3.653183816437844*^18, "Kilograms"^2 
             "Meters"^4 "Seconds"^(-4)], "exponentNeeded" -> 18|>|>, 
       Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-4)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.826252366965300953`3.653183816437844*^18, "Kilograms"^2 
             "Meters"^4 "Seconds"^(-4)], "exponentNeeded" -> 18|>|>, 
       Entity["PhysicalQuantity", 
         "QuadraticCasimirOperatorPoincareGroup"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-4)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.826252366965300953`3.653183816437844*^18, "Kilograms"^2 
             "Meters"^4 "Seconds"^(-4)], "exponentNeeded" -> 18|>|>, 
       Entity["PhysicalQuantity", "InverseQuadraticCauchyCoefficient"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-4)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.826252366965300953`3.653183816437844*^18, "Kilograms"^2 
             "Meters"^4 "Seconds"^(-4)], "exponentNeeded" -> 18|>|>, 
       Entity["PhysicalQuantity", "InverseEnergySquared"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-4)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.826252366965300953`3.653183816437844*^18, "Kilograms"^2 
             "Meters"^4 "Seconds"^(-4)], "exponentNeeded" -> 18|>|>, 
       Entity["PhysicalQuantity", "ThermalInductance"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength"^(-2) "PlanckMass"^(-1) "PlanckTemperature"^2 
             "PlanckTime"^4], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            2.98262697026927437654369172`3.6972194539804604*^-32, "Kelvins"^2 
             "Kilograms"^(-1) "Meters"^(-2) "Seconds"^4], 
           "exponentNeeded" -> -32|>|>, 
       Entity["PhysicalQuantity", "PositionVelocityDistributionFunction"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> Quantity[1, "PlanckLength"^(-6) "PlanckTime"^3], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            8.79039518786390445561`3.6980650490200913*^78, "Meters"^(-6) 
             "Seconds"^3], "exponentNeeded" -> 78|>|>, 
       Entity["PhysicalQuantity", "PauliLubanskiPseudovector"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^4 "PlanckMass"^2 "PlanckTime"^(-3)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            2.0628271594645`3.699016464515157*^-25, "Kilograms"^2 "Meters"^4 
             "Seconds"^(-3)], "exponentNeeded" -> -25|>|>, 
       Entity["PhysicalQuantity", "MomentumDistributionFunction"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^3 "PlanckMass"^3 "PlanckTime"^(-3)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            277.7783930123559672608`3.6994929550110505, "Kilograms"^3 
             "Meters"^3 "Seconds"^(-3)], "exponentNeeded" -> 2|>|>, 
       Entity["PhysicalQuantity", 
         "WaveFunctionScatteringState4DMomentumRepresentation"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[1, "PlanckLength"^6 "PlanckMass"^5 "PlanckTime"^(-6)], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            3.545287181900632162762409899`3.4231242209056605*^12, 
             "Kilograms"^5 "Meters"^6 "Seconds"^(-6)], "exponentNeeded" -> 
           12|>|>, Entity[
        "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength"^(-1) "PlanckMass"^(-1) "PlanckTemperature"^3 
             "PlanckTime"^3], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            1.2668442839027641512496847069`3.7474815884056807*^9, "Kelvins"^3 
             "Kilograms"^(-1) "Meters"^(-1) "Seconds"^3], "exponentNeeded" -> 
           9|>|>, Entity[
        "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckLength"^(-2) "PlanckMass"^(-1) "PlanckTemperature"^2 
             "PlanckTime"^3], "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            5.53235080913428302245688806876`3.748241400892419*^11, 
             "Kelvins"^2 "Kilograms"^(-1) "Meters"^(-2) "Seconds"^3], 
           "exponentNeeded" -> 11|>|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"] -> <|
        "NaturalUnits" -> <|
          "PlanckForm" -> 
           Quantity[
            1, "PlanckMass"^(-1) "PlanckTemperature"^4 "PlanckTime"^3], 
           "ApproximateSIEquivalentOfPlanckUnits" -> 
           Quantity[
            2.9009267398721695844737538`3.7467231029146055*^6, "Kelvins"^4 
             "Kilograms"^(-1) "Seconds"^3], "exponentNeeded" -> 6|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, "NaturalUnits"} -> <|{All, "NaturalUnits", "PlanckForm"} -> 
          1, {All, "NaturalUnits", "ApproximateSIEquivalentOfPlanckUnits"} -> 
          1, {All, "NaturalUnits", "exponentNeeded"} -> 1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "NaturalUnits" -> TypeSystem`PackageScope`Limited[
               
               TypeSystem`PackageScope`RowShape[<|
                "PlanckForm" -> TypeSystem`PackageScope`UnknownShape[False], 
                 "ApproximateSIEquivalentOfPlanckUnits" -> 
                 TypeSystem`PackageScope`UnknownShape[False], 
                 "exponentNeeded" -> TypeSystem`PackageScope`AtomShape[34]|>], 
               DirectedInfinity[1], 3, {All, "NaturalUnits"}]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Struct[{"NaturalUnits"}, {
         TypeSystem`Struct[{
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Integer]}]}], 20], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, "NaturalUnits"} -> <|{All, "NaturalUnits", "PlanckForm"} -> 
          1, {All, "NaturalUnits", "ApproximateSIEquivalentOfPlanckUnits"} -> 
          1, {All, "NaturalUnits", "exponentNeeded"} -> 1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "NaturalUnits" -> TypeSystem`PackageScope`Limited[
               
               TypeSystem`PackageScope`RowShape[<|
                "PlanckForm" -> TypeSystem`PackageScope`UnknownShape[False], 
                 "ApproximateSIEquivalentOfPlanckUnits" -> 
                 TypeSystem`PackageScope`UnknownShape[False], 
                 "exponentNeeded" -> TypeSystem`PackageScope`AtomShape[34]|>], 
               DirectedInfinity[1], 3, {All, "NaturalUnits"}]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Struct[{"NaturalUnits"}, {
         TypeSystem`Struct[{
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Integer]}]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     20, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NaturalUnits", 
                  Style[
                  "NaturalUnits", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NaturalUnits"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NaturalUnits"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PlanckForm", 
                  Style[
                  "PlanckForm", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NaturalUnits", "PlanckForm"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NaturalUnits", "PlanckForm"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ApproximateSIEquivalentOfPlanckUnits", 
                  Style[
                  "ApproximateSIEquivalentOfPlanckUnits", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NaturalUnits", 
                    "ApproximateSIEquivalentOfPlanckUnits"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NaturalUnits", "ApproximateSIEquivalentOfPlanckUnits"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["exponentNeeded", 
                  Style[
                  "exponentNeeded", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NaturalUnits", "exponentNeeded"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NaturalUnits", "exponentNeeded"}, "ColumnHeader", True],
                "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quartic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quartic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "8"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.464020717570756807`3.3521538207738626*^37", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "8"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], 
                  Style[
                   RawBoxes[
                   "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuarticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuarticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "8"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "4.255255889824194373696261068`3.3979864688511756*^-50", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15.2112117261454623716`3.5704173664167653", 
                  RowBox[{
                    SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "6"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"kg\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]momentum distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]momentum distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionMomentumDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.1728112017825`3.574171693096742*^-102", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"phase space volume\""], 
                  Style[
                   RawBoxes["\"phase space volume\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.1728112017825`3.574171693096742*^-102", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-102"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"universal spectral irradiance (with respect to \
wavelength)\""], 
                  Style[
                   RawBoxes[
                   "\"universal spectral irradiance (with respect to \
wavelength)\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6642.7863763809591113796`3.6496843907312444", 
                  RowBox[{"\"m\"", "\[ThinSpace]", 
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"kg\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6642.7863763809591113796`3.6496843907312444", 
                  RowBox[{"\"m\"", "\[ThinSpace]", 
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "5"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"kg\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Higgs coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Higgs coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticHiggsLangrangianCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.826252366965300953`3.653183816437844*^18", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "QuadraticCauchyCoefficients"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]]},
                 "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.826252366965300953`3.653183816437844*^18", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quadratic Casimir operator of the Poincar\[EAcute] group\
\""], 
                  Style[
                   RawBoxes[
                   "\"quadratic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.826252366965300953`3.653183816437844*^18", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "InverseQuadraticCauchyCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.826252366965300953`3.653183816437844*^18", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse energy squared\""], 
                  Style[
                   RawBoxes["\"inverse energy squared\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.826252366965300953`3.653183816437844*^18", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "4"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"thermal inductance\""], 
                  Style[
                   RawBoxes["\"thermal inductance\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "ThermalInductance"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "2.98262697026927437654369172`3.6972194539804604*^-32", 
                  RowBox[{
                    SuperscriptBox["\"s\"", "4"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", 
                    "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
                    SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-32"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]velocity distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]velocity distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionVelocityDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.79039518786390445561`3.6980650490200913*^78", 
                  RowBox[{
                    SuperscriptBox["\"s\"", "3"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                  Style[
                   RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.0628271594645`3.699016464515157*^-25", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "2"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"momentum distribution function\""], 
                  Style[
                   RawBoxes["\"momentum distribution function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"277.7783930123559672608`3.6994929550110505", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], 
                  Style[
                   RawBoxes[
                   "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "5"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "6"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.545287181900632162762409899`3.4231242209056605*^12", 
                  RowBox[{
                    SuperscriptBox["\"kg\"", "5"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"m\"", "6"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "6"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.2668442839027641512496847069`3.7474815884056807*^9", 
                  RowBox[{
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "3"], "\[NegativeMediumSpace]", 
                    "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
                    "\"m\"", "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "5.53235080913428302245688806876`3.748241400892419*^11", 
                  RowBox[{
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "2"], "\[NegativeMediumSpace]", 
                    "\"/(\"", "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
                    SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                  Style[
                   RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"T\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 
                 Key["PlanckForm"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.9009267398721695844737538`3.7467231029146055*^6", 
                  RowBox[{
                    SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", 
                    SuperscriptBox["\"K\"", "4"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", "\"kg\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 
                 Key["ApproximateSIEquivalentOfPlanckUnits"]}, "Item", False],
                "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 
                 Key["exponentNeeded"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{443., {302.6340332872234, 308.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{443., {302.6340332872234, 308.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8764293194225473`*^9, 3.8764293486491575`*^9}, 
   3.876476493331495*^9, 3.876477006145992*^9, 3.8764770541882524`*^9},
 CellLabel->"Out[135]=",
 CellID->113979000,ExpressionUUID->"a7f01467-973a-4c78-8f42-b247ef44013c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"naturalUnitsData", "[", 
  RowBox[{"All", ",", 
   RowBox[{
    RowBox[{"SortBy", "[", "#exponentNeeded", "]"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876477057781043*^9, 3.8764771168260183`*^9}, 
   3.8764772211014338`*^9},
 CellLabel->"In[140]:=",
 CellID->11238651,ExpressionUUID->"d743d175-82f1-4e88-a54b-a52d8364ce86"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Key exponentNeeded is not one of {NaturalUnits}.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Dataset", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Key exponentNeeded is not one of {NaturalUnits}.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["Dataset", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  Dataset, <|
   "MessageTemplate" :> MessageName[Dataset, "partmismatch"], 
    "MessageParameters" -> <|"Type" -> TypeSystem`Struct[{"NaturalUnits"}, {
         TypeSystem`Struct[{
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Integer]}]}], "Part" -> "exponentNeeded", "Symbol" -> 
      Part|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876477118132081*^9, 3.8764772217776065`*^9},
 CellLabel->"Out[140]=",
 CellID->764992522,ExpressionUUID->"a21d2fa2-38fd-4f56-83e2-a80a5777e5c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<NaturalUnits\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<PlanckForm\>\"", "->", 
           RowBox[{"First", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"DimensionalCombinations", "[", 
                 RowBox[{
                  RowBox[{"{", "#", "}"}], ",", 
                  RowBox[{"IncludeQuantities", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                    "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], 
             ",", "\"\<SIBase\>\""}], "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ContainsAll", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
            "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
          RowBox[{"First", "[", 
           SuperscriptBox[
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
           "]"}]}], "]"}], "&"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", 
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
          "0"}], "&"}], "]"}], "[", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Entity", "[", 
            RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
           "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
  RowBox[{
  "1", ",", "\"\<NaturalUnits\>\"", ",", 
   "\"\<ApproximateSIEquivalentOfPlanckUnits\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8764293226597795`*^9, 3.8764293468361316`*^9}, {
  3.8764764983877*^9, 3.876476598342387*^9}},
 NumberMarks->False,
 CellLabel->"In[112]:=",
 CellID->7848525,ExpressionUUID->"270e2200-6e39-41cd-9ad1-4a76f8ffbb1d"],

Cell[BoxData[
 TemplateBox[{"1.464020717570756807`3.3521538207738626*^37", 
   RowBox[{
     SuperscriptBox["\"kg\"", "4"], "\[InvisibleSpace]", 
     SuperscriptBox["\"m\"", "8"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"s\"", "8"]}], 
   "kilogram to the fourth meters to the 8 per second to the 8", 
   FractionBox[
    RowBox[{
      SuperscriptBox["\"Kilograms\"", "4"], " ", 
      SuperscriptBox["\"Meters\"", "8"]}], 
    SuperscriptBox["\"Seconds\"", "8"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8764765071514235`*^9, 3.876476599106864*^9}},
 CellLabel->"Out[112]=",
 CellID->33591581,ExpressionUUID->"a51d7dce-279e-4c35-bf40-a94a6f1f8859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{"\"\<NaturalUnits\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<PlanckForm\>\"", "->", 
           RowBox[{"First", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], ",", 
              RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], 
          ",", 
          RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
           RowBox[{"UnitConvert", "[", 
            RowBox[{
             RowBox[{"First", "[", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"DimensionalCombinations", "[", 
                 RowBox[{
                  RowBox[{"{", "#", "}"}], ",", 
                  RowBox[{"IncludeQuantities", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                    "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                    "}"}]}]}], "]"}], ",", 
                RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}], 
             ",", "\"\<SIBase\>\""}], "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ContainsAll", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
            "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
          RowBox[{"First", "[", 
           SuperscriptBox[
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
           "]"}]}], "]"}], "&"}], "]"}], "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", 
            RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
          "0"}], "&"}], "]"}], "[", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Entity", "[", 
            RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
           "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
  RowBox[{"1", ",", "\"\<NaturalUnits\>\"", ",", 
   RowBox[{
    RowBox[{"Floor", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{
       "QuantityMagnitude", "@", "#ApproximateSIEquivalentOfPlanckUnits"}]}], 
      "]"}], "]"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8764766016650763`*^9, 3.87647660347663*^9}, {
  3.8764766570460634`*^9, 3.876476735358944*^9}, {3.8764769355550146`*^9, 
  3.876476946715652*^9}},
 CellLabel->"In[133]:=",
 CellID->48198902,ExpressionUUID->"e043c1ce-12a9-4180-9837-757c4514ba74"],

Cell[BoxData["37"], "Output",
 CellChangeTimes->{{3.876476693924515*^9, 3.8764767362053165`*^9}, 
   3.8764769476781616`*^9},
 CellLabel->"Out[133]=",
 CellID->447596073,ExpressionUUID->"372b0f64-0fd8-4125-ae9d-49f146f4aee1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MantissaExponent", "[", "50", "]"}]], "Input",
 CellChangeTimes->{{3.876476824440721*^9, 3.8764768246282463`*^9}},
 CellLabel->"In[125]:=",
 CellID->609332389,ExpressionUUID->"736a19e4-e477-463b-8fc2-a10e73cb6807"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.876476811102911*^9, 3.876476825054327*^9}},
 CellLabel->"Out[125]=",
 CellID->24843148,ExpressionUUID->"75ed8851-bc8f-407a-ba36-4d90c71d82b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", 
  RowBox[{"Log", "[", 
   RowBox[{"10", ",", "50"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8764768334588394`*^9, 3.876476837062915*^9}},
 CellLabel->"In[126]:=",
 CellID->45354307,ExpressionUUID->"df901ca8-36be-4964-b8fe-3dfb875a9a38"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.876476837435712*^9},
 CellLabel->"Out[126]=",
 CellID->155942171,ExpressionUUID->"936611b4-1e61-4b11-9cf8-ecdcf2814dc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["10", "j"]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8764768489481173`*^9, 3.8764768928082104`*^9}},
 CellLabel->"In[128]:=",
 CellID->1255464,ExpressionUUID->"98bad34a-7fae-40eb-a428-9a47ce2d7dc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "200000000000"], ",", 
     RowBox[{"-", "12"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "20000000000"], ",", 
     RowBox[{"-", "11"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2000000000"], ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "200000000"], ",", 
     RowBox[{"-", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "20000000"], ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2000000"], ",", 
     RowBox[{"-", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "200000"], ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "20000"], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2000"], ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "200"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "20"], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5000", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50000", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500000", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5000000", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50000000", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500000000", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5000000000", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50000000000", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500000000000", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5000000000000", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8764768868045087`*^9, 3.8764768931139884`*^9}},
 CellLabel->"Out[128]=",
 CellID->605120822,ExpressionUUID->"64d6b62a-9f4c-4ff5-bba0-9474a8bcb6fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "@", "i"}], ",", 
      RowBox[{"N", "@", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", "i"}], "]"}]}], ",", 
      RowBox[{"Floor", "[", 
       RowBox[{"Log", "[", 
        RowBox[{"10", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"5", " ", 
         SuperscriptBox["10", "j"]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"-", "12"}], ",", "12"}], "}"}]}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8764768962142067`*^9, 3.8764769158482*^9}},
 CellLabel->"In[132]:=",
 CellID->96249610,ExpressionUUID->"c5c7ba90-ea3c-42fc-8640-bed1cc28c8c6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"5.`*^-12", 
     RowBox[{"-", "11.30102999566398`"}], 
     RowBox[{"-", "12"}]},
    {"5.`*^-11", 
     RowBox[{"-", "10.30102999566398`"}], 
     RowBox[{"-", "11"}]},
    {"5.`*^-10", 
     RowBox[{"-", "9.30102999566398`"}], 
     RowBox[{"-", "10"}]},
    {"5.`*^-9", 
     RowBox[{"-", "8.30102999566398`"}], 
     RowBox[{"-", "9"}]},
    {"5.`*^-8", 
     RowBox[{"-", "7.3010299956639795`"}], 
     RowBox[{"-", "8"}]},
    {"5.`*^-7", 
     RowBox[{"-", "6.30102999566398`"}], 
     RowBox[{"-", "7"}]},
    {"5.`*^-6", 
     RowBox[{"-", "5.30102999566398`"}], 
     RowBox[{"-", "6"}]},
    {"0.00005`", 
     RowBox[{"-", "4.30102999566398`"}], 
     RowBox[{"-", "5"}]},
    {"0.0005`", 
     RowBox[{"-", "3.301029995663981`"}], 
     RowBox[{"-", "4"}]},
    {"0.005`", 
     RowBox[{"-", "2.301029995663981`"}], 
     RowBox[{"-", "3"}]},
    {"0.05`", 
     RowBox[{"-", "1.301029995663981`"}], 
     RowBox[{"-", "2"}]},
    {"0.5`", 
     RowBox[{"-", "0.30102999566398114`"}], 
     RowBox[{"-", "1"}]},
    {"5.`", "0.6989700043360186`", "0"},
    {"50.`", "1.6989700043360185`", "1"},
    {"500.`", "2.6989700043360183`", "2"},
    {"5000.`", "3.6989700043360187`", "3"},
    {"50000.`", "4.698970004336018`", "4"},
    {"500000.`", "5.698970004336018`", "5"},
    {"5.`*^6", "6.698970004336018`", "6"},
    {"5.`*^7", "7.698970004336018`", "7"},
    {"5.`*^8", "8.698970004336019`", "8"},
    {"5.`*^9", "9.698970004336017`", "9"},
    {"5.`*^10", "10.698970004336017`", "10"},
    {"5.`*^11", "11.698970004336017`", "11"},
    {"5.`*^12", "12.698970004336017`", "12"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8764768980888987`*^9, 3.8764769160756636`*^9}},
 CellLabel->"Out[132]=",
 CellID->265534111,ExpressionUUID->"081d5a50-43d0-44e6-9f26-992e9878b52a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{
  "MantissaExponent", "[", "1.464020717570756807`3.3521538207738626*^37", 
   "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[115]:=",
 CellID->16625164,ExpressionUUID->"8b128f8a-399e-4ad5-bbee-6720022e9629"],

Cell[BoxData["38"], "Output",
 CellChangeTimes->{3.876476616099537*^9},
 CellLabel->"Out[115]=",
 CellID->747829632,ExpressionUUID->"36f031bf-4d07-40b6-af9b-1fc92d22555c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Last", "[", 
   RowBox[{
   "MantissaExponent", "[", "1.464020717570756807`3.3521538207738626*^37", 
    "]"}], "]"}], "-", "1"}]], "Input",
 CellChangeTimes->{{3.8764766242949567`*^9, 3.876476624811561*^9}},
 NumberMarks->False,
 CellLabel->"In[116]:=",
 CellID->100368397,ExpressionUUID->"82885e6a-ff27-4e02-be5f-56edca5e9930"],

Cell[BoxData["37"], "Output",
 CellChangeTimes->{3.8764766251771545`*^9},
 CellLabel->"Out[116]=",
 CellID->805273223,ExpressionUUID->"6072d39e-d2b6-48a8-9cdd-098b76ea62c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EngineeringForm", "[", 
  "1.464020717570756807`3.3521538207738626*^37", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[114]:=",
 CellID->98006632,ExpressionUUID->"8683614a-6ea2-4fa3-8db2-30e162dad650"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox[
    RowBox[{"\<\"14.64\"\>", "\[Times]", 
     SuperscriptBox["10", "\<\"36\"\>"]}],
    ShowStringCharacters->False],
   1.464020717570756807`3.3521538207738626*^37,
   AutoDelete->True],
  EngineeringForm]], "Output",
 CellChangeTimes->{3.876476611916209*^9},
 CellLabel->"Out[114]//EngineeringForm=",
 CellID->231205349,ExpressionUUID->"be4493db-0dd1-40c2-b82a-001122a628d5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<NaturalUnits\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<PlanckForm\>\"", "->", 
         RowBox[{"First", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"DimensionalCombinations", "[", 
               RowBox[{
                RowBox[{"{", "#", "}"}], ",", 
                RowBox[{"IncludeQuantities", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                   "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                  "}"}]}]}], "]"}], "&"}], "@", "#"}], ",", 
            RowBox[{"_", "?", "QuantityQ"}], ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"\"\<ApproximateSIEquivalentOfPlanckUnits\>\"", "->", 
         RowBox[{"UnitConvert", "[", 
          RowBox[{
           RowBox[{"Numerator", "[", 
            RowBox[{"First", "[", 
             RowBox[{"DimensionalCombinations", "[", 
              RowBox[{
               RowBox[{"{", "#", "}"}], ",", 
               RowBox[{"IncludeQuantities", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<PlanckLength\>\"", ",", "\"\<PlanckTime\>\"", ",", 
                  "\"\<PlanckMass\>\"", ",", "\"\<PlanckTemperature\>\""}], 
                 "}"}]}]}], "]"}], "]"}], "]"}], ",", "\"\<SIBase\>\""}], 
          "]"}]}]}], "|>"}]}], "|>"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"ContainsAll", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", ",", 
          "\"\<TimeUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
        RowBox[{"First", "[", 
         SuperscriptBox[
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], 
         "]"}]}], "]"}], "&"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "[", 
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "]"}], "]"}], ">", 
        "0"}], "&"}], "]"}], "[", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Entity", "[", 
          RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"ReverseSort", "[", "dimensionsizes", "]"}], ",", "20"}], 
         "]"}]}], ")"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876428665233429*^9, 3.8764286698154917`*^9}, 
   3.876428724757661*^9, 3.8764287674636965`*^9, {3.8764288146530175`*^9, 
   3.8764288249635825`*^9}, {3.876429010400464*^9, 3.876429020503779*^9}, {
   3.8764291184484196`*^9, 3.876429142425253*^9}},
 CellLabel->"In[45]:=",
 CellID->39167317,ExpressionUUID->"62b21f57-41cb-4c8c-826a-6e3c2f8b2669"],

Cell[BoxData[
 RowBox[{"quantitiesSpannedByPlanckUnits", "="}]], "Input",
 CellChangeTimes->{{3.8763960743864555`*^9, 3.8763960786628675`*^9}},
 CellID->625552354,ExpressionUUID->"f2bbce42-fb43-4854-a795-680327bfdcd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"First", "[", "quantitiesSpannedByPlanckUnits", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<CanonicalName\>\"", ",", "\"\<Dimensions\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.876395924682209*^9, 3.8763959353317156`*^9}},
 CellLabel->"In[10]:=",
 CellID->735462750,ExpressionUUID->"fc0cb513-7c4f-4c4b-9389-af064de9f611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Absackle\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "6"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8763959355865564`*^9},
 CellLabel->"Out[10]=",
 CellID->497554231,ExpressionUUID->"46423527-cb09-4ef5-a17b-f4458650df77"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<PhysicalQuantity\>\"", "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8763958063587055`*^9, 3.8763958180095015`*^9}},
 CellID->18444679,ExpressionUUID->"3ce1714b-0a94-4370-b6fb-5c98aa073acf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftFloor]", 
      FractionBox["i", "3"], "\[RightFloor]"}], ",", "i", ",", 
     RowBox[{"\[LeftCeiling]", 
      FractionBox["i", "3"], "\[RightCeiling]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "9"}], ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8764297806738353`*^9, 3.8764298134896455`*^9}},
 CellLabel->"In[64]:=",
 CellID->629217584,ExpressionUUID->"ce6079ef-3076-4c72-9b61-02cf4da38906"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8764298138757915`*^9},
 CellLabel->"Out[64]=",
 CellID->12516064,ExpressionUUID->"06e8fea9-da90-4e1e-813e-a61aa4eac703"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[LeftFloor]", 
       FractionBox["i", "3"], "\[RightFloor]"}], ",", "i", ",", 
      RowBox[{"\[LeftCeiling]", 
       FractionBox["i", "3"], "\[RightCeiling]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"-", "9"}], ",", "9"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8764298192769628`*^9, 3.876429821299904*^9}},
 CellLabel->"In[65]:=",
 CellID->127190513,ExpressionUUID->"ad39036e-44d8-46e0-a37c-0dab0bcd9a1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2", ",", "3", ",", "4", 
     ",", "5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.876429821595862*^9},
 CellLabel->"Out[65]=",
 CellID->587082549,ExpressionUUID->"8b90823c-a617-44b1-8919-708da7abcb34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[LeftFloor]", 
         FractionBox[
          RowBox[{"i", "+", "1"}], "3"], "\[RightFloor]"}], ",", "i", ",", 
        RowBox[{"\[LeftCeiling]", 
         FractionBox[
          RowBox[{"i", "+", "1"}], "3"], "\[RightCeiling]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", "9"}], ",", "6"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "6"}], ",", "3"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}], ",", 
   RowBox[{"AxesOrigin", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8764298232550683`*^9, 3.876429998946275*^9}},
 CellLabel->"In[83]:=",
 CellID->36352683,ExpressionUUID->"12265faa-6551-4737-9499-df262dedb5a8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., -3.}, {2., -3.}, {3., -2.}, {4., -2.}, {5., -2.}, {
      6., -1.}, {7., -1.}, {8., -1.}, {9., 0.}, {10., 0.}, {11., 0.}, {12., 
      1.}, {13., 1.}, {14., 1.}, {15., 2.}, {16., 2.}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., -9.}, {2., -8.}, {3., -7.}, {4., -6.}, {5., -5.}, {
      6., -4.}, {7., -3.}, {8., -2.}, {9., -1.}, {10., 0.}, {11., 1.}, {12., 
      2.}, {13., 3.}, {14., 4.}, {15., 5.}, {16., 6.}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., -2.}, {2., -2.}, {3., -2.}, {4., -1.}, {5., -1.}, {
      6., -1.}, {7., 0.}, {8., 0.}, {9., 0.}, {10., 1.}, {11., 1.}, {12., 
      1.}, {13., 2.}, {14., 2.}, {15., 2.}, {16., 3.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 16.}, {-9., 6.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{-6, 
      FormBox[
       RowBox[{"-", "6"}], TraditionalForm]}, {-5, 
      FormBox[
       RowBox[{"-", "5"}], TraditionalForm]}, {-4, 
      FormBox[
       RowBox[{"-", "4"}], TraditionalForm]}, {-3, 
      FormBox[
       RowBox[{"-", "3"}], TraditionalForm]}, {-2, 
      FormBox[
       RowBox[{"-", "2"}], TraditionalForm]}, {-1, 
      FormBox[
       RowBox[{"-", "1"}], TraditionalForm]}, {0, 
      FormBox["0", TraditionalForm]}, {1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.876429829005292*^9, 3.876429999256116*^9}},
 CellLabel->"Out[83]=",
 CellID->338272028,ExpressionUUID->"04236240-7431-48f0-8758-8fcdfa19da97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "3"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.876430011671943*^9, 3.876430045203723*^9}},
 CellLabel->"In[84]:=",
 CellID->369595919,ExpressionUUID->"e66d332a-1610-4a7b-b528-b0981157a377"],

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "3"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.876430045596228*^9},
 CellLabel->"Out[84]=",
 CellID->221261696,ExpressionUUID->"c67127e1-4603-4308-a3c9-89a551d5aa9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"Joined", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8764300627793493`*^9, 3.8764301614564934`*^9}},
 CellLabel->"In[94]:=",
 CellID->406626482,ExpressionUUID->"87de7e97-5c91-4dcc-8ad5-59ca6c7f34bc"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     LineBox[{{-4., -2.}, {-3., -1.}, {-2., -1.}, {-1., -1.}, {0., 0.}, {1., 
      0.}, {2., 0.}, {3., 1.}, {4., 1.}, {5., 1.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-4., 5.}, {-2., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.876430069617776*^9, 3.87643016223558*^9}},
 CellLabel->"Out[94]=",
 CellID->623168701,ExpressionUUID->"f2aec6db-0d51-4079-bc4e-6632c705fc91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "=", 
  RowBox[{"ResourceData", "@", 
   RowBox[{
   "ResourceObject", "[", 
    "\"\<Sample Data: Solar System Planets and Moons\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8764772762019715`*^9, 3.8764772762039733`*^9}, {
  3.8764773078901243`*^9, 3.876477341599965*^9}},
 CellLabel->"In[145]:=",
 CellID->518959957,ExpressionUUID->"f11243c8-22b2-4609-8b54-8871491c30a0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> <|
        "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[1515.9592977014236856756`5., "Miles"], "Moons" -> <||>|>, 
       "Venus" -> <|
        "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
         "Radius" -> Quantity[3760.4452497415095840294`5., "Miles"], 
         "Moons" -> <||>|>, 
       "Earth" -> <|
        "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
         Quantity[3958.7608367135926191043`7., "Miles"], 
         "Moons" -> <|
          "Moon" -> <|
            "Mass" -> Quantity[
              7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1079.6324465123677722102`5., "Miles"]|>|>|>,
        "Mars" -> <|
        "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
         Quantity[2106.1376560884434900182`5., "Miles"], 
         "Moons" -> <|
          "Deimos" -> <|
            "Mass" -> Quantity[
              1.468340774924336`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[3.8525013918714706117`2., "Miles"]|>, 
           "Phobos" -> <|
            "Mass" -> Quantity[
              1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
             "Radius" -> Quantity[6.8972202338344070631`3., "Miles"]|>|>|>, 
       "Jupiter" -> <|
        "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
         Quantity[43440.6814205042551499244`5., "Miles"], 
         "Moons" -> <|
          "Adrastea" -> <|
            "Mass" -> Quantity[
              7.491534565940487`0.9999565727231415*^15, "Kilograms"], 
             "Radius" -> Quantity[5.0952437763461385509`2., "Miles"]|>, 
           "Aitne" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Amalthea" -> <|
            "Mass" -> Quantity[
              2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
             "Radius" -> Quantity[51.8534259922055197645`4., "Miles"]|>, 
           "Ananke" -> <|
            "Mass" -> Quantity[
              2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[8.6991966913226755739`2., "Miles"]|>, 
           "Aoede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Arche" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Autonoe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Callirrhoe" -> <|
            "Mass" -> Quantity[
              8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.6718961266205360693`2., "Miles"]|>, 
           "Callisto" -> <|
            "Mass" -> Quantity[
              1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1497.6909846496460669689`5., "Miles"]|>, 
           "Carme" -> <|
            "Mass" -> Quantity[
              1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[14.2915374214586813013`2., "Miles"]|>, 
           "Carpo" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Chaldene" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]|>, 
           "Cyllene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Elara" -> <|
            "Mass" -> Quantity[
              8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[26.7189612662053606936`2., "Miles"]|>, 
           "Erinome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]|>, 
           "Euanthe" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Eukelade" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Euporie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Europa" -> <|
            "Mass" -> Quantity[
              4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[969.8361568440308597789`5., "Miles"]|>, 
           "Eurydome" -> <|
            "Mass" -> Quantity[
              4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.9320567883560009545`2., "Miles"]|>, 
           "Ganymede" -> <|
            "Mass" -> Quantity[
              1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
             "Radius" -> Quantity[1634.9518810148731408574`5., "Miles"]|>, 
           "Harpalyke" -> <|
            "Mass" -> Quantity[
              1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
             Quantity[1.3670166229221347332`2., "Miles"]|>, 
           "Hegemone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Helike" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Hermippe" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Herse" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Himalia" -> <|
            "Mass" -> Quantity[
              6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[52.8165513401733874181`2., "Miles"]|>, 
           "Io" -> <|
            "Mass" -> Quantity[
              8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
             "Radius" -> Quantity[1131.8897637795275590551`5., "Miles"]|>, 
           "Iocaste" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Isonoe" -> <|
            "Mass" -> Quantity[
              7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.1806052652509345422`2., "Miles"]|>, 
           "Kale" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Kallichore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Kalyke" -> <|
            "Mass" -> Quantity[
              1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Kore" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Leda" -> <|
            "Mass" -> Quantity[
              1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Lysithea" -> <|
            "Mass" -> Quantity[
              6.2928890353900092`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[11.1846814602720114531`2., "Miles"]|>, 
           "Megaclite" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.677702219040801718`2., "Miles"]|>, 
           "Metis" -> <|
            "Mass" -> Quantity[
              1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
             "Radius" -> Quantity[13.3594806331026803464`3., "Miles"]|>, 
           "Mneme" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Orthosie" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Pasiphae" -> <|
            "Mass" -> Quantity[
              2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
             "Radius" -> Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Pasithee" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Praxidike" -> <|
            "Mass" -> Quantity[
              4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1126620536069354967`2., "Miles"]|>, 
           "S/2000 J11" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J10" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2003 J15" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J16" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J18" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J19" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J2" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J23" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J4" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2003 J5" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "S/2003 J9" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2010 J1" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2010 J2" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2011 J1" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2011 J2" -> <|
            "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "S/2016 J1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.3106855961186669848`2., "Miles"]|>, 
           "S/2017 J1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Sinope" -> <|
            "Mass" -> Quantity[
              7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
             "Radius" -> Quantity[11.8060526525093454228`2., "Miles"]|>, 
           "Sponde" -> <|
            "Mass" -> Quantity[
              1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`2., "Miles"]|>, 
           "Taygete" -> <|
            "Mass" -> Quantity[
              1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]|>, 
           "Thebe" -> <|
            "Mass" -> Quantity[
              1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[30.6335997773005647022`3., "Miles"]|>, 
           "Thelxinoe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Themisto" -> <|
            "Mass" -> Quantity[
              6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Thyone" -> <|
            "Mass" -> Quantity[
              8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>|>|>, 
       "Saturn" -> <|
        "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[36183.6872663644317187624`5., "Miles"], 
         "Moons" -> <|
          "Aegaeon" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.1553427980593334919`2., "Miles"]|>, 
           "Aegir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Albiorix" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
           "Anthe" -> <|
            "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
             Quantity[0.6213711922373339697`1., "Miles"]|>, 
           "Atlas" -> <|
            "Mass" -> Quantity[
              2.097629678463337`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Bebhionn" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Bergelmir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Bestla" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Calypso" -> <|
            "Mass" -> Quantity[
              3.595936591651433`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.9030263262546727113`2., "Miles"]|>, 
           "Daphnis" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4233476497256024816`2., "Miles"]|>, 
           "Dione" -> <|
            "Mass" -> Quantity[
              1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[349.5212956335003579097`4., "Miles"]|>, 
           "Enceladus" -> <|
            "Mass" -> Quantity[
              1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
             "Radius" -> Quantity[156.7719518014793605344`4., "Miles"]|>, 
           "Epimetheus" -> <|
            "Mass" -> Quantity[
              5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[36.2259405074365704286`3., "Miles"]|>, 
           "Erriapo" -> <|
            "Mass" -> Quantity[
              7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]|>, 
           "Farbauti" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Fenrir" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "Fornjot" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Greip" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Hati" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Helene" -> <|
            "Mass" -> Quantity[
              2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
           "Hyperion" -> <|
            "Mass" -> Quantity[
              5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[82.6423685675654179591`4., "Miles"]|>, 
           "Hyrrokkin" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.4854847689493358785`2., "Miles"]|>, 
           "Iapetus" -> <|
            "Mass" -> Quantity[
              1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[456.3971406983218006841`4., "Miles"]|>, 
           "Ijiraq" -> <|
            "Mass" -> Quantity[
              1.198645530550478`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[3.7282271534240038177`1., "Miles"]|>, 
           "Janus" -> <|
            "Mass" -> Quantity[
              1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[56.1719557782549908535`3., "Miles"]|>, 
           "Jarnsaxa" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Kari" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Kiviuq" -> <|
            "Mass" -> Quantity[
              3.296275209013815`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[4.970969537898671757`1., "Miles"]|>, 
           "Loge" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Methone" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.9941939075797343514`2., "Miles"]|>, 
           "Mimas" -> <|
            "Mass" -> Quantity[
              3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
             "Radius" -> Quantity[123.5285930167819931599`4., "Miles"]|>, 
           "Mundilfari" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Narvi" -> <|
            "Mass" -> Quantity[
              3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Paaliaq" -> <|
            "Mass" -> Quantity[
              8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
             Quantity[6.8350831146106736658`3., "Miles"]|>, 
           "Pallene" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.6155650998170683209`2., "Miles"]|>, 
           "Pan" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.9535512606378748103`3., "Miles"]|>, 
           "Pandora" -> <|
            "Mass" -> Quantity[
              1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[25.2276704048357591665`3., "Miles"]|>, 
           "Phoebe" -> <|
            "Mass" -> Quantity[
              8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[66.2381690924998011613`4., "Miles"]|>, 
           "Polydeuces" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[0.7456454306848007635`2., "Miles"]|>, 
           "Prometheus" -> <|
            "Mass" -> Quantity[
              1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
           "Rhea" -> <|
            "Mass" -> Quantity[
              2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
             "Radius" -> Quantity[475.0382764654418197725`4., "Miles"]|>, 
           "S/2004 S12" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2004 S13" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2004 S17" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.2427423844746679391`2., "Miles"]|>, 
           "S/2004 S7" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2006 S1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2006 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "S/2007 S2" -> <|
            "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
             Quantity[1.8641135767120019088`1., "Miles"]|>, 
           "S/2007 S3" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.553427980593334924`2., "Miles"]|>, 
           "S/2009 S1" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Missing["NotAvailable"]|>, 
           "Siarnaq" -> <|
            "Mass" -> Quantity[
              3.8955979742890535`1.999565922520683*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Skathi" -> <|
            "Mass" -> Quantity[
              3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
             Quantity[2.4854847689493358785`1., "Miles"]|>, 
           "Skoll" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Surtur" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[1.8641135767120019088`2., "Miles"]|>, 
           "Suttungr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Tarqeq" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Tarvos" -> <|
            "Mass" -> Quantity[
              2.696952443738576`1.9995659225206786*^15, "Kilograms"], 
             "Radius" -> Quantity[4.6602839417800047721`2., "Miles"]|>, 
           "Telesto" -> <|
            "Mass" -> Quantity[
              7.191873183302868`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[7.4564543068480076355`2., "Miles"]|>, 
           "Tethys" -> <|
            "Mass" -> Quantity[
              6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
             "Radius" -> Quantity[333.2413703968822079058`4., "Miles"]|>, 
           "Thrymr" -> <|
            "Mass" -> Quantity[
              2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
             Quantity[2.1747991728306688936`2., "Miles"]|>, 
           "Titan" -> <|
            "Mass" -> Quantity[
              1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
             "Radius" -> Quantity[1600.3415056072536387497`5., "Miles"]|>, 
           "Ymir" -> <|
            "Mass" -> Quantity[
              4.944412813520729`1.9995659225206872*^15, "Kilograms"], 
             "Radius" -> Quantity[5.5923407301360057265`1., "Miles"]|>|>|>, 
       "Uranus" -> <|
        "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
         Quantity[15759.2161775232641374374`5., "Miles"], 
         "Moons" -> <|
          "Ariel" -> <|
            "Mass" -> Quantity[
              1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[359.711783186192635012`4., "Miles"]|>, 
           "Belinda" -> <|
            "Mass" -> Quantity[
              3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[25.0412590471645589755`3., "Miles"]|>, 
           "Bianca" -> <|
            "Mass" -> Quantity[
              9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[15.9692396404994830191`3., "Miles"]|>, 
           "Caliban" -> <|
            "Mass" -> Quantity[
              7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[30.4471884196293645112`2., "Miles"]|>, 
           "Cordelia" -> <|
            "Mass" -> Quantity[
              4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[12.4895609639704127894`3., "Miles"]|>, 
           "Cressida" -> <|
            "Mass" -> Quantity[
              3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[24.7305734510458919908`3., "Miles"]|>, 
           "Cupid" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]|>, 
           "Desdemona" -> <|
            "Mass" -> Quantity[
              1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
             "Radius" -> Quantity[19.8838781515946870277`3., "Miles"]|>, 
           "Ferdinand" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Francisco" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.8350831146106736658`2., "Miles"]|>, 
           "Juliet" -> <|
            "Mass" -> Quantity[
              5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
             "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
           "Mab" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[3.1068559611866698482`2., "Miles"]|>, 
           "Margaret" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Miranda" -> <|
            "Mass" -> Quantity[
              6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
             "Radius" -> Quantity[146.5193271295633500358`4., "Miles"]|>, 
           "Oberon" -> <|
            "Mass" -> Quantity[
              3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[473.1120257695060844667`4., "Miles"]|>, 
           "Ophelia" -> <|
            "Mass" -> Quantity[
              5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[13.2973435138789469498`3., "Miles"]|>, 
           "Perdita" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Portia" -> <|
            "Mass" -> Quantity[
              1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[42.0046925952437763461`3., "Miles"]|>, 
           "Prospero" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
           "Puck" -> <|
            "Mass" -> Quantity[
              2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
             "Radius" -> Quantity[50.3310665712240515389`2., "Miles"]|>, 
           "Rosalind" -> <|
            "Mass" -> Quantity[
              2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
             "Radius" -> Quantity[22.3693629205440229062`2., "Miles"]|>, 
           "Setebos" -> <|
            "Mass" -> Quantity[
              2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
             "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
           "Stephano" -> <|
            "Mass" -> Quantity[
              5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
             Quantity[6.2137119223733396961`2., "Miles"]|>, 
           "Sycorax" -> <|
            "Mass" -> Quantity[
              5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
             "Radius" -> Quantity[59.0302632625467271138`2., "Miles"]|>, 
           "Titania" -> <|
            "Mass" -> Quantity[
              3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
             "Radius" -> Quantity[490.1997335560327686312`4., "Miles"]|>, 
           "Trinculo" -> <|
            "Mass" -> Quantity[
              7.49153456594048`0.9999565727231373*^14, "Kilograms"], "Radius" -> 
             Quantity[3.1068559611866698482`1., "Miles"]|>, 
           "Umbriel" -> <|
            "Mass" -> Quantity[
              1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
             "Radius" -> Quantity[363.3157361011691720354`4., "Miles"]|>|>|>, 
       "Neptune" -> <|
        "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
         Quantity[15299.4014952676369999204`5., "Miles"], 
         "Moons" -> <|
          "Despina" -> <|
            "Mass" -> Quantity[
              2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[46.6028394178000477213`2., "Miles"]|>, 
           "Galatea" -> <|
            "Mass" -> Quantity[
              3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
             "Radius" -> Quantity[54.6806649168853893264`2., "Miles"]|>, 
           "Halimede" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Laomedeia" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Larissa" -> <|
            "Mass" -> Quantity[
              4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
             "Radius" -> Quantity[60.2730056470213950529`2., "Miles"]|>, 
           "Naiad" -> <|
            "Mass" -> Quantity[
              1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[20.5052493438320209974`2., "Miles"]|>, 
           "Nereid" -> <|
            "Mass" -> Quantity[
              3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
             "Radius" -> Quantity[105.633102680346774835`3., "Miles"]|>, 
           "Neso" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[18.6411357671200190886`2., "Miles"]|>, 
           "Proteus" -> <|
            "Mass" -> Quantity[
              5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
             "Radius" -> Quantity[130.4879503698401336197`3., "Miles"]|>, 
           "Psamathe" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "S/2004 N1" -> <|
            "Mass" -> Quantity[5.`2.*^15, "Kilograms"], "Radius" -> Quantity[
               
               Interval[{
                4.6073630000795355123`1.9670113285478368, 
                 6.5773184601924759406`2.02469775521267}], "Miles"]|>, 
           "Sao" -> <|
            "Mass" -> Missing["NotAvailable"], "Radius" -> 
             Quantity[12.4274238447466793923`2., "Miles"]|>, 
           "Thalassa" -> <|
            "Mass" -> Quantity[
              3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
             "Radius" -> Quantity[25.4762188817306927544`2., "Miles"]|>, 
           "Triton" -> <|
            "Mass" -> Quantity[
              2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
             "Radius" -> 
             Quantity[840.9637715740077944802`5., "Miles"]|>|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[13]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> <|"ID" -> 74754014623759|>, "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 1, {All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[13]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
             TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`KeyValueShape[
                 TypeSystem`PackageScope`AtomShape[78.4], 
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                    TypeSystem`PackageScope`AtomShape[75]|>], 
                  DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
               DirectedInfinity[1], {All, "Moons"}]|>], 
           DirectedInfinity[1], 3, {All}]]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 8, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1515.9592977014236856756`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3760.4452497415095840294`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"], 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3958.7608367135926191043`7", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"], 
                    Key["Moons"], 
                    Key["Moon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1079.6324465123677722102`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"], 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2106.1376560884434900182`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Deimos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.468340774924336`1.9995659225206786*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8525013918714706117`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"], 
                    Key["Moons"], 
                    Key["Phobos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.8972202338344070631`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"], 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"43440.6814205042551499244`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Adrastea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.491534565940487`0.9999565727231415*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.0952437763461385509`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aitne", 
                  Style[
                  "Aitne", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"], 
                    Key["Aitne"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4949207395643`0.9999565727231415*^13", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.9320567883560009545`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["69 total \:203a ", ""], 
                  Style[
                   Superscript["69 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"36183.6872663644317187624`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegaeon", 
                  Style[
                  "Aegaeon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegaeon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1553427980593334919`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegir", 
                  Style[
                  "Aegir", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"], 
                    Key["Aegir"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.8641135767120019088`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["62 total \:203a ", ""], 
                  Style[
                   Superscript["62 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15759.2161775232641374374`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ariel", 
                  Style[
                  "Ariel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Ariel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.352971142608851997243`2.9956786262173587*^21", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"359.711783186192635012`4", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Belinda", 
                  Style[
                  "Belinda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"], 
                    Key["Belinda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.56597045338767194`2.995678626217367*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"25.0412590471645589755`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15299.4014952676369999204`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Despina", 
                  Style[
                  "Despina", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Despina"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "2.09762967846333643`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"46.6028394178000477213`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Galatea", 
                  Style[
                  "Galatea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"], 
                    Key["Galatea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"54.6806649168853893264`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["14 total \:203a ", ""], 
                  Style[
                   Superscript["14 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"], 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"], 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{506., {248.13403328722342`, 253.86596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{506., {248.13403328722342`, 253.86596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8764772781050997`*^9, {3.8764773109790077`*^9, 3.8764773432310157`*^9}},
 CellLabel->"Out[145]=",
 CellID->992341970,ExpressionUUID->"a2c90bf3-69f5-442a-8b42-113e8b915111"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", "Keys", "]"}]], "Input",
 CellChangeTimes->{{3.876477348708967*^9, 3.8764773504387913`*^9}},
 CellLabel->"In[146]:=",
 CellID->167780611,ExpressionUUID->"c841aa67-a511-47f2-a3ea-11aa10427bb8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", 
       "Neptune"}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[78.4]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[78.4]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 8], "Path" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 8, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["Mercury", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Venus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Earth", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Mars", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Jupiter", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Saturn", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Uranus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Neptune", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{88., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{88., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876477350751551*^9},
 CellLabel->"Out[146]=",
 CellID->414534700,ExpressionUUID->"f8c5a2c7-1c46-47c4-b1e9-f1cb4308084e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", "Values", "]"}]], "Input",
 CellChangeTimes->{{3.876477348708967*^9, 3.8764773622027206`*^9}},
 CellLabel->"In[147]:=",
 CellID->260334824,ExpressionUUID->"e6bce1e4-b268-4724-b1d4-352771cf6f9f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Mass" -> Quantity[3.30104`6.*^23, "Kilograms"], "Radius" -> 
        Quantity[1515.9592977014236856756`5., "Miles"], "Moons" -> <||>|>, <|
       "Mass" -> Quantity[4.867320000000000000000001`6.*^24, "Kilograms"], 
        "Radius" -> Quantity[3760.4452497415095840294`5., "Miles"], 
        "Moons" -> <||>|>, <|
       "Mass" -> Quantity[5.9721986`8.*^24, "Kilograms"], "Radius" -> 
        Quantity[3958.7608367135926191043`7., "Miles"], 
        "Moons" -> <|
         "Moon" -> <|
           "Mass" -> Quantity[
             7.3459006322855173653772`4.995678626217362*^22, "Kilograms"], 
            "Radius" -> 
            Quantity[1079.6324465123677722102`5., "Miles"]|>|>|>, <|
       "Mass" -> Quantity[6.41693`6.*^23, "Kilograms"], "Radius" -> 
        Quantity[2106.1376560884434900182`5., "Miles"], 
        "Moons" -> <|
         "Deimos" -> <|
           "Mass" -> Quantity[
             1.468340774924336`1.9995659225206786*^15, "Kilograms"], "Radius" -> 
            Quantity[3.8525013918714706117`2., "Miles"]|>, 
          "Phobos" -> <|
           "Mass" -> Quantity[
             1.0724880884600402`3.9586073148417724*^16, "Kilograms"], 
            "Radius" -> Quantity[6.8972202338344070631`3., "Miles"]|>|>|>, <|
       "Mass" -> Quantity[1.89813`6.*^27, "Kilograms"], "Radius" -> 
        Quantity[43440.6814205042551499244`5., "Miles"], 
        "Moons" -> <|
         "Adrastea" -> <|
           "Mass" -> Quantity[
             7.491534565940487`0.9999565727231415*^15, "Kilograms"], "Radius" -> 
            Quantity[5.0952437763461385509`2., "Miles"]|>, 
          "Aitne" -> <|
           "Mass" -> Quantity[
             4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.9320567883560009545`2., "Miles"]|>, 
          "Amalthea" -> <|
           "Mass" -> Quantity[
             2.067663540199574478`2.995678626217367*^18, "Kilograms"], 
            "Radius" -> Quantity[51.8534259922055197645`4., "Miles"]|>, 
          "Ananke" -> <|
           "Mass" -> Quantity[
             2.9966138263761948`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[8.6991966913226755739`2., "Miles"]|>, 
          "Aoede" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "Arche" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.9320567883560009545`2., "Miles"]|>, 
          "Autonoe" -> <|
           "Mass" -> Quantity[
             8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Callirrhoe" -> <|
           "Mass" -> Quantity[
             8.69018009649097`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.6718961266205360693`2., "Miles"]|>, 
          "Callisto" -> <|
           "Mass" -> Quantity[
             1.07567783404752629528633`4.995678626217362*^23, "Kilograms"], 
            "Radius" -> Quantity[1497.6909846496460669689`5., "Miles"]|>, 
          "Carme" -> <|
           "Mass" -> Quantity[
             1.31851008360552575`1.9995659225206786*^17, "Kilograms"], 
            "Radius" -> Quantity[14.2915374214586813013`2., "Miles"]|>, 
          "Carpo" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Chaldene" -> <|
           "Mass" -> Quantity[
             7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[1.1806052652509345422`2., "Miles"]|>, 
          "Cyllene" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Elara" -> <|
           "Mass" -> Quantity[
             8.6901800964909652`1.9995659225206872*^17, "Kilograms"], 
            "Radius" -> Quantity[26.7189612662053606936`2., "Miles"]|>, 
          "Erinome" -> <|
           "Mass" -> Quantity[
             4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.9941939075797343514`2., "Miles"]|>, 
          "Euanthe" -> <|
           "Mass" -> Quantity[
             4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.9320567883560009545`2., "Miles"]|>, 
          "Eukelade" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "Euporie" -> <|
           "Mass" -> Quantity[
             1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Europa" -> <|
           "Mass" -> Quantity[
             4.7986859848371340385365`4.995678626217362*^22, "Kilograms"], 
            "Radius" -> Quantity[969.8361568440308597789`5., "Miles"]|>, 
          "Eurydome" -> <|
           "Mass" -> Quantity[
             4.4949207395643`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.9320567883560009545`2., "Miles"]|>, 
          "Ganymede" -> <|
           "Mass" -> Quantity[
             1.48150100386563183602529`4.995678626217362*^23, "Kilograms"], 
            "Radius" -> Quantity[1634.9518810148731408574`5., "Miles"]|>, 
          "Harpalyke" -> <|
           "Mass" -> Quantity[
             1.19864553055047`0.9999565727231415*^14, "Kilograms"], "Radius" -> 
            Quantity[1.3670166229221347332`2., "Miles"]|>, 
          "Hegemone" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Helike" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "Hermippe" -> <|
           "Mass" -> Quantity[
             8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Herse" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Himalia" -> <|
           "Mass" -> Quantity[
             6.742381109346438525`1.999565922520683*^18, "Kilograms"], 
            "Radius" -> Quantity[52.8165513401733874181`2., "Miles"]|>, 
          "Io" -> <|
           "Mass" -> Quantity[
             8.9297833448203530011087`4.995678626217362*^22, "Kilograms"], 
            "Radius" -> Quantity[1131.8897637795275590551`5., "Miles"]|>, 
          "Iocaste" -> <|
           "Mass" -> Quantity[
             1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[1.6155650998170683209`2., "Miles"]|>, 
          "Isonoe" -> <|
           "Mass" -> Quantity[
             7.4915345659396`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[1.1806052652509345422`2., "Miles"]|>, 
          "Kale" -> <|
           "Mass" -> Quantity[
             1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Kallichore" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Kalyke" -> <|
           "Mass" -> Quantity[
             1.94779898714453`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[1.6155650998170683209`2., "Miles"]|>, 
          "Kore" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Leda" -> <|
           "Mass" -> Quantity[
             1.0937640466273112`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Lysithea" -> <|
           "Mass" -> Quantity[
             6.2928890353900092`1.999565922520683*^16, "Kilograms"], "Radius" -> 
            Quantity[11.1846814602720114531`2., "Miles"]|>, 
          "Megaclite" -> <|
           "Mass" -> Quantity[
             2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[1.677702219040801718`2., "Miles"]|>, 
          "Metis" -> <|
           "Mass" -> Quantity[
             1.19864553055047796`0.9999565727231415*^17, "Kilograms"], 
            "Radius" -> Quantity[13.3594806331026803464`3., "Miles"]|>, 
          "Mneme" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Orthosie" -> <|
           "Mass" -> Quantity[
             1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Pasiphae" -> <|
           "Mass" -> Quantity[
             2.9966138263761949`1.9995659225206786*^17, "Kilograms"], 
            "Radius" -> Quantity[18.6411357671200190886`2., "Miles"]|>, 
          "Pasithee" -> <|
           "Mass" -> Quantity[
             1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Praxidike" -> <|
           "Mass" -> Quantity[
             4.34509004824548`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.1126620536069354967`2., "Miles"]|>, 
          "S/2000 J11" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J10" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J12" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2003 J15" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J16" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J18" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J19" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J2" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J23" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J3" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J4" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2003 J5" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "S/2003 J9" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2010 J1" -> <|
           "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2010 J2" -> <|
           "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2011 J1" -> <|
           "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2011 J2" -> <|
           "Mass" -> Quantity[1.5`2.*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "S/2016 J1" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.3106855961186669848`2., "Miles"]|>, 
          "S/2017 J1" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Sinope" -> <|
           "Mass" -> Quantity[
             7.4915345659404873`1.9995659225206786*^16, "Kilograms"], 
            "Radius" -> Quantity[11.8060526525093454228`2., "Miles"]|>, 
          "Sponde" -> <|
           "Mass" -> Quantity[
             1.4983069131881`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`2., "Miles"]|>, 
          "Taygete" -> <|
           "Mass" -> Quantity[
             1.6481376045069`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[1.553427980593334924`2., "Miles"]|>, 
          "Thebe" -> <|
           "Mass" -> Quantity[
             1.49830691318809745`1.9995659225206872*^18, "Kilograms"], 
            "Radius" -> Quantity[30.6335997773005647022`3., "Miles"]|>, 
          "Thelxinoe" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Themisto" -> <|
           "Mass" -> Quantity[
             6.89221180066526`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "Thyone" -> <|
           "Mass" -> Quantity[
             8.9898414791287`0.9999565727231415*^13, "Kilograms"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>|>|>, <|
       "Mass" -> Quantity[5.68319`6.*^26, "Kilograms"], "Radius" -> 
        Quantity[36183.6872663644317187624`5., "Miles"], 
        "Moons" -> <|
         "Aegaeon" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.1553427980593334919`2., "Miles"]|>, 
          "Aegir" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Albiorix" -> <|
           "Mass" -> Quantity[
             2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
          "Anthe" -> <|
           "Mass" -> Quantity[5.`1.*^12, "Kilograms"], "Radius" -> 
            Quantity[0.6213711922373339697`1., "Miles"]|>, 
          "Atlas" -> <|
           "Mass" -> Quantity[
             2.097629678463337`1.9995659225206786*^15, "Kilograms"], "Radius" -> 
            Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Bebhionn" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Bergelmir" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Bestla" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Calypso" -> <|
           "Mass" -> Quantity[
             3.595936591651433`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[5.9030263262546727113`2., "Miles"]|>, 
          "Daphnis" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4233476497256024816`2., "Miles"]|>, 
          "Dione" -> <|
           "Mass" -> Quantity[
             1.095457133439213688532`4.6989700043360205*^21, "Kilograms"], 
            "Radius" -> Quantity[349.5212956335003579097`4., "Miles"]|>, 
          "Enceladus" -> <|
           "Mass" -> Quantity[
             1.08027928440861826137`3.9586073148417764*^20, "Kilograms"], 
            "Radius" -> Quantity[156.7719518014793605344`4., "Miles"]|>, 
          "Epimetheus" -> <|
           "Mass" -> Quantity[
             5.25905726529022205`2.9956786262173543*^17, "Kilograms"], 
            "Radius" -> Quantity[36.2259405074365704286`3., "Miles"]|>, 
          "Erriapo" -> <|
           "Mass" -> Quantity[
             7.64136525725929`1.9995659225206914*^14, "Kilograms"], "Radius" -> 
            Quantity[3.1068559611866698482`1., "Miles"]|>, 
          "Farbauti" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Fenrir" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "Fornjot" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Greip" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Hati" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Helene" -> <|
           "Mass" -> Quantity[
             2.5471217524197656`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[9.941939075797343514`2., "Miles"]|>, 
          "Hyperion" -> <|
           "Mass" -> Quantity[
             5.543735578795960565`1.9995659225206872*^18, "Kilograms"], 
            "Radius" -> Quantity[82.6423685675654179591`4., "Miles"]|>, 
          "Hyrrokkin" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.4854847689493358785`2., "Miles"]|>, 
          "Iapetus" -> <|
           "Mass" -> Quantity[
             1.805459830391657427108`4.6989700043360205*^21, "Kilograms"], 
            "Radius" -> Quantity[456.3971406983218006841`4., "Miles"]|>, 
          "Ijiraq" -> <|
           "Mass" -> Quantity[
             1.198645530550478`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[3.7282271534240038177`1., "Miles"]|>, 
          "Janus" -> <|
           "Mass" -> Quantity[
             1.896856552096131371`3.9586073148417764*^18, "Kilograms"], 
            "Radius" -> Quantity[56.1719557782549908535`3., "Miles"]|>, 
          "Jarnsaxa" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Kari" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Kiviuq" -> <|
           "Mass" -> Quantity[
             3.296275209013815`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[4.970969537898671757`1., "Miles"]|>, 
          "Loge" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Methone" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.9941939075797343514`2., "Miles"]|>, 
          "Mimas" -> <|
           "Mass" -> Quantity[
             3.7907164903658865482`3.9586073148417764*^19, "Kilograms"], 
            "Radius" -> Quantity[123.5285930167819931599`4., "Miles"]|>, 
          "Mundilfari" -> <|
           "Mass" -> Quantity[
             2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.1747991728306688936`2., "Miles"]|>, 
          "Narvi" -> <|
           "Mass" -> Quantity[
             3.44610590033262`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.1747991728306688936`2., "Miles"]|>, 
          "Paaliaq" -> <|
           "Mass" -> Quantity[
             8.240688022534537`1.999565922520683*^15, "Kilograms"], "Radius" -> 
            Quantity[6.8350831146106736658`3., "Miles"]|>, 
          "Pallene" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.6155650998170683209`2., "Miles"]|>, 
          "Pan" -> <|
           "Mass" -> Quantity[
             4.944412813520729`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[7.9535512606378748103`3., "Miles"]|>, 
          "Pandora" -> <|
           "Mass" -> Quantity[
             1.49081537862215657`2.9956786262173587*^17, "Kilograms"], 
            "Radius" -> Quantity[25.2276704048357591665`3., "Miles"]|>, 
          "Phoebe" -> <|
           "Mass" -> Quantity[
             8.287135536843366995`3.9586073148417764*^18, "Kilograms"], 
            "Radius" -> Quantity[66.2381690924998011613`4., "Miles"]|>, 
          "Polydeuces" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[0.7456454306848007635`2., "Miles"]|>, 
          "Prometheus" -> <|
           "Mass" -> Quantity[
             1.86689041383236942`3.9586073148417764*^17, "Kilograms"], 
            "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
          "Rhea" -> <|
           "Mass" -> Quantity[
             2.308441461148901741032`4.6989700043360205*^21, "Kilograms"], 
            "Radius" -> Quantity[475.0382764654418197725`4., "Miles"]|>, 
          "S/2004 S12" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "S/2004 S13" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "S/2004 S17" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.2427423844746679391`2., "Miles"]|>, 
          "S/2004 S7" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "S/2006 S1" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "S/2006 S3" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "S/2007 S2" -> <|
           "Mass" -> Quantity[1.5`2.*^14, "Kilograms"], "Radius" -> 
            Quantity[1.8641135767120019088`1., "Miles"]|>, 
          "S/2007 S3" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.553427980593334924`2., "Miles"]|>, 
          "S/2009 S1" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Missing["NotAvailable"]|>, 
          "Siarnaq" -> <|
           "Mass" -> Quantity[
             3.8955979742890535`1.999565922520683*^16, "Kilograms"], "Radius" -> 
            Quantity[12.4274238447466793923`2., "Miles"]|>, 
          "Skathi" -> <|
           "Mass" -> Quantity[
             3.146444517695`1.9995659225206786*^14, "Kilograms"], "Radius" -> 
            Quantity[2.4854847689493358785`1., "Miles"]|>, 
          "Skoll" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Surtur" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[1.8641135767120019088`2., "Miles"]|>, 
          "Suttungr" -> <|
           "Mass" -> Quantity[
             2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.1747991728306688936`2., "Miles"]|>, 
          "Tarqeq" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[2.1747991728306688936`2., "Miles"]|>, 
          "Tarvos" -> <|
           "Mass" -> Quantity[
             2.696952443738576`1.9995659225206786*^15, "Kilograms"], "Radius" -> 
            Quantity[4.6602839417800047721`2., "Miles"]|>, 
          "Telesto" -> <|
           "Mass" -> Quantity[
             7.191873183302868`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[7.4564543068480076355`2., "Miles"]|>, 
          "Tethys" -> <|
           "Mass" -> Quantity[
             6.17452278924814959099`4.6989700043360205*^20, "Kilograms"], 
            "Radius" -> Quantity[333.2413703968822079058`4., "Miles"]|>, 
          "Thrymr" -> <|
           "Mass" -> Quantity[
             2.09762967846334`1.9995659225206872*^14, "Kilograms"], "Radius" -> 
            Quantity[2.1747991728306688936`2., "Miles"]|>, 
          "Titan" -> <|
           "Mass" -> Quantity[
             1.34520841449162446435527`4.958607314841778*^23, "Kilograms"], 
            "Radius" -> Quantity[1600.3415056072536387497`5., "Miles"]|>, 
          "Ymir" -> <|
           "Mass" -> Quantity[
             4.944412813520729`1.9995659225206872*^15, "Kilograms"], "Radius" -> 
            Quantity[5.5923407301360057265`1., "Miles"]|>|>|>, <|
       "Mass" -> Quantity[8.68103`6.*^25, "Kilograms"], "Radius" -> 
        Quantity[15759.2161775232641374374`5., "Miles"], 
        "Moons" -> <|
         "Ariel" -> <|
           "Mass" -> Quantity[
             1.352971142608851997243`2.9956786262173587*^21, "Kilograms"], 
            "Radius" -> Quantity[359.711783186192635012`4., "Miles"]|>, 
          "Belinda" -> <|
           "Mass" -> Quantity[
             3.56597045338767194`2.995678626217367*^17, "Kilograms"], 
            "Radius" -> Quantity[25.0412590471645589755`3., "Miles"]|>, 
          "Bianca" -> <|
           "Mass" -> Quantity[
             9.2895028617662042`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[15.9692396404994830191`3., "Miles"]|>, 
          "Caliban" -> <|
           "Mass" -> Quantity[
             7.34170387462167751`1.9995659225206872*^17, "Kilograms"], 
            "Radius" -> Quantity[30.4471884196293645112`2., "Miles"]|>, 
          "Cordelia" -> <|
           "Mass" -> Quantity[
             4.4949207395642923`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[12.4895609639704127894`3., "Miles"]|>, 
          "Cressida" -> <|
           "Mass" -> Quantity[
             3.43112283120074311`2.9956786262173587*^17, "Kilograms"], 
            "Radius" -> Quantity[24.7305734510458919908`3., "Miles"]|>, 
          "Cupid" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[3.1068559611866698482`2., "Miles"]|>, 
          "Desdemona" -> <|
           "Mass" -> Quantity[
             1.78298522669383596`2.995678626217367*^17, "Kilograms"], 
            "Radius" -> Quantity[19.8838781515946870277`3., "Miles"]|>, 
          "Ferdinand" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Francisco" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[6.8350831146106736658`2., "Miles"]|>, 
          "Juliet" -> <|
           "Mass" -> Quantity[
             5.57370171705972251`2.9956786262173543*^17, "Kilograms"], 
            "Radius" -> Quantity[29.0801717967072297782`3., "Miles"]|>, 
          "Mab" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[3.1068559611866698482`2., "Miles"]|>, 
          "Margaret" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Miranda" -> <|
           "Mass" -> Quantity[
             6.5925504180276287794`1.9995659225206872*^19, "Kilograms"], 
            "Radius" -> Quantity[146.5193271295633500358`4., "Miles"]|>, 
          "Oberon" -> <|
           "Mass" -> Quantity[
             3.013095202421263971712`3.9586073148417764*^21, "Kilograms"], 
            "Radius" -> Quantity[473.1120257695060844667`4., "Miles"]|>, 
          "Ophelia" -> <|
           "Mass" -> Quantity[
             5.3939048874771508`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[13.2973435138789469498`3., "Miles"]|>, 
          "Perdita" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Portia" -> <|
           "Mass" -> Quantity[
             1.681100356597045339`3.9586073148417764*^18, "Kilograms"], 
            "Radius" -> Quantity[42.0046925952437763461`3., "Miles"]|>, 
          "Prospero" -> <|
           "Mass" -> Quantity[
             2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
          "Puck" -> <|
           "Mass" -> Quantity[
             2.893230649366216176`3.9586073148417764*^18, "Kilograms"], 
            "Radius" -> Quantity[50.3310665712240515389`2., "Miles"]|>, 
          "Rosalind" -> <|
           "Mass" -> Quantity[
             2.54712175241976567`2.9956786262173587*^17, "Kilograms"], 
            "Radius" -> Quantity[22.3693629205440229062`2., "Miles"]|>, 
          "Setebos" -> <|
           "Mass" -> Quantity[
             2.0976296784633363`1.9995659225206872*^16, "Kilograms"], 
            "Radius" -> Quantity[9.3205678835600095443`2., "Miles"]|>, 
          "Stephano" -> <|
           "Mass" -> Quantity[
             5.99322765275239`0.9999565727231373*^15, "Kilograms"], "Radius" -> 
            Quantity[6.2137119223733396961`2., "Miles"]|>, 
          "Sycorax" -> <|
           "Mass" -> Quantity[
             5.378921818345269844`2.9956786262173627*^18, "Kilograms"], 
            "Radius" -> Quantity[59.0302632625467271138`2., "Miles"]|>, 
          "Titania" -> <|
           "Mass" -> Quantity[
             3.525516166731593299572`3.9586073148417764*^21, "Kilograms"], 
            "Radius" -> Quantity[490.1997335560327686312`4., "Miles"]|>, 
          "Trinculo" -> <|
           "Mass" -> 
            Quantity[7.49153456594048`0.9999565727231373*^14, "Kilograms"], 
            "Radius" -> Quantity[3.1068559611866698482`1., "Miles"]|>, 
          "Umbriel" -> <|
           "Mass" -> Quantity[
             1.171676006113092205807`2.9956786262173587*^21, "Kilograms"], 
            "Radius" -> Quantity[363.3157361011691720354`4., "Miles"]|>|>|>, <|
       "Mass" -> Quantity[1.0241`6.*^26, "Kilograms"], "Radius" -> 
        Quantity[15299.4014952676369999204`5., "Miles"], 
        "Moons" -> <|
         "Despina" -> <|
           "Mass" -> Quantity[
             2.09762967846333643`1.9995659225206872*^18, "Kilograms"], 
            "Radius" -> Quantity[46.6028394178000477213`2., "Miles"]|>, 
          "Galatea" -> <|
           "Mass" -> Quantity[
             3.745767282970243625`1.9995659225206872*^18, "Kilograms"], 
            "Radius" -> Quantity[54.6806649168853893264`2., "Miles"]|>, 
          "Halimede" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[18.6411357671200190886`2., "Miles"]|>, 
          "Laomedeia" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[12.4274238447466793923`2., "Miles"]|>, 
          "Larissa" -> <|
           "Mass" -> Quantity[
             4.944412813520721585`1.999565922520683*^18, "Kilograms"], 
            "Radius" -> Quantity[60.2730056470213950529`2., "Miles"]|>, 
          "Naiad" -> <|
           "Mass" -> Quantity[
             1.94779898714452669`1.9995659225206872*^17, "Kilograms"], 
            "Radius" -> Quantity[20.5052493438320209974`2., "Miles"]|>, 
          "Nereid" -> <|
           "Mass" -> Quantity[
             3.0865122411674807466`2.9956786262173587*^19, "Kilograms"], 
            "Radius" -> Quantity[105.633102680346774835`3., "Miles"]|>, 
          "Neso" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[18.6411357671200190886`2., "Miles"]|>, 
          "Proteus" -> <|
           "Mass" -> Quantity[
             5.0343112283120074311`2.995678626217367*^19, "Kilograms"], 
            "Radius" -> Quantity[130.4879503698401336197`3., "Miles"]|>, 
          "Psamathe" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[12.4274238447466793923`2., "Miles"]|>, 
          "S/2004 N1" -> <|
           "Mass" -> Quantity[5.`2.*^15, "Kilograms"], "Radius" -> Quantity[
              
              Interval[{
               4.6073630000795355123`1.9670113285478368, 
                6.5773184601924759406`2.02469775521267}], "Miles"]|>, 
          "Sao" -> <|
           "Mass" -> Missing["NotAvailable"], "Radius" -> 
            Quantity[12.4274238447466793923`2., "Miles"]|>, 
          "Thalassa" -> <|
           "Mass" -> Quantity[
             3.74576728297024363`1.9995659225206872*^17, "Kilograms"], 
            "Radius" -> Quantity[25.4762188817306927544`2., "Miles"]|>, 
          "Triton" -> <|
           "Mass" -> Quantity[
             2.139432441341284348686`4.6989700043360205*^22, "Kilograms"], 
            "Radius" -> Quantity[840.9637715740077944802`5., "Miles"]|>|>|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[15]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
            TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[78.4], 
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                   TypeSystem`PackageScope`AtomShape[75]|>], 
                 DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
              DirectedInfinity[1], {All, "Moons"}]|>], 
          DirectedInfinity[1], 3, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Mass"} -> 
        1, {All, "Radius"} -> 1, {All, "Moons"} -> <|{All, "Moons", All, 
            TypeSystem`PackageScope`KeyDummy[15]} -> 
          1, {All, "Moons", All, "Mass"} -> 1, {All, "Moons", All, "Radius"} -> 
          1|>|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
            TypeSystem`PackageScope`AtomShape[75], "Moons" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`AtomShape[78.4], 
                TypeSystem`PackageScope`Limited[
                 
                 TypeSystem`PackageScope`RowShape[<|
                  "Mass" -> TypeSystem`PackageScope`AtomShape[75], "Radius" -> 
                   TypeSystem`PackageScope`AtomShape[75]|>], 
                 DirectedInfinity[1], 2, {All, "Moons", All}]]], 2, 
              DirectedInfinity[1], {All, "Moons"}]|>], 
          DirectedInfinity[1], 3, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Mass", "Radius", "Moons"}, {
         TypeSystem`Atom[
          Quantity[1, "Kilograms"]], 
         TypeSystem`Atom[
          Quantity[1, "Miles"]], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          TypeSystem`Struct[{"Mass", "Radius"}, {
            TypeSystem`Atom[
             Quantity[1, "Kilograms"]], 
            TypeSystem`Atom[
             Quantity[1, "Miles"]]}], TypeSystem`AnyLength]}], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 3, 
     "DataRowCount" -> 8, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Radius"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moons", 
                  Style[
                  "Moons", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mass", 
                  Style[
                  "Mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Radius", 
                  Style[
                  "Radius", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Moons", All, "Radius"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Moons", All, "Radius"}, "ColumnHeader", True], "Mouse"],
               ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.30104`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1515.9592977014236856756`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.867320000000000000000001`6.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3760.4452497415095840294`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Moons"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.9721986`8.*^24", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3958.7608367135926191043`7", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Moon", 
                  Style[
                  "Moon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Moons"], 
                    Key["Moon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Moons"], 
                 Key["Moon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.3459006322855173653772`4.995678626217362*^22", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1079.6324465123677722102`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Moons"], 
                 Key["Moon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.41693`6.*^23", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2106.1376560884434900182`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Deimos", 
                  Style[
                  "Deimos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Moons"], 
                    Key["Deimos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Deimos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.468340774924336`1.9995659225206786*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.8525013918714706117`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Deimos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Phobos", 
                  Style[
                  "Phobos", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Moons"], 
                    Key["Phobos"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Phobos"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.0724880884600402`3.9586073148417724*^16", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.8972202338344070631`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Moons"], 
                 Key["Phobos"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.89813`6.*^27", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"43440.6814205042551499244`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Adrastea", 
                  Style[
                  "Adrastea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Moons"], 
                    Key["Adrastea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Adrastea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "7.491534565940487`0.9999565727231415*^15", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.0952437763461385509`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Adrastea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aitne", 
                  Style[
                  "Aitne", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Moons"], 
                    Key["Aitne"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Aitne"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.4949207395643`0.9999565727231415*^13", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.9320567883560009545`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"], 
                 Key["Aitne"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["69 total \:203a ", ""], 
                  Style[
                   Superscript["69 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.68319`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"36183.6872663644317187624`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegaeon", 
                  Style[
                  "Aegaeon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Moons"], 
                    Key["Aegaeon"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegaeon"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"0.1553427980593334919`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegaeon"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Aegir", 
                  Style[
                  "Aegir", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Moons"], 
                    Key["Aegir"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegir"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.8641135767120019088`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"], 
                 Key["Aegir"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["62 total \:203a ", ""], 
                  Style[
                   Superscript["62 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"8.68103`6.*^25", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15759.2161775232641374374`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ariel", 
                  Style[
                  "Ariel", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Moons"], 
                    Key["Ariel"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Ariel"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.352971142608851997243`2.9956786262173587*^21", 
                  "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"359.711783186192635012`4", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Ariel"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Belinda", 
                  Style[
                  "Belinda", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Moons"], 
                    Key["Belinda"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Belinda"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.56597045338767194`2.995678626217367*^17", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"25.0412590471645589755`3", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"], 
                 Key["Belinda"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["27 total \:203a ", ""], 
                  Style[
                   Superscript["27 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.0241`6.*^26", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"15299.4014952676369999204`5", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Despina", 
                  Style[
                  "Despina", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Moons"], 
                    Key["Despina"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Despina"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "2.09762967846333643`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"46.6028394178000477213`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Despina"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Galatea", 
                  Style[
                  "Galatea", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Moons"], 
                    Key["Galatea"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Galatea"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "3.745767282970243625`1.9995659225206872*^18", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"54.6806649168853893264`2", "\"mi\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"], 
                 Key["Galatea"], 
                 Key["Radius"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["14 total \:203a ", ""], 
                  Style[
                   Superscript["14 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Moons"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Moons"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Moons"}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]], 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{444., {248.13403328722342`, 253.86596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{444., {248.13403328722342`, 253.86596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876477362618183*^9},
 CellLabel->"Out[147]=",
 CellID->126767597,ExpressionUUID->"3a78562d-c0cc-466f-9fc0-a14286b64cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"planets", "[", 
  RowBox[{"All", ",", "Keys"}], "]"}]], "Input",
 CellChangeTimes->{{3.876477417873417*^9, 3.8764774187972817`*^9}, {
  3.8764774732001367`*^9, 3.876477481332487*^9}},
 CellLabel->"In[151]:=",
 CellID->249606081,ExpressionUUID->"d934b0f4-8875-4eca-9db5-c6b6bd9cb3b6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Mercury" -> {"Mass", "Radius", "Moons"}, 
       "Venus" -> {"Mass", "Radius", "Moons"}, 
       "Earth" -> {"Mass", "Radius", "Moons"}, 
       "Mars" -> {"Mass", "Radius", "Moons"}, 
       "Jupiter" -> {"Mass", "Radius", "Moons"}, 
       "Saturn" -> {"Mass", "Radius", "Moons"}, 
       "Uranus" -> {"Mass", "Radius", "Moons"}, 
       "Neptune" -> {"Mass", "Radius", "Moons"}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`UnknownShape[False]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], 3], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`UnknownShape[False]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "Earth", "Jupiter", "Mars", "Mercury", "Neptune", "Saturn", "Uranus", 
         "Venus"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], 3], 8], "Path" -> {}, "DisplayedRowCount" -> 
     8, "DisplayedColumnCount" -> 1, "DataRowCount" -> 8, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mercury", 
                  Style[
                  "Mercury", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mercury"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mercury"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Venus", 
                  Style[
                  "Venus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Venus"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Venus"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Earth", 
                  Style[
                  "Earth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Earth"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Earth"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mars", 
                  Style[
                  "Mars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mars"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mars"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Jupiter", 
                  Style[
                  "Jupiter", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Jupiter"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Jupiter"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Saturn", 
                  Style[
                  "Saturn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Saturn"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Saturn"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Uranus", 
                  Style[
                  "Uranus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Uranus"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Uranus"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Neptune", 
                  Style[
                  "Neptune", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"Mass", "Radius", "Moons"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Neptune"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Neptune"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{221., {113.63403328722343`, 119.36596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{221., {113.63403328722343`, 119.36596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.876477474885115*^9, 3.8764774816475*^9}},
 CellLabel->"Out[151]=",
 CellID->20853363,ExpressionUUID->"4e7cfebf-77b2-4386-bef2-66b5b36a405b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"naturalUnitsData", "[", 
  RowBox[{"All", ",", "All", ",", "Keys"}], "]"}]], "Input",
 CellChangeTimes->{{3.876477417873417*^9, 3.8764774187972817`*^9}, {
  3.8764774732001367`*^9, 3.8764774990618615`*^9}},
 CellLabel->"In[152]:=",
 CellID->54989194,ExpressionUUID->"8935de99-aba9-4a6d-9567-70859a53e88c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["PhysicalQuantity", "QuarticCauchyCoefficients"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits5D"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "PositionMomentumDistributionFunction"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "PhaseSpaceVolume"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", 
         "UniversalSpectralIrradianceWithRespectToWavelength"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits4D"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "QuadraticHiggsLangrangianCoefficient"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", 
         "QuadraticCasimirOperatorPoincareGroup"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "InverseQuadraticCauchyCoefficient"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "InverseEnergySquared"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "ThermalInductance"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "PositionVelocityDistributionFunction"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "PauliLubanskiPseudovector"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "MomentumDistributionFunction"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", 
         "WaveFunctionScatteringState4DMomentumRepresentation"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits2D"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits1D"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"] -> <|
        "NaturalUnits" -> {
          "PlanckForm", "ApproximateSIEquivalentOfPlanckUnits", 
           "exponentNeeded"}|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "NaturalUnits"} -> 
        3|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "NaturalUnits" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[{
                 TypeSystem`PackageScope`AtomShape[105.], 
                 TypeSystem`PackageScope`AtomShape[378.], 
                 TypeSystem`PackageScope`AtomShape[147.]}], 
               DirectedInfinity[1], 3, {All, "NaturalUnits"}]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Struct[{"NaturalUnits"}, {
         TypeSystem`Tuple[{
           TypeSystem`Atom[
            TypeSystem`Enumeration["PlanckForm"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ApproximateSIEquivalentOfPlanckUnits"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["exponentNeeded"]]}]}], 20], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[16]} -> 1, {All, "NaturalUnits"} -> 
        3|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[90], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "NaturalUnits" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[{
                 TypeSystem`PackageScope`AtomShape[105.], 
                 TypeSystem`PackageScope`AtomShape[378.], 
                 TypeSystem`PackageScope`AtomShape[147.]}], 
               DirectedInfinity[1], 3, {All, "NaturalUnits"}]|>], 
           DirectedInfinity[1], 1, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Struct[{"NaturalUnits"}, {
         TypeSystem`Tuple[{
           TypeSystem`Atom[
            TypeSystem`Enumeration["PlanckForm"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ApproximateSIEquivalentOfPlanckUnits"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["exponentNeeded"]]}]}], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     20, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NaturalUnits", 
                  Style[
                  "NaturalUnits", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "NaturalUnits"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "NaturalUnits"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], SpanFromLeft, 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quartic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quartic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], 
                  Style[
                   RawBoxes[
                   "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuarticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuarticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]momentum distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]momentum distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionMomentumDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"phase space volume\""], 
                  Style[
                   RawBoxes["\"phase space volume\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"universal spectral irradiance (with respect to \
wavelength)\""], 
                  Style[
                   RawBoxes[
                   "\"universal spectral irradiance (with respect to \
wavelength)\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Higgs coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Higgs coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticHiggsLangrangianCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "QuadraticCauchyCoefficients"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]]},
                 "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quadratic Casimir operator of the Poincar\[EAcute] group\
\""], 
                  Style[
                   RawBoxes[
                   "\"quadratic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "InverseQuadraticCauchyCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse energy squared\""], 
                  Style[
                   RawBoxes["\"inverse energy squared\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"thermal inductance\""], 
                  Style[
                   RawBoxes["\"thermal inductance\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "ThermalInductance"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]velocity distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]velocity distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionVelocityDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "PositionVelocityDistributionFunction"]]
                 , 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                  Style[
                   RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"momentum distribution function\""], 
                  Style[
                   RawBoxes["\"momentum distribution function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "MomentumDistributionFunction"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], 
                  Style[
                   RawBoxes[
                   "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                  Style[
                   RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["PlanckForm", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{105., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ApproximateSIEquivalentOfPlanckUnits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{378., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["exponentNeeded", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]], 
                 Key["NaturalUnits"], 3}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{753., {289.1340332872234, 294.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{753., {289.1340332872234, 294.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876477499374321*^9},
 CellLabel->"Out[152]=",
 CellID->275592835,ExpressionUUID->"6777ff99-2cc4-4e98-b6fc-552f18319418"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"naturalUnitsData", "[", "Keys", "]"}]], "Input",
 CellChangeTimes->{{3.876477402234321*^9, 3.8764774043111796`*^9}},
 CellLabel->"In[148]:=",
 CellID->567234973,ExpressionUUID->"b8c8c763-c1af-436e-a3a8-14cba9bf363e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
       Entity["PhysicalQuantity", "QuarticCauchyCoefficients"], 
       Entity["PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"], 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits5D"], 
       Entity["PhysicalQuantity", "PositionMomentumDistributionFunction"], 
       Entity["PhysicalQuantity", "PhaseSpaceVolume"], 
       Entity[
       "PhysicalQuantity", 
        "UniversalSpectralIrradianceWithRespectToWavelength"], 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits4D"], 
       Entity["PhysicalQuantity", "QuadraticHiggsLangrangianCoefficient"], 
       Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"], 
       Entity["PhysicalQuantity", "QuadraticCasimirOperatorPoincareGroup"], 
       Entity["PhysicalQuantity", "InverseQuadraticCauchyCoefficient"], 
       Entity["PhysicalQuantity", "InverseEnergySquared"], 
       Entity["PhysicalQuantity", "ThermalInductance"], 
       Entity["PhysicalQuantity", "PositionVelocityDistributionFunction"], 
       Entity["PhysicalQuantity", "PauliLubanskiPseudovector"], 
       Entity["PhysicalQuantity", "MomentumDistributionFunction"], 
       Entity[
       "PhysicalQuantity", 
        "WaveFunctionScatteringState4DMomentumRepresentation"], 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits2D"], 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits1D"], 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[5, 4, 20, 90], 20, 4, {All}], 
     "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 20], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[5, 4, 20, 90], 20, 4, {All}], 
     "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 20], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 4, "DataRowCount" -> 5, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quartic Cauchy coefficient\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"quartic Casimir operator of the Poincar\[EAcute] group\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"position\[Hyphen]momentum distribution function\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"phase space volume\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"universal spectral irradiance (with respect to \
wavelength)\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quadratic Higgs coefficient\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quadratic Cauchy coefficient\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"quadratic Casimir operator of the Poincar\[EAcute] \
group\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"inverse energy squared\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"thermal inductance\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"position\[Hyphen]velocity distribution function\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"momentum distribution function\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
               "\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{441., {73.13403328722343, 78.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{441., {73.13403328722343, 78.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8764774046200457`*^9},
 CellLabel->"Out[148]=",
 CellID->66441305,ExpressionUUID->"0960d3f9-aaf4-4b9b-adf7-4b7a70486215"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"naturalUnitsData", "[", 
  RowBox[{"All", ",", "Keys"}], "]"}]], "Input",
 CellChangeTimes->{{3.876477402234321*^9, 3.876477409490906*^9}},
 CellLabel->"In[149]:=",
 CellID->421594982,ExpressionUUID->"6415204a-792b-4a50-b393-abce346c41b9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["PhysicalQuantity", "QuarticCauchyCoefficients"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "QuarticCasimirOperatorPoincareGroup"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits5D"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "PositionMomentumDistributionFunction"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "PhaseSpaceVolume"] -> {"NaturalUnits"}, 
       Entity["PhysicalQuantity", 
         "UniversalSpectralIrradianceWithRespectToWavelength"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits4D"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "QuadraticHiggsLangrangianCoefficient"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", 
         "QuadraticCasimirOperatorPoincareGroup"] -> {"NaturalUnits"}, 
       Entity["PhysicalQuantity", "InverseQuadraticCauchyCoefficient"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "InverseEnergySquared"] -> {"NaturalUnits"},
        Entity["PhysicalQuantity", "ThermalInductance"] -> {"NaturalUnits"}, 
       Entity["PhysicalQuantity", "PositionVelocityDistributionFunction"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "PauliLubanskiPseudovector"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "MomentumDistributionFunction"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", 
         "WaveFunctionScatteringState4DMomentumRepresentation"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits2D"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits1D"] -> {
        "NaturalUnits"}, 
       Entity["PhysicalQuantity", "StefanBoltzmannConstantUnits"] -> {
        "NaturalUnits"}|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[
         TypeSystem`Enumeration["NaturalUnits"]], 1], 20], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["PhysicalQuantity"]], 
       TypeSystem`Vector[
        TypeSystem`Atom[
         TypeSystem`Enumeration["NaturalUnits"]], 1], 20], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     20, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quartic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quartic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]},
                    4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuarticCauchyCoefficients"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], 
                  Style[
                   RawBoxes[
                   "\"quartic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuarticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuarticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuarticCasimirOperatorPoincareGroup"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuarticCasimirOperatorPoincareGroup"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 5 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits5D"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]momentum distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]momentum distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionMomentumDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionMomentumDistributionFunction"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionMomentumDistributionFunction"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"phase space volume\""], 
                  Style[
                   RawBoxes["\"phase space volume\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PhaseSpaceVolume"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"universal spectral irradiance (with respect to \
wavelength)\""], 
                  Style[
                   RawBoxes[
                   "\"universal spectral irradiance (with respect to \
wavelength)\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "UniversalSpectralIrradianceWithRespectToWavelength"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 4 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits4D"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Higgs coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Higgs coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticHiggsLangrangianCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticHiggsLangrangianCoefficient"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticHiggsLangrangianCoefficient"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"quadratic Cauchy coefficient\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "QuadraticCauchyCoefficients"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]]},
                 "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "QuadraticCauchyCoefficients"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "QuadraticCauchyCoefficients"]]},
                 "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"quadratic Casimir operator of the Poincar\[EAcute] group\
\""], 
                  Style[
                   RawBoxes[
                   "\"quadratic Casimir operator of the Poincar\[EAcute] \
group\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticCasimirOperatorPoincareGroup"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "QuadraticCasimirOperatorPoincareGroup"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "QuadraticCasimirOperatorPoincareGroup"]]}, "Item", False],
                "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                  Style[
                   RawBoxes["\"inverse quadratic Cauchy coefficient\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "InverseQuadraticCauchyCoefficient"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "InverseQuadraticCauchyCoefficient"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "InverseQuadraticCauchyCoefficient"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"inverse energy squared\""], 
                  Style[
                   RawBoxes["\"inverse energy squared\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "InverseEnergySquared"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"thermal inductance\""], 
                  Style[
                   RawBoxes["\"thermal inductance\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "ThermalInductance"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "ThermalInductance"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "ThermalInductance"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"position\[Hyphen]velocity distribution function\""], 
                  Style[
                   RawBoxes[
                   "\"position\[Hyphen]velocity distribution function\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionVelocityDistributionFunction"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "PositionVelocityDistributionFunction"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "PositionVelocityDistributionFunction"]]}, "Item", False], 
               "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                  Style[
                   RawBoxes["\"Pauli\[Hyphen]Lubanski pseudovector\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]},
                    1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]},
                    4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["PhysicalQuantity", "PauliLubanskiPseudovector"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"momentum distribution function\""], 
                  Style[
                   RawBoxes["\"momentum distribution function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "MomentumDistributionFunction"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], 
                  Style[
                   RawBoxes[
                   "\"4\[Hyphen]dimensional scattering state momentum space \
wave function\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", 
                    "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", 
                   "WaveFunctionScatteringState4DMomentumRepresentation"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 2 \
dimensions\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits2D"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes[
                  "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], 
                  Style[
                   RawBoxes[
                   "\"Stefan\[Hyphen]Boltzmann constant unit in 1 \
dimension\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits1D"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                  Style[
                   RawBoxes["\"Stefan\[Hyphen]Boltzmann constant unit\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"NaturalUnits"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "PhysicalQuantity", "StefanBoltzmannConstantUnits"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{444., {275.6340332872234, 281.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{444., {275.6340332872234, 281.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8764774097893686`*^9},
 CellLabel->"Out[149]=",
 CellID->168479152,ExpressionUUID->"93a78857-2afb-4d38-9f87-faf50693e0e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"3d502a4a-70f3-4f8a-9961-06f206d3d252"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ContributedBy", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this data.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ed06c608-50b6-4f5d-8deb-31354e4f6652"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContributedBy"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributedBy", "TemplateCellGroup"},
 CellLabel->"In[4]:=",
 CellID->179485270,ExpressionUUID->"357f213c-e828-4c8c-8e83-d5d810d37adb"],

Cell["Peter Cullen Burbery", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.874912398963789*^9, 3.8749124023161497`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->418928087,ExpressionUUID->"1ad3aa3c-56ed-4596-8a3d-5ffe91f5b378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
data and/or its components.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "146561fa-0a39-41ad-9d28-4f30b7fac2f7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Citation", "Source/Reference Citation", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->657892269,ExpressionUUID->"53f192b9-919c-4267-b47d-d20457ca81a4"],

Cell[TextData[{
 ButtonBox["NIST SI Brochure",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], None},
  ButtonNote->
   "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-2019.\
pdf"],
 "."
}], "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8749124177985835`*^9, 3.8749124230702443`*^9}, {
  3.87491257346432*^9, 3.8749125805666046`*^9}, {3.875355549760317*^9, 
  3.8753555513192453`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"a6bf9c81-ee5c-4d8c-9cd5-aa0be1e4f0ef"],

Cell["\<\
The URL string has a leading space which needs to be removed. The URL should \
end with .pdf instead of .pd for the URL to open the correct document.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.875353945728427`16.340886363010508*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875353948401876*^9, 3.875353987311926*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1668078928,ExpressionUUID->"8505979e-6ded-4038-985e-317e74caebf7"],

Cell["\<\
I removed the leading space and updated the link to end in .pdf\
\>", "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8759806295386076`17.34095658712962*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875980630745307*^9, 3.8759806525403414`*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->895572119,ExpressionUUID->"8539b56e-7993-49e2-8d93-8475204ccf7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Detailed Source Information",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Detailed Source Information", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Add bibliographic details about the original source and publication \
of the data.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetailedSourceInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "31f0d763-9f53-4ea4-8fff-f647462716e7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Detailed Source Information", "TemplateSection"},
 CellLabel->"In[1]:=",
 CellID->67505013,ExpressionUUID->"e2630e97-977d-486b-9978-abc449199274"],

Cell[CellGroupData[{

Cell["Author/Creator", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDAuthor"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author/Creator", "SMDAuthor", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->62010071,ExpressionUUID->"5ab934e4-b9f3-4f09-9a98-55af4bccaaeb"],

Cell["Author Name", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"9403abbe-20b4-4ffe-b19f-c62c8fe8f419"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Title", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDTitle"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SMDTitle", "Source Title", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->15581079,ExpressionUUID->"a45e8076-f7b4-4085-bfe6-e8d13eb4b143"],

Cell["Published Title", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->704566112,ExpressionUUID->"87545aaf-d199-4e34-bb9a-50fb42bbabac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Date", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDDate"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SMDDate", "Source Date", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->251981362,ExpressionUUID->"ef7d14df-953c-4227-85f6-c82d5548d996"],

Cell["Original Publication Date", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->384531453,ExpressionUUID->"17090911-6fc9-497f-a1f3-23add1adfc2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Publisher", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDPublisher"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SMDPublisher", "Source Publisher", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->910715536,ExpressionUUID->"83922333-4e19-4cbd-9521-8cecfa8a8754"],

Cell["Original Publication", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->552636672,ExpressionUUID->"19d1ddc4-6002-4a66-a91d-aae2b784ae14"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Geographic Coverage", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDGeographicCoverage"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Geographic Coverage", "SMDGeographicCoverage", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->346798217,ExpressionUUID->"8a12e280-5566-4df5-8a42-d895be38e4f5"],

Cell["Area", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->550043285,ExpressionUUID->"a8c3d529-6c14-4cb3-827f-2b683f1f0b78"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temporal Coverage", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDTemporalCoverage"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SMDTemporalCoverage", "TemplateCellGroup", "Temporal Coverage"},
 CellLabel->"In[1]:=",
 CellID->135354521,ExpressionUUID->"bc83acc6-c24a-426b-8083-114171230460"],

Cell["Timespan", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->482905619,ExpressionUUID->"f0034849-7bcb-4b68-8114-b19b817f2015"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source Language", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDLanguage"},
 DefaultNewCellStyle->"Text",
 CellTags->{"SMDLanguage", "Source Language", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->146694705,ExpressionUUID->"09275ce3-bf7d-47fe-895c-710a33282733"],

Cell["Language", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->544121904,ExpressionUUID->"5431a7cb-decd-4932-8f01-18411c6fbb83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rights", "Subsubsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SMDRights"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Rights", "SMDRights", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->190531069,ExpressionUUID->"f4368ef0-3850-4e2f-8921-a43f662b8df9"],

Cell["Data Rights", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->601671361,ExpressionUUID->"de0fc111-d19f-4298-aecd-bbd66b576108"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the data.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9be36784-2398-4cec-8781-d056303d82b5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->255897931,ExpressionUUID->"853fb0b0-0e4e-483d-9477-ad0c310bc3c3"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"e4b19b4c-e99e-4c9b-ba02-08f1e9b9712c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms that should be used to include the data in \
search results.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "df8a247c-3ed8-4d14-852b-657416c28d37"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->266337689,ExpressionUUID->"ff0db2af-8a5c-42e3-ba32-f5774d08a838"],

Cell["metrology", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.874912432168599*^9, 3.8749124336589994`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"26542f90-ae61-41f9-983e-51ac4e90c241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell["Select any categories which the data covers.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "58cf83de-22a2-4cfc-a4fa-b9e407b724ef"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->885722481,ExpressionUUID->"7a8789e8-6c20-4767-8e94-0b8809770429"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Agriculture"}], "\" \"", 
            "\"Agriculture\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Computer Systems"}], "\" \"", 
            "\"Computer Systems\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Economics"}], "\" \"", 
            "\"Economics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry Data"}], "\" \"", 
            "\"Geometry Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Healthcare"}], "\" \"", 
            "\"Healthcare\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Language"}], "\" \"", "\"Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Mathematics", {False, "Mathematics"}], "\" \"", 
            "\"Mathematics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Politics"}], "\" \"", "\"Politics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Statistics"}], "\" \"", 
            "\"Statistics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
            "\"Astronomy\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Culture"}], "\" \"", "\"Culture\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Education"}], "\" \"", 
            "\"Education\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Government"}], "\" \"", 
            "\"Government\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "History"}], "\" \"", "\"History\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Life Science"}], "\" \"", 
            "\"Life Science\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Medicine"}], "\" \"", "\"Medicine\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Reference"}], "\" \"", 
            "\"Reference\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Text & Literature"}], "\" \"", 
            "\"Text & Literature\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Chemistry", {False, "Chemistry"}], "\" \"", 
            "\"Chemistry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Demographics"}], "\" \"", 
            "\"Demographics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Engineering", {False, "Engineering"}], "\" \"", 
            "\"Engineering\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphics"}], "\" \"", "\"Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Human Activities"}], "\" \"", 
            "\"Human Activities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Meteorology"}], "\" \"", 
            "\"Meteorology\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social Media"}], "\" \"", 
            "\"Social Media\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Transportation"}], "\" \"", 
            "\"Transportation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Computational Universe"}], "\" \"", 
            "\"Computational Universe\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Earth Science"}], "\" \"", 
            "\"Earth Science\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geography"}], "\" \"", 
            "\"Geography\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Health"}], "\" \"", "\"Health\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Manufacturing"}], "\" \"", 
            "\"Manufacturing\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Physical Sciences", {False, "Physical Sciences"}], 
            "\" \"", "\"Physical Sciences\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sociology"}], "\" \"", 
            "\"Sociology\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Categories-Checkboxes", "CheckboxCell"},
 CellID->1791722337,ExpressionUUID->"841a33c3-c0d1-494d-9b7b-057f0569b32e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Content Types",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ContentTypes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select any of the types of data included in the content elements.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContentTypes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d9daf35e-bd53-4d47-bc88-e3747e2dc862"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContentTypes"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Content Types", "ContentTypes", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->765263253,ExpressionUUID->"a99b15c2-b36f-4977-b131-8a283106c37d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Audio"}], "\" \"", "\"Audio\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs"}], "\" \"", "\"Graphs\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Text", {False, "Text"}], "\" \"", "\"Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Entity Store"}], "\" \"", 
            "\"Entity Store\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Image"}], "\" \"", "\"Image\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time Series"}], "\" \"", 
            "\"Time Series\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geospatial Data"}], "\" \"", 
            "\"Geospatial Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Numerical Data", {False, "Numerical Data"}], "\" \"",
             "\"Numerical Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Video"}], "\" \"", "\"Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.8753556108533278`*^9, 3.8753556135581408`*^9}},
 CellTags->{"CheckboxCell", "ContentTypes-Checkboxes"},
 CellID->870927658,ExpressionUUID->"4f21d7ab-19d9-48d5-952d-2b527442f1dc"],

Cell["Please select a Content Type.", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"axelroda@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.87535399623271`16.340886368670308*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8753539980849047`*^9, 3.875354007056531*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1082663886,ExpressionUUID->"bf0d1c45-0ccf-4401-9c52-712facb5e27b"],

Cell["I selected text and numerical data types.", "AuthorComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8759806704553205`17.340956591714242*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.875980671461903*^9, 3.8759806777388363`*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->163817684,ExpressionUUID->"288fc3f3-ae17-406d-b031-4702f67f1f86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SeeAlso", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this data.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSeeAlso"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "36ddddbf-d21c-43f3-8a01-c54422b756e2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SeeAlso"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "SeeAlso", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->398191659,ExpressionUUID->"d1b32461-cf7a-46e1-a78e-f3215d3bfb30"],

Cell["PlanckUnitConversion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8749124863439283`*^9, 3.874912492600892*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"2d13f9a4-742e-4d3a-b870-cba402516ad6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"RelatedSymbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List documented, system-level Wolfram Language symbols related to \
the data.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "79eb15ce-8239-4471-b6c2-938cb4cc62a7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "RelatedSymbols", "TemplateCellGroup"},
 CellLabel->"In[1]:=",
 CellID->661598311,ExpressionUUID->"58cc1935-8caf-42e5-b023-7381b83cb5cb"],

Cell["UnitSimplify", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8759806821602583`*^9, 3.875980692368338*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->195255409,ExpressionUUID->"3c5693d3-8a74-4fa2-b810-3198ccc8b943"],

Cell["NondimensionalizationTransform", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8759806821602583`*^9, 3.8759806972767553`*^9}, 
   3.8759807445564775`*^9},
 CellID->263208645,ExpressionUUID->"ca790a36-a933-44b5-8318-adc3da9019dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"AuthorNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Include any notes you would like to be published along with the \
resource.\n\nThese notes will be available to all users and can include known \
limitations or possible improvements to the data.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dfec9406-18f9-4554-aac5-a7a2f8ed0eb9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "AuthorNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "AuthorNotes", "TemplateCellGroup"},
 CellID->823423117,ExpressionUUID->"0bf48763-41d0-4c9a-9fb4-5b2ac9c67306"],

Cell["\<\
Additional information about data limitations, improvements, etc.\
\>", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->178075361,ExpressionUUID->"10bb05d9-4c7c-4e39-85fc-3745242a462d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SubmissionNotes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "843c06ee-9d3c-4bab-b250-4dffa70477f1"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SubmissionNotes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "SubmissionNotes", "TemplateCellGroup"},
 CellID->161504757,ExpressionUUID->"0dd3019a-90a3-4ade-8d6f-e20ab73b26d1"],

Cell[TextData[{
 "I plan to add more documentation examples in the future. I added \
Mathematics as a category because it could be helpful for dimensional \
analysis. I had a technical issue where ",
 Cell[BoxData[
  InterpretationBox[
   TagBox[
    FrameBox[
     PaneSelectorBox[{True->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWglwU1UUrYDIjCvKUkVAZlAQQUaQDozDJgqCwLCLDh3aYilrCy0MW6si
olTEHUYEBVmKio7iAKNgoYgCAg6IZenUNknX7GmWpk2a5PrODQnZimmTpi29
M7c/ef/n/XfuPXf5r79HQsqUua2ioqLS2ok/U+JXjExNjV819T7xZXpy2vyk
5MRXxyYvS0xKTB2c0FoMDriubaJahmRlZaUJVQqlJqQGoe8JbRskhsQmsOab
aWaQOM43gbXeTCtqW3tB+6hZQs8JvZjbp4vln77dCZo/eQyZzp2hqmtX3GrO
z6MKtZp0Ol1EVKVSUXZ2theWm+AwCyVfNR38gZqCAE+QOHID4aj6PaexIbCY
TKZgcUQLTRK6JCdupvZYYixBdXlXGxsCS7A4fOJc6rpeoVA0NgSWloajIXll
lRREEkeDxLldqyHpY53Imn8tUjgC5t1QcahXLOZ5yqePjRSOgHUQNfD/xLBr
G1n/zfMbt+ZdocKObdw2qTx62O8aW3kpVWzeFDYcocS5PH4GFdx/G5W/MpGq
/jjhHi+f9gIp5sx0+mPGOCqK6U2Omho+Z8n9mxTzYqmw0+1UMmJAk8ChXplM
pS8Ou7GukQNJ8+YqKoxuRzUyiZOfp0+StPeDpEqdR2WTRjlxvzyB5LOnBcW5
SODQffAOlU0dw5/BE8bQ5U5Sr15KDnMl46g+f4b0O7cyz4DFFfeq5QtJmZIY
NhziXhuE2uoT54Z9X1HxM/28xkrHD+d1q1eluHllPnmcc5enyOOmk3Z9ejhx
1NQ3X5mP/eK3PnBLuSiB7W/8dg/7R7lgNkm63+uNd/QQ0n+xJZw4DtcFh6PK
zJzXfZRJZVNG87XIsVWnfhPkslHx0P7OsYxlfD18g+8uHNUXzpNm3WqSdL2b
Sp59mrSZa9kedoM+VBxthA4SOuJQxkr5wbXpBFVLJV7z6T5+V9x3ENu5MPoO
tqc6PY30n39C5TPHU2HntiR9tCNJHr6Ligb1Ikd11XXgDiqb/DzHt+zJ7lTw
QCsqmziScy7iCbGP3+B88ZAnnPjt9jrjCDbOLVdzSdLtHrYt1qtatoD9Ar/h
3rL+jzjt3qM9lY4byr5xiYtXwAAeqtLmU+WRQ1R98S/SvLGCZP268W+R8+Cb
+vgjWBwQ84lsvhfypcsHrpqt376ZakqKyKaU81q1G9fxb4zf72P/WS5fIpta
RYasnZxzMQ98AN8oEl7ieQx7vgyFVzFCtwrdefa5IcY/xw4jqOHShYB8NX69
i9dvPn6ELNcucxzrd3zmjTf7Z3ecw4fA6HU+56jT9uLo8rN2w+sB71cHHIq6
5ivYGvc27N3BGNjenrgFv+Wxk3kexL3DYnGfQp0BLxHreHaW9e1KyoVxHEeR
xqHbtJ7zDfiDI3AUDezJdUK9JpXrt4tzOCJmlIvnCPv/yvUffMIYbAFMYcJR
N159s9vJKxGPDquVKg8fIPmsSc41Cy6hvqM+2vUVTnucPUWmn77juod+BWOo
lZgHNR/cRA4IlVd1jnOBwTcesW6uGaKGewrGPPlm2L2dx3zrOPwYaN6GwOGK
R9jVk+81xTIeRw3wtakfDhFPuA5+qz53+saFIkdzbxZC3g26Dor6HagO4oge
Cr27G4eIc+Qz4NBv+1TUxGoeNu7fy3GPPhnxxHVQ5F3kvFDrYDj6EpuinHGo
lswlzWvLSfr4Q15zIabR62rfzuD1o9YjR6AXC2NfEnqfKOxXPLiPs65NGMGx
Dp+ZDv1I0p4dqGRUDOOEL4HJbjI2RJ9Y774dNRE8QR5G/rQW5PvVRvCLeS+O
No2auaNcFM9xpnlrTdhwBBvngUT34QaS9enCdsazOvex6K9EXvUU1A7kXHDL
dGA/+wo9FcabAg7XsxLWFei5FmI3GkjaK5pUS5Pcz7Uc10HupUR0n0E8b3vy
EPsM6AUhmrUr/fYZ0P8y7uFPhQ1HKPs+eEaqbd+noENr7m3hq1r3fba8H04c
DbsPJ3wTijT6vqhOK3Jy50jui94S+9ShxHkkpKXhaEhehUMaO87DJaHm3Wb4
f+db4j0Anzhvtu9l+OC4Jd6TuY6l2b+31NzkP/BgkvI=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"The ResourceObject defined by this notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "The ResourceObject defined by this notebook", 
        "Tooltip"]& ], False->
      TagBox[
       TooltipBox[
        GraphicsBox[RasterBox[CompressedData["
1:eJzlWtdLfFcQluRHyGMe85p/IZCQx+QxYI8NbKxG11hWXQULNhSxEFGxYcWG
iAUFNfYGioKiYkFFxdgwKmrs3cn9ht9d1nU1u+7dddWB8e6e2+abmW/mnON+
5xVs7/uFhYVF2NfCH3tZxC9KpSzqt2+EL46KsD/kCp/ff1WE+8h9lD95fSkM
fv9ZP1l8DKmpqQkTdFdQMiM9FvRPQb/SEYOPGdj8nKbpiGPcDGx9Tv99ynZL
S0s3QccEnXJ1db1yd3cnaFRUFM3Pz9Pa2ppKNzY2aH9/nw4PD02ie3t71Nvb
+wDLMzjOBSVNHRkZIXMQ4NERx6w2HDMzM68NgeX09FRXHN8KKhc0JCYm5iA+
Pp6gq6urrw2BRVccGjz/W7x+Z2fntSGwfDQcxsyr7e1tU+IwCs+Pj4/Jzc2N
Njc3TYVDa901FEdhYSE/B7E1EQ6tfRA98P+ks7OTtra2Ho2jX9rY2Kh8Mj4+
/uga9NOmpibJcBjC89TUVLKysqKkpCSanZ1VjSMG6enpjCEhIYH8/Pzo9vaW
z4F3GRkZZGtrSyEhIWaBo6ioiCIjIx/YVVFRQfb29nw/cMzNzZGHhwfl5eWR
UEcYd2JiIqWkpOiUc6bAUV9fT3FxcfwZeQIMDg4OVFxcTJeXl4xjcXGROjo6
OM+AReR9QUEB5eTkSIZDeFeqoLcv4TnmcIGBgQ/GEB/YjViJeTU9Pc21S12Q
k9XV1VLiuHlpvZqYmHhkH3IrOzub/d/f38/xyczMJGdn5wfXhYeHU1tbm5Q4
/tIHx9XVFed8Q0MDxcbG8rWoseD53d0dBQUF8VhpaSlfj9jgu4hjaWmJKisr
ydHRkUJDQ9k2+OPs7MxQHJ8E/UHQnwW+/pOVlUVQ1E51aWxs5PfCz+Ax/Alb
W1pamLd2dnYk1G22Ty6X0/X1Nd93f3+v4reXlxdZW1tTdHQ011zwCedwD877
+/vzM3GPvjh05TnWUU5OTuxb2AueIi6IG97t7e3N51xcXCgiIoJjI4qYV8CA
PMzPz6exsTFaXl6m8vJykslkfC9qHmLzknjoigMyNTXF70K9FGMg9mzkOtZv
WPfA1traWr5ncHCQ44e+cXR0RD09PVxz8RzEALFJS0vj53R3dxuSVz8KWiho
eUBAwIlCoSAo8lib9PX1sf2Tk5O0vr7OPG5vb39wDXwq8hwx1OSz6A8cxTjD
Rm2iB44dfesVfI13w3/AAH+vrKyoziO/k5OT+TngvcgVCPoM8hJcx9oZOQU+
qnPCVDjq6uqYm8gfHIHD19eX+0RJSQn3bzHncARnUIvhf/QX5BPG4AtgkgiH
XnmFXIFtyJ2bmxsaHR1V+R65hP6O/oj3YwzzzeHhYe57wIsxYMFz0PORm6gB
huaVvjwHBk0+wm7Yhx6uLhhTz7euri4e0+zjiKO25xoDh8hH+FU933d3d3kc
+aXpU00csBPXIW4LCwuqcdRo9BJD6q6ufRD9W1sfxBFzKMzdRRzIddQz4Ght
bVXhHhgYYN4jbuATbEfdRc0ztA9KMS85ODhgHLm5uVRWVsY8V38WOI25LvIJ
9gMXagTmYhLOSwyeJ8J/8CV8iv1UcB0xQ11FPVIqlYwTsQSmi4sLY8wTXzxv
R09EnqAOw16scTV7I/ILeY8j+jnwogaDZ1VVVZLh0JXn2gS55enpyX7GWh29
Df5GXVUX2I34ILeGhob4M/ofxs0Bh7hWgl3a1rWQ8/Nz3rcAd8R5L+Kl616K
KfcZMGdUz0PYh7kgBPNZzX0GzH+BOzg4WDIchuz7YI301L4P5uiY2yI2T+37
NDc3S4njvezDGWVf9OTkxNT7ou9in9oQnptCPhoOY+aVFPLaPJdKDK27b/D/
zu/idwAaPH+zv8vQwPEufifzGcub/93SW5P/AKaHg0Y=
          "], {{0, 0}, {50., 50.}}, {0, 255},
          ColorFunction->RGBColor],
         ImageSize->{Automatic, 14},
         PlotRange->{{0, 50.}, {0, 50.}}],
        "\"Not defined for the current notebook\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Not defined for the current notebook", "Tooltip"]& ]}, 
      Dynamic[
       StringQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "ResourceType"}]]]],
     Background->GrayLevel[0.5, 0.15],
     BaseStyle->{"Text", LineBreakWithin -> False, LineSpacing -> {0, 0}},
     FrameMargins->{{3, 3}, {4, 0}},
     FrameStyle->Directive[
       GrayLevel[0.5, 0.35], 
       AbsoluteThickness[0.5]],
     RoundingRadius->4,
     StripOnInput->False],
    "ResourceObjectNotebook"],
   ResourceObject[
    EvaluationNotebook[]],
   SelectWithContents->True,
   Selectable->False]],ExpressionUUID->"7cbe9809-3736-4b88-8f41-804278103b34"],
 " wouldn\[CloseCurlyQuote]t work when I ran the code so I deployed in the \
cloud and used ResourceObject[\nCloudObject[\n \
\[OpenCurlyDoubleQuote]https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-\\\nBrochure-Data\[CloseCurlyDoubleQuote]]] instead."
}], "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.874912498603431*^9, 3.874912505824753*^9}, {
   3.875355648221995*^9, 3.8753556652163577`*^9}, {3.875355704306571*^9, 
   3.87535573198112*^9}, 3.875355814291974*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->711457694,ExpressionUUID->"b2f6cf1d-c3f4-46d7-9ca8-6eecedd2abc7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{-5.3999999999999995`, Automatic}, {-5.399999999999977, 
   Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.16078, 0.40392, 0.56078], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8763425074655238`17.340997132804546*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztnMluFUcUhlGSRZZ5hbxFttlEypYoDwCKg7IhEkSK8iJZZmeM5wEbMJYn
bDwClgd5nmeb0YDnoeLfypUy+Zpbfc/t6vb3SQcJpNu36tTX3VWn6vLl9Z+v
/vjJlStXbn9++sfVa79+fevWtd++++L0L9/fvP3TjZtFP3x785eiG0W3vrr+
6ek//v5XfHYaDgAAAAAAEktxcTFBXBh4RVgEXhEWgVeEReAVYRF4RVgEXhEW
AQAAAPkn7vc7kc55U9z9J/CKSE7ETdz9J/CKSE7ETdz9J/CKSE4AAAAA5Jtv
/hj4qIDCk485YpTxvWyfzZD2uTle4ZUFeIVXFuAVXlmAV3hlAV7hlQV4hVcW
4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7h
lQV4hVcW4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFiTZqyjE
3Wa8wiuLNuMVXlm0Ga/wyqLNeIVXFm3GK7yyaDNe4ZVFm/EKryzajFd4ZdFm
vMIrizbjFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7hlQV4Zds/vMIrC/AK
ryzAK7yyAK/wygK8wisL8AqvLMArvLIAr/DKArzCKwviHt+4iDvv1sTdP7zC
KwvwCq8swCu8sgCv8MoCvMIrC/AKryzAK7yyAK/wygK8wisL8AqvLMCrdHoF
AACQdj72Xe4b8P+kPe9p71+opD3vae9fqKQ972nvX6ikPe9p71+opD3vae9f
qKQ972nvX6iQdwAAgGSwubnpHj16RBA5x4sXL871anl52Xw+SKQz5A5eEfkO
vCIsAq8Ii8ArwiIsvSovL3cVFRVEAqO0tDTS2K+srJzrVcYtrRt9rl1dXe3G
x8fd4eFh1u+AcNjZ2XEDAwPeXsmVbM+qf7OxseFaW1u9vkv+Dw8Pu/39fcOM
QBTev3/v+vr6XElJidcYyw3VO315/fq16+zsdHfu3Mn5u3UP6F7QPQFh8Pbt
W/fkyROv8dRn5IKcyBfyu7e318tvfUb3hq4B8fDy5UvX3t7u9WzS+GnsLcdP
z57nz597vY/lu+6VN2/emLUP/sn6+rprbm728kljrLEu5PtGcyfNoTSX8mlz
W1tb1j0l8Ofk5MQtLS25hw8fJnZ+rLWf1oBaC/r0oampya2ursbW/jRxfHzs
ZmdnXX19vddYhLieV59mZmbcvXv3vPr04MEDt7CwcHavQW4cHR25yclJV1tb
65V7jZnGTmMYKvJicXHR+xlcV1fnpqeng+5jKBwcHLjR0VFXWVnplWuNkd6X
SbuX19bWvOeMeiaPjY0F9UwOhb29PTc4OHi2v+GTW42J5vNJ59WrV+7x48eJ
nUOGwvb2tnv27Jm7e/euVy41BhqLtLG1teW6u7u9a6yFXvOGwrt371xPT493
7VA5V+7Tju67p0+fet13hajRhUKUvQ7lVjlWri8bUeYJmT2FNNZYte/muzer
XCqnyu1lJ7Ouqaqq8spl1D3QUNBZE9XzfHKg3CmHrHP+i+owU1NTZ7UGn9zq
zMZF54BCQ2t81e1Uv/Pps3KlnCl3kB3len5+3t2/f98r1/pc6DXWqHXkJPQx
ZKK8GzI11pDu5XzseyXtmRwymj9pr9p37hF3jVX1t5GREfbpA0XrP99zaVor
DQ0NFXSttLu7e3a2saysLOf2cq6o8EQ5R6saq+rWlrWdDx8+uP7+fq8anT7D
Och4ifI8yNRYVc/OF6prd3V1eT1P1Qf1RX2CMFANTPMXn739fJzbjrIHqjar
7eoDhInWfhMTE66mpsZrjHOtsUY556s2qq0hrVchO1HPTl5UY9Vv5hobG72u
rTapbZwxSy6Zs96+DjQ0NJzVaHUdeTA3N3f2bz7XUhuSeI4OsqN3VktLi5cT
OuPre85X36nf+UK60Ry7o6PDy5FcQt+Rz99wQjJQTcD3vNx5oWvpmvmsXUAy
yZzvjfJ/qhSi1grJRHt42ufJ5Zyh9vv0Gc7fw0Vof1r71NnOGfJ7IfBFdQWd
s/n7OUOdl+L3jZAPMmc6OUcHAAAAAABp4k8ZPQVi
                    "], {{0, 0}, {150., 150.}}, {0, 255}, ColorFunction -> 
                    RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 150.}, {0, 150.}}}], 
                    StyleBox["\"SI Brochure Data\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJytUM1KAzEQZusiQkXQR+\
i9DV49tj1YKIhJxYN4yKYTdmt2J8xMiPv2bkAR8drbMHz/vuIrbfMaP4F9xZcay+\
1rrvcdi7nRwJjIwVNzAiemevMXfLsbBCgSiJUOh4L/\
z5xvAqbjL23G8wP0MViBApt9w8yiFYn8oFTOeZUxeLK9K9SVw15hc1JNogZovFdbiAFHOP5kYrW1Yp\
XZLdeErk0Ey/\
JYmOeza5rrxzEChW74eNF7U71Pjf80PL9lmUinAHxnIEwWr520G5yWH4S5PlCCKcYXmyegNw=="}, 
                  "ClickToCopyTemplate"], 
                 StyleBox[
                  ActionMenuBox[
                   TagBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "2", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "6", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"], 
                    "\"   \""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    MouseAppearanceTag["LinkHand"]], {TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "40bcb1d4-a8a7-4e0a-b973-815996660127", 594011182, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    594011182]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f357ab6c-41f0-4982-a421-b94300da948a", 24354940, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[24354940]; 
                    Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "dd233553-894d-4443-b95e-27e48681bf76", 191786894, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    191786894]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "575ed910-8c1c-45f3-9443-df9b159ca609", 191786894, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 191786894, "CellObject" -> 
                    CellObject[
                    "afeb32a5-84f1-4b74-b320-996abb3edbc1", 
                    "ea958fe7-8eb9-48bc-81b2-51e3238e9f94"], 
                    "CellSerialNumber" -> 7747, "CellSize" -> {1971, 607}, 
                    "CellTags" -> "DefaultContent", "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "afeb32a5-84f1-4b74-b320-996abb3edbc1", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 39, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    191786894]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "34821343-1d0a-4726-9046-b1d50644e6b9", 315153824, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    315153824]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "03c3546a-d817-4dd3-a99a-a7d7d6aa814b", 211560460, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    211560460]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "90ec056c-adf2-4990-91be-287e6f832da5", 130039057, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 130039057, "CellObject" -> 
                    CellObject[
                    "f80321e7-8a38-49a8-a7df-5573671359f7", 
                    "d3c0f4be-94d6-4e48-a0d2-b21f18b0e92a"], 
                    "CellSerialNumber" -> 7766, "CellSize" -> {1014, 2655}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "f80321e7-8a38-49a8-a7df-5573671359f7", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 67, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    130039057]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Curly quotes should usually be written as straight \
quotes\""}, "RowDefault"] :> DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3f5e8538-99a4-4f91-b4e3-a40709d68cfe", 711457694, 
                    "CurlyQuotes", {}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    711457694]; Null]}, Appearance -> None, Method -> 
                   "Queued"], "BoxID" -> "WarningCountButton", StripOnInput -> 
                  False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "aa043900-882b-4d15-8384-3c43ca572205"]]]]]], Appearance -> 
                   None, BoxID -> "aa043900-882b-4d15-8384-3c43ca572205", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8763425074655238`17.340997132804546*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{"\"Published to the cloud\"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztnMluFUcUhlGSRZZ5hbxFttlEypYoDwCKg7IhEkSK8iJZZmeM5wEbMJYn
bDwClgd5nmeb0YDnoeLfypUy+Zpbfc/t6vb3SQcJpNu36tTX3VWn6vLl9Z+v
/vjJlStXbn9++sfVa79+fevWtd++++L0L9/fvP3TjZtFP3x785eiG0W3vrr+
6ek//v5XfHYaDgAAAAAAEktxcTFBXBh4RVgEXhEWgVeEReAVYRF4RVgEXhEW
AQAAAPkn7vc7kc55U9z9J/CKSE7ETdz9J/CKSE7ETdz9J/CKSE4AAAAA5Jtv
/hj4qIDCk485YpTxvWyfzZD2uTle4ZUFeIVXFuAVXlmAV3hlAV7hlQV4hVcW
4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7h
lQV4hVcW4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFiTZqyjE
3Wa8wiuLNuMVXlm0Ga/wyqLNeIVXFm3GK7yyaDNe4ZVFm/EKryzajFd4ZdFm
vMIrizbjFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7hlQV4Zds/vMIrC/AK
ryzAK7yyAK/wygK8wisL8AqvLMArvLIAr/DKArzCKwviHt+4iDvv1sTdP7zC
KwvwCq8swCu8sgCv8MoCvMIrC/AKryzAK7yyAK/wygK8wisL8AqvLMCrdHoF
AACQdj72Xe4b8P+kPe9p71+opD3vae9fqKQ972nvX6ikPe9p71+opD3vae9f
qKQ972nvX6iQdwAAgGSwubnpHj16RBA5x4sXL871anl52Xw+SKQz5A5eEfkO
vCIsAq8Ii8ArwiIsvSovL3cVFRVEAqO0tDTS2K+srJzrVcYtrRt9rl1dXe3G
x8fd4eFh1u+AcNjZ2XEDAwPeXsmVbM+qf7OxseFaW1u9vkv+Dw8Pu/39fcOM
QBTev3/v+vr6XElJidcYyw3VO315/fq16+zsdHfu3Mn5u3UP6F7QPQFh8Pbt
W/fkyROv8dRn5IKcyBfyu7e318tvfUb3hq4B8fDy5UvX3t7u9WzS+GnsLcdP
z57nz597vY/lu+6VN2/emLUP/sn6+rprbm728kljrLEu5PtGcyfNoTSX8mlz
W1tb1j0l8Ofk5MQtLS25hw8fJnZ+rLWf1oBaC/r0oampya2ursbW/jRxfHzs
ZmdnXX19vddYhLieV59mZmbcvXv3vPr04MEDt7CwcHavQW4cHR25yclJV1tb
65V7jZnGTmMYKvJicXHR+xlcV1fnpqeng+5jKBwcHLjR0VFXWVnplWuNkd6X
SbuX19bWvOeMeiaPjY0F9UwOhb29PTc4OHi2v+GTW42J5vNJ59WrV+7x48eJ
nUOGwvb2tnv27Jm7e/euVy41BhqLtLG1teW6u7u9a6yFXvOGwrt371xPT493
7VA5V+7Tju67p0+fet13hajRhUKUvQ7lVjlWri8bUeYJmT2FNNZYte/muzer
XCqnyu1lJ7Ouqaqq8spl1D3QUNBZE9XzfHKg3CmHrHP+i+owU1NTZ7UGn9zq
zMZF54BCQ2t81e1Uv/Pps3KlnCl3kB3len5+3t2/f98r1/pc6DXWqHXkJPQx
ZKK8GzI11pDu5XzseyXtmRwymj9pr9p37hF3jVX1t5GREfbpA0XrP99zaVor
DQ0NFXSttLu7e3a2saysLOf2cq6o8EQ5R6saq+rWlrWdDx8+uP7+fq8anT7D
Och4ifI8yNRYVc/OF6prd3V1eT1P1Qf1RX2CMFANTPMXn739fJzbjrIHqjar
7eoDhInWfhMTE66mpsZrjHOtsUY556s2qq0hrVchO1HPTl5UY9Vv5hobG72u
rTapbZwxSy6Zs96+DjQ0NJzVaHUdeTA3N3f2bz7XUhuSeI4OsqN3VktLi5cT
OuPre85X36nf+UK60Ry7o6PDy5FcQt+Rz99wQjJQTcD3vNx5oWvpmvmsXUAy
yZzvjfJ/qhSi1grJRHt42ufJ5Zyh9vv0Gc7fw0Vof1r71NnOGfJ7IfBFdQWd
s/n7OUOdl+L3jZAPMmc6OUcHAAAAAABp4k8ZPQVi
                    "], {{0, 0}, {150., 150.}}, {0, 255}, ColorFunction -> 
                    RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 150.}, {0, 150.}}}], 
                    StyleBox["\"SI Brochure Data\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJytUM1KAzEQZusiQkXQR+\
i9DV49tj1YKIhJxYN4yKYTdmt2J8xMiPv2bkAR8drbMHz/vuIrbfMaP4F9xZcay+\
1rrvcdi7nRwJjIwVNzAiemevMXfLsbBCgSiJUOh4L/\
z5xvAqbjL23G8wP0MViBApt9w8yiFYn8oFTOeZUxeLK9K9SVw15hc1JNogZovFdbiAFHOP5kYrW1Yp\
XZLdeErk0Ey/\
JYmOeza5rrxzEChW74eNF7U71Pjf80PL9lmUinAHxnIEwWr520G5yWH4S5PlCCKcYXmyegNw=="}, 
                  "ClickToCopyTemplate"], 
                 StyleBox[
                  ActionMenuBox[
                   TagBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "2", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "6", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"], 
                    "\"   \""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    MouseAppearanceTag["LinkHand"]], {TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "40bcb1d4-a8a7-4e0a-b973-815996660127", 594011182, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    594011182]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "f357ab6c-41f0-4982-a421-b94300da948a", 24354940, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[24354940]; 
                    Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "dd233553-894d-4443-b95e-27e48681bf76", 191786894, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    191786894]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "575ed910-8c1c-45f3-9443-df9b159ca609", 191786894, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 191786894, "CellObject" -> 
                    CellObject[
                    "afeb32a5-84f1-4b74-b320-996abb3edbc1", 
                    "ea958fe7-8eb9-48bc-81b2-51e3238e9f94"], 
                    "CellSerialNumber" -> 7747, "CellSize" -> {1971, 607}, 
                    "CellTags" -> "DefaultContent", "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "afeb32a5-84f1-4b74-b320-996abb3edbc1", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 39, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    191786894]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "34821343-1d0a-4726-9046-b1d50644e6b9", 315153824, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    315153824]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Converting dynamic outputs to bitmap can ensure they \
will display correctly in other sessions\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "03c3546a-d817-4dd3-a99a-a7d7d6aa814b", 211560460, 
                    "RasterizeDynamics", {594011182, 24354940, 191786894, 
                    315153824, 211560460}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    211560460]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"This cell takes up a large amount of screen area. \
Consider reducing the size to avoid potential issues.\""}, "RowDefault"] :> 
                    DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Warning", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "90ec056c-adf2-4990-91be-287e6f832da5", 130039057, 
                    "LargeCellBounds/CellArea", <|
                    "Type" -> "area", "CellID" -> 130039057, "CellObject" -> 
                    CellObject[
                    "f80321e7-8a38-49a8-a7df-5573671359f7", 
                    "d3c0f4be-94d6-4e48-a0d2-b21f18b0e92a"], 
                    "CellSerialNumber" -> 7766, "CellSize" -> {1014, 2655}, 
                    "CellTags" -> {}, "ContentData" -> BoxData, 
                    "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                    None, "Evaluatable" -> False, "Evaluating" -> False, 
                    "ExpressionUUID" -> 
                    "f80321e7-8a38-49a8-a7df-5573671359f7", 
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                    "NeedsRendering" -> False, "Position" -> 67, "Rendering" -> 
                    False, "Style" -> "Output", "TemplateGroup" -> False, 
                    "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                    500., "Width" -> 2000|>]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    130039057]; Null], TemplateBox[{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Curly quotes should usually be written as straight \
quotes\""}, "RowDefault"] :> DefinitionNotebookClient`WithCurrentNotebook[
                    EvaluationNotebook[], 
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Data", 
                    DefinitionNotebookClient`$CurrentNotebook, 
                    "3f5e8538-99a4-4f91-b4e3-a40709d68cfe", 711457694, 
                    "CurlyQuotes", {}]; 
                    DefinitionNotebookClient`PackageScope`seekAfter[
                    711457694]; Null]}, Appearance -> None, Method -> 
                   "Queued"], "BoxID" -> "WarningCountButton", StripOnInput -> 
                  False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                   With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
                    EvaluationNotebook[]}, 
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "aa043900-882b-4d15-8384-3c43ca572205"]]]]]], Appearance -> 
                   None, BoxID -> "aa043900-882b-4d15-8384-3c43ca572205", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Cloud object:\"", 
                    TemplateBox[{
                    RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"], "]"}], 
                    "OEM6eJytkDFrwzAUhHFqSiBd2p+QPRFdOyYZGgiUSikdQgZZecJOZT/\
x3hOq/30s6NI96/HdHXe+4rm2eYO/wP6Bn/eDAEUCsdLhMMm+4keNBfA114eOxSy2AdPlo7mCE1Od/\
IwXR+hjsAIFm/1hZtmKRH5TKue8zhg82d4V69phr7C5qiZRAzS+\
qh3EgCNcNDAmcsBqZ8Uqs19tCF2bCFZFWJrPu2eap/cxAoVu+PnSB1Odp8X/Ft6/slykUwB+\
MRCmiu9O2i1Ozw/CXB8pwQ0TjZMZ"}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Visit web page:\"", 
                    TemplateBox[{
                    TagBox[
                    
                    RowBox[{
                    "\"https://www.wolframcloud.com/obj/burb\"", 
                    "\[Ellipsis]", 
                    "\"eployedResources/Data/SI-Brochure-Data\""}], 
                    Short[#, 0.75]& ], 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztnMluFUcUhlGSRZZ5hbxFttlEypYoDwCKg7IhEkSK8iJZZmeM5wEbMJYn
bDwClgd5nmeb0YDnoeLfypUy+Zpbfc/t6vb3SQcJpNu36tTX3VWn6vLl9Z+v
/vjJlStXbn9++sfVa79+fevWtd++++L0L9/fvP3TjZtFP3x785eiG0W3vrr+
6ek//v5XfHYaDgAAAAAAEktxcTFBXBh4RVgEXhEWgVeEReAVYRF4RVgEXhEW
AQAAAPkn7vc7kc55U9z9J/CKSE7ETdz9J/CKSE7ETdz9J/CKSE4AAAAA5Jtv
/hj4qIDCk485YpTxvWyfzZD2uTle4ZUFeIVXFuAVXlmAV3hlAV7hlQV4hVcW
4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7h
lQV4hVcW4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFiTZqyjE
3Wa8wiuLNuMVXlm0Ga/wyqLNeIVXFm3GK7yyaDNe4ZVFm/EKryzajFd4ZdFm
vMIrizbjFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7hlQV4Zds/vMIrC/AK
ryzAK7yyAK/wygK8wisL8AqvLMArvLIAr/DKArzCKwviHt+4iDvv1sTdP7zC
KwvwCq8swCu8sgCv8MoCvMIrC/AKryzAK7yyAK/wygK8wisL8AqvLMCrdHoF
AACQdj72Xe4b8P+kPe9p71+opD3vae9fqKQ972nvX6ikPe9p71+opD3vae9f
qKQ972nvX6iQdwAAgGSwubnpHj16RBA5x4sXL871anl52Xw+SKQz5A5eEfkO
vCIsAq8Ii8ArwiIsvSovL3cVFRVEAqO0tDTS2K+srJzrVcYtrRt9rl1dXe3G
x8fd4eFh1u+AcNjZ2XEDAwPeXsmVbM+qf7OxseFaW1u9vkv+Dw8Pu/39fcOM
QBTev3/v+vr6XElJidcYyw3VO315/fq16+zsdHfu3Mn5u3UP6F7QPQFh8Pbt
W/fkyROv8dRn5IKcyBfyu7e318tvfUb3hq4B8fDy5UvX3t7u9WzS+GnsLcdP
z57nz597vY/lu+6VN2/emLUP/sn6+rprbm728kljrLEu5PtGcyfNoTSX8mlz
W1tb1j0l8Ofk5MQtLS25hw8fJnZ+rLWf1oBaC/r0oampya2ursbW/jRxfHzs
ZmdnXX19vddYhLieV59mZmbcvXv3vPr04MEDt7CwcHavQW4cHR25yclJV1tb
65V7jZnGTmMYKvJicXHR+xlcV1fnpqeng+5jKBwcHLjR0VFXWVnplWuNkd6X
SbuX19bWvOeMeiaPjY0F9UwOhb29PTc4OHi2v+GTW42J5vNJ59WrV+7x48eJ
nUOGwvb2tnv27Jm7e/euVy41BhqLtLG1teW6u7u9a6yFXvOGwrt371xPT493
7VA5V+7Tju67p0+fet13hajRhUKUvQ7lVjlWri8bUeYJmT2FNNZYte/muzer
XCqnyu1lJ7Ouqaqq8spl1D3QUNBZE9XzfHKg3CmHrHP+i+owU1NTZ7UGn9zq
zMZF54BCQ2t81e1Uv/Pps3KlnCl3kB3len5+3t2/f98r1/pc6DXWqHXkJPQx
ZKK8GzI11pDu5XzseyXtmRwymj9pr9p37hF3jVX1t5GREfbpA0XrP99zaVor
DQ0NFXSttLu7e3a2saysLOf2cq6o8EQ5R6saq+rWlrWdDx8+uP7+fq8anT7D
Och4ifI8yNRYVc/OF6prd3V1eT1P1Qf1RX2CMFANTPMXn739fJzbjrIHqjar
7eoDhInWfhMTE66mpsZrjHOtsUY556s2qq0hrVchO1HPTl5UY9Vv5hobG72u
rTapbZwxSy6Zs96+DjQ0NJzVaHUdeTA3N3f2bz7XUhuSeI4OsqN3VktLi5cT
OuPre85X36nf+UK60Ry7o6PDy5FcQt+Rz99wQjJQTcD3vNx5oWvpmvmsXUAy
yZzvjfJ/qhSi1grJRHt42ufJ5Zyh9vv0Gc7fw0Vof1r71NnOGfJ7IfBFdQWd
s/n7OUOdl+L3jZAPMmc6OUcHAAAAAABp4k8ZPQVi
                    "], {{0, 0}, {150., 150.}}, {0, 255}, ColorFunction -> 
                    RGBColor], {ImageSize -> 12, BaselinePosition -> 
                    Scaled[0.1], AspectRatio -> 1, Axes -> False, Background -> 
                    None, Frame -> None, FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 150.}, {0, 150.}}}], 
                    StyleBox["\"SI Brochure Data\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJytUM1KAzEQZusiQkXQR+\
i9DV49tj1YKIhJxYN4yKYTdmt2J8xMiPv2bkAR8drbMHz/vuIrbfMaP4F9xZcay+\
1rrvcdi7nRwJjIwVNzAiemevMXfLsbBCgSiJUOh4L/\
z5xvAqbjL23G8wP0MViBApt9w8yiFYn8oFTOeZUxeLK9K9SVw15hc1JNogZovFdbiAFHOP5kYrW1Yp\
XZLdeErk0Ey/\
JYmOeza5rrxzEChW74eNF7U71Pjf80PL9lmUinAHxnIEwWr520G5yWH4S5PlCCKcYXmyegNw=="}, 
                    "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.8763425074655238`17.340997132804546*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{"Published to the cloud", 
              Hyperlink[
              "\[RightGuillemet]", 
               "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Data/SI-Brochure-Data"]}}, Spacings -> 0.25], 
           RawBoxes[
            TemplateBox[{
              RowBox[{"ResourceObject", "[", 
                ButtonBox[
                 TagBox[
                  GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztnMluFUcUhlGSRZZ5hbxFttlEypYoDwCKg7IhEkSK8iJZZmeM5wEbMJYn
bDwClgd5nmeb0YDnoeLfypUy+Zpbfc/t6vb3SQcJpNu36tTX3VWn6vLl9Z+v
/vjJlStXbn9++sfVa79+fevWtd++++L0L9/fvP3TjZtFP3x785eiG0W3vrr+
6ek//v5XfHYaDgAAAAAAEktxcTFBXBh4RVgEXhEWgVeEReAVYRF4RVgEXhEW
AQAAAPkn7vc7kc55U9z9J/CKSE7ETdz9J/CKSE7ETdz9J/CKSE4AAAAA5Jtv
/hj4qIDCk485YpTxvWyfzZD2uTle4ZUFeIVXFuAVXlmAV3hlAV7hlQV4hVcW
4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7h
lQV4hVcW4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFiTZqyjE
3Wa8wiuLNuMVXlm0Ga/wyqLNeIVXFm3GK7yyaDNe4ZVFm/EKryzajFd4ZdFm
vMIrizbjFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7hlQV4Zds/vMIrC/AK
ryzAK7yyAK/wygK8wisL8AqvLMArvLIAr/DKArzCKwviHt+4iDvv1sTdP7zC
KwvwCq8swCu8sgCv8MoCvMIrC/AKryzAK7yyAK/wygK8wisL8AqvLMCrdHoF
AACQdj72Xe4b8P+kPe9p71+opD3vae9fqKQ972nvX6ikPe9p71+opD3vae9f
qKQ972nvX6iQdwAAgGSwubnpHj16RBA5x4sXL871anl52Xw+SKQz5A5eEfkO
vCIsAq8Ii8ArwiIsvSovL3cVFRVEAqO0tDTS2K+srJzrVcYtrRt9rl1dXe3G
x8fd4eFh1u+AcNjZ2XEDAwPeXsmVbM+qf7OxseFaW1u9vkv+Dw8Pu/39fcOM
QBTev3/v+vr6XElJidcYyw3VO315/fq16+zsdHfu3Mn5u3UP6F7QPQFh8Pbt
W/fkyROv8dRn5IKcyBfyu7e318tvfUb3hq4B8fDy5UvX3t7u9WzS+GnsLcdP
z57nz597vY/lu+6VN2/emLUP/sn6+rprbm728kljrLEu5PtGcyfNoTSX8mlz
W1tb1j0l8Ofk5MQtLS25hw8fJnZ+rLWf1oBaC/r0oampya2ursbW/jRxfHzs
ZmdnXX19vddYhLieV59mZmbcvXv3vPr04MEDt7CwcHavQW4cHR25yclJV1tb
65V7jZnGTmMYKvJicXHR+xlcV1fnpqeng+5jKBwcHLjR0VFXWVnplWuNkd6X
SbuX19bWvOeMeiaPjY0F9UwOhb29PTc4OHi2v+GTW42J5vNJ59WrV+7x48eJ
nUOGwvb2tnv27Jm7e/euVy41BhqLtLG1teW6u7u9a6yFXvOGwrt371xPT493
7VA5V+7Tju67p0+fet13hajRhUKUvQ7lVjlWri8bUeYJmT2FNNZYte/muzer
XCqnyu1lJ7Ouqaqq8spl1D3QUNBZE9XzfHKg3CmHrHP+i+owU1NTZ7UGn9zq
zMZF54BCQ2t81e1Uv/Pps3KlnCl3kB3len5+3t2/f98r1/pc6DXWqHXkJPQx
ZKK8GzI11pDu5XzseyXtmRwymj9pr9p37hF3jVX1t5GREfbpA0XrP99zaVor
DQ0NFXSttLu7e3a2saysLOf2cq6o8EQ5R6saq+rWlrWdDx8+uP7+fq8anT7D
Och4ifI8yNRYVc/OF6prd3V1eT1P1Qf1RX2CMFANTPMXn739fJzbjrIHqjar
7eoDhInWfhMTE66mpsZrjHOtsUY556s2qq0hrVchO1HPTl5UY9Vv5hobG72u
rTapbZwxSy6Zs96+DjQ0NJzVaHUdeTA3N3f2bz7XUhuSeI4OsqN3VktLi5cT
OuPre85X36nf+UK60Ry7o6PDy5FcQt+Rz99wQjJQTcD3vNx5oWvpmvmsXUAy
yZzvjfJ/qhSi1grJRHt42ufJ5Zyh9vv0Gc7fw0Vof1r71NnOGfJ7IfBFdQWd
s/n7OUOdl+L3jZAPMmc6OUcHAAAAAABp4k8ZPQVi
                    "], {{0, 0}, {150., 150.}}, {0, 255}, ColorFunction -> 
                    RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 150.}, {0, 150.}}}], 
                    StyleBox["\"SI Brochure Data\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                 ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                 Alignment -> Left, 
                 Appearance -> {
                  "Default" -> 
                   FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                 BaseStyle -> {Deployed -> False}, 
                 DefaultBaseStyle -> {Background -> None}, BaselinePosition -> 
                 Baseline, Method -> "Preemptive"], "]"}], 
              "OEM6eJytUM1KAzEQZusiQkXQR+\
i9DV49tj1YKIhJxYN4yKYTdmt2J8xMiPv2bkAR8drbMHz/vuIrbfMaP4F9xZcay+\
1rrvcdi7nRwJjIwVNzAiemevMXfLsbBCgSiJUOh4L/\
z5xvAqbjL23G8wP0MViBApt9w8yiFYn8oFTOeZUxeLK9K9SVw15hc1JNogZovFdbiAFHOP5kYrW1Yp\
XZLdeErk0Ey/\
JYmOeza5rrxzEChW74eNF7U71Pjf80PL9lmUinAHxnIEwWr520G5yWH4S5PlCCKcYXmyegNw=="}, 
             "ClickToCopyTemplate"]], 
           Style[
            ActionMenu[
             MouseAppearance[
              Grid[{{
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "2", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Potential issues found\""}, "PrettyTooltipTemplate"]], 
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "6", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]], 
                 "   "}}], "LinkHand"], {Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "40bcb1d4-a8a7-4e0a-b973-815996660127", 594011182, 
                  "RasterizeDynamics", {594011182, 24354940, 191786894, 
                  315153824, 211560460}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[594011182]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "f357ab6c-41f0-4982-a421-b94300da948a", 24354940, 
                  "RasterizeDynamics", {594011182, 24354940, 191786894, 
                  315153824, 211560460}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[24354940]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "dd233553-894d-4443-b95e-27e48681bf76", 191786894, 
                  "RasterizeDynamics", {594011182, 24354940, 191786894, 
                  315153824, 211560460}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[191786894]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Data", DefinitionNotebookClient`$CurrentNotebook,
                   "575ed910-8c1c-45f3-9443-df9b159ca609", 191786894, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 191786894, "CellObject" -> 
                   CellObject[
                    "afeb32a5-84f1-4b74-b320-996abb3edbc1", 
                    "ea958fe7-8eb9-48bc-81b2-51e3238e9f94"], 
                   "CellSerialNumber" -> 7747, "CellSize" -> {1971, 607}, 
                   "CellTags" -> "DefaultContent", "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "afeb32a5-84f1-4b74-b320-996abb3edbc1",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 39, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[191786894]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "34821343-1d0a-4726-9046-b1d50644e6b9", 315153824, 
                  "RasterizeDynamics", {594011182, 24354940, 191786894, 
                  315153824, 211560460}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[315153824]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Converting dynamic outputs to bitmap can ensure they will \
display correctly in other sessions"}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "03c3546a-d817-4dd3-a99a-a7d7d6aa814b", 211560460, 
                  "RasterizeDynamics", {594011182, 24354940, 191786894, 
                  315153824, 211560460}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[211560460]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[1., 0.4627450980392157, 0.], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "This cell takes up a large amount of screen area. Consider \
reducing the size to avoid potential issues."}] :> 
              DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Warning", "Data", DefinitionNotebookClient`$CurrentNotebook,
                   "90ec056c-adf2-4990-91be-287e6f832da5", 130039057, 
                  "LargeCellBounds/CellArea", <|
                  "Type" -> "area", "CellID" -> 130039057, "CellObject" -> 
                   CellObject[
                    "f80321e7-8a38-49a8-a7df-5573671359f7", 
                    "d3c0f4be-94d6-4e48-a0d2-b21f18b0e92a"], 
                   "CellSerialNumber" -> 7766, "CellSize" -> {1014, 2655}, 
                   "CellTags" -> {}, "ContentData" -> BoxData, 
                   "ContentDataForm" -> StandardForm, "CursorPosition" -> 
                   None, "Evaluatable" -> False, "Evaluating" -> False, 
                   "ExpressionUUID" -> "f80321e7-8a38-49a8-a7df-5573671359f7",
                    "FirstCellInGroup" -> False, "Formatted" -> True, 
                   "NeedsRendering" -> False, "Position" -> 67, "Rendering" -> 
                   False, "Style" -> "Output", "TemplateGroup" -> False, 
                   "TemplateGroupName" -> None, "Area" -> 500000., "Height" -> 
                   500., "Width" -> 2000|>]; 
                DefinitionNotebookClient`PackageScope`seekAfter[130039057]; 
                Null], Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[
                    0.49019607843137253`, 0.49019607843137253`, 
                    0.49019607843137253`], 
                    RGBColor[1., 1., 1.], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Curly quotes should usually be written as straight \
quotes"}] :> DefinitionNotebookClient`WithCurrentNotebook[
                EvaluationNotebook[], 
                DefinitionNotebookClient`LoadDefinitionNotebook[
                 "Data", DefinitionNotebookClient`$CurrentNotebook]; 
                DefinitionNotebookClient`PackageScope`setHint[
                 "Suggestion", "Data", 
                  DefinitionNotebookClient`$CurrentNotebook, 
                  "3f5e8538-99a4-4f91-b4e3-a40709d68cfe", 711457694, 
                  "CurlyQuotes", {}]; 
                DefinitionNotebookClient`PackageScope`seekAfter[711457694]; 
                Null]}, Appearance -> None, Method -> "Queued"], "BoxID" -> 
            "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             
             With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "aa043900-882b-4d15-8384-3c43ca572205"]]]]]], Appearance -> 
             None, BoxID -> "aa043900-882b-4d15-8384-3c43ca572205"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Cloud object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"CloudObject", "[", 
                    
                    TemplateBox[{
                    "\"https://\[Ellipsis]/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"], "]"}], 
                  "OEM6eJytkDFrwzAUhHFqSiBd2p+QPRFdOyYZGgiUSikdQgZZecJOZT/\
x3hOq/30s6NI96/HdHXe+4rm2eYO/wP6Bn/eDAEUCsdLhMMm+4keNBfA114eOxSy2AdPlo7mCE1Od/\
IwXR+hjsAIFm/1hZtmKRH5TKue8zhg82d4V69phr7C5qiZRAzS+\
qh3EgCNcNDAmcsBqZ8Uqs19tCF2bCFZFWJrPu2eap/cxAoVu+PnSB1Odp8X/Ft6/slykUwB+\
MRCmiu9O2i1Ozw/CXB8pwQ0TjZMZ"}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Visit web page:", 
               Hyperlink[
                RawBoxes[
                 TagBox[
                  
                  RowBox[{
                   "\"https://www.wolframcloud.com/obj/burb\"", "\[Ellipsis]",
                     "\"eployedResources/Data/SI-Brochure-Data\""}], 
                  Short[#, 0.75]& ]], 
                "https://www.wolframcloud.com/obj/burbery1/DeployedResources/\
Data/SI-Brochure-Data"]}, {"\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[
                    RasterBox[CompressedData["
1:eJztnMluFUcUhlGSRZZ5hbxFttlEypYoDwCKg7IhEkSK8iJZZmeM5wEbMJYn
bDwClgd5nmeb0YDnoeLfypUy+Zpbfc/t6vb3SQcJpNu36tTX3VWn6vLl9Z+v
/vjJlStXbn9++sfVa79+fevWtd++++L0L9/fvP3TjZtFP3x785eiG0W3vrr+
6ek//v5XfHYaDgAAAAAAEktxcTFBXBh4RVgEXhEWgVeEReAVYRF4RVgEXhEW
AQAAAPkn7vc7kc55U9z9J/CKSE7ETdz9J/CKSE7ETdz9J/CKSE4AAAAA5Jtv
/hj4qIDCk485YpTxvWyfzZD2uTle4ZUFeIVXFuAVXlmAV3hlAV7hlQV4hVcW
4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7h
lQV4hVcW4BVeWYBXeGUBXuGVBXiFVxbgFV5ZgFd4ZQFe4ZUFeIVXFiTZqyjE
3Wa8wiuLNuMVXlm0Ga/wyqLNeIVXFm3GK7yyaDNe4ZVFm/EKryzajFd4ZdFm
vMIrizbjFV5ZgFd4ZQFe4ZUFeIVXFuAVXlmAV3hlAV7hlQV4Zds/vMIrC/AK
ryzAK7yyAK/wygK8wisL8AqvLMArvLIAr/DKArzCKwviHt+4iDvv1sTdP7zC
KwvwCq8swCu8sgCv8MoCvMIrC/AKryzAK7yyAK/wygK8wisL8AqvLMCrdHoF
AACQdj72Xe4b8P+kPe9p71+opD3vae9fqKQ972nvX6ikPe9p71+opD3vae9f
qKQ972nvX6iQdwAAgGSwubnpHj16RBA5x4sXL871anl52Xw+SKQz5A5eEfkO
vCIsAq8Ii8ArwiIsvSovL3cVFRVEAqO0tDTS2K+srJzrVcYtrRt9rl1dXe3G
x8fd4eFh1u+AcNjZ2XEDAwPeXsmVbM+qf7OxseFaW1u9vkv+Dw8Pu/39fcOM
QBTev3/v+vr6XElJidcYyw3VO315/fq16+zsdHfu3Mn5u3UP6F7QPQFh8Pbt
W/fkyROv8dRn5IKcyBfyu7e318tvfUb3hq4B8fDy5UvX3t7u9WzS+GnsLcdP
z57nz597vY/lu+6VN2/emLUP/sn6+rprbm728kljrLEu5PtGcyfNoTSX8mlz
W1tb1j0l8Ofk5MQtLS25hw8fJnZ+rLWf1oBaC/r0oampya2ursbW/jRxfHzs
ZmdnXX19vddYhLieV59mZmbcvXv3vPr04MEDt7CwcHavQW4cHR25yclJV1tb
65V7jZnGTmMYKvJicXHR+xlcV1fnpqeng+5jKBwcHLjR0VFXWVnplWuNkd6X
SbuX19bWvOeMeiaPjY0F9UwOhb29PTc4OHi2v+GTW42J5vNJ59WrV+7x48eJ
nUOGwvb2tnv27Jm7e/euVy41BhqLtLG1teW6u7u9a6yFXvOGwrt371xPT493
7VA5V+7Tju67p0+fet13hajRhUKUvQ7lVjlWri8bUeYJmT2FNNZYte/muzer
XCqnyu1lJ7Ouqaqq8spl1D3QUNBZE9XzfHKg3CmHrHP+i+owU1NTZ7UGn9zq
zMZF54BCQ2t81e1Uv/Pps3KlnCl3kB3len5+3t2/f98r1/pc6DXWqHXkJPQx
ZKK8GzI11pDu5XzseyXtmRwymj9pr9p37hF3jVX1t5GREfbpA0XrP99zaVor
DQ0NFXSttLu7e3a2saysLOf2cq6o8EQ5R6saq+rWlrWdDx8+uP7+fq8anT7D
Och4ifI8yNRYVc/OF6prd3V1eT1P1Qf1RX2CMFANTPMXn739fJzbjrIHqjar
7eoDhInWfhMTE66mpsZrjHOtsUY556s2qq0hrVchO1HPTl5UY9Vv5hobG72u
rTapbZwxSy6Zs96+DjQ0NJzVaHUdeTA3N3f2bz7XUhuSeI4OsqN3VktLi5cT
OuPre85X36nf+UK60Ry7o6PDy5FcQt+Rz99wQjJQTcD3vNx5oWvpmvmsXUAy
yZzvjfJ/qhSi1grJRHt42ufJ5Zyh9vv0Gc7fw0Vof1r71NnOGfJ7IfBFdQWd
s/n7OUOdl+L3jZAPMmc6OUcHAAAAAABp4k8ZPQVi
                    "], {{0, 0}, {150., 150.}}, {0, 255}, ColorFunction -> 
                    RGBColor], {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    AspectRatio -> 1, Axes -> False, Background -> None, 
                    Frame -> None, FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 150.}, {0, 150.}}}], 
                    StyleBox["\"SI Brochure Data\"", FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], "OEM6eJytUM1KAzEQZusiQkXQR+\
i9DV49tj1YKIhJxYN4yKYTdmt2J8xMiPv2bkAR8drbMHz/vuIrbfMaP4F9xZcay+\
1rrvcdi7nRwJjIwVNzAiemevMXfLsbBCgSiJUOh4L/\
z5xvAqbjL23G8wP0MViBApt9w8yiFYn8oFTOeZUxeLK9K9SVw15hc1JNogZovFdbiAFHOP5kYrW1Yp\
XZLdeErk0Ey/\
JYmOeza5rrxzEChW74eNF7U71Pjf80PL9lmUinAHxnIEwWr520G5yWH4S5PlCCKcYXmyegNw=="}, 
                 "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWltT20YUji9cCg4d0ulM0yc95IFmEnJpZ3pJ20BtIHSAAGuSPrKWjmwNa62yuwL0\
U9o/0r/XsyvJNo5kJNu0qSeTyNLqO9+e237rjVuVD5q8H/DQd3auAwFSetx3K3LhJPRAudmPq7K67+\
LftW3fwX8Wdj6ElMm1R+9A6OdHYb8DQrjms7GlRxDahxO8aDRDIcBX7ygLwb0nH+xc4hVV+\
i2uoMP5BY6qH3hSyUabdrue3z0NGUjSOAXJQ2FDOwqA1FtUUaRZf+vbkMty4TfG7Qs9LAZ81OS+\
gmt1TFXPreXN/AjAkWQjtUciqaDfZB7SPm+B6/neKN3z4SuWJpW+\
ljVU1o9CxpDY5scPEwOn0EWqIJCp63VDYVwzmO7roqROIeDSU1xEMWCMIxOgmolfRS7vUo+\
FAiNTkfePqc1A7ftSUcbIV3kM3cVpnD2VWxttfiMyK0QJzIffuaft1Q5pYOYQ+rZ+\
012ILZOHuc415KjUab0aY5GAeUrfJoyrZoVUzkn1p19GblRfrRjymL+SfFOU/\
GO3nuOlGgFtb6XFr3xTBFL+\
WBQ1vXgbKgwjOLqgVjDSjNqwjXk1R9hVXXQtYDQCB3FX33DmYCAxMX35a1HgY+\
FdIuD5ZdwW9gTgNyGXznyZtIMMb7TKotMgAN8583vUdxg4TWBMTnTMvCxM8BF+\
Le0lG2Gx4yUIZL0NfZyAAm1uT/AwmB0Ua7exzfQVtoNLTOgvmzioy4UH8mmzB/ZFh1/\
j7bXhbW2dNNJn5tsa2qMhU6a+fZXBlHye3iIQ12ZmqAt3s0Eg5EWbnwUOXid9Pz/KcwC/\
EeAa3lhKS2B5j/EOZec9vaSNelR+\
X9TsHqg3nuOAHzei4uW6S307ava4Z0PLo4x3R4k1EmJC4SqJ6ys2ZepfZFGn+\
HTdPNVrEoEPIeCsyYPEA8xJDZ7gcjGY700DI2DpkrLQFqEp7Rm7RJnFLr1Iky6RIfJlWQp+\
p0yNJVJm3OoND6X+PIKrgT8zfRwXiDwsS/lRKOEAutSO9rs+\
F3F3SmMt6zoa2cX3qqilDNyxwptUhjOamdRjq3LxAN80jXG3rN+\
6oNI2dtPi3EoJS2IVmQP2RSpB3gXd3GpECW1U86Ievd/\
SdWn4yaV97NldzNTlfd8Yi25xcm3AOmfiCXDhvpfOSA5Who9gO0NvD8yP2KzIndLLIPW579mUHQseA\
HrL6LlpOY8Qzd5EVJNm2NiWktue0d4ncrt0bQcJWxIh/\
aivc2h524iRNp8PnEkTskYM0CEo6uj9QbIDI8tNT8UbkIfxiGen4ILQ2W2lj4bdZT5RGTE6RivePQ3\
2UPEWtH6APv9o63nPfB5v4Z5gls3KhJ1ECX3/OBelnKAvhzNJwX+\
Xi4SbwAvaBWJjQMrp9rNczHi1y8qD2NjUQv7OTE5W9gW9V0TPTwX1ian449mjUELW34W1aXT+\
Ri6PcWGfX7b/EyU/VbdAgOe39qtx6dycObhGwT/LhbkLyZ5P+oZ7phbqT3LxZ1PmZXGLSvGfi/\
njvxXgM5H8hGT3D7nzILagAfaf8QqZRXe/KrhcZartqalOKbf3J/\
zGnv44jtUWBuNmJ8vuucLOU37PEpy5iO6//tSfja3h6dHSv3RUMAc9n9l6S2+xsF+\
QsNP3zESx1PnEDjwX+DiFhqcgg56zGOuP7Jlt5RejNqDGk7fcxOaBXmBeK0S350S2yc1Mbw5+\
XaTM0yv4MRWY71qg1MZUdGP09C4+\
KCN1XQLkfqKR49npzp10zjaYs6RBI3162wHgUINioxpOaXWkcY11sZKQdbnwvufZvdwi/\
dZ8TJHeP8QBGIVYe5I/\
2j1PWn6CawlcRT0sWSvRddaLl5svLC4sLZyExV1L9cB6z5mLDrVin1uKW24SMCtudyzaHB4U39o3Gq\
NqmPxduUlJ79aokNpKByzbCE3HcgXvW9Ty4QppJWSfWJLjnz5YLg4K9TT6NNJI1hUXiCQtuA5weQFn\
02pxK+KhdeXJnoZWIrJoqHgfI4BtkkWWzX3EVZh0OOdRQjia4tN+gEM7DFLrr3MOpGtyq/\
j5bXwMnKb/W4QWnpPm5RdZEm30LHRM+tRm+h1Wfrad+\
kNne1L2w0PSvIVsuKro0OqxqTRrVktppXpxx+VtFPL/r4Fhvt402TSi+eXCLmUSBiO+PoU+\
v4SdfqCinWuKG4h0WyzHh67HJN57vsOv2p7CWcYj4mX0Hz1LhOU="]]], "CreationTimestamp" -> 
  3.8749051644810822`17.340836067087043*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Data", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "DataResource", 
    "Contexts" -> {"DataResource`", "DataResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, 
  "SubmissionReviewData" -> {
   "Review" -> True, "SubmissionID" -> "7341", "OriginalName" -> 
    "SI Brochure Data", "Internal" -> 
    "$2KsqYkJEF5lRw7Za9qQJS9XuQAPMZPaG58cJh+\
nBtm8zyxlVEG4vOGX6s5LArrbpu4k8PzUhmCig/l1S0tewQXwknF0uVlZO/\
vjOBHPPyhXdsQswiDFFD/\
EID3cEPtVhmQl15xNQR9jzU6YWsfCssbX9qDHtvqSJ4VsGrRXW8phHEyMTpI7KoqRrx5pyQ9+\
F6xWMBzevvKFA3f0jAbhGKR3MwREuvLgyLQB4kokAxaF9om1WzJU54r/\
4eo8TvGgtuQC067BLHGcrzXCBcAFrp1FQ7dCCO6by8QX1EgKiF+me3YEezXYQrL8dXaJpDZmv/\
At62ypgdSkhTrwEiyNtL62amxAdqBryUjcKocXue6MRgxQg0eQbVev1sjh6SrgybahvEo4bdYeIQhS\
MuPnK9jegpie9MdDI2R85p0SSqp+5Q5UBf926WufZKyoidyuOrFiKFHwKnYh9m9okxaZQA4doV/\
8ge9YTA3jORBK/ZINQ/QGAjwnkUqt+reJiwoxjUTeGY2ti/LQDmOq4BsKDilNgM5Mi4Rmtjc4L/\
8asqLFQ5Qywc9gkcPtDgUk/kcYtBQ9xSNvylZzeKOX0B4XIjmOKHsTdM/HnkSidtJkaWerXjz7An8+\
XUO1rkSMFTtvWbkE9XXlL5LTVEiW3kif6Rxdo5YnUNaNOmJZHIxSvgKskNcrfLogoyC9A1rB+\
oD0lb1LjnxMBnwqTQU2/\
P7CgVF6wmR0aw86Uz6aeyGNmpW5TOQi1cQ9fDPgkVfHgTPMeN7AavpLbvGnGQPcsBw/\
g6XOxYm00pI+D30cskd84YebcyFlYJpMUyFw3AioXvDk/1jYJS1fPf+\
FgV82Lj3Q994sIqW89Alzfzc0AiSJ+AR2lSa+CMcnFrUqFae+\
2pxNaMg6QDqDTQpvuv6rqqKrvJYpmr0vYFaXvpOjonrF7wgc2ohW9Wx0GUa5py3fDs/\
pdZWDZn2FZD6v7k0Di8v8w3KaNwRJaWB8+YPxKuJorFmyuIfbOp3RG9wvjU+\
SrnIFbTPvPISnkTj8Q1qvUs1NlHm9mwCU13J9gGZwLHH+nCskUyH51vnhZ1EsoCZCn7iB4q5Q/\
4aqUajVbFbH4O5qgCA==$61IQXonXa5OMUs6KcWim0g=="}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.876217438414958`16.340983120194796*^9, 
  "TemplateVersion" -> "1.14.2", "TryRealOnly" -> False, "AutoUpdate" -> True,
   "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.16078, 0.40392, 0.56078], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                 TagBox[
                  GridBox[{{"\"Insert ResourceObject\"", 
                    GraphicsBox[{
                    Thickness[0.05], {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {
                    18., 18.328}, {17.328, 19.}, {16.5, 19.}, {4.5, 19.}, {
                    3.6716, 19.}, {3., 18.328}, {3., 17.5}, {3., 3.5}, {3., 
                    2.6716}, {3.6716, 2.}, {4.5, 2.}, {16.5, 2.}, {17.328, 
                    2.}, {18., 2.6716}, {18., 3.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 12.}, {5., 11.}, {2., 
                    11.}, {2., 12.}}, {{2., 10.}, {2., 9.}, {5., 9.}, {5., 
                    10.}}, {{2., 14.}, {2., 13.}, {5., 13.}, {5., 14.}}, {{2.,
                     8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{2., 6.}, {2., 
                    5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {2., 
                    17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 
                    3.}, {5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 
                    15.}, {5., 16.}}}]}, {
                    FaceForm[{
                    GrayLevel[1], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 
                    18.}, {16.5, 18.}, {16.776, 18.}, {17., 17.776}, {17., 
                    17.5}, {17., 3.5}, {17., 3.2236}, {16.776, 3.}, {16.5, 
                    3.}, {4.5, 3.}, {4.2236, 3.}, {4., 3.2236}, {4., 3.5}, {
                    4., 17.5}, {4., 17.776}, {4.2236, 18.}, {4.5, 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.86667, 0.06667, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQrbtp7vvlx3QcGMBA1aH5wKmFrt/0He77907Pm6Th
kCQQYbnFQ9shxRokoulw+KtGTP8hbQenhKcXlKL1HEIeL519JEHdASydpwPV
r+Iw54jChiIPAwdlr+pm/R4luPyd643FbiEyDue/Bz9eCtTv8bBKZJ27rMOn
S75JAjM0HZRyKqqWvhF2+FWXtadksoaDKlvjVGdvKbj7zq06fzUMKB8FclCu
osMuTx4mbaD+qxUv1QwzFBwOrlji5xAs4+CSmf+h1VPcAey9biWH3LDadduU
pOHum/i2xt70npDDcW/zTkeg+yWmXuHMAMrD/Afxtzjc/w3bHZoepSvAw2fj
w5dTN+UoOgAARNmGkQ==
                    "], {{14.809, 9.3454}, {13.744, 9.7099}, {13.017, 
                    10.654}, {13.953, 10.307}}, {{11.371, 7.1364}, {10.712, 
                    6.0044}, {10.712, 7.177}, {11.398, 8.1788}}, {{9.8213, 
                    12.979}, {8.6908, 13.381}, {8.0367, 14.264}, {9.2241, 
                    13.743}}, {{11.738, 13.743}, {12.925, 14.264}, {12.271, 
                    13.381}, {11.141, 12.979}}, {{13.177, 12.7}, {12.603, 
                    11.886}, {12.637, 13.113}, {13.309, 14.019}}, {{10.481, 
                    7.6484}, {9.6004, 8.9331}, {10.481, 10.128}, {11.361, 
                    8.9331}}, {{8.8261, 11.306}, {8.782, 12.866}, {10.249, 
                    12.344}, {10.249, 10.826}}, {{10.712, 12.344}, {12.179, 
                    12.866}, {12.137, 11.306}, {10.712, 10.826}}, {{7.7855, 
                    12.7}, {7.6538, 14.019}, {8.325, 13.113}, {8.3587, 
                    11.887}}, {{10.114, 10.394}, {9.2339, 9.2003}, {7.7378, 
                    9.6414}, {8.6871, 10.875}}, {{9.5648, 8.1792}, {10.249, 
                    7.177}, {10.249, 6.004}, {9.5887, 7.1366}}, {{10.848, 
                    10.394}, {12.275, 10.875}, {13.224, 9.6414}, {11.728, 
                    9.2003}}, {{15.126, 12.009}, {14.018, 10.766}, {12.711, 
                    11.252}, {13.495, 12.364}}, {{10.481, 15.384}, {11.321, 
                    13.946}, {10.481, 12.872}, {9.641, 13.946}}, {{5.8362, 
                    12.01}, {7.467, 12.365}, {8.2511, 11.252}, {6.9436, 
                    10.767}}, {{7.009, 10.307}, {7.9452, 10.655}, {7.2182, 
                    9.7099}, {6.152, 9.3459}}, {{6.2515, 8.9006}, {7.3612, 
                    9.2795}, {8.5462, 8.9302}, {7.5545, 8.6165}}, {{7.776, 
                    8.2109}, {9.1027, 8.6306}, {9.1365, 7.2193}, {7.6098, 
                    6.5491}}, {{11.824, 7.219}, {11.859, 8.6305}, {13.185, 
                    8.2104}, {13.351, 6.5484}}, {{13.407, 8.6159}, {12.415, 
                    8.9301}, {13.6, 9.2795}, {14.71, 8.8998}}}]}}, 
                    AspectRatio -> Automatic, ImageSize -> 12, 
                    PlotRange -> {{0., 20.}, {0., 20.}}, PlotRangePadding -> 
                    0, BaselinePosition -> Scaled[0.2]]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                 StripOnInput -> False], 
                "\"Insert an icon representing the ResourceObject\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4300058170245655723; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "InsertResourceObject"; 
                    DefinitionNotebookClient`InsertResourceObjectIcon[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4300058170245655723]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.10588, 0.27059, 0.37255], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.77647, 0.81765, 0.84314], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVan7pbXNXbT969tnrtxAEZANFgOJAWaAa
oEqshgDNh5gQUtL+6MVrrKEHFAfKQsyBuwfZEIgvgGoIRgTEHKB6NEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEqgeqAtiCBBQbghVXPKfemFCldihSjqhSoql
Vt6hSi6mVnkCBxSWbGQAghHxn7jSHgAhWAlh
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJche4+e6pyzIrq80zAsD4KAbKAIUJwYQx48fFTS
M0vaNR4XAsoC1eAx5PCpc9ZxJUCVcp7Jhqmt1iXTXZuWQxCQDRQBigNlgWqA
KrEaAjQfYoJ6WLFL4zKvzg2YCCgOlIWYA3cPsiEQXwDVYNWOjCDmANWjGQIM
MYgvcLkBzT0Qf0HCGW4IMOSBgkBfEzQBgoAqgeqBupANAcYgyKcl04k0BKgS
qB6oC6gXkhqBDGBKAAoCY4FIQ4AqQS4Py4MYAgSUG0IVl1AxTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEBMMU5MaQ8AQJMCGA==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CR779+rzp+q3ndybhpOyEIyAaKAMWBskA1QJVY
DQGaDzHh0sPXiTN2eXVuwERAcaAsxBy4e5ANgfgCqAardmQEMQeoHs0QYIhB
fIHLDWjugfgLEs5wQ4AhD2QAfU3QBAgCqgSqB+pCNgQYg0AGMPSINASoEuTy
79+BeiGpEcgApgQgAxgLRBoCVAlUD9QFMQQIKDeEKi6hYphQJXaokk6okmKp
lXeokoupVZ7AAYUlGxkAj7PhgJjSHgDbEuv0
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.02963], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIIGBQcwfUAPQjOoYuc3CDugqIfxGTQg9ANj
qLgOdj66erh5+lD7oPYwGGHno6uH86H2PDCA6jPFzkdXD+M7mENpLai4JXY+
unogHwDQSSTa
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}}, {{{0.75, 1.875}, {33., 1.875}, {33., 0.375}, {
                    0.75, 0.375}}, {{27., 19.875}, {29.25, 19.875}, {29.25, 
                    4.875}, {27., 4.875}}, {{3., 4.125}, {30.75, 4.125}, {
                    30.75, 2.625}, {3., 2.625}}, {{16.875, 32.625}, {0., 
                    24.375}, {0., 22.875}, {33.75, 22.875}, {33.75, 
                    24.375}}, {{3.75, 24.375}, {16.875, 30.75}, {30., 
                    24.375}}, {{25.5, 22.125}, {30.75, 22.125}, {30.75, 
                    20.625}, {25.5, 20.625}}, {{4.5, 19.875}, {6.75, 
                    19.875}, {6.75, 4.875}, {4.5, 4.875}}, {{3., 22.125}, {
                    8.25, 22.125}, {8.25, 20.625}, {3., 20.625}}}]}, {
                    FaceForm[
                    RGBColor[0.843, 0.847, 0.847, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], Background -> 
                  RGBColor[0.2902, 0.53725, 0.6902], 
                  ImageSize -> {45., Automatic}, 
                  PlotRange -> {{0., 33.75}, {0., 33.}}, AspectRatio -> 
                  Automatic}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Data Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Data Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://datarepository.wolframcloud.com/"}, "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring data resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring data resources\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.6451, 0.76863, 0.8451]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Check Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7315505126975123932; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Check Definition Notebook"; 
                    DefinitionNotebookClient`CheckDefinitionNotebook[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7315505126975123932]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Check Data\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5678342563549764489; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Check Data"; 
                    DataResource`DefinitionNotebook`CheckDataDefinitions[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5678342563549764489]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Check All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7222533872454612108; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Check All"; (
                    DefinitionNotebookClient`CheckDefinitionNotebook[
                    ButtonNotebook[]]; 
                    DataResource`DefinitionNotebook`CheckDataDefinitions[
                    ButtonNotebook[]])]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7222533872454612108]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your data submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your data submission\"", True}, 
                 "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your data to the Wolfram Data Repository\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your data to the Wolfram Data Repository\"", 
                  True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.2902, 0.53725, 0.6902], 
              RGBColor[0.16078, 0.40392, 0.56078]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.2902, 0.53725, 0.6902], 2 -> 
              RGBColor[0.16078, 0.40392, 0.56078]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.2902, 0.53725, 0.6902]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.02963], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIIGBQcwfUAPQjOoYuc3CDugqIfxGTQg9ANj
qLgOdj66erh5+lD7oPYwGGHno6uH86H2PDCA6jPFzkdXD+M7mENpLai4JXY+
unogHwDQSSTa
                  "]]}, {
                 FaceForm[
                  RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{0.75, 1.875}, {33., 1.875}, {33., 0.375}, {0.75, 
                   0.375}}, {{27., 19.875}, {29.25, 19.875}, {29.25, 4.875}, {
                   27., 4.875}}, {{3., 4.125}, {30.75, 4.125}, {30.75, 
                   2.625}, {3., 2.625}}, {{16.875, 32.625}, {0., 24.375}, {0.,
                    22.875}, {33.75, 22.875}, {33.75, 24.375}}, {{3.75, 
                   24.375}, {16.875, 30.75}, {30., 24.375}}, {{25.5, 
                   22.125}, {30.75, 22.125}, {30.75, 20.625}, {25.5, 
                   20.625}}, {{4.5, 19.875}, {6.75, 19.875}, {6.75, 4.875}, {
                   4.5, 4.875}}, {{3., 22.125}, {8.25, 22.125}, {8.25, 
                   20.625}, {3., 20.625}}}]}, {
                 FaceForm[
                  RGBColor[0.843, 0.847, 0.847, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> 12, Background -> None, 
               ImageSize -> {45., Automatic}, 
               PlotRange -> {{0., 33.75}, {0., 33.}}, AspectRatio -> 
               Automatic}], "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.77647, 0.81765, 0.84314]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQDO9nxI0+A3RSO1VDq9U8M+T9UiFICAbKAIUJ9IQtbhm
Wc9Uadd4TAQUB8oSNASoBqt2ZIRmDpohQNficgOae5D9hWYI0NcETYAgoEpc
hgBDj0hDgCrhuiCpEc4FxgKRhgBVIhsCBJQbQhWXUD1MqBI7VEknVEmx1Mo7
1MrFpKLBZgh+QExpDwCSuadO
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQDO9nxI0+A3RyphgWT7foW6Ze+taCAKygSJAcSINMcqf
7ta6xqtzAyYCigNlCRoCVINVOzJCMwfNEKBrcbkBzT3I/kIzBOhrgiZAEFAl
LkOAoUekIUCVcF2Q1AjnAmOBSEOAKpENAQLKDaGKS6geJlSJHaqkE6qkWGrl
HWrlYlLRYDMEPyCmtAcACbcv5Q==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQDO9nxKEy5DQtmVdaw7tOX/nxbvPEARkA0WA4sQYYpAz
eeGec3icDZQFqsFjiF/jorvP3wJFvv38ver4reZ1J+Om7YQgIBsoAhQHygLV
AFViNQRoPsSESw9fJ87Y5dW5ARMBxYGyEHPg7kE2BOILoBqs2pERxBygejRD
gCEG8QUuN6C5B+IvSDjDDQGGPJAB9DVBEyAIqBKoHqgL2RBgDAIZwNAj0hCg
SqB6oC6gXkhqBDKAKQHIAMYCkYYAVQLVA3VBDAECyg2hikuoGCZUiR2qpBOq
pFhq5R2q5GJqlSfUKtnILmPxA2JKewBFU/Kd
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.16078, 0.40392, 0.56078], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.16078, 0.40392, 0.56078], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Data", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Data", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Data", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["Code"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Data", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"35707d70-5afc-4cb5-850c-6a09c09ea7ed"
]

