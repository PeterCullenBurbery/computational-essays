(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    829778,      16807]
NotebookOptionsPosition[    694667,      14165]
NotebookOutlinePosition[    808441,      16340]
CellTagsIndexPosition[    808050,      16326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Dimensional Analysis", "Title",
 CellChangeTimes->{{3.8723289812559185`*^9, 3.87232898569388*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 RowBox[{"Peter", " ", "Cullen", " ", "Burbery"}]], "Author",
 CellChangeTimes->{{3.872328988749929*^9, 3.872328995298382*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit and Quantity Input", "Section",
 CellChangeTimes->{{3.8723290215274286`*^9, 3.872329026208214*^9}},
 CellID->618139354,ExpressionUUID->"31dd4676-7067-497c-a2fe-ce7513286fc5"],

Cell[CellGroupData[{

Cell["Quantity", "Subsection",
 CellChangeTimes->{{3.8723388861740165`*^9, 3.8723388870991774`*^9}},
 CellID->500003892,ExpressionUUID->"7d0d1d97-8b14-4abb-ae83-a07a4bcb11ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"8", ",", "\"\<Meters\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8723290386565886`*^9, 3.8723290428637357`*^9}},
 CellLabel->"In[1]:=",
 CellID->74599759,ExpressionUUID->"60200538-0f08-4bd8-9294-7a616b83d874"],

Cell[BoxData[
 TemplateBox[{"8", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872329043287756*^9},
 CellLabel->"Out[1]=",
 CellID->54936070,ExpressionUUID->"979e6292-1255-4856-bbd3-054d3e97fb17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{"4", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Input",
 CellChangeTimes->{3.87232904529814*^9},
 CellLabel->"In[2]:=",
 CellID->952160149,ExpressionUUID->"680d3d37-59fa-49e4-ab39-2832748966d4"],

Cell[BoxData[
 TemplateBox[{"4", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8723290488780394`*^9},
 CellLabel->"Out[2]=",
 CellID->8055649,ExpressionUUID->"b7acc6d6-6d59-4dc7-a2d2-5f05c24e4635"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{"12", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Input",
 CellChangeTimes->{3.8723290517074003`*^9},
 CellID->574832309,ExpressionUUID->"07fe59fe-c731-4218-b758-6570c83aab3d"],

Cell[BoxData[
 TemplateBox[{"40", 
   RowBox[{
    "\"Pa\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"N\""}], 
   "pascals per newton", 
   FractionBox["\"Pascals\"", "\"Newtons\""]},
  "Quantity"]], "Input",
 CellChangeTimes->{3.8723290603542943`*^9},
 CellID->361081422,ExpressionUUID->"03668f5d-8a8a-49bc-9114-9216183f3a11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"1", ",", "\"\<Kilograms\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8723290679927588`*^9, 3.8723290753348355`*^9}},
 CellLabel->"In[3]:=",
 CellID->253685996,ExpressionUUID->"a7a3e479-ab72-4cad-b391-c6f465d12510"],

Cell[BoxData[
 TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872329075807927*^9},
 CellLabel->"Out[3]=",
 CellID->478299008,ExpressionUUID->"e35c4ced-d4fe-4dca-b91a-1b8408ad7f7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"1.23", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\"\<Kilograms\>\"", "\"\<Meters\>\""}], ")"}], "/", 
    "\"\<Seconds\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723290773037796`*^9, 3.872329098230543*^9}},
 CellLabel->"In[4]:=",
 CellID->527925147,ExpressionUUID->"f6e8c46c-1411-40e1-a0e6-39237c058dd2"],

Cell[BoxData[
 TemplateBox[{"1.23`", 
   RowBox[{
    "\"kg\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"", 
     "\[InvisibleSpace]", "\"s\""}], "kilogram meters per second", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", "\"Meters\""}], "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87232909867295*^9},
 CellLabel->"Out[4]=",
 CellID->257448003,ExpressionUUID->"4dd092be-d87e-497f-909b-72889d35a84c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{"1", ",", "\"\<SpeedOfLight\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8723291028756876`*^9, 3.8723291074480453`*^9}},
 CellLabel->"In[5]:=",
 CellID->679426655,ExpressionUUID->"567c7a11-08a2-422a-9166-fc11cab65e80"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox["\[InvisibleSpace]", 1], 
   StyleBox["\"c\"", Italic, StripOnInput -> False], "speed of light", 
   "\"SpeedOfLight\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872329107778778*^9},
 CellLabel->"Out[5]=",
 CellID->498405493,ExpressionUUID->"2dd127ae-2c53-4042-bded-0ddf3207de2b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox["\[InvisibleSpace]", 1], 
   StyleBox["\"G\"", Italic, StripOnInput -> False], 
   "Newtonian gravitational constants", "\"GravitationalConstant\""},
  "Quantity"]], "Input",
 CellChangeTimes->{{3.872329116193076*^9, 3.8723291199794664`*^9}},
 CellID->627458477,ExpressionUUID->"7274658e-0b25-4d7b-9d5c-6d066a12a973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", 
  TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1], 
    SubscriptBox["\"\[Mu]\"", "0"], "magnetic constants", 
    "\"MagneticConstant\""},
   "Quantity"]}]], "Input",
 CellChangeTimes->{{3.872329129112776*^9, 3.8723291356492033`*^9}},
 CellLabel->"In[6]:=",
 CellID->69112832,ExpressionUUID->"fc576752-a4ee-4cf9-a7fb-ff8f6e67bd4b"],

Cell[BoxData[
 TemplateBox[{"3", 
   SubscriptBox["\"\[Mu]\"", "0"], "magnetic constants", 
   "\"MagneticConstant\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872329137444894*^9},
 CellLabel->"Out[6]=",
 CellID->3171084,ExpressionUUID->"e7dbfcfd-8073-4973-b4ba-b22c3aa9dbee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantityArray", "Subsection",
 CellChangeTimes->{{3.8723388914738407`*^9, 3.872338894023456*^9}},
 CellID->476224677,ExpressionUUID->"5286d508-b222-467f-bd29-2cfc417d3d20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QAMETERS", "=", 
  RowBox[{"QuantityArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", "\"\<Meters\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8723388973526363`*^9, 3.872338909591719*^9}},
 CellLabel->"In[1]:=",
 CellID->382791280,ExpressionUUID->"d0ce1513-8159-4bcb-bb86-0dd25cad644d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantityArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Meters\"", Short[#, 2]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Meters\"", Short[#, 2]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"2", "\"m\"", "meters", "\"Meters\""}, 
                    "Quantity", SyntaxForm -> Mod], ",", 
                    TemplateBox[{"4", "\"m\"", "meters", "\"Meters\""}, 
                    "Quantity", SyntaxForm -> Mod]}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  QuantityArray[
   StructuredArray`StructuredData[{3}, {{2, 3, 4}, "Meters", {{1}}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.87233891040831*^9},
 CellLabel->"Out[1]=",
 CellID->44689408,ExpressionUUID->"9ee737f1-a1e9-424e-b9f3-d6015a269d99"]
}, Open  ]],

Cell["Extract its magnitudes and units separately:", "Text",
 CellChangeTimes->{{3.872338912655569*^9, 3.8723389195592675`*^9}},
 CellID->644611262,ExpressionUUID->"26c44090-08cf-4af6-a8dd-aaad8ce1fb71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", "QAMETERS", "]"}]], "Input",
 CellChangeTimes->{{3.872338921327588*^9, 3.872338926066205*^9}},
 CellLabel->"In[2]:=",
 CellID->623958628,ExpressionUUID->"df4d4173-e815-4668-a5d7-0ca2a0600719"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8723389262709007`*^9},
 CellLabel->"Out[2]=",
 CellID->361353066,ExpressionUUID->"aea719e1-41b5-4aac-9751-78689df627ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityUnit", "[", "QAMETERS", "]"}]], "Input",
 CellChangeTimes->{{3.872338928818781*^9, 3.8723389331498384`*^9}},
 CellLabel->"In[3]:=",
 CellID->276714278,ExpressionUUID->"ea057629-2f3a-47b3-90c9-66867fb3f75f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Meters\"\>", ",", "\<\"Meters\"\>", ",", "\<\"Meters\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8723389333701596`*^9},
 CellLabel->"Out[3]=",
 CellID->90212660,ExpressionUUID->"a8deb298-ac33-48a9-ae43-5e3fa77fe59b"]
}, Open  ]],

Cell["Normalize the quantity array:", "Text",
 CellChangeTimes->{{3.8723389356488085`*^9, 3.8723389434755344`*^9}},
 CellID->172589328,ExpressionUUID->"5b5d9796-e9ee-4f93-b28f-638c2b62df11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "QAMETERS", "]"}]], "Input",
 CellChangeTimes->{{3.8723389409396524`*^9, 3.8723389502515955`*^9}},
 CellLabel->"In[4]:=",
 CellID->211556368,ExpressionUUID->"cfe751c9-5e8a-4b80-8310-c6735a3c1e74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"2", "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"3", "\"m\"", "meters", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"4", "\"m\"", "meters", "\"Meters\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8723389505502524`*^9},
 CellLabel->"Out[4]=",
 CellID->9919427,ExpressionUUID->"d41cbdf4-cf52-4355-a35d-5b5626422905"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantity Distribution", "Subsection",
 CellChangeTimes->{{3.8723538763947926`*^9, 3.8723538791467404`*^9}},
 CellID->622970149,ExpressionUUID->"03637794-fe7f-4bc3-85ab-9addc8ce5bec"],

Cell["Define a distribution for a random height:", "Text",
 CellChangeTimes->{{3.8723539278709908`*^9, 3.8723539334802217`*^9}},
 CellID->621709628,ExpressionUUID->"eaa56d42-78e0-4faf-9716-86326b2887e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]", "=", 
  RowBox[{"NormalDistribution", "[", 
   RowBox[{
    TemplateBox[<|
     "query" -> "1200mm", "boxes" -> 
      TemplateBox[{"1200", "\"mm\"", "millimeters", "\"Millimeters\""}, 
        "Quantity", SyntaxForm -> Mod], "allassumptions" -> {}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.2847489`6.906007048547889, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], ",", 
    TemplateBox[<|
     "query" -> "161mm", "boxes" -> 
      TemplateBox[{"161", "\"mm\"", "millimeters", "\"Millimeters\""}, 
        "Quantity", SyntaxForm -> Mod], "allassumptions" -> {}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.3304602`6.970664154863111, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8723389752996955`*^9, 3.872338987317029*^9}, {
  3.872339079712099*^9, 3.8723390801838923`*^9}},
 CellLabel->"In[10]:=",
 CellID->140165564,ExpressionUUID->"48c8ffae-7ca3-4667-9ba5-bd38d572c160"],

Cell[BoxData[
 RowBox[{"QuantityDistribution", "[", 
  RowBox[{
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"1200", ",", "161"}], "]"}], ",", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"mm\"", "millimeters", 
      "\"Millimeters\""},
     "Quantity"],
    "Millimeters"]}], "]"}]], "Output",
 CellChangeTimes->{3.8723389967549753`*^9, 3.872339083100298*^9},
 CellLabel->"Out[10]=",
 CellID->610897501,ExpressionUUID->"7223ec9c-6afd-4d5f-9916-5c3ccf317e4d"]
}, Open  ]],

Cell["Compute the probability of a certain height range:", "Text",
 CellChangeTimes->{{3.872338999537841*^9, 3.872339003002763*^9}, {
  3.8723539357785726`*^9, 3.872353940510797*^9}},
 CellID->285830972,ExpressionUUID->"09215981-953a-4473-836f-82ef75621869"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"x", ">", 
    TemplateBox[{"1540", "\"mm\"", "millimeters", "\"Millimeters\""},
     "Quantity"]}], ",", 
   RowBox[{"x", "\[Distributed]", "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723390044349575`*^9, 3.8723390351649323`*^9}},
 CellLabel->"In[11]:=",
 CellID->37267413,ExpressionUUID->"3d852423-f92e-4537-b06b-f0e9efdfca0c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{"170", " ", 
       SqrtBox["2"]}], "161"], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.872339035542577*^9, 3.8723390407034206`*^9}, 
   3.872339085504947*^9},
 CellLabel->"Out[11]=",
 CellID->261222596,ExpressionUUID->"995e36b1-317b-434d-b503-44413798330d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"x", ">", 
    TemplateBox[{"1540", "\"mm\"", "millimeters", "\"Millimeters\""},
     "Quantity"]}], ",", 
   RowBox[{"x", "\[Distributed]", "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723390044349575`*^9, 3.872339043474579*^9}},
 CellLabel->"In[12]:=",
 CellID->470520333,ExpressionUUID->"4df39d63-36b2-46de-aa92-1da6e50eb753"],

Cell[BoxData["0.017351750357126862`"], "Output",
 CellChangeTimes->{3.872339044181517*^9, 3.872339087548025*^9},
 CellLabel->"Out[12]=",
 CellID->315421970,ExpressionUUID->"7584098f-4efd-40fd-8b0a-3e2297fc8e97"]
}, Open  ]],

Cell["Define a distribution of life expectancy:", "Text",
 CellChangeTimes->{{3.8723539440416365`*^9, 3.8723539503037386`*^9}},
 CellID->357014455,ExpressionUUID->"960ca1e9-8405-4fbf-bac0-112e8288d9a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"GompertzMakehamDistribution", "[", 
    RowBox[{
     FractionBox["1", 
      TemplateBox[<|
       "query" -> "9.82years", "boxes" -> 
        TemplateBox[{"9.82", "\"yr\"", "years", "\"Years\""}, "Quantity", 
          SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.4252134`7.080151935740363, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"]], ",", 
     RowBox[{"2.56", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "4"}]]}], ",", "394.", ",", "0"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8723391057486143`*^9, 3.8723391322826176`*^9}, 
   3.872353964110635*^9},
 CellLabel->"In[2]:=",
 CellID->455870562,ExpressionUUID->"170d1d9a-93c2-42fd-8fe0-ae3565b8e2dd"],

Cell["Compute conditional life expectancy:", "Text",
 CellChangeTimes->{{3.8723539668782787`*^9, 3.8723539748781796`*^9}},
 CellID->88268434,ExpressionUUID->"088bd101-c04c-4efb-ac28-f14a0cc991ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NExpectation", "[", 
  RowBox[{
   RowBox[{"t", "\[Conditioned]", 
    RowBox[{"t", ">", 
     TemplateBox[{"8", "\"decades\"", "decades", "\"Decades\""},
      "Quantity"]}]}], ",", 
   RowBox[{"t", "\[Distributed]", "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723391360244985`*^9, 3.8723391526575775`*^9}},
 CellLabel->"In[14]:=",
 CellID->50722490,ExpressionUUID->"a6eca181-b898-4e1a-ad2f-8a92a53a35d0"],

Cell[BoxData[
 TemplateBox[{"86.09833077061838`", "\"yr\"", "years", "\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8723391529401274`*^9},
 CellLabel->"Out[14]=",
 CellID->358940759,ExpressionUUID->"b8d1dd5b-200f-45bc-bfd7-7b03d174bd5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"NExpectation", "[", 
    RowBox[{
     RowBox[{"t", "\[Conditioned]", 
      RowBox[{"t", ">", 
       RowBox[{"n", 
        TemplateBox[{"1", "\"decades\"", "decades", "\"Decades\""},
         "Quantity"]}]}]}], ",", 
     RowBox[{"t", "\[Distributed]", "\[ScriptCapitalD]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723391360244985`*^9, 3.8723391526575775`*^9}, {
  3.8723539802023067`*^9, 3.8723539972954865`*^9}},
 CellLabel->"In[3]:=",
 CellID->393897120,ExpressionUUID->"13e2bfda-710e-4697-b828-daf8ad4a12d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"57.306055038432405`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"61.95185613999851`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"66.09956603190622`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"69.79970811175016`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"73.21497146952785`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"76.69039286799222`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"80.77818631484544`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"86.09833077061838`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"93.00195923793777`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"101.32466188365312`", "\"yr\"", "years", "\"Years\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.872353998029296*^9},
 CellLabel->"Out[3]=",
 CellID->96213322,ExpressionUUID->"c3c1a53b-6b7d-472b-9a90-9f6ee7f86190"]
}, Open  ]],

Cell["Fit a model to data with units:", "Text",
 CellChangeTimes->{{3.8723540122301674`*^9, 3.87235401748496*^9}},
 CellID->326970798,ExpressionUUID->"b6686037-2f5f-42ff-95ee-e3ec760f5500"],

Cell[BoxData[
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2.34", ",", "1.55", ",", "2.7", ",", "0.25", ",", "1.5", ",", "3.5", 
       ",", "3.35", ",", "1.85", ",", "0.15", ",", "2.3", ",", "0.65", ",", 
       "0.85", ",", "5.15"}], "}"}], ",", "\"\<Minutes\>\""}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8723540188163867`*^9, 3.8723540649242983`*^9}},
 CellLabel->"In[4]:=",
 CellID->156501125,ExpressionUUID->"5c077950-a66c-4c4b-b143-433efad06eb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"times", ",", 
   RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872354066580174*^9, 3.8723540748917804`*^9}, {
  3.8723541097389565`*^9, 3.872354117225696*^9}},
 CellLabel->"In[8]:=",
 CellID->147735419,ExpressionUUID->"ee219921-c479-413e-be0d-e509171fc2d7"],

Cell[BoxData[
 RowBox[{"QuantityDistribution", "[", 
  RowBox[{
   RowBox[{"ExponentialDistribution", "[", "0.49732211170619745`", "]"}], ",", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"min\"", "minutes", 
      "\"Minutes\""},
     "Quantity"],
    "Minutes"]}], "]"}]], "Output",
 CellChangeTimes->{3.8723540751729326`*^9, 3.8723541201000724`*^9},
 CellLabel->"Out[8]=",
 CellID->249514114,ExpressionUUID->"6ab8006e-c335-4160-96ac-11808d24db86"]
}, Open  ]],

Cell["Convert the distribution to another compatible unit:", "Text",
 CellChangeTimes->{{3.8723540824116845`*^9, 3.872354093371725*^9}},
 CellID->15154777,ExpressionUUID->"13db992a-e07e-4727-9bfd-d860dd4a9dc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"EstimatedDistribution", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["104", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    EstimatedDistribution[$CellContext`times, 
     ExponentialDistribution[$CellContext`\[Lambda]]],
    SelectWithContents->True,
    Selectable->False], ",", "\"\<Hours\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8723540955122557`*^9, 3.87235411393482*^9}},
 CellLabel->"In[9]:=",
 CellID->146508223,ExpressionUUID->"df5433b8-2a49-4fb4-8866-71db417bc462"],

Cell[BoxData[
 RowBox[{"QuantityDistribution", "[", 
  RowBox[{
   RowBox[{"ExponentialDistribution", "[", "29.839326702371846`", "]"}], ",", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"h\"", "hours", 
      "\"Hours\""},
     "Quantity"],
    "Hours"]}], "]"}]], "Output",
 CellChangeTimes->{{3.872354104802538*^9, 3.8723541220850916`*^9}},
 CellLabel->"Out[9]=",
 CellID->820008500,ExpressionUUID->"7b0e5fac-4e9a-4616-afd3-bb97bcccc10e"]
}, Open  ]],

Cell["Compare with fitting to distribution in hours:", "Text",
 CellChangeTimes->{{3.8723541265219593`*^9, 3.872354132989929*^9}},
 CellID->395826280,ExpressionUUID->"6cc9ac63-d1dc-4d47-a7fd-247f9d11d9cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EstimatedDistribution", "[", 
  RowBox[{"times", ",", 
   RowBox[{"QuantityDistribution", "[", 
    RowBox[{
     RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}], ",", 
     "\"\<Hours\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872354134333004*^9, 3.872354149479597*^9}},
 CellLabel->"In[10]:=",
 CellID->424704613,ExpressionUUID->"c81c8c6c-0d00-44c0-83f9-8523862380cf"],

Cell[BoxData[
 RowBox[{"QuantityDistribution", "[", 
  RowBox[{
   RowBox[{"ExponentialDistribution", "[", "29.839326702371842`", "]"}], ",", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"h\"", "hours", 
      "\"Hours\""},
     "Quantity"],
    "Hours"]}], "]"}]], "Output",
 CellChangeTimes->{3.872354149760388*^9},
 CellLabel->"Out[10]=",
 CellID->617931483,ExpressionUUID->"7a68b392-9582-479e-bd91-f6c4d9898b93"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Section",
 CellChangeTimes->{{3.8723541775129786`*^9, 3.87235417934352*^9}},
 CellID->122879595,ExpressionUUID->"51f00236-5b19-4f79-b0f9-342ffbba7fb0"],

Cell["\<\
The average speed of cars traveling from Champaign Illinois to Chicago \
Illinois is described by a triangular random variable:\
\>", "Text",
 CellChangeTimes->{{3.8723541812660446`*^9, 3.872354203851137*^9}, 
   3.8723542626410594`*^9},
 CellID->22348458,ExpressionUUID->"53323814-cb0d-444b-8487-3cf76ab5cb3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"speed\[ScriptCapitalD]", "=", 
   RowBox[{"TriangularDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[<|"query" -> "55km/hr", "boxes" -> TemplateBox[{"55", 
            
            RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
              "\[InvisibleSpace]", "\"h\""}], "kilometers per hour", 
            FractionBox["\"Kilometers\"", "\"Hours\""]}, "Quantity", 
           SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
         "open" -> {1, 2}, 
         "querystate" -> {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.3284198`6.967974325778712, "Messages" -> {}}, "contextinfo" -> 
         Automatic, "version" -> 5|>,
        "LinguisticAssistantTemplate"], ",", 
       TemplateBox[<|"query" -> "82km/hr", "boxes" -> TemplateBox[{"82", 
            
            RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", 
              "\[InvisibleSpace]", "\"h\""}], "kilometers per hour", 
            FractionBox["\"Kilometers\"", "\"Hours\""]}, "Quantity", 
           SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
         "open" -> {1, 2}, 
         "querystate" -> {
          "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
           0.3127892`6.9467967428026505, "Messages" -> {}}, "contextinfo" -> 
         Automatic, "version" -> 5|>,
        "LinguisticAssistantTemplate"]}], "}"}], ",", 
     TemplateBox[<|"query" -> "72km/hr", "boxes" -> TemplateBox[{"72", 
          
          RowBox[{"\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
             "\"h\""}], "kilometers per hour", 
          FractionBox["\"Kilometers\"", "\"Hours\""]}, "Quantity", SyntaxForm -> 
         Mod], "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.3124284`6.946295498223274, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.872354774486761*^9, 3.872354796213808*^9}},
 CellLabel->"In[33]:=",
 CellID->100492858,ExpressionUUID->"0878ebbd-6812-4d38-911e-81990ae11bcf"],

Cell["Find the expected time of travel:", "Text",
 CellChangeTimes->{{3.872354254896425*^9, 3.872354259688636*^9}},
 CellID->1009617909,ExpressionUUID->"901a0b1d-f59a-44d3-a4ad-2f7b04a9f1d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expectation", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"GeoDistance", "[", 
     RowBox[{
      TemplateBox[<|
       "query" -> "champaign", "boxes" -> TemplateBox[{"\"Champaign\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"City\"", ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "\"Champaign\"", ",", "\"Illinois\"", ",", 
                   "\"UnitedStates\""}], "}"}]}], "]"}], 
           "\"Entity[\\\"City\\\", {\\\"Champaign\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "champaign", "template" -> 
           "Assuming \"champaign\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"champaign\"} -> {\"City\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"champaign\"} -> {\"City\"}"}, {
             "name" -> "Word", "desc" -> "a word", "input" -> 
              "{\"C\", \"champaign\"} -> {\"Word\"}"}}}}, "assumptions" -> {},
         "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.3589418`7.006569029851733, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], ",", 
      TemplateBox[<|
       "query" -> "chicago", "boxes" -> TemplateBox[{"\"Chicago\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"City\"", ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "\"Chicago\"", ",", "\"Illinois\"", ",", 
                   "\"UnitedStates\""}], "}"}]}], "]"}], 
           "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "chicago", "template" -> 
           "Assuming \"chicago\" is a city${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} or ${desc} or ${desc} instead", "count" -> "7", 
           "pulldown" -> "false", "default" -> 
           "{\"C\", \"chicago\"} -> {\"City\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"chicago\"} -> {\"City\"}"}, {
             "name" -> "NFLTeam", "desc" -> "an NFL team", "input" -> 
              "{\"C\", \"chicago\"} -> {\"NFLTeam\"}"}, {
             "name" -> "MLBTeam", "desc" -> "an MLB team", "input" -> 
              "{\"C\", \"chicago\"} -> {\"MLBTeam\"}"}, {
             "name" -> "NBATeam", "desc" -> "an NBA team", "input" -> 
              "{\"C\", \"chicago\"} -> {\"NBATeam\"}"}, {
             "name" -> "Periodical", "desc" -> "a periodical", "input" -> 
              "{\"C\", \"chicago\"} -> {\"Periodical\"}"}, {
             "name" -> "MusicAct", "desc" -> "a music act", "input" -> 
              "{\"C\", \"chicago\"} -> {\"MusicAct\"}"}, {
             "name" -> "Movie", "desc" -> "a movie", "input" -> 
              "{\"C\", \"chicago\"} -> {\"Movie\"}"}}}}, "assumptions" -> {}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.3436774`6.9876959676523995, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"]}], "]"}], "/", "v"}], ",", 
   RowBox[{"v", "\[Distributed]", "speed\[ScriptCapitalD]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872354802454768*^9, 3.872354821578697*^9}},
 CellLabel->"In[34]:=",
 CellID->396885195,ExpressionUUID->"e5b675ee-c7c5-4090-abb5-cd2dde0a883b"],

Cell[BoxData[
 TemplateBox[{"2.4873797100978003`", "\"h\"", "hours", "\"Hours\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872354822266076*^9, 3.8723548634635878`*^9},
 CellLabel->"Out[34]=",
 CellID->680106722,ExpressionUUID->"4f0320f4-2512-4d2a-ac8d-6acfd6c3ee7e"]
}, Open  ]],

Cell["\<\
Define the distribution of a cube's side-length measurements:\
\>", "Text",
 CellChangeTimes->{{3.8723548726520586`*^9, 3.8723548825950704`*^9}},
 CellID->204194902,ExpressionUUID->"fa5c42fd-7b31-40de-8dfc-a1156d21eb2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptL]\[ScriptCapitalD]", "=", 
  RowBox[{"BatesDistribution", "[", 
   RowBox[{"3", ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[<|
       "query" -> "235mm", "boxes" -> 
        TemplateBox[{"235", "\"mm\"", "millimeters", "\"Millimeters\""}, 
          "Quantity", SyntaxForm -> Mod], "allassumptions" -> {}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.2659278`6.876308734195349, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], ",", 
      TemplateBox[<|
       "query" -> "243mm", "boxes" -> 
        TemplateBox[{"243", "\"mm\"", "millimeters", "\"Millimeters\""}, 
          "Quantity", SyntaxForm -> Mod], "allassumptions" -> {}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.2479928`6.845984065589684, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8723548903312783`*^9, 3.872354911401921*^9}},
 CellLabel->"In[35]:=",
 CellID->278296753,ExpressionUUID->"67f88bf0-b7e9-44e5-aa3f-ee7af31bffaf"],

Cell[BoxData[
 RowBox[{"QuantityDistribution", "[", 
  RowBox[{
   RowBox[{"BatesDistribution", "[", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"235", ",", "243"}], "}"}]}], "]"}], ",", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"mm\"", "millimeters", 
      "\"Millimeters\""},
     "Quantity"],
    "Millimeters"]}], "]"}]], "Output",
 CellChangeTimes->{3.8723549193034973`*^9},
 CellLabel->"Out[35]=",
 CellID->258578130,ExpressionUUID->"b8ecac16-87ee-4023-a30b-04d57d377909"]
}, Open  ]],

Cell["Plot the distribution density:", "Text",
 CellChangeTimes->{{3.872354921682997*^9, 3.8723549273284945`*^9}},
 CellID->98033754,ExpressionUUID->"44c6b443-5822-4a9a-aa27-07202955b148"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{"\[ScriptL]\[ScriptCapitalD]", ",", 
      RowBox[{"Quantity", "[", 
       RowBox[{"s", ",", "\"\<Millimeters\>\""}], "]"}]}], "]"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "232", ",", "245"}], "}"}], ",", 
   RowBox[{"Exclusions", "->", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872354928094778*^9, 3.872354964978829*^9}},
 CellLabel->"In[37]:=",
 CellID->647506640,ExpressionUUID->"8fb4be6e-a625-4d73-bac4-8b94171c2c90"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Xc0V///AHAjq4kITbvIqiSr9/MaJSOhMhIqonDfoaEiO5WEUISQIpVN
skUyst63RGUU2RklH0rk++yc3/nx/sP7PM653Nd9vp7jdQ+RE2dMTrIwMTG9
Z2Zi+vd98kwI/iQJpv/7SK9Z9lR4kb+XXDuosciXl/qm+C1yWPJZAzbmBRe1
m0cvZVkw9z4xBf4lCy4WLrCR5lywYG5IxBKeBSdI/bm3T2jB2v5HNtqKLFpP
qb27rPSCX3dwPjy+fcEPOswe7lFbcGz5PREm7QWXB7q6iRsseFhuKurXoQXT
irnDlKwWPPt9sNt0kYskK3a4L/LOcNe2F4ssc/rtRhXrBa8ViExXs1nwBwPn
ectFvuunbey5yDxjk5Mli9wk1ri3c5GDLZKj5xZZL/TK8IZjJBEc8Kh1yb0o
Gufrw+o0dHPS4bVS1wtp1TOyIdZokVc/O4vdG2kBCuxfvNBdOVF7l137RNO0
79qWgDakv5Cs6+6lMcXl+5ej7TPLfQuVx2hlVMj7z2hLw+1Htj6apHlyOGxm
Ok4SwusO2hhx/qGp7oZLwmimTSKDJ8WZYdpNoJ5APyn0bm3azgZ5qePrj6ND
L76eOZHJBW5dNXRftHnAxCHRmJWgwJf48gE62srfLfA3D4zpXuStRN9c6XuY
p5MP0ryN7HrQbIfd3mVPC4Dj8y35LCdIgmOb2YiD7jroF/5ooYVubrnivlRX
BB6ZZj+zRa99aDVyVVsMTgTfmPNHS6m/kAu2lIDOaZUHVeju4rZ1Kh1SECPL
+7MX/SExvvrzHhkwtx3WZrMlCcL2M42nXg5ammIG96BlxQf0l/Jth/AlZ1Xt
0dd30tR/eu8AI1X94EC0poxJxIPfilCf/Ee+Br2xNOu84RplqPQ86r7PjiQq
U/ctG5qkgU+OYt0p9Ba3V9FeDgTQBpevu4FOZNGwcbLUgMKDpWV16FtnzdhH
zbQgS3oju/5Jklhd8qMk7KEOTKzWFaCjpbrKSlq/7APFubNbbqPn1Rw/7ZLU
g4LmOr02dO9TyzP6dQZQfu58qK09SZDJLfOWysbAZJ2YGIhu2aTo7jRtDJo6
9dlP0F6lfleuF5lAtZBIyzja1WRU6ZvBIWgqaxD0dCCJpp7poweTzIA7dVoq
AR1hzNBv9jUHk9uiapVo5a6oOvOTFtBqe9GK8xTmm/Gka6SyJXRyiidFomXv
9pzPWGUDIyYeW9NPk8RrG71kpZe2IKeeos5AswXK8x03sgMXCWr/T/ROtWC9
8B47mJyWdFFxJAk7k7QVXCvs4U/c27zXaDf5a6M6l0/B0gEpWpcTSWwqerx6
WT4JBoxDB5idSUK9mW3mgT0dQgq9j4mj9c62PwahM8Ab/N7PES2UN5Wmo+kC
a7f51kw5/4t/67KXha4g5fHBaBWdJLaxvvE8+PEczBbv51JARx2qb2tSPQ9N
s5UVRmilx0u4ZO6fh3Ne6dvD0RI2m8Zu2l2AMl8/Pv4zJOHxZ7Kye84dTK7L
fFjrgtf/FY7qO+IBl+/42Ei6kcQP/rJJSRtfMGj9T0AHrc9UzsYS7wubBJwY
DuiMsXZmw05fqIo+rPEE3dp8uljZyg9WxkmLyZwlidPP3u+wOOEPD5Na+red
I4n8ulGVat+r0JC5hb77AkkURG+KNeIPAtFH3/uOoXcFnnxWdSoILkUXWAWg
Y/v7T5WWBIGk77799egnU7Hf1O1vgq/JKRkLd5Iotmleda48GJT+ezx87iJJ
pOhavqsMCoUHqpsd0i6TRECVv5hrZTj8khvvakZrv7aaPz8ZDoZiL0x/ors8
328rlYyA2WU6e1U9SKJMID6GNzgCTDvtJWrRfaMRHh8tImG5T8rXr55YP9K8
Hm3Md+HCa4lj67xJwrHF3CXS/x5YXO3bRkOrha0Le1tyD9T3JLMeR0+Mrk4w
mroHLK/FH6eguUOTg5Y7xkBoldjYNh+SeHXaINr/UCykvhLx3OdLEskXU2/R
d96HTxUbos/74/qZ93+PjUgEWhk/o/ka5s/J7NUGfY8g5/0m3e9oXTem4y4c
ySA5KlXJfZ0k5N7yemZJJcOK9bQ8Y7TQDd91AfRk6LhkH/0OXfohcP7i72S4
vPPFsbYbJMH+R+HoPb7HkJ9m/qPrJklE6rOeyrN5AvKxsbxjoSQxviGx7qBu
Bkja/9LjCSMJVZWUd/3nM2DjtsP+iuiDVjXhMUkZsLJm5eRl9KaSIwp2sxkw
NuH7nuM25lvL60Hv7ExI1zsVLRJOEgb5po9HwrJg64zixsORJCEoenz6xooc
2GzRJFUSTRJ8OsxEy67noPvn7urJRJIILHJUudRcDG5ey9+2P8F6T9trXzZT
AYW951bG5JDE1WLPup+e1dDTmZVRhC6438hVHFINy9tGDNvRssuPG95IrIZj
dXah63Ox3oIP9KpWVQNHxiHuBPQxQX2tiWU1cNhdkfdRHklMnihpzI6rgR9c
k/wZ+bg+7YqejrJaWMuqkN+EVuTIzo9l1IL2rJPpOJrMXedn0FML0WNf7yq8
IIk7r4/P+7PVAbx7J5CLVmRkRejp18GtuFyhggKS6PA5IqbUUgdS8mc3VBaR
BHWgoyuw/Q20tjNf6UOvs1Uo6Bh5AwHXwzo4i7Een3ryiv59A1+602MPoF3f
zul6CNdDdOSgUCd6NCipysGuHthnrNb8KsHfjz0/uGWoHnqr9q2SKycJ1t2a
w/r9DYDjn26Mvlkc13P7vwYgNto3nUM7kuOWNUsaIc7d/1YxWsrpCsUk1ggH
pcuW6b4kCa0mtdp060aoDN3BaVdBEst3avaOv22ExCMbmWNekYSK//lWvswm
6LKe5ihGyxOf+Z2Km2CDLWNlB5pa+vNnTk0TxDj5rd9YRRJxNYLBAl+aINKz
f1cSuu7LURlF7ma4Hp9Bf/qaJDxv18gUk83g0kPrKKohCckLEWuYVjEgo1/g
azualBoS3sPHgNHh70OzaP+vETN+Qgxw/Jk0TaslictOg+uGxBhgt4Rj9Su0
Yv2tNTbKDDCXbNatr8N5Ulf37YcNAzQcbV6015PE8Cv2NblPGLBcVUFwFt39
11NsNp0BrVzMl9Y3YD8x79Sh5TDA+UmSqhV6z+mj79OLGBA92Ffaha6cO8iq
Ws+A7/bOVd2NJFH0c8sz9m8MKFbaLcHSRBLZGzQ2d48xIJB9ZaAoOspeqyhv
ggHrUzJ1bNGKh9kldGYYsK9v4k0vOiP56gohLgoSbS9RA80kkbDaUdpVggKn
HXrbORmYXzLi/J1bKFBiXRexBe1pV7tGU4aChqSSQ6fRgtuarae3U/Cre75t
GH1rdyvzKoICo2OBXaMUxkfsTcSEOQVMVhHffr4jiX1iugNBVyk48CV/mUAL
zgNhwVGj6xTE237aqorO/dbOWHmTAnVHEWcftOKIxna3MAouuWeOLH+P+XTn
2tG2GAombtePSrSSxOYbvw3XZVCgwT++QhedY8+vaJNFQVg0r5wzWoNXcjom
hwK5BAt6DtrlnYTATD4FjmkDY7Q27I9/48tMyyn4Ws363ewDSdhOuj+70UTB
dr3N3B5orZwvZ/QZFPg16inEo3fRaLxsbykQbrnt0ote/bLtu817Co52b/rh
8pEkVjoH8Oe1U/DMTosnEr0uJqJOsZOCmQH7bS/QcnejLNO7KKzfdNc59Ilf
V4QCuylo+aM2ceMTSaw4WTX7vp8CMW8b3nS0FuvlRP5BCtxY/Lcz0H5nxEX3
D1HAzfXGbU07Xp9jVv7wGwU2waPhKmjL618+VY5QkLGKJ/coOlPGuuXjKAX7
15j/TELTP+86Pj5OQdw9j9XV6LejEZOj3ykYWZ+wYwit+ab3ZO8PCoLE+s/K
d5CE+KhdT8FPCqoVzk0Wo6XauzSZpilIWdZT3IF+0V9nlY0O7D/gP4cuoAfb
Wv6iYE/cVl7oxPhMRsnH/KZA3P3eRxs0/ceX/+RmKFhiwvHAB63pxPy4BF3F
8VW+Er2vpbau8g8Fj3qMpnvQl16dUVObpSCgtKyMtQvP1/JjUWlou2iZQHG0
moD25zVzFGidjdm/B13r4cpzGS1qyMlvj647ekGuFc0idaEjEK1VZKK09S8F
Pay9Dx+j5SPZpS6hK7uMnWrREcO32V+ikwrLtw+hT5dONs2j/SJlZ7g+k0Te
cnk/5XkKTpyJrZBGn/9ACDuiNfS4buijnwhLP4lEC0u4GzmjjfuG1xegmZj6
BG6hz0j6e7Sgv3wy+ZyOZumdqBpCv3z+MqUJvXSj6u9pdGKYHH0cfa3FXHAe
7eMUt5P7C0m4cxwQ/edje5fOKaA78tcL/EKDyMUqY3R+T8XUv7+3cbbvphua
/Sat4t/9/rYePBiBfpMZfuHferqyK9bmoVmNy9bcQZcFy/e0oDPpFQ/+PU+8
w/0n/6EpzjgBFbSX5jLXNd0k4bDJ8CIT2nrDJeVdaNectlf/4rX7V/+8Gfpn
hfLMv3iuf3eo5iJ6aL/rOhn0bHplyD20sanv5jbcjxLb+A3taN+OzUyC6Dja
8r4/aN0jZQ3puL+eQpfT1vdgvz0kE6COVms+rGaNtiwLydXG/Fj79BWLN/q3
rP/WMsyfmYBtbxLQ7GsPhCigi1RXWHSjfR1IPibMvxh+D2GWryQxVlu+ywrz
8/L3wQFRdFPK0J5czF+VlKoLduiJtleielMUCPpup11FK2099yPoP+xvlols
KejBmT9PqyYpKODxjBxAZ6wK7xLF+ogeGbLk7MXzzqFEc50JCtxrzMSk0Ppr
AkvtsJ6UruzIcUQXr/ygE4T193xwuHkUzf3+jrUP1q+g+zNTnj7Mb2neF4eG
8fnZnDsV0ZE7CkuFsd61RUeHPdCVttfeJ2B/aLEcZ1vaj/1ERVxeFfuH8nBm
sCw6etvUr/rPGM+LLquN0fSuCZfD2G9s7/wQjkafPuzsdAD700TTTzXJAXyf
LbAJ+txCgalVXqUuevuha6/l3mH8vp3TJdGnH33MOE9h/nNOmeahN5z4e3O4
kQIezV+umoMk8dBkn4tLNQUKz2cfWw+RxDeOri8jzymI1CqV80NfHs76m5+L
8aOuPE9Gn/PNeHMxG/N97G/lCDqtQYr8mobzYAtz1+Vh7NcfhDsOPaSAHsvG
F/UN5+Er7hOpIRS8laqOKUJPjYScGMX5oFQQKNKFznuzi0f6BgVzLRzyEiN4
fnvIdSnIn4LglUv1ctEyb9LdBtyxH/uu9Gkexft9m17Ba4Pxaa8+NoHe5c6/
s9sSr9/prcE/hv3E28ksFeeV89A4iyXac0nFrY0mOD+Mqav96NtfeSqealOQ
JRx5c24c6/U/PU1NnI/Py4Witk6QhJHd2kxyiAEpQm/dDdG3PXV2q/cx4O7Z
IHNXtDlPejVLNwMubP4j9AItkCVS7/6BAcqhHXGaP/H9vDIrhrmGAUXWCUkW
kyThrWJ/KDKJAeVz4hnXpjAfzsltzz/IACJzs1Iq+rqg59dOQwa8PCZdVov+
ljoW81eXAZWv5Ju4pkmCFqK5fivBgOobqmM30abOyacUZBjQxG8kF/YL3+cv
mG0ZYWFAl6xHRvQMSfD6fQw0Mm0Gm89XlArReh2Zbt16zfAlzKfsI1pgFcPR
Dpqh5+fVprV/SML676g3saUZ+gvDxuLQ71gTdxv/boKxPSlyD2ZJYsfTDvb3
0U0wZ0VlPPmL55mTBYyTjY3A8kpyqgHNWhhdtLa8ETi3eO7+jtY6xaxentUI
vBOSDUrzeH5vd2Jri2gEyUDPoVfovdzJORoWjWCYsVm8i4lOtDxPvcDa3QCJ
f6/c42WlE75jk4+Ue+tBM0E6wIODTpBrH8ScLqyDrCohmRer6EQrV6jKJdpr
UG/8Y1wnQCfqxHNd5+QroDk/yOCmMJ1YzRt2cDqoCIIDMoVebKETIuECnJkS
eaBTr3T9EzrxuYZ677I8YOEtm5pDT9DIOamJXLiY0PBOW4pOLPevlRwoywW7
oqFbb9GCVCj/Fotc2P1djGVMmk589D9uWxWWA2OW0cPisnQiRofnpf3ybDDa
4Vscvo1OOAdp/3nkmAZxlAmViza/liO8QzMNBs+ID7SgU4/0iXYJpYF3Wg2v
wHY6kXz1XmlQ3TPIkFjpGItmGlAzoEk/g2WCsYKPdtAJg85TTSt/PIHq2bzz
z3fSCa1wW/vDkY9hd/Wg/AcVOuEi0tF7cdtDWKOQk/AL3X426nkv90MYu+ex
SkiVTjRuJrSdvydBPLly3AKtnm0R25SZBH/5FDPa0Qf00hW+yCfBS1tvmc9q
dMI0onVaaecD0GReI9W/m06Y8Nt+P/kkHtY6fY5mp9EJjc5tK2TPxMNESyrn
ZrSyfXvy1p3x8DBVbdABfbmwTK+54j4sMTr+eAi9i159IqszDl7Hp0mMAp3Y
sOxT/cdNsbBPXUt0UoNOTHHx+tU1RsEjCxtjAU06UT6iEyN9NwqY3D18VNFj
iRYzDdZRUJid2+WDnvbgDn///S5IbxaPXaFFJ/yXNGyaErgLy3nZ+DZr0wnC
4nLeObdIoAaq2Y7spRPjq/IqHcxvgxzbV8UraMeNdq0/ttyGINF520T04/nx
baW/w0DTaldlP9pMKfalQFwY5L197HVWB/ej1+tiQU0o3C29Ph28D5/Xxsti
z3wwHInQGyrXoxO1brv69BjXQIczu/wLmumH3/hw4DVQvCJwl1mfTlRITOTO
7r4GKx16NbXQHTlqTufTA6FS1SuuGu1j6RFRfPsqSPVkH2g0oBPeg2lvYs74
wxozQckxtGbzDndTWX9gafCaXbmfToTSuzr9v/lBx3P9J0bo0ob4jztO+0HY
jT6WFvRVgYagwdO+8EtBKP+TIZ0Ibsx+rMvsDX3J3sF/0Fudlfb8CvKCt2v7
T6w/QCc+u7OYBfF7QdqS3FXWaM9WlzZz2Stw7IPB6W70zawU/QQHD6jx9lk/
aEQnVNsvML9lvwh3mwb8/jPBeplJTWoadwWO6URBoYNop+KvLiGucHHTkQx1
9BE6J7FRzhWOuDR89Ef3bDXRi3FxgY282Qq8h+iECpuuvvwSOjw+fLlL7jCd
+K58Y8ww4xQIeu04Z4KutWP6MLX8FASljHBdQNdnjUznkQ7gPG29sxT9tFy8
/exOe1C4pxWsb4r5E8krP9tpCwUdy1VPmdGJG8pvhOiSNiDFVt18Ez0qZlUc
IGkNMbLeJzPR180/1dVIW4Gn14+wKTT9foTsO7AEQrh1IMCcTvTdYeaejzWD
7H2hV1LRvPX9gpdKTUHUdd/qBrS7bn7Ipq+HYUllEW21Ba5fhK/ih+ohqLVN
uPMAHapRTzxbbwwqweZbX6MDX7JkX7cxgqd5PBWDaGce3fUS+w9AMFvAiPwR
zOeh/RvN/AzA6PEprTI0t7uheZ+RDlQ0i3zsRt/mPMHhILQXtv/6RGezxP2W
0QvTGNYGPt39MQboqq3R8szJmvBxeNuPT2gNZtN9h+fUobWr58scWnQy+cGz
9WrQ8jaCIXyUTtzPDDAWMlABRtF/mfZoq6djeartO6EpIyXhBjpp6NKpMVVF
qE8yC01DFy2NdCt8uh2qgwrpE2jta0N8W8/LQ5WXozW/FZ0oKbigsP+5DFS4
rTNURm99KvL7Pr80lBy5IuuF3uLFuF2vJAFFhnIbHqBDT7QcT50WhRean5dX
oXezTnXlfhCGHGmNES5rOtHsJl6RPiUEWRsn2mXQlx8Ivem4tAbSeR/WH0Af
1NCTPb17NTxlP1Tshv68K3/YRIMbUmeWPLuD5ugtWqK4bBmkjD2PKUDzr/AZ
9ORjh4c99kHt6EquEh+feGZIbBW4/Bed5tAZc8XkDy3+Te1pERs6kTUgf//M
6UlaXNklC220T9Jn7gzWUdq9HGldB7TYDdVCh11faXdT2pWD0LV6X+wFO1pp
kTHBW9LR6sbMf8n4alp4yG5BBnrTyeetFhoZtFC/MY6f6AS36Oi9pa604AsJ
0/zH6P///48gR6MB5UW+bs3cZrnIV01yqr0W2UeVL6VqkS8s/WBndHzBJ57a
9DicWLDqML3zrt2Ca3c6nnuxyKa+J5d9WGQ3waMqQicX/Gyv7p3YRV7/UGx/
ov2C5y0/lDw5teCqRo24EucFHw6vkA8/v2ButbY71JUFD1V/vjRwdcF1O+5s
Tw9Z8NuAL6UddxfMXNevxxy1YIUVo20Sixxy5/cP+iLrp/BKMkcvWl+NdojE
vQXnL31iTY9dcJ9h5rfwReaLeH7xxSK7rasMZ4pbsLxMe3X4IqfuXyH/4v6C
226vLmlfZPZWIV2m+AWftJa01V1k0TMQ1b7Ixrl7xJkSFu3/tH62+CJ3eZvX
k4u8osraPHyR1TlP9uUvsrOBk1v7IseGuc7PL/L/AJpC+fI=
       "]]},
     Annotation[#, "Charting`Private`Tag$54575#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{232.0000000000005, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{232, 245}, {0., 0.28124979353389484`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.87235496529094*^9},
 CellLabel->"Out[37]=",
 CellID->112433512,ExpressionUUID->"6bec0176-87d8-472d-9f24-b04d62b9b83c"]
}, Open  ]],

Cell["\<\
Compute the mean and the dispersion measures of the cube's volume:\
\>", "Text",
 CellChangeTimes->{{3.8723549741024513`*^9, 3.8723549845593357`*^9}},
 CellID->682480993,ExpressionUUID->"8c338e47-cd91-4f4c-a19f-7aec1901f223"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"TransformedDistribution", "[", 
   RowBox[{
    SuperscriptBox["s", "3"], ",", 
    RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723549859180393`*^9, 3.872355003622716*^9}},
 CellLabel->"In[38]:=",
 CellID->51920358,ExpressionUUID->"145959b5-cd05-4c7a-8661-d767f78ffc0e"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["40959581", "3"], 
   RowBox[{
     SuperscriptBox["\"mm\"", "3"]}], "millimeters cubed", 
   SuperscriptBox["\"Millimeters\"", "3"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8723550039507713`*^9},
 CellLabel->"Out[38]=",
 CellID->579494396,ExpressionUUID->"1d3530f4-f21e-47ec-a070-1e7e7b5d5277"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Mean", "[", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     SuperscriptBox["s", "3"], ",", 
     RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], "]"}], 
   "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8723549859180393`*^9, 3.8723550068723464`*^9}},
 CellLabel->"In[39]:=",
 CellID->7084404,ExpressionUUID->"3764e235-99f5-47d7-b006-2a73de3aca1a"],

Cell[BoxData[
 TemplateBox[{"1.3653193666666666`*^7", 
   RowBox[{
     SuperscriptBox["\"mm\"", "3"]}], "millimeters cubed", 
   SuperscriptBox["\"Millimeters\"", "3"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8723550070750694`*^9},
 CellLabel->"Out[39]=",
 CellID->46743231,ExpressionUUID->"634f07ee-7d38-48e2-84cc-d2e509c84ea1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Mean", "[", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     SuperscriptBox["s", "3"], ",", 
     RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], "]"}], 
   "]"}], "//", "Round"}]], "Input",
 CellChangeTimes->{{3.8723549859180393`*^9, 3.8723550161835775`*^9}},
 CellLabel->"In[40]:=",
 CellID->811992032,ExpressionUUID->"45b0321e-5741-43d0-a8ce-f2decf47db16"],

Cell[BoxData[
 TemplateBox[{"13653194", 
   RowBox[{
     SuperscriptBox["\"mm\"", "3"]}], "millimeters cubed", 
   SuperscriptBox["\"Millimeters\"", "3"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872355016417552*^9},
 CellLabel->"Out[40]=",
 CellID->320552415,ExpressionUUID->"6a20a8d1-a30c-40a2-b5e1-6c3573f1cda6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"TransformedDistribution", "[", 
   RowBox[{
    SuperscriptBox["s", "3"], ",", 
    RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[42]:=",
 CellID->120708854,ExpressionUUID->"ee662e5d-8f78-49c3-b6ac-2088a3005980"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"4", " ", 
      SqrtBox[
       FractionBox["49955519554669", "21"]]}], "27"], 
   RowBox[{
     SuperscriptBox["\"mm\"", "3"]}], "millimeters cubed", 
   SuperscriptBox["\"Millimeters\"", "3"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8723550277140603`*^9},
 CellLabel->"Out[42]=",
 CellID->639861329,ExpressionUUID->"a035f8d5-6dcd-43ab-831a-5aff9d9699d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StandardDeviation", "[", 
   RowBox[{"TransformedDistribution", "[", 
    RowBox[{
     SuperscriptBox["s", "3"], ",", 
     RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], "]"}], 
   "]"}], "//", "Round"}]], "Input",
 CellChangeTimes->{{3.872355019933834*^9, 3.8723550236056128`*^9}},
 CellLabel->"In[41]:=",
 CellID->829188397,ExpressionUUID->"a8dd05cb-1c9d-4bd3-acf8-c853daf9b08d"],

Cell[BoxData[
 TemplateBox[{"228496", 
   RowBox[{
     SuperscriptBox["\"mm\"", "3"]}], "millimeters cubed", 
   SuperscriptBox["\"Millimeters\"", "3"]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.872355023855562*^9},
 CellLabel->"Out[41]=",
 CellID->789069782,ExpressionUUID->"7ecb2fbc-df23-4313-af0c-d874ab894dc0"]
}, Open  ]],

Cell["Plot the PDF of the cube's volume:", "Text",
 CellChangeTimes->{{3.8723550363693333`*^9, 3.8723550412837753`*^9}},
 CellID->471088141,ExpressionUUID->"0ba71a7a-c2df-49f9-9186-4bdde9df1cf2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"TransformedDistribution", "[", 
       RowBox[{
        SuperscriptBox["s", "3"], ",", 
        RowBox[{"s", "\[Distributed]", "\[ScriptL]\[ScriptCapitalD]"}]}], 
       "]"}], ",", 
      RowBox[{"Quantity", "[", 
       RowBox[{"vol", ",", 
        SuperscriptBox["\"\<Millimeters\>\"", "3"]}], "]"}]}], "]"}], "//", 
    "Evaluate"}], ",", 
   RowBox[{"{", 
    RowBox[{"vol", ",", "1.2*^7", " ", ",", "1.5*^7"}], "}"}], ",", 
   RowBox[{"Exclusions", "->", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872355042439769*^9, 3.8723550988793187`*^9}, {
  3.8723551396764097`*^9, 3.8723552113506227`*^9}},
 CellLabel->"In[51]:=",
 CellID->21237734,ExpressionUUID->"562f2354-d020-43dc-ba84-544490656903"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Hk0VH/8P3BRkiyRJYVQEipZszQv3pI9VEKSLTL3jqSSnURlSZKIyJIt
SkLWuW3Cp0jWSqKUKGtIi7L0fX/P+f2+Y/6Z8zhz5s7rvl7P9+ueM9Kux/e5
s7OxsT1fwsb2v++rLv1c4vz5KGL7f6/09NGlnYusUPxpueEAywatL3m3DLIc
IJAvNvOF5f4kG+X4EZbvZ1Q5P5li2aYk4LEUm8f/+RRllG2+nmUqo6PcYyfL
dCeTjEk7lseWc98d8GM5LSpy9Fkiy9JTFpYi5Szz7GCP6ehgWebAyR8hEyzz
H9pyLpGP/n+W08rZlarIcs6PZe94jVn+nVyWNHaUZd/V4meZESw3+7Zemc5m
uXX62FavHJY7vHkahxb5LWnC9iGX5QHHOq/n+SzPGlaZpd9mWUE0c5lRGctb
E2k3axd5u0Dvzp33WdZYKeajXM4y+pfQv66SZbuvFx5P1rB8yE32EIPJsuOn
ul+Di+zWw7ath2LZuzXwRsNDlk+Zi2nqPVrUn8aqTuYiB9f94C55zPIZvav5
Ck9YDn+orJ+3yOe0296vr6Uj7X1Ch7+fP0OLrPIKSMXeJN80ULWumDYi19zO
85SOancLZCrK1dEsUuQVzmBHHdJ1X87XQSvjigyfwva6JHE2VeU9TSRg4N2R
OjrS49T5GRc2SAscRqpvsF81GmqUPBinvT+YedG4no6238pXb86fpuk1zX1m
YnMbTIUmi/2h5Wrb79zaQEfrQhqL7mr8o3HdqUrMxKY+z2gv+ccOjHXC4wL/
0RFTSaixvooTWi6e3H0Oe8m/1YfTGrhBZa41/Rf2iyOdnaGb+eGa59Zf9Gd0
ZFB14LzapAD86Y2x6MHmDaiZKPQVgicPd/97/JyOOqOsvFZwrIWN23JsVRrp
6Mz6JJdxLgmIzGArycWW//unJFtcCizOUM7RTXR0T4iRlx27Acom1tTMYgcU
bo855SYLIs6+Al4v8OerL9r475WD93rKT/c109FRE6coUYYi6JXGrW3AvlVn
21ecvBVypcdO7nhJR9aX+tl8upXAk/3WBvEWOtoYwl6vZ6ECf+vEzw+20lGr
S9dp3fgd4KgW+N62jY4M+Z+Pb5nVhNrcLvUmbG+bb9vveGtD1PmEL8XtdNS4
ZJbHNogGokZcxv6ddJRYrHj0znJ9CKxyzxrBtvYazLf/qg8f5OpmHF7RUULD
Bn3L5l2QzxVaiF7T0ed5DY7l+btBrWmae2UXHfnOFvDlp5hAivbeIyHYxYr6
4aezTWH2djE1gY2KdYwiS83g6UXC89VbOgoR34u8+/aA1Z6+l+nv6Kiu7+Pd
TbS9cKytKX77B/z7YWerJw7YgDf9YVIR9vX26bGHq23hJFtJ6uY+OrJcXno8
65Ut+G9PypX6SEfVJQ3ETaeDcC7eqXpVPx2p30k6HZvqADesfvRNDtJRrkLa
1aF2F8gc+jLg+YWOjJhxVUdMXCE7rHt4CPtdsaWox1NXKCh5NP3xKx2pVD/h
56w5AuWrope3D9OR5JHcizer3aG5TUKpdJyOnDebfFddQkIrfZXa1m90dN7X
MXTjFRI62Di0CrEPvL58OE2GAW+3D+nfnKCjle2+aetMPWEgvszmyhQd7YrT
qnW94wWzVkahJ37S0UnjzXH+PSdAod37pfI8zoez6tgNfz+Ic5C5nIedO/jO
7liHH0x97bQSW6Cj14HCm75s8YfqBY1XbP/oyIpzd2nbZ38w2jL/rpWNQB4Z
zapRBwPBLTJ66NhSAr0eK9XwdQuBDFo2x+2VBDqnE0Wfmz0L7I37GyR4CPT1
b3qno2o4uFsvi7yCzZ88dUeIEQ5bGHTuAF4CDTUIxAb2hAOVsk3AmJ9A7/Jj
nbc9iYC300zJL4IESm5l8ilfPw+Ctzu1ZNYS6IniqI5/dDQIH15bkIn9YFMc
/XFbNKxZ5SIisY5AcV1C+R5rYkDS99t3UXECteYg9Z6CGFDQX1HEK0mg5cKe
LXtaLoL+O5D8I02grOImPXvFODjJfZu9TZ5AFuZ7/MavXYHTDye99ygQaNW8
wYPUJ1fA33tHXxN2jKD0Kv+RKxD6pp5qUCTQ6Avy9VNIgJjsPh9qK4EgNMkz
ZTgBsrWFv+YrE8hmtj9MzzgR2smwFyFaBPqtfWiCkE8G05cyUzPY6+VPaara
JcNTpQYRH23cL8kiZ4XIZCj/scKV1CGQ8mEHvezBZLgWenXGhkYgx9sN3VW5
KWCfkC+7HRHo2LSqo59iKnyuaT7Tb0ygK4pzXEqH0uEnl5iakR2BhH7rOzpK
Z0OLY6AIE3vfl/vzwTuzoaC8Z2bLQQJ5ZvYq37PNBnvnjIeC9rhfhyv3WcRl
w6OqDUYfDhHIt2+Hpd9cNkQd3WZ/2gnPO07jz8neHBCv3xWWc5RA15by715+
Jw8Mzng1//MhULDpuuoD4YVAvueN2ZBIoPInhWcWvEphl0Xd62Tsn2pzZk1n
S0H8sb80TxKBzLaGPc1MLIXWrM/VP7BVrKzueDBLQc2t5mtDMs7LrxA7BmcZ
LIy47aanEchtbGLJjqwySJih2O5mE0j/YMAgf9N9YBAnzKVzCORcUvJupuc+
GLzblJKEHTV473rz+H34TV1RCs0lkETtbKCaQDk4nPFwtMwnUAgt/Mcy23LY
xLn6wVQhgSz/XFtV+qEcqNWkn0YpgVRvmu1V+VAB3GpBgQXYEqlv2hTGK8DO
OjZkbRmByjKm1vLPVcCvxOKIBez5bA+hNLFKUBGZvvxfOYEYGXp1T/ZXQsGa
4AKbapyPmTwjg/pKuCYR1+37mEBqnXXp6teqYJCW2TuE3XVv0/rb2VWg5ljS
Z/+EQO1FHsnc96qgPaNjEGoJ5Hpq2cnLz6qAR0r0O2cdzssE7VfB7yqIkMni
Tv6PQHrJxV7i1tXgLVemU/US9+OuI5NvoRocj9uNqrTgvP8p0OjlqgHzqoXU
YuxLdjr7ElbXgLyR2d+8VgL9aFf2qt5cA/1HB6oT2wnE7JYix/bWwP58EY2T
rwl0KCTi94/MGtD/9mBwHHtqv4DWnsIa2K5xJIl4g/26Qj2urAZ4/rv3w7mL
QPe1VTya6mugftD4vmU3gXQmfHoUh2pAQzZo+9b3BDLPTolNVGDCxmPSHwuw
p3h2WgaoMEGw4tnljR8IRJfOGjLUZsKEgdDEuj4Ced2Ly79hwoQCt7t3uT/h
fRG764yKBxPW5vYpDA0QyHpThOyKDCZwjZ1/d2SQQNnL6mSCc5nwS3VLTB82
V6eR4NvbTOis8x9+8wXPg7bQYlrFhNjPAgUNQzjvn9ZOrGtlwryMgWzOGO7P
fJSJ118mmDsWXhEZJ1Aim7mO+D8mpF7nW4jGfiOup1zJQYHmqu433t8I9H6j
sVIxDwU+88eiYJJAd07lpBZLUFCn2fmjFDtc5tGrB9IUCPpoushOEejD+vWS
VbIUlIywa/N8J1C/8c6B41spGO1KHu2eJpAhX5rbdx0KtFfP2+75QaAw6Uxd
F10Koixc659gm0X8VnugT8Gmhi3pt37ivEwo+GiYUOBaVmtx+jeBFtx1GDsP
UFA6vokawl4RHK7LY0cBm3ysnMMMgTTqZLWe21OQkWnDtusPgUTc2bOXOlPQ
HTtaumqWQPuTr3tfJijY/NxK8hy2/LDRtScMCnw5KmN+Yzte3j/2/hgFQoFh
Rz7M4f2J/m17f4KCIxWDrXvnCUTzcJR8fIqCsknTnQ3YYi+Sd106TYGVh7Bw
0QLeFy9E1b/5U5CZHXh2/T8COa0WX3o2kIJv7/vGE7CDm3352IIpoInttudk
I5G+QeQBRggFsda3/wvAPr2q6N3TUAp6LvOrjmNvfKufyRlGgcILn0znJSQS
H76dq3GWgmdI19+InUR9YnS/QxEUiITkDjCxx/YFGFmdo8CtesXebRwkkrn7
6rDyeQruT3s9vIntfr2LWsBmV3olL7yURNF3+1yrL1Cwl9S6FoVdFWZm7RhJ
QVZeBvsc9jYR/yuT2BMfOY4fX4a/r1O37ngUBSBO9PRju3DG/OjGvmTbYmTD
SSLVYXkJ5WgKehNUyxuxH+xiS/bBVmxJkaItJ1H2FvJILnbgioXYEmzB5rqI
J9iNBkf+bOAi0fNJ8s9z7DVhz92TsetfUw0PsY9SWzu4V5BoX9XqkQzsil8J
EIotCC0enti5By/ZzmKnsGUHrsdOeBDp7c9NIm+5+CAK1xe2Pjz6J/YpQWtP
PWyv8ODskytJ5NteYFGM789h0JeawHY8ZLJxGbap8YlXnjwkWh83+c0A90fz
DmN8GHuq82DJMdy/TXxHOT14SdSoqkuewf0WOuG8fgB7xO+QZCCeB/sre00X
PhKdP01vORxOwaTGgb0fsPnjpIIV8Pz6rluSh/hJtJYb5D+eoaBlziTiLbbR
ncCuUDz/B04GNw6swv1dGx/FifORIqvVYilAIrRP8W9bAAUXolS/NmOHO258
tBrnzWd0K5upIIlCi3ou6vrieZbKqBisJtENb8Js30kK9IQkzGqxi8RK9bS8
KdjmJ+oGQri+g2mGK7wo4KbxXNMUJlFlvtpFN3w+ZjI571Vgc2YfeDlxlIIv
7Eueq4iQ6GXdzCY3N3z+n//8s0WURNcb8uW4nCgItu47LC2G6wkti6Ptp4Cs
6vbNwFaOnnsgYEWB3dpXl9etJZFcfsSqVnMK1D8+rxVeh+29adsyQ3w+GGWy
3BIkMisrPuW0A+enpQgisXkd3s0Gq1LQpHzLdqkkieyMflZGKFFw63da9AK2
tGNbs7kcBc4R58e/S5Hote94/kthCiy+nOH0liZRWhbxS02Agp0mgevHsf9G
hF44j/eZGP/xvV9lSFSxbNfxfnYKOlLtKno2kqifbSTh4jcmGJQphtRvxvOO
7Mm8UYv3c/3ZPbryJLrtkyhcQTGBp6tLgondKP2suqoC79/ZiEf3FEjkcYAj
LqiQCa67e/+lbiHR0Re1WfOXmXD2bWz4ie0kUlKUbRmzY8LASP++Mez5HU97
CvYywXhec4OHMolaVvputzRlwiqZwToHFRJtDoussNdhQhaDtsxYjURvAubs
j4kz4dHCeKSkJolWCMv7h7+rARkBA7vr2HGmlys/t9fAhQ2pm4W0SNS6I/qA
UmMN7DE2bFyhTaIASKTOV9VA75UM7p86uL9P/a2VrtbA7EbLSy90SXT18S1x
P8Ma0DQrSfA3ItGXbj2xgRvVMGfVsH4UuzP0zm/bhGqotXlXdNiYROR7e5Wa
yGowdV36TN8E76/gm7W7TlaDQ4DdLI8ZiRYunmMEGFZD2C02t5sWJHJS/72C
PloFzzj2qjcdIJGVuaLtIbkqiF1x9OlOG3ze4neoh6ytAiv+IMt72J6WSimx
vFXwdm0ekWiL6zk4MnVquhJGlP+kOx4k0dm5H6LujyqBz/km57QDib4iNpMO
q0qweTDVtc6NRE2UKP8njwpgDqcJpGBvfbxC/ZhtBUiKGpoJuZPI5MuFls+G
FfDlROojnqMkcki54BovWwGn5XblzXvgvIcY6nz9VA6JCYkn+xgkCnvRKnTJ
phza6Tt4c07hfWW5L7pe6T6YC4foK0SQKIROeLlUl8Axw4ZeuSwSXVDY+kls
RSEUiMTEXMf+tztodf5IAfR/sdBceRNfz1MwYndzAdhEvr36DXvPNl7hR5cL
AJ6PmlbkkGjnfMfHJNEC4DMVrNG/RaJlXZ/mPijcgpI9TkmHi0mUJD9/usUp
D75b/9lz9QGe5y9n5V72bGg231/A9xDX03BV9d+Xm5BncJc9BttFMiBU88VN
sFNzqQp7hPfJBY6h8as34dHqRimvJ7j/nyvfH9l0E6I7UqaN60nUUPxvMtAy
C6SsNK8vvCCRDt/I3iS3dPhrlDAd0Iyvnxzr6qGSDp26Y3t+Yt/Mis90Z0uH
C0pZ7GMvScR1aWvClxs3YIyPy7O7FT+vbHqW/O1Kg+qXXVDeiffN7V5zN5tU
sDTzGyB68POod8fd7T7JEKMRP9uL7bdjD+8Z02Soly4UtOrFz4+EWzHTUsmg
OfNOT+M9iWQNBDotWq6BVB6ks/eRKP89j3WLwjWYWlhmk9ZPoocOA5++jSTC
1bLEZ83DOJ/X3sXnRiZAS/rdD7ojeF8+DqoudU0Aruj/fpZhmz8YKxqgJUCw
08yG66Mk+jmn8536cQXceBzC3MdJ5HY9pkDJ7QqoH92gtTBJosdnDyXKm8ZD
l1jZbaUZEq0bUxi74xYLJVucvYqwPeTXxj2TjIUYXT4V+T8k+tWoaK7TfRF2
upM1Mn9JtNTwJIei5UXILpF5LjxHoqGXzXcVdGPAy+jq4Ow/EilmuR/LU4oC
ztM+Us+XM9DSvGXxDvvOwcdImQEDLgb62vYh/LjoOahJbbtViy1+p+R5d28E
eD7ZokStYKCdXdpq5fQI6Fg5SCteyUCaX0Z7zpwLh4zsA4cS+RnoBG/Qb8/m
MNBo07jmLMpATUXn4wa1g8D7TY7Ia+w0Dm0tqU+BcLt3VbLJGgbilfdon4oM
BMnhkWQVMQaqv9F182BXACxnz7y+dB0DcceMF2iH+MNb1eXpBZIMlO9qeFZr
8DQIavtISKxnIL9pdbMPiafBXO9T+hVshwO5LmK7T0OtOZURKMVAsYbdZvtu
+cBt9+NZ5jIMtC++de7lyVMQlNyVMynLQE/VH/EMyJ6AynSDje6bGOjz8cHR
oQ/eMJlTmtuN/fallV9Eije4lVzMeyrHQAE2/8gAXm8wb9S9lSjPQLqPCYfW
uWMgOXvrtuZWBmKq+L6KniHgiaN/aZgaAwkPVcoEtLqCtxAa/o7NPHGuv53u
ClJNK6Td1RlIaUfojBGHK5xRT4s30WAg/T/2vRd1XAB4Hh0X1GSg2oGo6Y8n
neBBDce2XB0GOiJuFKb1+iB4Hm92F9nJQJZtCRbnFA+CuGxSehT2tGTS6eXn
7CAofhPvMRoDbXmuqlWpYwvaHiZj6roMNKVYFFnaYA1VQpdvP9NnoOavf9oW
dlnB0Sbbfq1dDCSZohcfFGQJImFSa4uwa0Ul49xPWYDvaGl0vAEDrbvYFh/s
bQ5qT1/RDxoyULmqbHpxpjEM+KVnvcDW+fP5+7lKI0jcevQtzYiB7PNNVjS0
G8J0ym8jGWMGaqj7a3VWeDeUHV8rN2rC+N/9oNPfjsBV9rPjYVMGcjxmemFh
JQLBnjvXWrHnRL/vCjfVgxOGNM5yMwaq01cbCCmkwXYJ58HgPQx0ZzJInHun
Jnzs2CwxgW1JD35R+EsD4qOmrF0scJ6GFJ+vZqrDxHR4/W5LnGexTU4Gh1Sh
uCkvh28vAw1dCBnl59sG87c4omKww/fYz5GDimB+3sWTcx8DSZeVHyfb5WFE
V0J9AbuVazTP6qssaEkEiQXuZyCOT0IhagIbIerv2/mf2EGb7foqLWVAriLx
v3FrBmJLEPogIywJvgnfbxMHGIgKdTvykncd/Hfc6vIgdlDZi/2FSmtAeE/x
KRcbnA8+kYb7gcLgpsBj9x77jL7py+FvgnB/ObnzoC0DCeUUhhvHrgL2wWdS
r7HXrnf+fT2PB7IyI4ab7RgoWT5Ozq9yKUwEf3ppfJCBfqgN1+pqLwGw1y2r
xw6I49EMkJqjXdqRfk3PHueF16Kp1fsXrVdoNvABttuVpal+7lM0xe92TpqH
cH8N+fmb5oZpga2Vu8qxxTqUh9b49dMai4Q2b3dgoA61y8ujT72lrYk5yVOE
zVU0kvlG8CXNw6NtUu4wA3W67P5S8OgBrdJg2+sc7HDtTU+Y23Noy2Ria9Y7
4vsrvGwmrX+UZv1vOD0N+////53TaxQu6sTy95q8o1cX+YqPi9JFZ5Y/7n28
erkLy9uVJGbCF7ll+O2TQFeWuZ2s9pFuLIeb6J42obPsIylBLfdmeeOElkPQ
Ir96bDP/bZFVXeJ135xYVG8OR33uKZa95UeakR/LnmpVH4JCWXY33cs+Gcvy
VsdWr11FLB+01Cpb+oLlkjXOshVfWe5rbHvYxun5f9bav3C+ZwPLv2tEZa31
WL7EFTS8w4llC6W099zBLDuMiSdcXGRGYYYhTwjLURuy7/GGsvxUtPDsqjCW
NdiqZEXOsby+veOYdCzL2+KsZbIXeafZmzcyl1i2b+jW3RjHcmLNRwG5eJa5
sr9VbElkWcTJm7y7yLLi3yW3JbGsf+1npNI1loNj5g6qpLAcYxTKd3+Rry9l
q1O9znJlKMcW9VSW63XOf6xY5M4ZziSNNJb7K6JMqhZ58iT3wo4bLP8PSv7j
Vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$62779#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.2000000000000026`*^7, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.2*^7, 1.5*^7}, {0., 1.641405992166286*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8723550993163404`*^9, {3.872355145160309*^9, 3.8723552118036156`*^9}},
 CellLabel->"Out[51]=",
 CellID->77293381,ExpressionUUID->"2a3bd6ac-4450-4094-9053-b8736d9f8d9a"]
}, Open  ]],

Cell["Recorded body weights in kilograms:", "Text",
 CellChangeTimes->{{3.872355222064102*^9, 3.872355228032156*^9}},
 CellID->283159977,ExpressionUUID->"24290368-c98b-4f7f-aecd-96978ebf0d33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"QuantityArray", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "67", ",", "69", ",", "57", ",", "78", ",", "89", ",", "65", ",", "57", 
       ",", "80", ",", "73", ",", "66", ",", "61", ",", "70", ",", "64", ",", 
       "74", ",", "77", ",", "69", ",", "76", ",", "71", ",", "75", ",", "93",
        ",", "77", ",", "78", ",", "72", ",", "80", ",", "63", ",", "78", ",",
        "78", ",", "52", ",", "80", ",", "47", ",", "70", ",", "76", ",", 
       "63", ",", "77", ",", "69", ",", "68", ",", "48", ",", "71", ",", "71",
        ",", "69", ",", "68", ",", "79", ",", "67", ",", "75", ",", "56", ",",
        "62", ",", "81", ",", "92", ",", "63", ",", "74", ",", "72", ",", 
       "90", ",", "58", ",", "47", ",", "58", ",", "63", ",", "62", ",", "73",
        ",", "70", ",", "85", ",", "61", ",", "75", ",", "53", ",", "59", ",",
        "63", ",", "76", ",", "78", ",", "67", ",", "67", ",", "83", ",", 
       "61", ",", "62", ",", "75", ",", "68", ",", "82", ",", "65", ",", "84",
        ",", "71", ",", "49", ",", "70", ",", "60", ",", "72", ",", "61", ",",
        "63", ",", "84", ",", "69", ",", "69", ",", "52", ",", "56", ",", 
       "81", ",", "78", ",", "72", ",", "59", ",", "67", ",", "75", ",", "52",
        ",", "67", ",", "65", ",", "68", ",", "60"}], "}"}], ",", 
     "\"\<Kilograms\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.872355229328763*^9, 3.8723552375365467`*^9}},
 CellLabel->"In[52]:=",
 CellID->111078542,ExpressionUUID->"3cb971db-2b97-49fe-bdd0-2f01c0e5ff8f"],

Cell["Plot a histogram of the data:", "Text",
 CellChangeTimes->{{3.872355238245124*^9, 3.8723552468380957`*^9}},
 CellID->981330815,ExpressionUUID->"fce9334a-5797-4282-8834-b5b56ea17b17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "=", 
  RowBox[{"Histogram", "[", 
   RowBox[{"data", ",", "Automatic", ",", "\"\<PDF\>\"", ",", 
    RowBox[{"AxesLabel", "->", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8723552482437115`*^9, 3.8723552611381674`*^9}},
 CellLabel->"In[53]:=",
 CellID->184301441,ExpressionUUID->"4501ff8e-c73f-4575-9795-2e0f93b3bffc"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.616], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.616], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{45., 0}, {50., 0.008}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{28.342124057751477`, 59.488297420391774`}, {
           50.881145021235376`, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.008]& ,
        TagBoxNote->"0.008"],
       StyleBox["0.008`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.008, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{50., 0}, {55., 0.008}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{58.988297420391774`, 90.13447078303207}, {
           50.881145021235376`, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.008]& ,
        TagBoxNote->"0.008"],
       StyleBox["0.008`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.008, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{55., 0}, {60., 0.016}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{89.63447078303207, 120.78064414567237`}, {
           14.184165042470738`, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.016]& ,
        TagBoxNote->"0.016"],
       StyleBox["0.016`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.016, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{60., 0}, {65., 0.032}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{120.28064414567237`, 
           151.42681750831267`}, {-59.20979491505854, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.032]& ,
        TagBoxNote->"0.032"],
       StyleBox["0.032`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.032, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{65., 0}, {70., 0.04}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{150.92681750831267`, 
           182.07299087095296`}, {-95.9067748938232, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.04]& ,
        TagBoxNote->"0.04"],
       StyleBox["0.04`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.04, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{70., 0}, {75., 0.032}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{181.57299087095296`, 
           212.71916423359326`}, {-59.20979491505854, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.032]& ,
        TagBoxNote->"0.032"],
       StyleBox["0.032`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.032, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{75., 0}, {80., 0.036}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{212.21916423359326`, 
           243.36533759623356`}, {-77.55828490444087, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.036]& ,
        TagBoxNote->"0.036"],
       StyleBox["0.036`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.036, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{80., 0}, {85., 0.018}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{242.86533759623356`, 274.01151095887394`}, {
           5.009920047779573, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.018]& ,
        TagBoxNote->"0.018"],
       StyleBox["0.018`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.018, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{85., 0}, {90., 0.004}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{273.51151095887394`, 304.65768432151424`}, {
           69.2296350106177, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.004]& ,
        TagBoxNote->"0.004"],
       StyleBox["0.004`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.004, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{90., 0}, {95., 0.006}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{304.15768432151424`, 335.30385768415454`}, {
           60.055390015926534`, 88.07812500000001}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.006]& ,
        TagBoxNote->"0.006"],
       StyleBox["0.006`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.006, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TooltipBox[
      StyleBox["\"kg\"", ShowStringCharacters -> False], "Kilograms"], 
     TraditionalForm], None},
  AxesOrigin->{44., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{45., 95.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8723552617314644`*^9},
 CellLabel->"Out[53]=",
 CellID->337885347,ExpressionUUID->"7a6e12dd-c098-4da6-9074-ccc0bbf4e034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dimensional analysis", "Section",
 CellChangeTimes->{{3.8723671893822346`*^9, 3.872367193183827*^9}},
 CellID->41330008,ExpressionUUID->"5cb467e9-3e30-4ae8-9bc4-043f1577a182"],

Cell[BoxData[
 RowBox[{"SEVENCONSTANTS", "=", 
  RowBox[{"<|", "\"\<Hyper\>\"", "|>"}]}]], "Input",
 CellChangeTimes->{{3.8723671972669306`*^9, 3.87236721565084*^9}, {
  3.872367250873632*^9, 3.872367272037041*^9}},
 CellID->48589341,ExpressionUUID->"4fce7032-cd69-4de0-be0f-f91ae77e029e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"store", "=", 
  RowBox[{"EntityStore", "[", 
   RowBox[{"\"\<Seven defining constants of the SI\>\"", "\[Rule]", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{"\"\<Entities\>\"", "\[Rule]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<hyperfine transition frequency of Cs\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Symbol\>\"", "->", 
            "\"\<\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \
\(Cs\)]\)\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", "9192631770"}], ",", 
           RowBox[{"\"\<Unit\>\"", "->", "\"\<Hz\>\""}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<speed of light in vacuum\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Symbol\>\"", "->", "\"\<c\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", "299458792"}], ",", 
           RowBox[{
           "\"\<Unit\>\"", "->", 
            "\"\<m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}]}], "|>"}]}], 
        ",", 
        RowBox[{"\"\<Planck constant\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Symbol\>\"", "->", "\"\<h\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", 
            RowBox[{"6.62607015", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "34"}]]}]}], ",", 
           RowBox[{"\"\<Unit\>\"", "->", "\"\<J s\>\""}]}], "|>"}]}], ",", 
        RowBox[{"\"\<elementary charge\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Symbol\>\"", "->", "\"\<e\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", 
            RowBox[{"1.602176634", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "19"}]]}]}], ",", 
           RowBox[{"\"\<Unit\>\"", "->", "\"\<C\>\""}]}], "|>"}]}], ",", 
        RowBox[{"\"\<Boltzmann constant\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Symbol\>\"", "->", "\"\<k\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", 
            RowBox[{"1.380649", " ", 
             SuperscriptBox["10", 
              RowBox[{"-", "23"}]]}]}], ",", 
           RowBox[{
           "\"\<Unit\>\"", "->", 
            "\"\<J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)\>\""}]}], "|>"}]}], 
        ",", 
        RowBox[{"\"\<Avogadro constant\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Symbol\>\"", "->", 
            "\"\<\!\(\*SubscriptBox[\(N\), \(A\)]\)\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", 
            RowBox[{"6.02214076", " ", 
             SuperscriptBox["10", "23"]}]}], ",", 
           RowBox[{
           "\"\<Unit\>\"", "->", 
            "\"\<\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)\>\""}]}], "|>"}]}], 
        ",", 
        RowBox[{"\"\<luminous efficacy\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Symbol\>\"", "->", 
            "\"\<\!\(\*SubscriptBox[\(K\), \(cd\)]\)\>\""}], ",", 
           RowBox[{"\"\<Numerical value\>\"", "->", "683"}], ",", 
           RowBox[{
           "\"\<Unit\>\"", "->", 
            "\"\<lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)\>\""}]}], 
          "|>"}]}]}], "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", 
     "|>"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8723672956590757`*^9, 3.872367391327798*^9}, {
  3.872367508568534*^9, 3.872367577802024*^9}, {3.8723677271509657`*^9, 
  3.8723679903184204`*^9}},
 CellLabel->"In[26]:=",
 CellID->325765674,ExpressionUUID->"55021c50-117c-49e5-a567-cedbe2071438"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EntityStore",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Seven defining constants of the SI\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"hyperfine transition frequency of Cs\"", ",", 
                    "\"speed of light in vacuum\"", ",", 
                    "\"Planck constant\"", ",", "\"\[Ellipsis]\"", ",", 
                    "\"Boltzmann constant\"", ",", "\"Avogadro constant\"", 
                    ",", "\"luminous efficacy\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Symbol\"", ",", "\"Numerical value\"", ",", 
                    "\"Unit\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "3", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"Seven defining constants of the SI\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"hyperfine transition frequency of Cs\"", ",", 
                    "\"speed of light in vacuum\"", ",", 
                    "\"Planck constant\"", ",", "\"\[Ellipsis]\"", ",", 
                    "\"Boltzmann constant\"", ",", "\"Avogadro constant\"", 
                    ",", "\"luminous efficacy\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Symbol\"", ",", "\"Numerical value\"", ",", 
                    "\"Unit\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "3", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Entity classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Property classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  EntityStore[<|
   "Types" -> <|
     "Seven defining constants of the SI" -> <|
       "Entities" -> <|
         "hyperfine transition frequency of Cs" -> <|
           "Symbol" -> 
            "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
            "Numerical value" -> 9192631770, "Unit" -> "Hz"|>, 
          "speed of light in vacuum" -> <|
           "Symbol" -> "c", "Numerical value" -> 299458792, "Unit" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "Planck constant" -> <|
           "Symbol" -> "h", "Numerical value" -> 6.6260701500000015`*^-34, 
            "Unit" -> "J s"|>, 
          "elementary charge" -> <|
           "Symbol" -> "e", "Numerical value" -> 1.6021766340000001`*^-19, 
            "Unit" -> "C"|>, 
          "Boltzmann constant" -> <|
           "Symbol" -> "k", "Numerical value" -> 1.380649*^-23, "Unit" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "Avogadro constant" -> <|
           "Symbol" -> "\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
            "Numerical value" -> 6.02214076*^23, "Unit" -> 
            "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
          "luminous efficacy" -> <|
           "Symbol" -> "\!\(\*SubscriptBox[\(K\), \(cd\)]\)", 
            "Numerical value" -> 683, "Unit" -> 
            "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        "Properties" -> <|
         "Symbol" -> <||>, "Numerical value" -> <||>, "Unit" -> <||>|>|>|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8723673930392385`*^9, 3.8723675781402493`*^9, 3.8723676604841557`*^9, {
   3.8723679049245358`*^9, 3.872367925983412*^9}, 3.8723679906854057`*^9},
 CellLabel->"Out[26]=",
 CellID->109824087,ExpressionUUID->"41e75517-b71b-4dd5-8e34-25a679439f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", "store", "]"}]], "Input",
 CellChangeTimes->{{3.8723674054444227`*^9, 3.8723674082029824`*^9}},
 CellLabel->"In[27]:=",
 CellID->252918434,ExpressionUUID->"d0d7cf3b-a042-4fc7-a860-af3417d97e20"],

Cell[BoxData[
 RowBox[{"{", "\<\"Seven defining constants of the SI\"\>", "}"}]], "Output",
 CellChangeTimes->{3.872367408446969*^9, 3.8723675820052853`*^9, 
  3.872367670520201*^9, 3.872367994443161*^9},
 CellLabel->"Out[27]=",
 CellID->75212028,ExpressionUUID->"3b93479c-1575-48b9-8588-f956a8149b68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"{", "\"\<Seven defining constants of the SI\>\"", "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87236743337449*^9, 3.872367435080854*^9}},
 CellLabel->"In[4]:=",
 CellID->32120234,ExpressionUUID->"86f2d764-7738-4944-b6aa-258c0672eb4d"],

Cell["{\"Seven defining constants of the SI\"}", "Output",
 CellChangeTimes->{3.872367435486314*^9},
 CellLabel->"Out[4]//InputForm=",
 CellID->288537393,ExpressionUUID->"e7c6668b-5d73-4b39-a63c-b41ede60001d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"First", "[", 
   RowBox[{"InputForm", "[", 
    RowBox[{"{", "\"\<Seven defining constants of the SI\>\"", "}"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87236743745796*^9, 3.872367441566897*^9}},
 CellLabel->"In[5]:=",
 CellID->91716906,ExpressionUUID->"46ef38f2-dd51-4f5d-ad7f-04aea0aefffb"],

Cell[BoxData[
 RowBox[{"{", "\<\"Seven defining constants of the SI\"\>", "}"}]], "Output",
 CellChangeTimes->{3.8723674420819807`*^9},
 CellLabel->"Out[5]=",
 CellID->246807448,ExpressionUUID->"3ed3d084-7011-46f8-924a-04580c6c4185"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{
  "\"\<Seven defining constants of the SI\>\"", ",", 
   "\"\<Boltzmann constant\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.872367482631638*^9, 3.8723674956094713`*^9}},
 CellLabel->"In[17]:=",
 CellID->30200501,ExpressionUUID->"574288d8-e7bc-4e59-80c6-79020fd37bde"],

Cell[BoxData[
 TemplateBox[{"\"Boltzmann constant\"", 
   RowBox[{"Entity", "[", 
     RowBox[{
      "\"Seven defining constants of the SI\"", ",", 
       "\"Boltzmann constant\""}], "]"}], 
   "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Boltzmann \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8723674959578495`*^9, 3.872367593985727*^9, 
  3.872367679032415*^9},
 CellLabel->"Out[17]=",
 CellID->242255206,ExpressionUUID->"36306139-02d9-4e3d-b6e5-f9c8c483da88"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityUnregister", "[", "store", "]"}]], "Input",
 CellChangeTimes->{{3.8723675864908853`*^9, 3.872367589037255*^9}},
 CellLabel->"In[10]:=",
 CellID->89837952,ExpressionUUID->"5b6ac24e-2dfb-461d-9c95-6ad50ee4c445"],

Cell[BoxData[
 RowBox[{"EntityUnregister", "[", 
  "\"\<Seven defining constants of the SI\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872367648013294*^9, 3.872367652216976*^9}},
 CellLabel->"In[20]:=",
 CellID->234639244,ExpressionUUID->"f4aadb87-528a-46c2-8260-c32b27cce3aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{
  "\"\<Seven defining constants of the SI\>\"", ",", 
   "\"\<Boltzmann constant\>\""}], "]"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->39156972,ExpressionUUID->"63ce8246-93fb-478b-97da-591d0c630ca9"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"Seven defining constants of the SI\"\>", 
   ",", "\<\"Boltzmann constant\"\>"}], "]"}]], "Output",
 CellChangeTimes->{{3.872367655986252*^9, 3.872367664084628*^9}},
 CellLabel->"Out[15]=",
 CellID->219891975,ExpressionUUID->"2081ced7-7cf8-4966-a1f5-2073cc338ec8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{
   "\"\<Seven defining constants of the SI\>\"", ",", 
    "\"\<Boltzmann constant\>\""}], "]"}], "[", "\"\<Properties\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723676917612453`*^9, 3.8723676935400295`*^9}},
 CellLabel->"In[18]:=",
 CellID->231164385,ExpressionUUID->"26ff7a81-b757-4b32-b45c-76db448df559"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Symbol\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Symbol\""}], 
      "]"}], "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \\\
\"Symbol\\\"]\""},
   "EntityProperty"], "}"}]], "Output",
 CellChangeTimes->{3.8723676938658886`*^9},
 CellLabel->"Out[18]=",
 CellID->10515706,ExpressionUUID->"c6b536fe-79ea-4d7a-a918-ced0de328ab7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{
   "\"\<Seven defining constants of the SI\>\"", ",", 
    "\"\<Boltzmann constant\>\""}], "]"}], "[", "\"\<Dataset\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723676917612453`*^9, 3.87236769895483*^9}},
 CellLabel->"In[28]:=",
 CellID->197295171,ExpressionUUID->"4b87cdaa-5c4b-4673-8479-294d7d1757a9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["Seven defining constants of the SI", "Numerical value"] -> 
       1.380649*^-23, 
       EntityProperty["Seven defining constants of the SI", "Symbol"] -> "k", 
       EntityProperty["Seven defining constants of the SI", "Unit"] -> 
       "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 3, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
     "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["k", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8723676999395275`*^9, 3.872367718516923*^9}, 
   3.8723679127348833`*^9, 3.8723679974472337`*^9},
 CellLabel->"Out[28]=",
 CellID->516748263,ExpressionUUID->"360c722f-8b95-4105-89c2-5bfeec263f9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.872368004447753*^9, 3.8723680118880634`*^9}},
 CellLabel->"In[29]:=",
 CellID->1458214,ExpressionUUID->"bec76bc1-cce6-4597-bcd5-164243a580d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"hyperfine transition frequency of Cs\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"hyperfine transition frequency of Cs\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"hyperfine \
transition frequency of Cs\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"speed of light in vacuum\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"speed of light in vacuum\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"speed of light \
in vacuum\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"Planck constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"Planck constant\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Planck \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"elementary charge\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"elementary charge\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"elementary \
charge\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boltzmann constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"Boltzmann constant\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Boltzmann \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"Avogadro constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"Avogadro constant\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Avogadro \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"], ",", 
   TemplateBox[{"\"luminous efficacy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Seven defining constants of the SI\"", ",", 
         "\"luminous efficacy\""}], "]"}], 
     "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"luminous \
efficacy\\\"]\"", "\"Seven defining constants of the SI\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8723680120927353`*^9},
 CellLabel->"Out[29]=",
 CellID->432560206,ExpressionUUID->"a749b3a4-855a-44bf-be06-8c8a12120c9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"#", ",", "\"\<Dataset\>\""}], "]"}], "&"}], "/@", 
  RowBox[{
  "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872368015695665*^9, 3.872368022121434*^9}},
 CellLabel->"In[30]:=",
 CellID->345785840,ExpressionUUID->"2bcfbe6d-d2c4-4396-8e76-d96049754f9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         9192631770, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "Hz"|>, "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["9192631770"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{313.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["Hz", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{22.400000000000002`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{427., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{427., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         299458792, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "c", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["299458792"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["c", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         6.6260701500000015`*^-34, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "h", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "J s"|>, "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000000000000000000662607"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["h", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["J s", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{395., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{395., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         1.6021766340000001`*^-19, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "e", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "C"|>, "AllowEmbedding" -> True, "InitialShape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.000000000000000000160218"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["e", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["C", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{291., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{291., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         1.380649*^-23, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "k", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["0.0000000000000000000000138065"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["k", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         6.02214076*^23, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["602214000000000000000000."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{452., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TagBox[
    TagBox[
     DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
      "InitialData" -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 683, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(K\), \(cd\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>, "AllowEmbedding" -> 
       True, "InitialShape" -> TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "InitialType" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
       TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`UnknownShape[True], 
           TypeSystem`PackageScope`UnknownShape[False]]], 3, 
         DirectedInfinity[1], {}], "Type" -> 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 
       "Path" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 1, 
       "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
       "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
       TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
          Style[
           Grid[{{
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Numerical value\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation[
                 RawBoxes["683"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", 
                    "Numerical value"]]}, "Item", False], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Symbol\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["\!\(\*SubscriptBox[\(K\), \(cd\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Symbol"]]}, "Item",
                   False], "Mouse"], 
                ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}, {
              Item[
               Pane[
                Annotation[
                 RawBoxes["\"Unit\""], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
               GrayLevel[0.95], Alignment -> {Left, Baseline}], 
              Item[
               Pane[
                Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                   Key[
                    EntityProperty[
                    "Seven defining constants of the SI", "Unit"]]}, "Item", 
                  False], "Mouse"], 
                ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
                ImageMargins -> {{5, 3}, {4, 5}}], 
               ItemSize -> {Full, Automatic}]}}, 
            BaseStyle -> {
             ContextMenu -> 
              Dynamic[TypeSystem`NestedGrid`PackagePrivate`$\
contextMenuTrigger; 
                Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                   True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                   Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
            Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
            Spacings -> {0, 0}, Alignment -> Left, 
            BaseStyle -> {
             FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
              Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
           NumberMarks -> False, ShowAutoStyles -> False]], 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
       Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
           Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
           
           Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
             TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
             TypeSystem`NestedGrid`PackagePrivate`datasetData[
              TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
               TypeSystem`NestedGrid`PackagePrivate`renderGrid[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
              Not[
               FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
           FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
           TypeSystem`SparseGrid[
            TypeSystem`H["(data no longer present)"]], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
       DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
        TypeSystem`PackageScope`SubViewPathbar[
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`updateState[
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
       TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
       Framed[
        Dynamic[
         Replace[
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
             Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
              Blank[]], 
             Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
              Blank[]]] :> (
            Increment[
             TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
             TypeSystem`NestedGrid`PackagePrivate`pathType$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
             TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
            TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
             TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path$, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
        ImageSizeCache->{451., {46.13403328722343, 51.86596671277657}},
        TrackedSymbols:>{
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[],
       ImageSizeCache->{451., {46.13403328722343, 51.86596671277657}}],
      BaseStyle->{LineBreakWithin -> False},
      DynamicModuleValues:>{},
      Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]),
      UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    Dataset`InterpretDataset[1],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.872368022490867*^9},
 CellLabel->"Out[30]=",
 CellID->360495817,ExpressionUUID->"2229f6bb-978b-41a9-8e8f-e53c6d27b7c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}], "&"}], "/@", 
  RowBox[{
  "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872368015695665*^9, 3.8723680459313855`*^9}},
 CellLabel->"In[31]:=",
 CellID->120437165,ExpressionUUID->"6fe098f4-a55a-417f-94b2-4636fc085eca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "9192631770"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Nu]\\), \\(Cs\
\\)]\\)\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"Hz\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "299458792"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"c\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"m \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "6.6260701500000015`*^-34"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"h\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"J s\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "1.6021766340000001`*^-19"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{
           "\"Seven defining constants of the SI\"", ",", "\"Symbol\""}], 
          "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Symbol\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"e\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"C\"\>"}]}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "1.380649`*^-23"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], "\[Rule]", "\<\"k\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"J \\!\\(\\*SuperscriptBox[\\(K\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "6.02214076`*^23"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(A\\)]\\)\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"\\!\\(\\*SuperscriptBox[\\(mol\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"Numerical value\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Numerical value\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
       "EntityProperty"], "\[Rule]", "683"}], ",", 
     RowBox[{
      TemplateBox[{"\"Symbol\"", 
        RowBox[{"EntityProperty", "[", 
          
          RowBox[{"\"Seven defining constants of the SI\"", ",", 
            "\"Symbol\""}], "]"}], 
        "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(cd\\)]\\)\"\>"}], ",", 
     RowBox[{
      TemplateBox[{"\"Unit\"", 
        RowBox[{"EntityProperty", "[", 
          RowBox[{"\"Seven defining constants of the SI\"", ",", "\"Unit\""}],
           "]"}], "\"EntityProperty[\\\"Seven defining constants of the \
SI\\\", \\\"Unit\\\"]\""},
       "EntityProperty"], 
      "\[Rule]", "\<\"lm \\!\\(\\*SuperscriptBox[\\(W\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.872368046146179*^9},
 CellLabel->"Out[31]=",
 CellID->546257847,ExpressionUUID->"bb49646f-0890-4d95-9c1a-2a479833cb39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "->", 
     RowBox[{"EntityValue", "[", 
      RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
   "&"}], "/@", 
  RowBox[{
  "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872368050055195*^9, 3.872368061505722*^9}},
 CellLabel->"In[32]:=",
 CellID->693282905,ExpressionUUID->"7d3d16fb-60f4-4ea0-9ebc-fa328b9b510e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"hyperfine transition frequency of Cs\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"hyperfine transition frequency of Cs\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"hyperfine \
transition frequency of Cs\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "9192631770"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Nu]\\), \
\\(Cs\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"Hz\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"speed of light in vacuum\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"speed of light in vacuum\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"speed of \
light in vacuum\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "299458792"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"c\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"m \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Planck constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Planck constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Planck \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.6260701500000015`*^-34"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"h\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"J s\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elementary charge\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"elementary charge\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"elementary \
charge\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.6021766340000001`*^-19"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"e\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"C\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boltzmann constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Boltzmann constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Boltzmann \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.380649`*^-23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"k\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"J \\!\\(\\*SuperscriptBox[\\(K\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Avogadro constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Avogadro constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Avogadro \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.02214076`*^23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(A\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SuperscriptBox[\\(mol\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"luminous efficacy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"luminous efficacy\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"luminous \
efficacy\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "683"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(cd\\)]\\)\"\>"}], 
      ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"lm \\!\\(\\*SuperscriptBox[\\(W\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.872368061887998*^9},
 CellLabel->"Out[32]=",
 CellID->443979552,ExpressionUUID->"ca893f19-72ea-4c69-83c5-eb5c4442e08a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "->", 
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
    "&"}], "/@", 
   RowBox[{
   "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723680735577927`*^9, 3.872368075423207*^9}},
 CellLabel->"In[34]:=",
 CellID->161431887,ExpressionUUID->"d0264394-3da0-4be0-bed9-fac97e80696d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"hyperfine transition frequency of Cs\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"hyperfine transition frequency of Cs\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"hyperfine \
transition frequency of Cs\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "9192631770"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Nu]\\), \
\\(Cs\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"Hz\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"speed of light in vacuum\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"speed of light in vacuum\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"speed of \
light in vacuum\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "299458792"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"c\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"m \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Planck constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Planck constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Planck \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.6260701500000015`*^-34"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"h\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"J s\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elementary charge\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"elementary charge\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"elementary \
charge\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.6021766340000001`*^-19"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"e\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"C\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boltzmann constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Boltzmann constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Boltzmann \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.380649`*^-23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"k\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"J \\!\\(\\*SuperscriptBox[\\(K\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Avogadro constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"Avogadro constant\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"Avogadro \
constant\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.02214076`*^23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(A\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SuperscriptBox[\\(mol\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"luminous efficacy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"Seven defining constants of the SI\"", ",", 
          "\"luminous efficacy\""}], "]"}], 
      "\"Entity[\\\"Seven defining constants of the SI\\\", \\\"luminous \
efficacy\\\"]\"", "\"Seven defining constants of the SI\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "683"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(cd\\)]\\)\"\>"}], 
      ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           
           RowBox[{"\"Seven defining constants of the SI\"", ",", 
             "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"Seven defining constants of the SI\\\", \
\\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"lm \\!\\(\\*SuperscriptBox[\\(W\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.872368075685869*^9},
 CellLabel->"Out[34]=",
 CellID->268517546,ExpressionUUID->"abb061bb-42e3-4182-bd71-17f3a4106b3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "->", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
     "&"}], "/@", 
    RowBox[{
    "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", "]"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8723680782900677`*^9, 3.872368080256589*^9}},
 CellLabel->"In[35]:=",
 CellID->246866256,ExpressionUUID->"8991561d-d448-4ca9-9a0f-98ee84a50326"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["Seven defining constants of the SI", 
         "hyperfine transition frequency of Cs"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         9192631770, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "Hz"|>, Entity[
        "Seven defining constants of the SI", "speed of light in vacuum"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         299458792, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "c", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       Entity["Seven defining constants of the SI", "Planck constant"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         6.6260701500000015`*^-34, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "h", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "J s"|>, 
       Entity["Seven defining constants of the SI", "elementary charge"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         1.6021766340000001`*^-19, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "e", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "C"|>, Entity[
        "Seven defining constants of the SI", "Boltzmann constant"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         1.380649*^-23, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "k", EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       Entity["Seven defining constants of the SI", "Avogadro constant"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 
         6.02214076*^23, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       Entity["Seven defining constants of the SI", "luminous efficacy"] -> <|
        EntityProperty[
          "Seven defining constants of the SI", "Numerical value"] -> 683, 
         EntityProperty["Seven defining constants of the SI", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(K\), \(cd\)]\)", 
         EntityProperty["Seven defining constants of the SI", "Unit"] -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 3, 
          DirectedInfinity[1], {All}]]], 6, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Seven defining constants of the SI"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 7], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 3, 
          DirectedInfinity[1], {All}]]], 6, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Seven defining constants of the SI"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 7], 
     "Path" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 7, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 2, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"speed of light in vacuum\""], 
                  Style[
                   RawBoxes["\"speed of light in vacuum\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "speed of light in vacuum"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299458792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "speed of light in vacuum"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Planck constant\""], 
                  Style[
                   RawBoxes["\"Planck constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "Planck constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["h", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Planck constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"elementary charge\""], 
                  Style[
                   RawBoxes["\"elementary charge\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "elementary charge"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "elementary charge"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["e", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "elementary charge"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Boltzmann constant\""], 
                  Style[
                   RawBoxes["\"Boltzmann constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "Boltzmann constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["k", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Boltzmann constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Avogadro constant\""], 
                  Style[
                   RawBoxes["\"Avogadro constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "Avogadro constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "Avogadro constant"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "Avogadro constant"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"luminous efficacy\""], 
                  Style[
                   RawBoxes["\"luminous efficacy\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Seven defining constants of the SI", 
                    "luminous efficacy"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", 
                   "luminous efficacy"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["683"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Numerical value"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(K\), \(cd\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Seven defining constants of the SI", "luminous efficacy"]], 
                 Key[
                  EntityProperty[
                  "Seven defining constants of the SI", "Unit"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{358.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-6) 
                    If[True, 7, 1], {1, 7 - -6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-6) 
                    If[False, 7, 1], {1, 7 - -6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 2, "\[Dash]", 7, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 2, "\[Dash]", 7, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    6 If[False, 7, 1], {1, 7 - 6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    6 If[True, 7, 1], {1, 7 - 6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{552., {259.1340332872234, 264.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{552., {259.1340332872234, 264.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.872368080560225*^9},
 CellLabel->"Out[35]=",
 CellID->108561569,ExpressionUUID->"3eb169fc-4ef9-4435-9397-227ba9a5692a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"BASEUNITS", "="}]], "Input",
 CellChangeTimes->{{3.872368122962867*^9, 3.872368126120536*^9}},
 CellID->219873406,ExpressionUUID->"59fe64ba-af63-46d8-b18f-97c43bcb8f73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityStore", "[", 
  RowBox[{"\"\<t\>\"", "->", 
   RowBox[{"<|", 
    RowBox[{"\"\<Entities\>\"", "->", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "->", 
          RowBox[{"EntityValue", "[", 
           RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
        "&"}], "/@", 
       RowBox[{
       "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
        "]"}]}], "]"}]}], "|>"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872368175623046*^9, 3.8723682192829943`*^9}},
 CellLabel->"In[38]:=",
 CellID->315990473,ExpressionUUID->"6c6391ee-d343-46f0-92dd-8a32282a2ff0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EntityStore",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"t\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"hyperfine transition frequency of Cs\"", ",", 
                    "\"speed of light in vacuum\"", ",", 
                    "\"Planck constant\"", ",", "\"\[Ellipsis]\"", ",", 
                    "\"Boltzmann constant\"", ",", "\"Avogadro constant\"", 
                    ",", "\"luminous efficacy\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical value\"", ",", "\"Symbol\"", ",", 
                    "\"Unit\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "3", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"t\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"hyperfine transition frequency of Cs\"", ",", 
                    "\"speed of light in vacuum\"", ",", 
                    "\"Planck constant\"", ",", "\"\[Ellipsis]\"", ",", 
                    "\"Boltzmann constant\"", ",", "\"Avogadro constant\"", 
                    ",", "\"luminous efficacy\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical value\"", ",", "\"Symbol\"", ",", 
                    "\"Unit\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "3", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Entity classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Property classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  EntityStore[<|
   "Types" -> <|
     "t" -> <|"Entities" -> <|
         "hyperfine transition frequency of Cs" -> <|
           "Numerical value" -> 9192631770, "Symbol" -> 
            "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", "Unit" -> 
            "Hz"|>, "speed of light in vacuum" -> <|
           "Numerical value" -> 299458792, "Symbol" -> "c", "Unit" -> 
            "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
          "Planck constant" -> <|
           "Numerical value" -> 6.6260701500000015`*^-34, "Symbol" -> "h", 
            "Unit" -> "J s"|>, 
          "elementary charge" -> <|
           "Numerical value" -> 1.6021766340000001`*^-19, "Symbol" -> "e", 
            "Unit" -> "C"|>, 
          "Boltzmann constant" -> <|
           "Numerical value" -> 1.380649*^-23, "Symbol" -> "k", "Unit" -> 
            "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
          "Avogadro constant" -> <|
           "Numerical value" -> 6.02214076*^23, "Symbol" -> 
            "\!\(\*SubscriptBox[\(N\), \(A\)]\)", "Unit" -> 
            "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
          "luminous efficacy" -> <|
           "Numerical value" -> 683, "Symbol" -> 
            "\!\(\*SubscriptBox[\(K\), \(cd\)]\)", "Unit" -> 
            "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        "Properties" -> <|
         "Numerical value" -> <||>, "Symbol" -> <||>, "Unit" -> <||>|>|>|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.872368178111947*^9, 3.872368219619434*^9}},
 CellLabel->"Out[38]=",
 CellID->485977437,ExpressionUUID->"bdd8466a-5211-4448-a242-b52e70556c35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"EntityStore", "[", 
   RowBox[{"\"\<t\>\"", "->", 
    RowBox[{"<|", 
     RowBox[{"\"\<Entities\>\"", "->", 
      RowBox[{"Association", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "->", 
           RowBox[{"EntityValue", "[", 
            RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}],
          "&"}], "/@", 
        RowBox[{
        "EntityList", "[", "\"\<Seven defining constants of the SI\>\"", 
         "]"}]}], "]"}]}], "|>"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87236822229895*^9, 3.8723682302130723`*^9}},
 CellLabel->"In[40]:=",
 CellID->291216298,ExpressionUUID->"394f91ee-0ed7-48a5-aa0f-8cb896d008be"],

Cell[BoxData[
 RowBox[{"{", "\<\"t\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.872368224949178*^9, 3.872368230544917*^9}},
 CellLabel->"Out[40]=",
 CellID->328080472,ExpressionUUID->"60d48780-0331-48d7-b698-b3d4eb22a0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<t\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8723682330352936`*^9, 3.8723682348260665`*^9}},
 CellLabel->"In[41]:=",
 CellID->299331284,ExpressionUUID->"0c0ee3c9-f083-4709-b862-351caaaeb2d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"hyperfine transition frequency of Cs\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"hyperfine transition frequency of Cs\""}], 
       "]"}], "\"Entity[\\\"t\\\", \\\"hyperfine transition frequency of Cs\\\
\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"speed of light in vacuum\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"speed of light in vacuum\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"speed of light in vacuum\\\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"Planck constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"Planck constant\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"Planck constant\\\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"elementary charge\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"elementary charge\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"elementary charge\\\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"Boltzmann constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"Boltzmann constant\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"Boltzmann constant\\\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"Avogadro constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"Avogadro constant\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"Avogadro constant\\\"]\"", "\"t\""},
    "Entity"], ",", 
   TemplateBox[{"\"luminous efficacy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"t\"", ",", "\"luminous efficacy\""}], "]"}], 
     "\"Entity[\\\"t\\\", \\\"luminous efficacy\\\"]\"", "\"t\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8723682351536007`*^9},
 CellLabel->"Out[41]=",
 CellID->36669345,ExpressionUUID->"be403cf8-da2c-44fc-a202-7e6e1bf1457a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "->", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
     "&"}], "/@", 
    RowBox[{"EntityList", "[", "\"\<t\>\"", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8723682440466905`*^9, 3.872368245174303*^9}},
 CellLabel->"In[42]:=",
 CellID->683339382,ExpressionUUID->"81275f58-a821-4bc2-ac39-5ba410e271e3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["t", "hyperfine transition frequency of Cs"] -> <|
        EntityProperty["t", "Numerical value"] -> 9192631770, 
         EntityProperty["t", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
         EntityProperty["t", "Unit"] -> "Hz"|>, 
       Entity["t", "speed of light in vacuum"] -> <|
        EntityProperty["t", "Numerical value"] -> 299458792, 
         EntityProperty["t", "Symbol"] -> "c", EntityProperty["t", "Unit"] -> 
         "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
       Entity["t", "Planck constant"] -> <|
        EntityProperty["t", "Numerical value"] -> 6.6260701500000015`*^-34, 
         EntityProperty["t", "Symbol"] -> "h", EntityProperty["t", "Unit"] -> 
         "J s"|>, 
       Entity["t", "elementary charge"] -> <|
        EntityProperty["t", "Numerical value"] -> 1.6021766340000001`*^-19, 
         EntityProperty["t", "Symbol"] -> "e", EntityProperty["t", "Unit"] -> 
         "C"|>, Entity["t", "Boltzmann constant"] -> <|
        EntityProperty["t", "Numerical value"] -> 1.380649*^-23, 
         EntityProperty["t", "Symbol"] -> "k", EntityProperty["t", "Unit"] -> 
         "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
       Entity["t", "Avogadro constant"] -> <|
        EntityProperty["t", "Numerical value"] -> 6.02214076*^23, 
         EntityProperty["t", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(N\), \(A\)]\)", EntityProperty["t", "Unit"] -> 
         "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
       Entity["t", "luminous efficacy"] -> <|
        EntityProperty["t", "Numerical value"] -> 683, 
         EntityProperty["t", "Symbol"] -> 
         "\!\(\*SubscriptBox[\(K\), \(cd\)]\)", EntityProperty["t", "Unit"] -> 
         "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 3, 
          DirectedInfinity[1], {All}]]], 6, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["t"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 7], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 3, 
          DirectedInfinity[1], {All}]]], 6, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["t"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 3], 7], 
     "Path" -> {}, "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 7, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"hyperfine transition frequency of Cs\""], 
                  Style[
                   RawBoxes["\"hyperfine transition frequency of Cs\""], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "hyperfine transition frequency of Cs"]]}, 
                   1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9192631770"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "\!\(\*SubscriptBox[\(\[CapitalDelta]\[Nu]\), \(Cs\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{313.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Hz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "hyperfine transition frequency of Cs"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{22.400000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"speed of light in vacuum\""], 
                  Style[
                   RawBoxes["\"speed of light in vacuum\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "speed of light in vacuum"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["299458792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "speed of light in vacuum"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Planck constant\""], 
                  Style[
                   RawBoxes["\"Planck constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "Planck constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000000000662607"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["h", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J s", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Planck constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"elementary charge\""], 
                  Style[
                   RawBoxes["\"elementary charge\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "elementary charge"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000160218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["e", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["C", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "elementary charge"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Boltzmann constant\""], 
                  Style[
                   RawBoxes["\"Boltzmann constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "Boltzmann constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000138065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["k", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Boltzmann constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"Avogadro constant\""], 
                  Style[
                   RawBoxes["\"Avogadro constant\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["t", "Avogadro constant"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Numerical value\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["602214000000000000000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Numerical value"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(N\), \(A\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Symbol"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["t", "Avogadro constant"]], 
                 Key[
                  EntityProperty["t", "Unit"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{347.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-6) 
                    If[True, 7, 1], {1, 7 - -6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-6) 
                    If[False, 7, 1], {1, 7 - -6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 6, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 6, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    6 If[False, 7, 1], {1, 7 - 6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    6 If[True, 7, 1], {1, 7 - 6 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{541., {259.1340332872234, 264.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{541., {259.1340332872234, 264.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8723682455835724`*^9},
 CellLabel->"Out[42]=",
 CellID->5361007,ExpressionUUID->"2db98fd3-b454-42cb-bbf2-539809dae79b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "->", 
        RowBox[{"EntityValue", "[", 
         RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
      "&"}], "/@", 
     RowBox[{"EntityList", "[", "\"\<t\>\"", "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723682908164425`*^9, 3.8723682929958296`*^9}},
 CellLabel->"In[43]:=",
 CellID->577796629,ExpressionUUID->"fd1c2525-1d3e-4aeb-b6ad-51bd6f916fe8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"hyperfine transition frequency of Cs\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"hyperfine transition frequency of Cs\""}], 
        "]"}], "\"Entity[\\\"t\\\", \\\"hyperfine transition frequency of \
Cs\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "9192631770"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\[Nu]\\), \
\\(Cs\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"Hz\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"speed of light in vacuum\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"speed of light in vacuum\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"speed of light in vacuum\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "299458792"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"c\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"m \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Planck constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"Planck constant\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"Planck constant\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.6260701500000015`*^-34"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"h\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"J s\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"elementary charge\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"elementary charge\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"elementary charge\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.6021766340000001`*^-19"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"e\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"C\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Boltzmann constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"Boltzmann constant\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"Boltzmann constant\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "1.380649`*^-23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], "\[Rule]", "\<\"k\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"J \\!\\(\\*SuperscriptBox[\\(K\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Avogadro constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"Avogadro constant\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"Avogadro constant\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "6.02214076`*^23"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(A\\)]\\)\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SuperscriptBox[\\(mol\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"luminous efficacy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"t\"", ",", "\"luminous efficacy\""}], "]"}], 
      "\"Entity[\\\"t\\\", \\\"luminous efficacy\\\"]\"", "\"t\""},
     "Entity"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"Numerical value\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Numerical value\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Numerical value\\\"]\""},
        "EntityProperty"], "\[Rule]", "683"}], ",", 
      RowBox[{
       TemplateBox[{"\"Symbol\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Symbol\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Symbol\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(K\\), \\(cd\\)]\\)\"\>"}], 
      ",", 
      RowBox[{
       TemplateBox[{"\"Unit\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"t\"", ",", "\"Unit\""}], "]"}], 
         "\"EntityProperty[\\\"t\\\", \\\"Unit\\\"]\""},
        "EntityProperty"], 
       "\[Rule]", "\<\"lm \\!\\(\\*SuperscriptBox[\\(W\\), \
\\(-1\\)]\\)\"\>"}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.872368293382897*^9},
 CellLabel->"Out[43]=",
 CellID->851966463,ExpressionUUID->"8f096556-662c-4e99-a1bb-db81f0e4df5b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityUnregister", "[", "\"\<t\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872368302582715*^9, 3.8723683056473646`*^9}},
 CellLabel->"In[44]:=",
 CellID->273763095,ExpressionUUID->"c0c5b5f1-e4f0-47eb-b918-641e5db43014"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Association", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "->", 
        RowBox[{"EntityValue", "[", 
         RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
      "&"}], "/@", 
     RowBox[{"EntityList", "[", "\"\<t\>\"", "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellLabel->"In[45]:=",
 CellID->69952282,ExpressionUUID->"c90e74a4-df1c-4bbb-b47c-35c3610ad680"],

Cell[BoxData[
 RowBox[{"Association", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#1", "\[Rule]", 
      RowBox[{"EntityValue", "[", 
       RowBox[{"#1", ",", "\<\"PropertyAssociation\"\>"}], "]"}]}], "&"}], 
    ")"}], "/@", 
   RowBox[{"EntityList", "[", "\<\"t\"\>", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.872368310145137*^9},
 CellLabel->"Out[45]=",
 CellID->32444764,ExpressionUUID->"a7a8f06b-b641-4a73-8841-8a8e894d29d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIBASEUNITS", "=", 
  RowBox[{"EntityStore", "[", 
   RowBox[{"\"\<SI Base Units\>\"", "->", 
    RowBox[{"<|", 
     RowBox[{"\"\<Entities\>\"", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<second\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<time\>\""}], ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<t\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<second\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<s\>\""}]}], 
          "|>"}]}], ",", 
        RowBox[{"\"\<meter\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<length\>\""}], 
           ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", 
            "\"\<l,x,r,etc.\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<meter\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<m\>\""}]}], " ", 
          "|>"}]}], ",", 
        RowBox[{"\"\<kilogram\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<mass\>\""}], ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<m\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<kilogram\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<kg\>\""}]}], 
          "|>"}]}], ",", 
        RowBox[{"\"\<ampere\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Base Quantity Name\>\"", "->", "\"\<electric current\>\""}], 
           ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<I,i\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<ampere\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<A\>\""}]}], 
          "|>"}]}], ",", 
        RowBox[{"\"\<kelvin\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Base Quantity Name\>\"", "->", 
            "\"\<thermodynamic temperature\>\""}], ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<T\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<kelvin\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<K\>\""}]}], 
          "|>"}]}], ",", 
        RowBox[{"\"\<mole\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Base Quantity Name\>\"", "->", 
            "\"\<amount of substance\>\""}], ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<n\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<mole\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<mol\>\""}]}], 
          "|>"}]}], ",", 
        RowBox[{"\"\<candela\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
           "\"\<Base Quantity Name\>\"", "->", "\"\<luminous intensity\>\""}],
            ",", 
           RowBox[{
           "\"\<Base Quantity Typical Symbol\>\"", "->", 
            "\"\<\!\(\*SubscriptBox[\(I\), \(\[Nu]\)]\)\>\""}], ",", 
           RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<candela\>\""}], ",", 
           RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<cd\>\""}]}], 
          "|>"}]}]}], "|>"}]}], "|>"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8723683391213903`*^9, 3.872368916099375*^9}, {
  3.8723690330830536`*^9, 3.8723690430450172`*^9}},
 CellLabel->"In[49]:=",
 CellID->103332365,ExpressionUUID->"ebaff3a7-7e97-4934-8ed2-598bae50bf0d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["EntityStore",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SI Base Units\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"second\"", ",", "\"meter\"", ",", "\"kilogram\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"kelvin\"", ",", "\"mole\"", 
                    ",", "\"candela\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\"Base Quantity Name\"", ",", 
                    RowBox[{"\"Base Qu\"", "\[Ellipsis]", "\" Symbol\""}], 
                    ",", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"\""}], ",", 
                    "\"Base Unit Symbol\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "4", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"SI Base Units\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"second\"", ",", "\"meter\"", ",", "\"kilogram\"", ",", 
                    "\"\[Ellipsis]\"", ",", "\"kelvin\"", ",", "\"mole\"", 
                    ",", "\"candela\""}], "}"}], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "7", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Properties: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\"Base Quantity Name\"", ",", 
                    RowBox[{"\"Base Qu\"", "\[Ellipsis]", "\" Symbol\""}], 
                    ",", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"\""}], ",", 
                    "\"Base Unit Symbol\""}], "}"}], Short], "SummaryItem"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\" (\"", "4", "\")\""}, "RowDefault"], 
                  "SummaryItemAnnotation"]}]}, {
               RowBox[{
                 TagBox["\"Entity classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Property classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"none\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  EntityStore[<|
   "Types" -> <|
     "SI Base Units" -> <|
       "Entities" -> <|
         "second" -> <|
           "Base Quantity Name" -> "time", "Base Quantity Typical Symbol" -> 
            "t", "Base Unit Name" -> "second", "Base Unit Symbol" -> "s"|>, 
          "meter" -> <|
           "Base Quantity Name" -> "length", "Base Quantity Typical Symbol" -> 
            "l,x,r,etc.", "Base Unit Name" -> "meter", "Base Unit Symbol" -> 
            "m"|>, "kilogram" -> <|
           "Base Quantity Name" -> "mass", "Base Quantity Typical Symbol" -> 
            "m", "Base Unit Name" -> "kilogram", "Base Unit Symbol" -> "kg"|>,
           "ampere" -> <|
           "Base Quantity Name" -> "electric current", 
            "Base Quantity Typical Symbol" -> "I,i", "Base Unit Name" -> 
            "ampere", "Base Unit Symbol" -> "A"|>, 
          "kelvin" -> <|
           "Base Quantity Name" -> "thermodynamic temperature", 
            "Base Quantity Typical Symbol" -> "T", "Base Unit Name" -> 
            "kelvin", "Base Unit Symbol" -> "K"|>, 
          "mole" -> <|
           "Base Quantity Name" -> "amount of substance", 
            "Base Quantity Typical Symbol" -> "n", "Base Unit Name" -> "mole",
             "Base Unit Symbol" -> "mol"|>, 
          "candela" -> <|
           "Base Quantity Name" -> "luminous intensity", 
            "Base Quantity Typical Symbol" -> 
            "\!\(\*SubscriptBox[\(I\), \(\[Nu]\)]\)", "Base Unit Name" -> 
            "candela", "Base Unit Symbol" -> "cd"|>|>, 
        "Properties" -> <|
         "Base Quantity Name" -> <||>, "Base Quantity Typical Symbol" -> <||>,
           "Base Unit Name" -> <||>, "Base Unit Symbol" -> <||>|>|>|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.872368916669338*^9, 3.872368968405659*^9, 
  3.8723690434487696`*^9},
 CellLabel->"Out[49]=",
 CellID->330688880,ExpressionUUID->"52ff5739-f607-4e72-8880-0fdc70a70ec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"SIBASEUNITS", "=", 
   RowBox[{"EntityStore", "[", 
    RowBox[{"\"\<SI Base Units\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Entities\>\"", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<second\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<time\>\""}], ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<t\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<second\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<s\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<meter\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<length\>\""}], 
            ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", 
             "\"\<l,x,r,etc.\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<meter\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<m\>\""}]}], " ", 
           "|>"}]}], ",", 
         RowBox[{"\"\<kilogram\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Base Quantity Name\>\"", "->", "\"\<mass\>\""}], ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<m\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<kilogram\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<kg\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<ampere\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Base Quantity Name\>\"", "->", "\"\<electric current\>\""}], 
            ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<I,i\>\""}], 
            ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<ampere\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<A\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<kelvin\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Base Quantity Name\>\"", "->", 
             "\"\<thermodynamic temperature\>\""}], ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<T\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<kelvin\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<K\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<mole\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Base Quantity Name\>\"", "->", 
             "\"\<amount of substance\>\""}], ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", "\"\<n\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<mole\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<mol\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<candela\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Base Quantity Name\>\"", "->", 
             "\"\<luminous intensity\>\""}], ",", 
            RowBox[{
            "\"\<Base Quantity Typical Symbol\>\"", "->", 
             "\"\<\!\(\*SubscriptBox[\(I\), \(\[Nu]\)]\)\>\""}], ",", 
            RowBox[{"\"\<Base Unit Name\>\"", "->", "\"\<candela\>\""}], ",", 
            RowBox[{"\"\<Base Unit Symbol\>\"", "->", "\"\<cd\>\""}]}], 
           "|>"}]}]}], "|>"}]}], "|>"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8723690597545843`*^9, 3.8723690621998377`*^9}},
 CellLabel->"In[50]:=",
 CellID->1619720,ExpressionUUID->"f066d988-5157-433e-a1c2-982dc257c7e8"],

Cell[BoxData[
 RowBox[{"{", "\<\"SI Base Units\"\>", "}"}]], "Output",
 CellChangeTimes->{3.8723690624892387`*^9},
 CellLabel->"Out[50]=",
 CellID->263012374,ExpressionUUID->"a78dd6b9-ed0b-4cd2-9d9b-ffb8af7ef2ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "->", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
     "&"}], "/@", 
    RowBox[{"EntityList", "[", "\"\<SI Base Units\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8723690762726607`*^9, 3.872369078330331*^9}},
 CellLabel->"In[51]:=",
 CellID->432225662,ExpressionUUID->"a1e24702-8b66-48f4-a8df-18d199d171c6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["SI Base Units", "second"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> "time", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "t", EntityProperty["SI Base Units", "Base Unit Name"] -> "second", 
         EntityProperty["SI Base Units", "Base Unit Symbol"] -> "s"|>, 
       Entity["SI Base Units", "meter"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> "length", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "l,x,r,etc.", EntityProperty["SI Base Units", "Base Unit Name"] -> 
         "meter", EntityProperty["SI Base Units", "Base Unit Symbol"] -> 
         "m"|>, Entity["SI Base Units", "kilogram"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> "mass", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "m", EntityProperty["SI Base Units", "Base Unit Name"] -> "kilogram",
          EntityProperty["SI Base Units", "Base Unit Symbol"] -> "kg"|>, 
       Entity["SI Base Units", "ampere"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> 
         "electric current", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "I,i", EntityProperty["SI Base Units", "Base Unit Name"] -> "ampere",
          EntityProperty["SI Base Units", "Base Unit Symbol"] -> "A"|>, 
       Entity["SI Base Units", "kelvin"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> 
         "thermodynamic temperature", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "T", EntityProperty["SI Base Units", "Base Unit Name"] -> "kelvin", 
         EntityProperty["SI Base Units", "Base Unit Symbol"] -> "K"|>, 
       Entity["SI Base Units", "mole"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> 
         "amount of substance", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "n", EntityProperty["SI Base Units", "Base Unit Name"] -> "mole", 
         EntityProperty["SI Base Units", "Base Unit Symbol"] -> "mol"|>, 
       Entity["SI Base Units", "candela"] -> <|
        EntityProperty["SI Base Units", "Base Quantity Name"] -> 
         "luminous intensity", 
         EntityProperty["SI Base Units", "Base Quantity Typical Symbol"] -> 
         "\!\(\*SubscriptBox[\(I\), \(\[Nu]\)]\)", 
         EntityProperty["SI Base Units", "Base Unit Name"] -> "candela", 
         EntityProperty["SI Base Units", "Base Unit Symbol"] -> "cd"|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`AtomShape[291.20000000000005`]]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["SI Base Units"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, 
        TypeSystem`Atom[String], 4], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`AtomShape[291.20000000000005`]]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["SI Base Units"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, 
        TypeSystem`Atom[String], 4], 7], "Path" -> {}, "DisplayedRowCount" -> 
     5, "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 3, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"kilogram\""], 
                  Style[
                   RawBoxes["\"kilogram\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["SI Base Units", "kilogram"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["mass", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Typical Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["kilogram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["kg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kilogram"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"ampere\""], 
                  Style[
                   RawBoxes["\"ampere\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["SI Base Units", "ampere"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["electric current", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Typical Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["I,i", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ampere", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "ampere"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"kelvin\""], 
                  Style[
                   RawBoxes["\"kelvin\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["SI Base Units", "kelvin"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["thermodynamic temperature", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Typical Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["kelvin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["K", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "kelvin"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"mole\""], 
                  Style[
                   RawBoxes["\"mole\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["SI Base Units", "mole"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amount of substance", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Typical Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["mole", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["mol", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "mole"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"candela\""], 
                  Style[
                   RawBoxes["\"candela\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity["SI Base Units", "candela"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["luminous intensity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Quantity Name"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Quantity Typical Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(I\), \(\[Nu]\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty[
                  "SI Base Units", "Base Quantity Typical Symbol"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["candela", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Name"]]}, "Item",
                 False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Base Unit Symbol\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["cd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity["SI Base Units", "candela"]], 
                 Key[
                  EntityProperty["SI Base Units", "Base Unit Symbol"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[True, 7, 1], {1, 7 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[False, 7, 1], {1, 7 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 3, "\[Dash]", 7, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 3, "\[Dash]", 7, " of ", 
                    Style[7, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 7, 1], {1, 7 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 7, 1], {1, 7 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{485., {286.1340332872234, 291.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{485., {286.1340332872234, 291.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8723690787028475`*^9},
 CellLabel->"Out[51]=",
 CellID->53084167,ExpressionUUID->"35845c4c-813c-495e-88e9-4ef48ae98efd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"BASEQUANTITIESANDDIMENSIONSUSEDINTHESI", "=", 
   RowBox[{"EntityStore", "[", 
    RowBox[{"\"\<Base quantities and dimensions used in the SI\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Entities\>\"", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<time\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", "\"\<t\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<T\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<length\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", 
             "\"\<l,x,r,etc.\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<L\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<mass\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", "\"\<m\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<M\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<electric current\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", "\"\<I,i\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<I\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<thermodynamic temperature\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", "\"\<T\>\""}], ",", 
            RowBox[{
            "\"\<Symbol for dimension\>\"", "->", 
             "\"\<\[CapitalTheta]\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<amount of substance\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", "\"\<n\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<N\>\""}]}], 
           "|>"}]}], ",", 
         RowBox[{"\"\<luminous intensity\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Typical symbol for quantity\>\"", "->", 
             "\"\<\!\(\*SubscriptBox[\(I\), \(v\)]\)\>\""}], ",", 
            RowBox[{"\"\<Symbol for dimension\>\"", "->", "\"\<J\>\""}]}], 
           "|>"}]}]}], "|>"}]}], "|>"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872401093807642*^9, 3.872401377186323*^9}, {
  3.8724017323544407`*^9, 3.872401775944214*^9}},
 CellLabel->"In[56]:=",
 CellID->61538602,ExpressionUUID->"4cc837a7-e4b0-44bb-872f-cae83d176491"],

Cell[BoxData[
 RowBox[{"{", "\<\"Base quantities and dimensions used in the SI\"\>", 
  "}"}]], "Output",
 CellChangeTimes->{3.872401377572484*^9, 3.8724017761968584`*^9},
 CellLabel->"Out[56]=",
 CellID->9910094,ExpressionUUID->"7d443554-7639-4fe6-a417-4ab909cfef6f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityUnregister", "[", 
  "\"\<Base quantities and dimensions used in the SI\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872401738524789*^9, 3.8724017475686803`*^9}},
 CellLabel->"In[55]:=",
 CellID->101701112,ExpressionUUID->"884ae7ef-b82c-4f1c-a269-08fa7ddef58e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{
  "\"\<Base quantities and dimensions used in the SI\>\"", ",", " ", 
   "\"\<time\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8724016935482783`*^9, 3.872401707518301*^9}, {
  3.8724017830567403`*^9, 3.8724017858389273`*^9}},
 CellLabel->"In[58]:=",
 CellID->626042579,ExpressionUUID->"fdad55eb-76dc-4c5b-acb0-343c5e08cf1d"],

Cell[BoxData[
 TemplateBox[{"\"time\"", 
   RowBox[{"Entity", "[", 
     RowBox[{
      "\"Base quantities and dimensions used in the SI\"", ",", "\"time\""}], 
     "]"}], "\"Entity[\\\"Base quantities and dimensions used in the SI\\\", \
\\\"time\\\"]\"", "\"Base quantities and dimensions used in the SI\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.872401707820922*^9, {3.872401778977997*^9, 3.8724017861289115`*^9}},
 CellLabel->"Out[58]=",
 CellID->106667148,ExpressionUUID->"02e150b2-14c0-47e1-a5ec-42356073e288"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Entity", "[", 
       RowBox[{
       "\"\<Base quantities and dimensions used in the SI\>\"", ",", " ", 
        "\"\<time\>\""}], "]"}], "[", "#", "]"}], "}"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{
     "\"\<Base quantities and dimensions used in the SI\>\"", ",", " ", 
      "\"\<time\>\""}], "]"}], "[", "\"\<Properties\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872401791734893*^9, 3.8724018234487743`*^9}},
 CellLabel->"In[60]:=",
 CellID->617641310,ExpressionUUID->"721a45c5-2b1a-4149-b619-e088ace1e53a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Symbol for dimension\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"Base quantities and dimensions used in the SI\"", ",", 
          "\"Symbol for dimension\""}], "]"}], 
      "\"EntityProperty[\\\"Base quantities and dimensions used in the \
SI\\\", \\\"Symbol for dimension\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"T\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"Typical symbol for quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{
         "\"Base quantities and dimensions used in the SI\"", ",", 
          "\"Typical symbol for quantity\""}], "]"}], 
      "\"EntityProperty[\\\"Base quantities and dimensions used in the \
SI\\\", \\\"Typical symbol for quantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"t\"\>", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.872401811599415*^9, 3.8724018264130325`*^9}},
 CellLabel->"Out[60]=",
 CellID->114278603,ExpressionUUID->"2da350f4-6977-4d05-b49c-b9ab927a2465"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PersistResourceFunction", "[", 
   RowBox[{"{", "\"\<PhysicalQuantityData\>\"", "}"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8724018327832556`*^9, 3.872401848906338*^9}},
 CellLabel->"In[61]:=",
 CellID->110249611,ExpressionUUID->"3dac3889-3a1c-4b32-8c38-00bf8b2c1b9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", "\"\<Time\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8724018504952774`*^9, 3.872401862272193*^9}},
 CellLabel->"In[63]:=",
 CellID->890228127,ExpressionUUID->"05cee284-46ac-49b9-8903-a856ef4fc6f4"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PhysicalQuantityData", "ResourceFunctionLabel"], 
                " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {2., 9.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {2., 9.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  AdjustmentBox[
                   
                   StyleBox["\<\"[\[FilledSmallSquare]]\"\>", 
                    "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PhysicalQuantityData", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.0\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/687f105c-d3b3-44f2-86d5-a43d58aab913/"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PhysicalQuantityData"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PhysicalQuantityData"],
   Selectable->False], "[", "\<\"Time\"\>", "]"}]], "Output",
 CellChangeTimes->{{3.872401858536996*^9, 3.8724018625404053`*^9}},
 CellLabel->"Out[63]=",
 CellID->23952861,ExpressionUUID->"2901a2c8-b98f-4827-a5d0-35aeba27538b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Time\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.872401873445327*^9, 3.872401879711788*^9}},
 CellLabel->"In[64]:=",
 CellID->54834298,ExpressionUUID->"82d27b2a-55a3-4b00-9b6f-1b6d99e0d4b9"],

Cell[BoxData[
 TemplateBox[{"\"time\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
   "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
   "\"physical quantity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.872401880456231*^9},
 CellLabel->"Out[64]=",
 CellID->161424101,ExpressionUUID->"9889e9c5-ee00-44a3-b121-01340b5c13cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Time\>\""}], "]"}], "[", 
  "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872401873445327*^9, 3.8724018915613623`*^9}},
 CellLabel->"In[65]:=",
 CellID->564417836,ExpressionUUID->"53535ee3-9792-4003-9391-02b10af1865a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"SI base quantities\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
       "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
       "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"SI base quantities\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
       "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
       "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"characteristic time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicTime\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicTime\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"data transfer time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DataTransferTime\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DataTransferTime\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"downtime\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Downtime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Downtime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"elapsed real time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElapsedRealTime\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElapsedRealTime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"lag\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Lag\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Lag\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"latency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Latency\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Latency\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"moving time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MovingTime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MovingTime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"ping time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PingTime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PingTime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Poincar\[EAcute] recurrence time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PoincareRecurrenceTime\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PoincareRecurrenceTime\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"relaxation time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RelaxationTime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelaxationTime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"reverberation time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ReverberationTime\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReverberationTime\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"round\[Hyphen]trip delay\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RoundTripDelay\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoundTripDelay\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"time difference\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeDifference\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeDifference\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"time shift\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeShift\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeShift\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"uptime\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"working time\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
        "\"physical quantity\""},
       "Entity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"time\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"t\"", "\"Time\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/I-1978\"\>", "\[Rule]", "\<\"1-6.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-1:1992\"\>", "\[Rule]", "\<\"1-7\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2006\"\>", "\[Rule]", "\<\"3-7\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2019\"\>", "\[Rule]", "\<\"3-9\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q2199864\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"t\"\>", "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"t\"\>", 
         ",", "\<\"\[CapitalDelta]\[InvisibleSpace]t\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"t\"\>", ",", "\<\"\[CapitalDelta]\[InvisibleSpace]t\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724018943335624`*^9},
 CellLabel->"Out[65]=",
 CellID->495546465,ExpressionUUID->"bc5f59fd-bfb6-416f-9a49-6d207bab4290"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "->", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"#", ",", "\"\<PropertyAssociation\>\""}], "]"}]}], ")"}], 
     "&"}], "/@", 
    RowBox[{
    "EntityList", "[", 
     "\"\<Base quantities and dimensions used in the SI\>\"", "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872401393723769*^9, 3.872401402839018*^9}},
 CellLabel->"In[53]:=",
 CellID->529148596,ExpressionUUID->"7adea5cf-aaa0-4bde-92fa-00a27a1b72db"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Entity["Base quantities and dimensions used in the SI", "time"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "T", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "t"|>, 
       Entity["Base quantities and dimensions used in the SI", "meter"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "L", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "l,x,r,etc."|>, 
       Entity["Base quantities and dimensions used in the SI", 
         "kilogram"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "M", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "m"|>, 
       Entity["Base quantities and dimensions used in the SI", "ampere"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "I", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "I,i"|>, 
       Entity["Base quantities and dimensions used in the SI", "kelvin"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "\[CapitalTheta]", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "T"|>, 
       Entity["Base quantities and dimensions used in the SI", "mole"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "N", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> "n"|>, 
       Entity["Base quantities and dimensions used in the SI", "candela"] -> <|
        EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Symbol for dimension"] -> "J", 
         EntityProperty[
          "Base quantities and dimensions used in the SI", 
           "Typical symbol for quantity"] -> 
         "\!\(\*SubscriptBox[\(I\), \(v\)]\)"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`AtomShape[291.20000000000005`]]], 2, 
          DirectedInfinity[1], {All}]]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Base quantities and dimensions used in the SI"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, 
        TypeSystem`Atom[String], 2], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[90], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`AtomShape[291.20000000000005`]]], 2, 
          DirectedInfinity[1], {All}]]], 7, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        Entity["Base quantities and dimensions used in the SI"]], 
       TypeSystem`Assoc[TypeSystem`AnyType, 
        TypeSystem`Atom[String], 2], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"time\""], 
                  Style[
                   RawBoxes["\"time\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "time"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "time"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "time"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "time"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "time"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["t", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "time"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"meter\""], 
                  Style[
                   RawBoxes["\"meter\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "meter"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "meter"]]},
                 "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "meter"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["L", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "meter"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "meter"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["l,x,r,etc.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "meter"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"kilogram\""], 
                  Style[
                   RawBoxes["\"kilogram\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "kilogram"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kilogram"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kilogram"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kilogram"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kilogram"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["m", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kilogram"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"ampere\""], 
                  Style[
                   RawBoxes["\"ampere\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "ampere"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "ampere"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "ampere"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["I", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "ampere"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "ampere"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["I,i", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "ampere"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"kelvin\""], 
                  Style[
                   RawBoxes["\"kelvin\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "kelvin"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "kelvin"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\[CapitalTheta]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["T", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "kelvin"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"mole\""], 
                  Style[
                   RawBoxes["\"mole\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "mole"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "mole"]]}, 
                "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "mole"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "mole"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "mole"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["n", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", "mole"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["\"candela\""], 
                  Style[
                   RawBoxes["\"candela\""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    Entity[
                    "Base quantities and dimensions used in the SI", 
                    "candela"]]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "candela"]]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Symbol for dimension\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "candela"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["J", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "candela"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Symbol for dimension"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Typical symbol for quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "candela"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Entity[
                  "Base quantities and dimensions used in the SI", 
                   "candela"]], 
                 Key[
                  EntityProperty[
                  "Base quantities and dimensions used in the SI", 
                   "Typical symbol for quantity"]]}, "Item", False], "Mouse"],
               ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{467., {194.63403328722342`, 200.36596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{467., {194.63403328722342`, 200.36596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8724014032322235`*^9},
 CellLabel->"Out[53]=",
 CellID->194140075,ExpressionUUID->"a5cc5549-8390-4e94-b4c9-2c18f31ce015"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EntityRegister", "[", 
  RowBox[{"THE22SIUNITSWITHSPECIALNAMESANDSYMBOLS", "=", 
   RowBox[{"EntityStore", "[", 
    RowBox[{"\"\<SI units with special names and symbols\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{"\"\<Entities\>\"", "->", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<radian\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<steradian\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<solid angle\>\""}],
             ",", 
            RowBox[{
            "\"\<Special name of unit\>\"", "->", "\"\<steradian\>\""}], ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<hertz\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<frequency\>\""}], 
            ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<hertz\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<newton\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<force\>\""}], ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<netwon\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<pascal\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Derived quantity\>\"", "->", "\"\<pressure, stress\>\""}], 
            ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<pascal\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<joule\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Derived quantity\>\"", "->", 
             "\"\<energy, work, amount of heat\>\""}], ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<joule\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<N m\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<watt\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Derived quantity\>\"", "->", "\"\<power, radiant flux\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<watt\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<J/s\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<coulomb\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Derived quantity\>\"", "->", "\"\<electric charge\>\""}], 
            ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<coulomb\>\""}],
             ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<C=A s\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<volt\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "\"\<Derived quantity\>\"", "->", 
             "\"\<electric potential difference\>\""}], ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<volt\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)\>\
\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<W/A\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<farad\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<capacitance\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<ohm\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<siemens\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<weber\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<tesla\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<henry\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<degree Celsius\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<lumen\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<lux\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<becquerel\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<gray\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<sievert\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}], ",", 
         RowBox[{"\"\<katal\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Derived quantity\>\"", "->", "\"\<plane angle\>\""}],
             ",", 
            RowBox[{"\"\<Special name of unit\>\"", "->", "\"\<radian\>\""}], 
            ",", 
            RowBox[{
            "\"\<Unit expresses in terms of base units\>\"", "->", 
             "\"\<rad=m/m\>\""}], ",", 
            RowBox[{
            "\"\<Unit expressed in terms of other SI units\>\"", "->", 
             "\"\<\>\""}]}], "|>"}]}]}], "|>"}]}], "|>"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8724014515929255`*^9, 3.8724016789212217`*^9}, {
  3.8724020075744677`*^9, 3.8724024543290515`*^9}},
 CellID->86422327,ExpressionUUID->"879b285e-841e-4a82-9fb1-558fcdc6877a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, 
  WindowSize -> {583.8, 494.4}, 
  WindowMargins -> {{278.4, Automatic}, {Automatic, 55.199999999999996`}}, 
  Visible -> False, FrontEndVersion -> 
  "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Abstract"->{
  Cell[1051, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "AuthorName"->{
  Cell[807, 27, 241, 4, 29, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "ExampleCodeText"->{
  Cell[1485, 47, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1639, 53, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1881, 60, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]},
 "Examples"->{
  Cell[580, 22, 224, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "ExampleTopicSentence"->{
  Cell[1352, 43, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "SectionHeader"->{
  Cell[1220, 39, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "TemplateCell"->{
  Cell[1051, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "Your Essay Title"->{
  Cell[580, 22, 224, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Abstract", 806302, 16283},
 {"AuthorName", 806482, 16287},
 {"ExampleCodeText", 806648, 16291},
 {"ExampleInput", 806818, 16295},
 {"ExampleOutput", 806984, 16299},
 {"Examples", 807147, 16303},
 {"ExampleTopicSentence", 807337, 16307},
 {"SectionHeader", 807510, 16311},
 {"TemplateCell", 807678, 16315},
 {"Your Essay Title", 807864, 16319}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[807, 27, 241, 4, 29, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1051, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1220, 39, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1352, 43, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1485, 47, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1639, 53, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1881, 60, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2138, 68, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2236, 71, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]],
Cell[CellGroupData[{
Cell[2368, 77, 185, 2, 67, "Section",ExpressionUUID->"31dd4676-7067-497c-a2fe-ce7513286fc5",
 CellID->618139354],
Cell[CellGroupData[{
Cell[2578, 83, 175, 2, 54, "Subsection",ExpressionUUID->"7d0d1d97-8b14-4abb-ae83-a07a4bcb11ee",
 CellID->500003892],
Cell[CellGroupData[{
Cell[2778, 89, 264, 5, 28, "Input",ExpressionUUID->"60200538-0f08-4bd8-9294-7a616b83d874",
 CellID->74599759],
Cell[3045, 96, 231, 5, 38, "Output",ExpressionUUID->"979e6292-1255-4856-bbd3-054d3e97fb17",
 CellID->54936070]
}, Open  ]],
Cell[CellGroupData[{
Cell[3313, 106, 230, 5, 34, "Input",ExpressionUUID->"680d3d37-59fa-49e4-ab39-2832748966d4",
 CellID->952160149],
Cell[3546, 113, 232, 5, 38, "Output",ExpressionUUID->"b7acc6d6-6d59-4dc7-a2d2-5f05c24e4635",
 CellID->8055649]
}, Open  ]],
Cell[3793, 121, 218, 4, 37, "Input",ExpressionUUID->"07fe59fe-c731-4218-b758-6570c83aab3d",
 CellID->574832309],
Cell[4014, 127, 340, 8, 35, "Input",ExpressionUUID->"03668f5d-8a8a-49bc-9114-9216183f3a11",
 CellID->361081422],
Cell[CellGroupData[{
Cell[4379, 139, 268, 5, 28, "Input",ExpressionUUID->"a7a3e479-ab72-4cad-b391-c6f465d12510",
 CellID->253685996],
Cell[4650, 146, 238, 5, 41, "Output",ExpressionUUID->"e35c4ced-d4fe-4dca-b91a-1b8408ad7f7c",
 CellID->478299008]
}, Open  ]],
Cell[CellGroupData[{
Cell[4925, 156, 371, 9, 28, "Input",ExpressionUUID->"f6e8c46c-1411-40e1-a0e6-39237c058dd2",
 CellID->527925147],
Cell[5299, 167, 435, 10, 41, "Output",ExpressionUUID->"4dd092be-d87e-497f-909b-72889d35a84c",
 CellID->257448003]
}, Open  ]],
Cell[CellGroupData[{
Cell[5771, 182, 271, 5, 28, "Input",ExpressionUUID->"567c7a11-08a2-422a-9166-fc11cab65e80",
 CellID->679426655],
Cell[6045, 189, 337, 8, 36, "Output",ExpressionUUID->"2dd127ae-2c53-4042-bded-0ddf3207de2b",
 CellID->498405493]
}, Open  ]],
Cell[6397, 200, 367, 7, 34, "Input",ExpressionUUID->"7274658e-0b25-4d7b-9d5c-6d066a12a973",
 CellID->627458477],
Cell[CellGroupData[{
Cell[6789, 211, 373, 9, 35, "Input",ExpressionUUID->"fc576752-a4ee-4cf9-a7fb-ff8f6e67bd4b",
 CellID->69112832],
Cell[7165, 222, 283, 7, 41, "Output",ExpressionUUID->"e7dbfcfd-8073-4973-b4ba-b22c3aa9dbee",
 CellID->3171084]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7497, 235, 178, 2, 54, "Subsection",ExpressionUUID->"5286d508-b222-467f-bd29-2cfc417d3d20",
 CellID->476224677],
Cell[CellGroupData[{
Cell[7700, 241, 364, 9, 28, "Input",ExpressionUUID->"d0ce1513-8159-4bcb-bb86-0dd25cad644d",
 CellID->382791280],
Cell[8067, 252, 10242, 206, 65, "Output",ExpressionUUID->"9ee737f1-a1e9-424e-b9f3-d6015a269d99",
 CellID->44689408]
}, Open  ]],
Cell[18324, 461, 203, 2, 35, "Text",ExpressionUUID->"26c44090-08cf-4af6-a8dd-aaad8ce1fb71",
 CellID->644611262],
Cell[CellGroupData[{
Cell[18552, 467, 241, 4, 28, "Input",ExpressionUUID->"df4d4173-e815-4668-a5d7-0ca2a0600719",
 CellID->623958628],
Cell[18796, 473, 225, 5, 32, "Output",ExpressionUUID->"aea719e1-41b5-4aac-9751-78689df627ff",
 CellID->361353066]
}, Open  ]],
Cell[CellGroupData[{
Cell[19058, 483, 238, 4, 28, "Input",ExpressionUUID->"ea057629-2f3a-47b3-90c9-66867fb3f75f",
 CellID->276714278],
Cell[19299, 489, 266, 6, 32, "Output",ExpressionUUID->"a8deb298-ac33-48a9-ae43-5e3fa77fe59b",
 CellID->90212660]
}, Open  ]],
Cell[19580, 498, 190, 2, 35, "Text",ExpressionUUID->"5b5d9796-e9ee-4f93-b28f-638c2b62df11",
 CellID->172589328],
Cell[CellGroupData[{
Cell[19795, 504, 234, 4, 28, "Input",ExpressionUUID->"cfe751c9-5e8a-4b80-8310-c6735a3c1e74",
 CellID->211556368],
Cell[20032, 510, 427, 11, 41, "Output",ExpressionUUID->"d41cbdf4-cf52-4355-a35d-5b5626422905",
 CellID->9919427]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20508, 527, 188, 2, 54, "Subsection",ExpressionUUID->"03637794-fe7f-4bc3-85ab-9addc8ce5bec",
 CellID->622970149],
Cell[20699, 531, 203, 2, 35, "Text",ExpressionUUID->"eaa56d42-78e0-4faf-9716-86326b2887e9",
 CellID->621709628],
Cell[CellGroupData[{
Cell[20927, 537, 1286, 27, 43, "Input",ExpressionUUID->"48c8ffae-7ca3-4667-9ba5-bd38d572c160",
 CellID->140165564],
Cell[22216, 566, 513, 13, 36, "Output",ExpressionUUID->"7223ec9c-6afd-4d5f-9916-5c3ccf317e4d",
 CellID->610897501]
}, Open  ]],
Cell[22744, 582, 258, 3, 35, "Text",ExpressionUUID->"09215981-953a-4473-836f-82ef75621869",
 CellID->285830972],
Cell[CellGroupData[{
Cell[23027, 589, 416, 9, 37, "Input",ExpressionUUID->"3d852423-f92e-4537-b06b-f0e9efdfca0c",
 CellID->37267413],
Cell[23446, 600, 415, 12, 55, "Output",ExpressionUUID->"995e36b1-317b-434d-b503-44413798330d",
 CellID->261222596]
}, Open  ]],
Cell[CellGroupData[{
Cell[23898, 617, 416, 9, 37, "Input",ExpressionUUID->"4df39d63-36b2-46de-aa92-1da6e50eb753",
 CellID->470520333],
Cell[24317, 628, 211, 3, 32, "Output",ExpressionUUID->"7584098f-4efd-40fd-8b0a-3e2297fc8e97",
 CellID->315421970]
}, Open  ]],
Cell[24543, 634, 202, 2, 35, "Text",ExpressionUUID->"960ca1e9-8405-4fbf-bac0-112e8288d9a8",
 CellID->357014455],
Cell[24748, 638, 967, 23, 66, "Input",ExpressionUUID->"170d1d9a-93c2-42fd-8fe0-ae3565b8e2dd",
 CellID->455870562],
Cell[25718, 663, 196, 2, 35, "Text",ExpressionUUID->"088bd101-c04c-4efb-ac28-f14a0cc991ec",
 CellID->88268434],
Cell[CellGroupData[{
Cell[25939, 669, 451, 10, 37, "Input",ExpressionUUID->"a6eca181-b898-4e1a-ad2f-8a92a53a35d0",
 CellID->50722490],
Cell[26393, 681, 251, 5, 42, "Output",ExpressionUUID->"b8d1dd5b-200f-45bc-bfd7-7b03d174bd5d",
 CellID->358940759]
}, Open  ]],
Cell[CellGroupData[{
Cell[26681, 691, 647, 16, 37, "Input",ExpressionUUID->"13e2bfda-710e-4697-b828-daf8ad4a12d3",
 CellID->393897120],
Cell[27331, 709, 1134, 25, 71, "Output",ExpressionUUID->"c3c1a53b-6b7d-472b-9a90-9f6ee7f86190",
 CellID->96213322]
}, Open  ]],
Cell[28480, 737, 189, 2, 35, "Text",ExpressionUUID->"b6686037-2f5f-42ff-95ee-e3ec760f5500",
 CellID->326970798],
Cell[28672, 741, 538, 13, 48, "Input",ExpressionUUID->"5c077950-a66c-4c4b-b143-433efad06eb6",
 CellID->156501125],
Cell[CellGroupData[{
Cell[29235, 758, 380, 8, 28, "Input",ExpressionUUID->"ee219921-c479-413e-be0d-e509171fc2d7",
 CellID->147735419],
Cell[29618, 768, 497, 12, 40, "Output",ExpressionUUID->"6ab8006e-c335-4160-96ac-11808d24db86",
 CellID->249514114]
}, Open  ]],
Cell[30130, 783, 210, 2, 35, "Text",ExpressionUUID->"13db992a-e07e-4727-9bfd-d860dd4a9dc1",
 CellID->15154777],
Cell[CellGroupData[{
Cell[30365, 789, 1071, 25, 37, "Input",ExpressionUUID->"df5433b8-2a49-4fb4-8866-71db417bc462",
 CellID->146508223],
Cell[31439, 816, 488, 12, 40, "Output",ExpressionUUID->"7b0e5fac-4e9a-4616-afd3-bb97bcccc10e",
 CellID->820008500]
}, Open  ]],
Cell[31942, 831, 205, 2, 35, "Text",ExpressionUUID->"6cc9ac63-d1dc-4d47-a7fd-247f9d11d9cb",
 CellID->395826280],
Cell[CellGroupData[{
Cell[32172, 837, 418, 9, 48, "Input",ExpressionUUID->"c81c8c6c-0d00-44c0-83f9-8523862380cf",
 CellID->424704613],
Cell[32593, 848, 463, 12, 40, "Output",ExpressionUUID->"7a68b392-9582-479e-bd91-f6c4d9898b93",
 CellID->617931483]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33117, 867, 173, 2, 67, "Section",ExpressionUUID->"51f00236-5b19-4f79-b0f9-342ffbba7fb0",
 CellID->122879595],
Cell[33293, 871, 321, 6, 58, "Text",ExpressionUUID->"53323814-cb0d-444b-8487-3cf76ab5cb3b",
 CellID->22348458],
Cell[33617, 879, 2255, 44, 44, "Input",ExpressionUUID->"0878ebbd-6812-4d38-911e-81990ae11bcf",
 CellID->100492858],
Cell[35875, 925, 191, 2, 35, "Text",ExpressionUUID->"901a0b1d-f59a-44d3-a4ad-2f7b04a9f1d6",
 CellID->1009617909],
Cell[CellGroupData[{
Cell[36091, 931, 3784, 75, 70, "Input",ExpressionUUID->"e5b675ee-c7c5-4090-abb5-cd2dde0a883b",
 CellID->396885195],
Cell[39878, 1008, 273, 5, 39, "Output",ExpressionUUID->"4f0320f4-2512-4d2a-ac8d-6acfd6c3ee7e",
 CellID->680106722]
}, Open  ]],
Cell[40166, 1016, 230, 4, 35, "Text",ExpressionUUID->"fa5c42fd-7b31-40de-8dfc-a1156d21eb2c",
 CellID->204194902],
Cell[CellGroupData[{
Cell[40421, 1024, 1333, 28, 43, "Input",ExpressionUUID->"67f88bf0-b7e9-44e5-aa3f-ee7af31bffaf",
 CellID->278296753],
Cell[41757, 1054, 542, 15, 37, "Output",ExpressionUUID->"b8ecac16-87ee-4023-a30b-04d57d377909",
 CellID->258578130]
}, Open  ]],
Cell[42314, 1072, 188, 2, 35, "Text",ExpressionUUID->"44c6b443-5822-4a9a-aa27-07202955b148",
 CellID->98033754],
Cell[CellGroupData[{
Cell[42527, 1078, 561, 14, 48, "Input",ExpressionUUID->"8fb4be6e-a625-4d73-bac4-8b94171c2c90",
 CellID->647506640],
Cell[43091, 1094, 10248, 187, 233, "Output",ExpressionUUID->"6bec0176-87d8-472d-9f24-b04d62b9b83c",
 CellID->112433512]
}, Open  ]],
Cell[53354, 1284, 235, 4, 35, "Text",ExpressionUUID->"8c338e47-cd91-4f4c-a19f-7aec1901f223",
 CellID->682480993],
Cell[CellGroupData[{
Cell[53614, 1292, 390, 9, 31, "Input",ExpressionUUID->"145959b5-cd05-4c7a-8661-d767f78ffc0e",
 CellID->51920358],
Cell[54007, 1303, 347, 9, 59, "Output",ExpressionUUID->"1d3530f4-f21e-47ec-a070-1e7e7b5d5277",
 CellID->579494396]
}, Open  ]],
Cell[CellGroupData[{
Cell[54391, 1317, 420, 10, 31, "Input",ExpressionUUID->"3764e235-99f5-47d7-b006-2a73de3aca1a",
 CellID->7084404],
Cell[54814, 1329, 338, 8, 41, "Output",ExpressionUUID->"634f07ee-7d38-48e2-84cc-d2e509c84ea1",
 CellID->46743231]
}, Open  ]],
Cell[CellGroupData[{
Cell[55189, 1342, 426, 10, 31, "Input",ExpressionUUID->"45b0321e-5741-43d0-a8ce-f2decf47db16",
 CellID->811992032],
Cell[55618, 1354, 323, 8, 41, "Output",ExpressionUUID->"6a20a8d1-a30c-40a2-b5e1-6c3573f1cda6",
 CellID->320552415]
}, Open  ]],
Cell[CellGroupData[{
Cell[55978, 1367, 336, 8, 31, "Input",ExpressionUUID->"ee662e5d-8f78-49c3-b6ac-2088a3005980",
 CellID->120708854],
Cell[56317, 1377, 422, 12, 74, "Output",ExpressionUUID->"a035f8d5-6dcd-43ab-831a-5aff9d9699d5",
 CellID->639861329]
}, Open  ]],
Cell[CellGroupData[{
Cell[56776, 1394, 437, 10, 31, "Input",ExpressionUUID->"a8dd05cb-1c9d-4bd3-acf8-c853daf9b08d",
 CellID->829188397],
Cell[57216, 1406, 321, 8, 41, "Output",ExpressionUUID->"7ecb2fbc-df23-4313-af0c-d874ab894dc0",
 CellID->789069782]
}, Open  ]],
Cell[57552, 1417, 195, 2, 35, "Text",ExpressionUUID->"0ba71a7a-c2df-49f9-9186-4bdde9df1cf2",
 CellID->471088141],
Cell[CellGroupData[{
Cell[57772, 1423, 822, 21, 53, "Input",ExpressionUUID->"562f2354-d020-43dc-ba84-544490656903",
 CellID->21237734],
Cell[58597, 1446, 10208, 187, 213, "Output",ExpressionUUID->"2a3bd6ac-4450-4094-9053-b8736d9f8d9a",
 CellID->77293381]
}, Open  ]],
Cell[68820, 1636, 192, 2, 35, "Text",ExpressionUUID->"24290368-c98b-4f7f-aecd-96978ebf0d33",
 CellID->283159977],
Cell[69015, 1640, 1585, 26, 162, "Input",ExpressionUUID->"3cb971db-2b97-49fe-bdd0-2f01c0e5ff8f",
 CellID->111078542],
Cell[70603, 1668, 188, 2, 35, "Text",ExpressionUUID->"fce9334a-5797-4282-8834-b5b56ea17b17",
 CellID->981330815],
Cell[CellGroupData[{
Cell[70816, 1674, 361, 7, 28, "Input",ExpressionUUID->"4501ff8e-c73f-4575-9795-2e0f93b3bffc",
 CellID->184301441],
Cell[71180, 1683, 8188, 239, 225, "Output",ExpressionUUID->"7a6e12dd-c098-4da6-9074-ccc0bbf4e034",
 CellID->337885347]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79417, 1928, 181, 2, 67, "Section",ExpressionUUID->"5cb467e9-3e30-4ae8-9bc4-043f1577a182",
 CellID->41330008],
Cell[79601, 1932, 289, 5, 28, "Input",ExpressionUUID->"4fce7032-cd69-4de0-be0f-f91ae77e029e",
 CellID->48589341],
Cell[CellGroupData[{
Cell[79915, 1941, 3708, 86, 376, "Input",ExpressionUUID->"55021c50-117c-49e5-a567-cedbe2071438",
 CellID->325765674],
Cell[83626, 2029, 8310, 176, 137, "Output",ExpressionUUID->"41e75517-b71b-4dd5-8e34-25a679439f32",
 CellID->109824087]
}, Open  ]],
Cell[CellGroupData[{
Cell[91973, 2210, 240, 4, 28, "Input",ExpressionUUID->"d0d7cf3b-a042-4fc7-a860-af3417d97e20",
 CellID->252918434],
Cell[92216, 2216, 302, 5, 55, "Output",ExpressionUUID->"3b93479c-1575-48b9-8588-f956a8149b68",
 CellID->75212028]
}, Open  ]],
Cell[CellGroupData[{
Cell[92555, 2226, 291, 6, 28, "Input",ExpressionUUID->"86f2d764-7738-4944-b6aa-258c0672eb4d",
 CellID->32120234],
Cell[92849, 2234, 209, 3, 47, "Output",ExpressionUUID->"e7c6668b-5d73-4b39-a63c-b41ede60001d",
 CellID->288537393]
}, Open  ]],
Cell[CellGroupData[{
Cell[93095, 2242, 364, 8, 48, "Input",ExpressionUUID->"46ef38f2-dd51-4f5d-ad7f-04aea0aefffb",
 CellID->91716906],
Cell[93462, 2252, 233, 4, 32, "Output",ExpressionUUID->"3ed3d084-7011-46f8-924a-04580c6c4185",
 CellID->246807448]
}, Open  ]],
Cell[CellGroupData[{
Cell[93732, 2261, 321, 7, 48, "Input",ExpressionUUID->"574288d8-e7bc-4e59-80c6-79020fd37bde",
 CellID->30200501],
Cell[94056, 2270, 540, 12, 43, "Output",ExpressionUUID->"36306139-02d9-4e3d-b6e5-f9c8c483da88",
 CellID->242255206]
}, Open  ]],
Cell[94611, 2285, 239, 4, 28, "Input",ExpressionUUID->"5b6ac24e-2dfb-461d-9c95-6ad50ee4c445",
 CellID->89837952],
Cell[94853, 2291, 278, 5, 28, "Input",ExpressionUUID->"f4aadb87-528a-46c2-8260-c32b27cce3aa",
 CellID->234639244],
Cell[CellGroupData[{
Cell[95156, 2300, 253, 6, 48, "Input",ExpressionUUID->"63ce8246-93fb-478b-97da-591d0c630ca9",
 CellID->39156972],
Cell[95412, 2308, 318, 6, 32, "Output",ExpressionUUID->"2081ced7-7cf8-4966-a1f5-2073cc338ec8",
 CellID->219891975]
}, Open  ]],
Cell[CellGroupData[{
Cell[95767, 2319, 375, 9, 48, "Input",ExpressionUUID->"26ff7a81-b757-4b32-b45c-76db448df559",
 CellID->231164385],
Cell[96145, 2330, 452, 10, 43, "Output",ExpressionUUID->"c6b536fe-79ea-4d7a-a918-ced0de328ab7",
 CellID->10515706]
}, Open  ]],
Cell[CellGroupData[{
Cell[96634, 2345, 369, 9, 48, "Input",ExpressionUUID->"4b87cdaa-5c4b-4673-8479-294d7d1757a9",
 CellID->197295171],
Cell[97006, 2356, 23942, 426, 117, "Output",ExpressionUUID->"360c722f-8b95-4105-89c2-5bfeec263f9d",
 CellID->516748263]
}, Open  ]],
Cell[CellGroupData[{
Cell[120985, 2787, 272, 5, 28, "Input",ExpressionUUID->"bec76bc1-cce6-4597-bcd5-164243a580d8",
 CellID->1458214],
Cell[121260, 2794, 2672, 61, 104, "Output",ExpressionUUID->"a749b3a4-855a-44bf-be06-8c8a12120c9b",
 CellID->432560206]
}, Open  ]],
Cell[CellGroupData[{
Cell[123969, 2860, 396, 10, 48, "Input",ExpressionUUID->"2bcfbe6d-d2c4-4396-8e76-d96049754f9c",
 CellID->345785840],
Cell[124368, 2872, 169822, 3001, 362, "Output",ExpressionUUID->"2229f6bb-978b-41a9-8e8f-e53c6d27b7c1",
 CellID->360495817]
}, Open  ]],
Cell[CellGroupData[{
Cell[294227, 5878, 410, 10, 48, "Input",ExpressionUUID->"6fe098f4-a55a-417f-94b2-4636fc085eca",
 CellID->120437165],
Cell[294640, 5890, 8528, 208, 271, "Output",ExpressionUUID->"bb49646f-0890-4d95-9c1a-2a479833cb39",
 CellID->546257847]
}, Open  ]],
Cell[CellGroupData[{
Cell[303205, 6103, 466, 13, 48, "Input",ExpressionUUID->"7d3d16fb-60f4-4ea0-9ebc-fa328b9b510e",
 CellID->693282905],
Cell[303674, 6118, 11557, 287, 399, "Output",ExpressionUUID->"ca893f19-72ea-4c69-83c5-eb5c4442e08a",
 CellID->443979552]
}, Open  ]],
Cell[CellGroupData[{
Cell[315268, 6410, 513, 14, 48, "Input",ExpressionUUID->"d0264394-3da0-4be0-bed9-fac97e80696d",
 CellID->161431887],
Cell[315784, 6426, 11595, 288, 400, "Output",ExpressionUUID->"abb061bb-42e3-4182-bd71-17f3a4106b3a",
 CellID->268517546]
}, Open  ]],
Cell[CellGroupData[{
Cell[327416, 6719, 557, 15, 67, "Input",ExpressionUUID->"8991561d-d448-4ca9-9a0f-98ee84a50326",
 CellID->246866256],
Cell[327976, 6736, 78558, 1523, 543, "Output",ExpressionUUID->"3eb169fc-4ef9-4435-9397-227ba9a5692a",
 CellID->108561569]
}, Open  ]],
Cell[406549, 8262, 193, 3, 28, "Input",ExpressionUUID->"59fe64ba-af63-46d8-b18f-97c43bcb8f73",
 CellID->219873406],
Cell[CellGroupData[{
Cell[406767, 8269, 695, 18, 124, "Input",ExpressionUUID->"6c6391ee-d343-46f0-92dd-8a32282a2ff0",
 CellID->315990473],
Cell[407465, 8289, 8051, 170, 137, "Output",ExpressionUUID->"bdd8466a-5211-4448-a242-b52e70556c35",
 CellID->485977437]
}, Open  ]],
Cell[CellGroupData[{
Cell[415553, 8464, 749, 19, 124, "Input",ExpressionUUID->"394f91ee-0ed7-48a5-aa0f-8cb896d008be",
 CellID->291216298],
Cell[416305, 8485, 223, 4, 32, "Output",ExpressionUUID->"60d48780-0331-48d7-b698-b3d4eb22a0d5",
 CellID->328080472]
}, Open  ]],
Cell[CellGroupData[{
Cell[416565, 8494, 240, 4, 28, "Input",ExpressionUUID->"0c0ee3c9-f083-4709-b862-351caaaeb2d4",
 CellID->299331284],
Cell[416808, 8500, 1835, 41, 104, "Output",ExpressionUUID->"be403cf8-da2c-44fc-a202-7e6e1bf1457a",
 CellID->36669345]
}, Open  ]],
Cell[CellGroupData[{
Cell[418680, 8546, 515, 13, 67, "Input",ExpressionUUID->"81275f58-a821-4bc2-ac39-5ba410e271e3",
 CellID->683339382],
Cell[419198, 8561, 72314, 1374, 543, "Output",ExpressionUUID->"2db98fd3-b454-42cb-bbf2-539809dae79b",
 CellID->5361007]
}, Closed]],
Cell[CellGroupData[{
Cell[491549, 9940, 562, 15, 82, "Input",ExpressionUUID->"fd1c2525-1d3e-4aeb-b6ad-51bd6f916fe8",
 CellID->577796629],
Cell[492114, 9957, 8771, 205, 400, "Output",ExpressionUUID->"8f096556-662c-4e99-a1bb-db81f0e4df5b",
 CellID->851966463]
}, Open  ]],
Cell[500900, 10165, 244, 4, 28, "Input",ExpressionUUID->"c0c5b5f1-e4f0-47eb-b918-641e5db43014",
 CellID->273763095],
Cell[CellGroupData[{
Cell[501169, 10173, 491, 14, 86, "Input",ExpressionUUID->"c90e74a4-df1c-4bbb-b47c-35c3610ad680",
 CellID->69952282],
Cell[501663, 10189, 454, 12, 52, "Output",ExpressionUUID->"a7a8f06b-b641-4a73-8841-8a8e894d29d0",
 CellID->32444764]
}, Open  ]],
Cell[CellGroupData[{
Cell[502154, 10206, 3770, 85, 542, "Input",ExpressionUUID->"ebaff3a7-7e97-4934-8ed2-598bae50bf0d",
 CellID->103332365],
Cell[505927, 10293, 8365, 174, 113, "Output",ExpressionUUID->"52ff5739-f607-4e72-8880-0fdc70a70ec3",
 CellID->330688880]
}, Open  ]],
Cell[CellGroupData[{
Cell[514329, 10472, 3852, 86, 695, "Input",ExpressionUUID->"f066d988-5157-433e-a1c2-982dc257c7e8",
 CellID->1619720],
Cell[518184, 10560, 213, 4, 32, "Output",ExpressionUUID->"a78dd6b9-ed0b-4cd2-9d9b-ffb8af7ef2ed",
 CellID->263012374]
}, Open  ]],
Cell[CellGroupData[{
Cell[518434, 10569, 530, 14, 67, "Input",ExpressionUUID->"a1e24702-8b66-48f4-a8df-18d199d171c6",
 CellID->432225662],
Cell[518967, 10585, 75225, 1435, 597, "Output",ExpressionUUID->"35845c4c-813c-495e-88e9-4ef48ae98efd",
 CellID->53084167]
}, Open  ]],
Cell[CellGroupData[{
Cell[594229, 12025, 2743, 64, 200, "Input",ExpressionUUID->"4cc837a7-e4b0-44bb-872f-cae83d176491",
 CellID->61538602],
Cell[596975, 12091, 268, 5, 32, "Output",ExpressionUUID->"7d443554-7639-4fe6-a417-4ab909cfef6f",
 CellID->9910094]
}, Open  ]],
Cell[597258, 12099, 291, 5, 28, "Input",ExpressionUUID->"884ae7ef-b82c-4f1c-a269-08fa7ddef58e",
 CellID->101701112],
Cell[CellGroupData[{
Cell[597574, 12108, 377, 8, 28, "Input",ExpressionUUID->"fdad55eb-76dc-4c5b-acb0-343c5e08cf1d",
 CellID->626042579],
Cell[597954, 12118, 527, 11, 43, "Output",ExpressionUUID->"02e150b2-14c0-47e1-a5ec-42356073e288",
 CellID->106667148]
}, Open  ]],
Cell[CellGroupData[{
Cell[598518, 12134, 673, 18, 48, "Input",ExpressionUUID->"721a45c5-2b1a-4149-b619-e088ace1e53a",
 CellID->617641310],
Cell[599194, 12154, 1128, 25, 44, "Output",ExpressionUUID->"2da350f4-6977-4d05-b49c-b9ab927a2465",
 CellID->114278603]
}, Open  ]],
Cell[600337, 12182, 312, 6, 28, "Input",ExpressionUUID->"3dac3889-3a1c-4b32-8c38-00bf8b2c1b9b",
 CellID->110249611],
Cell[CellGroupData[{
Cell[600674, 12192, 251, 4, 28, "Input",ExpressionUUID->"05cee284-46ac-49b9-8903-a856ef4fc6f4",
 CellID->890228127],
Cell[600928, 12198, 7266, 180, 38, "Output",ExpressionUUID->"2901a2c8-b98f-4827-a5d0-35aeba27538b",
 CellID->23952861]
}, Open  ]],
Cell[CellGroupData[{
Cell[608231, 12383, 280, 5, 28, "Input",ExpressionUUID->"82d27b2a-55a3-4b00-9b6f-1b6d99e0d4b9",
 CellID->54834298],
Cell[608514, 12390, 383, 9, 43, "Output",ExpressionUUID->"9889e9c5-ee00-44a3-b121-01340b5c13cf",
 CellID->161424101]
}, Open  ]],
Cell[CellGroupData[{
Cell[608934, 12404, 341, 7, 28, "Input",ExpressionUUID->"53535ee3-9792-4003-9391-02b10af1865a",
 CellID->564417836],
Cell[609278, 12413, 12401, 273, 259, "Output",ExpressionUUID->"bc5f59fd-bfb6-416f-9a49-6d207bab4290",
 CellID->495546465]
}, Open  ]],
Cell[CellGroupData[{
Cell[621716, 12691, 571, 16, 86, "Input",ExpressionUUID->"7adea5cf-aaa0-4bde-92fa-00a27a1b72db",
 CellID->529148596],
Cell[622290, 12709, 59129, 1141, 414, "Output",ExpressionUUID->"a5cc5549-8390-4e94-b4c9-2c18f31ce015",
 CellID->194140075]
}, Open  ]],
Cell[681434, 13853, 13205, 308, 1901, "Input",ExpressionUUID->"879b285e-841e-4a82-9fb1-558fcdc6877a",
 CellID->86422327]
}, Open  ]]
}, Open  ]]
}
]
*)

