(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    750715,      14591]
NotebookOptionsPosition[    623438,      12123]
NotebookOutlinePosition[    737151,      14296]
CellTagsIndexPosition[    736760,      14282]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Title", "Title",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Author", " ", "Name"}], "Author"]], "Author",
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{"4", "\[Pi]", 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], 
     SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "electric constants", 
     "\"ElectricConstant\""},
    "Quantity"], 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"\[HBar]\"", 
     "reduced Planck constants", "\"ReducedPlanckConstant\""},
    "Quantity"], 
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], 
     StyleBox["\"c\"", Italic, StripOnInput -> False], "speed of light", 
     "\"SpeedOfLight\""},
    "Quantity"]}]]], "Input",
 CellChangeTimes->{{3.876338045654298*^9, 3.8763380735943766`*^9}},
 CellLabel->"In[4]:=",
 CellID->137093261,ExpressionUUID->"ffbbe41d-391b-470a-b5a7-b77fc3e2c35f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}], 
   RowBox[{
     SqrtBox[
      SubscriptBox["\"\[CurlyEpsilon]\"", "0"]], "\[InvisibleSpace]", 
     SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", 
     SqrtBox[
      StyleBox["\"c\"", Italic, StripOnInput -> False]]}], 
   "square root electric constant square root reduced Planck constant square \
root speed of light", 
   RowBox[{
     SqrtBox["\"ElectricConstant\""], " ", 
     SqrtBox["\"ReducedPlanckConstant\""], " ", 
     SqrtBox["\"SpeedOfLight\""]}]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8763380775014524`*^9, 3.876338081204038*^9}},
 CellLabel->"Out[4]=",
 CellID->29031524,ExpressionUUID->"3a12710c-154b-410c-8517-f07b0ba2e6f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}], ",", 
    RowBox[{
     SqrtBox["\"\<ElectricConstant\>\""], " ", 
     SqrtBox["\"\<ReducedPlanckConstant\>\""], " ", 
     SqrtBox["\"\<SpeedOfLight\>\""]}]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",
 CellID->468359857,ExpressionUUID->"ddbc2c3d-21d9-4f94-93dd-ea189ac6e474"],

Cell[BoxData[
 TemplateBox[{"1.87554603777966993692`9.833205377578773*^-18", 
   RowBox[{"\"s\"", "\[ThinSpace]", "\"A\""}], "second amperes", 
   RowBox[{"\"Amperes\"", " ", "\"Seconds\""}]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.876338084992695*^9},
 CellLabel->"Out[5]=",
 CellID->12826900,ExpressionUUID->"31d155e0-f6fd-4164-96d5-f51221ea1304"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1.87554603777966993692`9.833205377578773*^-18", ",", 
    RowBox[{"\"\<Amperes\>\"", " ", "\"\<Seconds\>\""}]}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[6]:=",
 CellID->155411773,ExpressionUUID->"41911eb6-0dfa-4eab-9e2e-81a300cb1837"],

Cell[BoxData[
 TemplateBox[{
  "1.87554603777966993692047629252932472582`9.833205377578773", "\"aC\"", 
   "attocoulombs", "\"Attocoulombs\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.876338235983201*^9},
 CellLabel->"Out[6]=",
 CellID->445483753,ExpressionUUID->"a6a07413-01f9-4fb6-86c7-f994f956750e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sqrt", "]"}], "[", 
  RowBox[{"4", "\[Pi]", " ", 
   RowBox[{"Quantity", "[", "\"\<ElectricConstant\>\"", "]"}], 
   SuperscriptBox[
    RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}], "6"], 
   SuperscriptBox[
    RowBox[{"Quantity", "[", "\"\<GravitationalConstant\>\"", "]"}], 
    RowBox[{"-", "1"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763397947014055`*^9, 3.8763398896031666`*^9}},
 CellLabel->"In[8]:=",
 CellID->17660970,ExpressionUUID->"77a57353-15bb-4761-b6fe-d1d8552ea27f"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"Sqrt"},
   "InactiveHead",
   BaseStyle->"Inactive",
   SyntaxForm->"Symbol",
   Tooltip->"Inactive[Sqrt]"], "[", 
  TemplateBox[{
    RowBox[{"4", " ", "\[Pi]"}], 
    RowBox[{
      SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[ThinSpace]", 
      SuperscriptBox[
       StyleBox["\"c\"", Italic, StripOnInput -> False], "6"], 
      "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
      StyleBox["\"G\"", Italic, StripOnInput -> False]}], 
    "electric constant speed of light to the 6 per Newtonian gravitational \
constant", 
    FractionBox[
     RowBox[{"\"ElectricConstant\"", " ", 
       SuperscriptBox["\"SpeedOfLight\"", "6"]}], 
     "\"GravitationalConstant\""]},
   "Quantity"], "]"}]], "Output",
 CellChangeTimes->{{3.87633983107176*^9, 3.8763398905863667`*^9}},
 CellLabel->"Out[8]=",
 CellID->317058709,ExpressionUUID->"95e1da17-0a7e-4caf-9900-0a338a54da53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Activate", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"Sqrt"},
     "InactiveHead",
     BaseStyle->"Inactive",
     SyntaxForm->"Symbol",
     Tooltip->"Inactive[Sqrt]"], "[", 
    RowBox[{"Quantity", "[", 
     RowBox[{
      RowBox[{"4", " ", "\[Pi]"}], ",", 
      FractionBox[
       RowBox[{"\"\<ElectricConstant\>\"", " ", 
        SuperscriptBox["\"\<SpeedOfLight\>\"", "6"]}], 
       "\"\<GravitationalConstant\>\""]}], "]"}], "]"}], ",", 
   RowBox[{"Unevaluated", "[", "Sqrt", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[9]:=",
 CellID->90314835,ExpressionUUID->"c2f220d7-9f84-4532-b4ea-e31eeca9a0fc"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}], 
   RowBox[{
     SqrtBox[
      SubscriptBox["\"\[CurlyEpsilon]\"", "0"]], "\[InvisibleSpace]", 
     SuperscriptBox[
      StyleBox["\"c\"", Italic, StripOnInput -> False], "3"], 
     "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
     SqrtBox[
      StyleBox["\"G\"", Italic, StripOnInput -> False]]}], 
   "square root electric constant speed of light cubed per square root \
Newtonian gravitational constant", 
   FractionBox[
    RowBox[{
      SqrtBox["\"ElectricConstant\""], " ", 
      SuperscriptBox["\"SpeedOfLight\"", "3"]}], 
    SqrtBox["\"GravitationalConstant\""]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8763398973443274`*^9},
 CellLabel->"Out[9]=",
 CellID->33244809,ExpressionUUID->"ff903430-2d5b-45ff-b131-44a6d8115263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}], ",", 
    FractionBox[
     RowBox[{
      SqrtBox["\"\<ElectricConstant\>\""], " ", 
      SuperscriptBox["\"\<SpeedOfLight\>\"", "3"]}], 
     SqrtBox["\"\<GravitationalConstant\>\""]]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8763399957606115`*^9, 3.8763400028507805`*^9}},
 NumberMarks->False,
 CellLabel->"In[13]:=",
 CellID->183472900,ExpressionUUID->"eb836dd6-d7d5-4a5b-9ab8-53d4d2e4f193"],

Cell[BoxData[
 TemplateBox[{
  "3.4788727537513070905096574`4.657574420801268*^25", "\"A\"", "amperes", 
   "\"Amperes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8763399789421034`*^9, 3.87634000377569*^9}},
 CellLabel->"Out[13]=",
 CellID->128074595,ExpressionUUID->"616ba003-1d23-4f5d-aa4d-f588d4b4ee7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inactive", "[", "Sqrt", "]"}], "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}], "4"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "\[Pi]", " ", 
      RowBox[{"Quantity", "[", "\"\<ElectricConstant\>\"", "]"}], 
      RowBox[{"Quantity", "[", "\"\<GravitationalConstant\>\"", "]"}]}], 
     ")"}], 
    RowBox[{"-", "1"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763403069493637`*^9, 3.876340327092001*^9}},
 CellLabel->"In[16]:=",
 CellID->484242721,ExpressionUUID->"112b4613-46ce-4bf5-abf6-b216dab7025a"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"Sqrt"},
   "InactiveHead",
   BaseStyle->"Inactive",
   SyntaxForm->"Symbol",
   Tooltip->"Inactive[Sqrt]"], "[", 
  TemplateBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], 
    RowBox[{
      SuperscriptBox[
       StyleBox["\"c\"", Italic, StripOnInput -> False], "4"], 
      "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
      SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[ThinSpace]", 
      StyleBox["\"G\"", Italic, StripOnInput -> False], "\[InvisibleSpace]", 
      "\")\""}], 
    "speed of light to the fourth per electric constant Newtonian \
gravitational constant", 
    FractionBox[
     SuperscriptBox["\"SpeedOfLight\"", "4"], 
     RowBox[{"\"ElectricConstant\"", " ", "\"GravitationalConstant\""}]]},
   "Quantity"], "]"}]], "Output",
 CellChangeTimes->{3.8763403274179473`*^9},
 CellLabel->"Out[16]=",
 CellID->208375590,ExpressionUUID->"87f5e117-0d71-4d4f-b27a-a886e5c566a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Activate", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"Sqrt"},
     "InactiveHead",
     BaseStyle->"Inactive",
     SyntaxForm->"Symbol",
     Tooltip->"Inactive[Sqrt]"], "[", 
    RowBox[{"Quantity", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]"}]], ",", 
      FractionBox[
       SuperscriptBox["\"\<SpeedOfLight\>\"", "4"], 
       RowBox[{
       "\"\<ElectricConstant\>\"", " ", "\"\<GravitationalConstant\>\""}]]}], 
     "]"}], "]"}], ",", 
   RowBox[{"Unevaluated", "[", "Sqrt", "]"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[17]:=",
 CellID->211391236,ExpressionUUID->"3d9189f1-cccc-43de-8b53-55137fa7496c"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
      SqrtBox["\[Pi]"]}]], 
   RowBox[{
     SuperscriptBox[
      StyleBox["\"c\"", Italic, StripOnInput -> False], "2"], 
     "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
     SqrtBox[
      SubscriptBox["\"\[CurlyEpsilon]\"", "0"]], "\[InvisibleSpace]", 
     SqrtBox[
      StyleBox["\"G\"", Italic, StripOnInput -> False]], "\[InvisibleSpace]", 
     "\")\""}], 
   "speed of light squared per square root electric constant square root \
Newtonian gravitational constant", 
   FractionBox[
    SuperscriptBox["\"SpeedOfLight\"", "2"], 
    RowBox[{
      SqrtBox["\"ElectricConstant\""], " ", 
      SqrtBox["\"GravitationalConstant\""]}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87634033222444*^9},
 CellLabel->"Out[17]=",
 CellID->71544455,ExpressionUUID->"8c4ff746-14c2-49b9-a27b-dea02a1deaf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      SqrtBox["\[Pi]"]}]], ",", 
    FractionBox[
     SuperscriptBox["\"\<SpeedOfLight\>\"", "2"], 
     RowBox[{
      SqrtBox["\"\<ElectricConstant\>\""], " ", 
      SqrtBox["\"\<GravitationalConstant\>\""]}]]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[18]:=",
 CellID->15024468,ExpressionUUID->"97a34c96-8618-4d70-af86-206c548d0583"],

Cell[BoxData[
 TemplateBox[{"1.042939814484129388630018224`4.657574420801268*^27", 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/(\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", "\"A\"", 
     "\[InvisibleSpace]", "\")\""}], 
   "kilogram meters squared per second cubed ampere", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    RowBox[{"\"Amperes\"", " ", 
      SuperscriptBox["\"Seconds\"", "3"]}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8763403940481524`*^9},
 CellLabel->"Out[18]=",
 CellID->781318194,ExpressionUUID->"87609cfa-4b36-4191-9ace-2e85c467a726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1.042939814484129388630018224`4.657574420801268*^27", ",", 
    FractionBox[
     RowBox[{"\"\<Kilograms\>\"", " ", 
      SuperscriptBox["\"\<Meters\>\"", "2"]}], 
     RowBox[{"\"\<Amperes\>\"", " ", 
      SuperscriptBox["\"\<Seconds\>\"", "3"]}]]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[19]:=",
 CellID->956143958,ExpressionUUID->"77b4d160-9215-4ae0-9948-b810a654454a"],

Cell[BoxData[
 TemplateBox[{
  "1.042939814484129388630018224`4.657574420801268*^27", "\"V\"", "volts", 
   "\"Volts\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8763404067113757`*^9},
 CellLabel->"Out[19]=",
 CellID->35433293,ExpressionUUID->"09aa1629-839f-4946-b6a2-7a69b1c206f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"UnitSimplify", "[", 
   RowBox[{"Quantity", "[", 
    RowBox[{"1.042939814484129388630018224`4.657574420801268*^27", ",", 
     FractionBox[
      RowBox[{"\"\<Kilograms\>\"", " ", 
       SuperscriptBox["\"\<Meters\>\"", "2"]}], 
      RowBox[{"\"\<Amperes\>\"", " ", 
       SuperscriptBox["\"\<Seconds\>\"", "3"]}]]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.876340429427144*^9, 3.87634043081323*^9}},
 CellLabel->"In[20]:=",
 CellID->299151566,ExpressionUUID->"73a2b60b-6721-4f60-92f2-7e7110f388b7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    TagBox[GridBox[{
       {
        ItemBox[
         PaneBox[
          StyleBox["\<\" Quantity\"\>", "InformationTitleText",
           StripOnInput->False],
          FrameMargins->{{4, 0}, {-1, 1}}],
         BaseStyle->"InformationTitleBackground",
         StripOnInput->False]},
       {
        PaneBox[GridBox[{
           {
            
            DynamicModuleBox[{System`InformationDump`open$$ = {
             False, False, False, False, False}}, 
             StyleBox[GridBox[{
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Magnitude\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Magnitude\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Magnitude", "Tooltip"]& ], 
                 "1.042939814484129388630018224`4.657574420801268*^27"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Unit\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"Unit\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Unit", "Tooltip"]& ], "\<\"Volts\"\>"},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" Unit Dimensions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"UnitDimensions\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "UnitDimensions", "Tooltip"]& ], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"TimeUnit\"\>", ",", 
                    RowBox[{"-", "3"}]}], "}"}]}], "}"}]},
                {
                 TagBox[
                  TooltipBox[
                   StyleBox["\<\" SI Base Units\"\>", "InformationRowLabel",
                    StripOnInput->False],
                   "\"SIBaseUnits\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "SIBaseUnits", "Tooltip"]& ], 
                 FractionBox[
                  RowBox[{"\<\"Kilograms\"\>", " ", 
                   SuperscriptBox["\<\"Meters\"\>", "2"]}], 
                  RowBox[{"\<\"Amperes\"\>", " ", 
                   SuperscriptBox["\<\"Seconds\"\>", "3"]}]]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {Right, Left}},
               GridBoxDividers->None,
               GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}], "DialogStyle",
              StripOnInput->False],
             DynamicModuleValues:>{}]}
          },
          DefaultBaseStyle->"Column",
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[3.6]}, 
              Offset[0.2]}}],
         FrameMargins->6]}
      },
      DefaultBaseStyle->"Column",
      FrameStyle->Directive[
        GrayLevel[0.8], 
        Thickness[Tiny]],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Quantity", "Magnitude" -> 
    1.042939814484129388630018224`4.657574420801268*^27, "Unit" -> "Volts", 
    "UnitDimensions" -> {{"ElectricCurrentUnit", -1}, {"LengthUnit", 2}, {
      "MassUnit", 1}, {"TimeUnit", -3}}, "SIBaseUnits" -> 
    "Amperes"^(-1) "Kilograms" "Meters"^2 "Seconds"^(-3)|>, True]]], "Output",
 CellChangeTimes->{3.8763404310914645`*^9},
 CellLabel->"Out[20]=",
 CellID->130418119,ExpressionUUID->"7597e5ec-377a-407d-b97b-761b0ebe6c11"]
}, Open  ]],

Cell["\<\
Find all physical quantities with the resource function I created named \
PhysicalQuantityData:\
\>", "Text",
 CellChangeTimes->{{3.8763345174717574`*^9, 3.876334560453973*^9}},
 CellID->396955892,ExpressionUUID->"1701dd95-8252-4ab6-bac5-95e30d746a5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8763345617369127`*^9, 3.8763345636092844`*^9}},
 CellLabel->"In[1]:=",
 CellID->3072962,ExpressionUUID->"d2bebd8c-abe5-4cb1-ad0e-155042a666d9"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         TemplateBox[{"\"Abbe number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbbeNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbbeNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abseleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abseleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abserk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absnap\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteBearing\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteBearing\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute chemical activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteChemicalActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteChemicalActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute global warming potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteGlobalWarmingPotential\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteGlobalWarmingPotential\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absolute humidity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteHumidity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteHumidity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMagnitude\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude H\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeH\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeM\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeM\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M_B\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMB\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bolometric magnitude M_bol\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteMagnitudeMBolometric\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMBolometric\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"absolute visual magnitude M_V\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMV\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMV\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMass\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteVorticity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity vertical component\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteVorticityVerticalComponent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteVorticityVerticalComponent\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absop\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absop\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absop\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorbance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorbance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbed dose of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorbed dose rate of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseRateOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseRateOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorptance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorptance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorptance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorption cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorption number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsorptionNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorptivity temperature coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptivityTemperatureCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptivityTemperatureCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"abundance ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbundanceRatio\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbundanceRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"accelerating frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcceleratingFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceleratingFrequency\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Acceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Acceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration gradient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationGradient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AccelerationNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration spectral density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationSpectralDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationSpectralDensity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"acceptor density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acentric factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcentricFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcentricFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"achieved availability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AchievedAvailability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AchievedAvailability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAttenutationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic dissipation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticDissipationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticDissipationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticImpedance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcousticImpedance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic reflection coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticReflectionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticReflectionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic transmission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticTransmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticTransmissionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acousto\[Hyphen]optical figure of merit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcoustoOpticalFigureOfMerit\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcoustoOpticalFigureOfMerit\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"actinic dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActinicDose\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActinicDose\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"action\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Action\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Action\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activation energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivationEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActiveEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActiveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActivePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"actual exhaust speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActualExhaustSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic bulk modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticBulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticBulkModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticCompressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticHeatCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic lapse rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticLapseRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLapseRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic linear compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticLinearCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLinearCompressibility\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic molar heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticMolarHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticMolarHeatCapacity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic specific heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticSpecificHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticSpecificHeatCapacity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticWork\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aerodynamic force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AerodynamicForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AerodynamicForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"age\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AgriculturalYield\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYield\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AgriculturalYieldRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYieldRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airflow permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"albedo\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Albedo\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Albedo\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alcohol by volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlcoholByVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlcoholByVolume\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Alfv\[EAcute]n number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlfvenNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlfvenNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Almansi strain\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlmansiStrain\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlmansiStrain\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alpha disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlphaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlphaDisintegrationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"alternating current voltage\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlternatingCurrentVoltage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlternatingCurrentVoltage\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"altitude angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AltitudeAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AltitudeAngle\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of substance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount concentration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountConcentration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountConcentration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount fraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountFraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountFraction\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of light\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountOfLight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountOfLight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmountRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Amp\[EGrave]re number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmpereNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmpereNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amplifier current frequency sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AmplifierCurrentFrequencySensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierCurrentFrequencySensitivity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"amplifier noise slope\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmplifierNoiseSlope\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierNoiseSlope\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"plane angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anglement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Anglement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Anglement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of attack\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfAttack\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfAttack\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of deviation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfDeviation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfDeviation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of incidence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfIncidence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfIncidence\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of optical rotation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfOpticalRotation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfOpticalRotation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of reflection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfReflection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfReflection\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of refraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRefraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRefraction\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of repose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRepose\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfRepose\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of vanishing stability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfVanishingStability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfVanishingStability\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"angle per distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AnglePerDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle per time magnetic flux density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnglePerTimeMagneticFluxDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerTimeMagneticFluxDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular aperture\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAperture\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularAperture\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular curvature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularCurvature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularCurvature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularDiameter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularDiameterDistance\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular displacement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDisplacement\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDisplacement\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular eccentricity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularEccentricity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularEccentricity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularElongation\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular impulse\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularImpulse\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularImpulse\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular jerk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularJerk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularJerk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularMomentum\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularMomentum\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum quantum number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularMomentumQuantumNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularMomentumQuantumNumber\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"angular radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular radius of curvature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularRadiusOfCurvature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularRadiusOfCurvature\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular reciprocal lattice vector\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularReciprocalLatticeVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular resolution\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularResolution\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolution\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular resolving power\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularResolvingPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolvingPower\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularTorque\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularVelocity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularVelocity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavenumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavenumber\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anharmonicity constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnharmonicityConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"annual fuel utilization efficiency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnnualFuelUtilizationEfficiency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnnualFuelUtilizationEfficiency\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"antenna efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AntennaEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntennaEfficiency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anthropomass number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AnthropomassNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnthropomassNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant A\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantA\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantA\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant B\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantB\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant C\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantC\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantC\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aperture\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Aperture\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Aperture\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aperture efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApertureEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApertureEfficiency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apoapsis distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApoapsisDistance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApparentMagnitude\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"B\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeB\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bolometric apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ApparentMagnitudeBolometric\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeBolometric\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"G\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeG\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeG\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"H\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeH\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"I\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeI\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeI\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"J\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeJ\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeJ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"K\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeK\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeK\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"K_s\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeKs\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeKs\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"L\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeL\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeL\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"M\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeM\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeM\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"N\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeN\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeN\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Q\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeQ\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApparentMagnitudeQ\\\"]\"",
            "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"R\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeR\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeR\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"U\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeU\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeU\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"V\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeV\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeV\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Y\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeY\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Z\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeZ\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeZ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"applied moment of force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AppliedMomentOfForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AppliedMomentOfForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Archimedes number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArchimedesNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArchimedesNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arc length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area heating capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaHeatingCapacity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaHeatingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"areal thermal expansion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ArealThermalExpansionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArealThermalExpansionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per information\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerInformation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerInformation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerPerson\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerPerson\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per person rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerPersonRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerPersonRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area under flow\[Hyphen]volume curve\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaUnderFlowVolumeCurve\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaUnderFlowVolumeCurve\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"argument of periapsis\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArgumentOfPeriapsis\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArgumentOfPeriapsis\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Arrhenius number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrheniusNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrheniusNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Arrhenius time number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrheniusTimeNumber\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArrheniusTimeNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arrival count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrivalCount\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrivalCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arrival rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrivalRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrivalRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"artillery piece count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArtilleryPieceCount\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArtilleryPieceCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"assignable area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssignableArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"association constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssociationConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssociationConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atmospheric air column resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtmosphericAirColumnResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericAirColumnResistance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"atmospheric pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtmosphericPressure\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atom count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicBindingEnergy\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicBindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic g factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicGFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicGFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic magnetic moment\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicMagneticMoment\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicMagneticMoment\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"mass of atom\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"atomic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic scattering factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicScatteringFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicScatteringFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atom per amount\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomPerAmount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomPerAmount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttenuationLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attractive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttractiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttractiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Atwood number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtwoodNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtwoodNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"authalic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AuthalicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"autoignition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AutoignitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"availability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Availability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Availability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average bicycle cadence\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AverageBicycleCadence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageBicycleCadence\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average heart rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageHeartRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageHeartRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingPace\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingPace\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingSpeed\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingSpeed\\\"]\"",
            "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average population\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePopulation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePopulation\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average run cadence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageRunCadence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageRunCadence\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average swim cadence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSwimCadence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageSwimCadence\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average transmission rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AverageTransmissionRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTransmissionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial area moment of inertia\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AxialAreaMomentOfInertia\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialAreaMomentOfInertia\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialStress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialStress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial tilt\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialTilt\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialTilt\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"azimuth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Azimuth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Azimuth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"back count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BackCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BackCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"backward absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bacterium count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BacteriumCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BacteriumCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bacterium deposition rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BacteriumDepositionRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BacteriumDepositionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bag count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BagCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bagel count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagelCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BagelCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bagnold number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagnoldNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BagnoldNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bagnold number for solid particles\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BagnoldNumberForSolidParticles\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BagnoldNumberForSolidParticles\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bandwidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bandwidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bar count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BarCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barnyard number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarnyardNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarnyardNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barycentric mass flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarycentricMassFlux\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarycentricMassFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baryon count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaryonCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaryonCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baseband bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasebandBandwidth\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasebandBandwidth\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base pair count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePairCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasePairCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basic luminance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasicLuminance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasicLuminance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basic radiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasicRadiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasicRadiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basis weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasisWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasisWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"batch count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatchCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatchCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Batchelor number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatchelorNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatchelorNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatteryCapacity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryCapacity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery capacity power\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryCapacityPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryCapacityPower\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery current capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryCurrentCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryCurrentCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryEnergyCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity volume density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityVolumeDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityVolumeDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy self\[Hyphen]discharge rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergySelfDischargeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergySelfDischargeRate\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery power capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryPowerCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryPowerCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"Beale number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BealeNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BealeNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam candle power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamCandlePower\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeamCandlePower\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam emittance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamEmittance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeamEmittance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam jitter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamJitter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeamJitter\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bean count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeanCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeanCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bearing\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bearing\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeatCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeatFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeatRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for entropy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BejanNumberEntropy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberEntropy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for heat transfer\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BejanNumberHeatTransfer\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberHeatTransfer\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for mass transfer\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BejanNumberMassTransfer\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberMassTransfer\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"2530"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{"\"flashlight power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorchPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorchPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Torque\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Torque\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorqueGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorqueGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorsionalConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional rigidity (force times area per angle)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TorsionalRigidityForceTimesArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionalRigidityForceTimesArea\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"torsion coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tortilla count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TortillaCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TortillaCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tortuosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tortuosity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tortuosity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentum\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentum\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum quantum number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentumQuantumNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentumQuantumNumber\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total current\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalCurrent\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalCurrent\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total current density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalCurrentDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalCurrentDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total electron content\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalElectronContent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalElectronContent\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total floor area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalFloorArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total isospin\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalIsospin\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalIsospin\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total magnitude m_1\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalMagnitudeM1\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalMagnitudeM1\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total magnitude slope parameter K_1\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalMagnitudeSlopeParameterK1\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalMagnitudeSlopeParameterK1\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total proper motion\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalProperMotion\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalProperMotion\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radioactive activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioactiveActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalRadioactiveActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radio brightness\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioBrightness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalRadioBrightness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalScatteringCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"total surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalSurfaceArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"toughness modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ToughnessModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ToughnessModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"first Townsend coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"track gauge\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transconductance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Transconductance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Transconductance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer area product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerAreaProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer core geometry coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"inductance factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerFluxLinkage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerFluxLinkage\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer specific weight\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSpecificWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSpecificWeight\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transformer VA density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerVADensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerVADensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"translational damping coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"TranslationalDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TranslationalDampingCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transmission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransmissionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transmission rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransmissionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransmissionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transmittance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Transmittance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Transmittance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transpiration rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TranspirationRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TranspirationRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transportation cost\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransportationCost\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransportationCost\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAirspeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAirspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true anomaly\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAnomaly\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAnomaly\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueBearing\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueBearing\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true distance modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueDistanceModulus\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TrueDistanceModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true strain\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueStrain\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueStrain\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueVaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueVaporPressure\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"turbulent kinetic energy dissipation rate per mass\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurbulentKineticEnergyDissipationRatePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TurbulentKineticEnergyDissipationRatePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turn count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turnover frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnoverFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"enzymology turnover number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurnoverNumberEnzymology\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverNumberEnzymology\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twistability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Twistability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Twistability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twist angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TwistAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TwistAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twist\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwistAngularVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwistAngularVelocity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCrossSection\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"two\[Hyphen]photon absorption/emission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionEmissionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionEmissionCrossSection\\\"]\"", "\"physical quantity\""},
           "Entity"], ",", 
         TemplateBox[{"\"type of substance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypeOfSubstance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypeOfSubstance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"typographic length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypographicLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ultimate tensile strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UltimateTensileStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UltimateTensileStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ungel point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UngelPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UngelPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uniaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UniaxialCompression\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"universal spectral irradiance (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"unnotched Izod impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UnnotchedIzodImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnnotchedIzodImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Unruh temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnruhTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upper critical magnetic flux density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpperCriticalMagneticFluxDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpperCriticalMagneticFluxDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"uptime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uptime rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UptimeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UptimeRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UpwardIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward scalar irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardScalarIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardScalarIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward vector irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardVectorIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardVectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergyDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum pump leakage rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", "\"VacuumPumpLeakageRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumPumpLeakageRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Valensi number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ValensiNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ValensiNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals constant a\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VanDerWaalsConstantA\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsConstantA\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals constant b\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VanDerWaalsConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsConstantB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VanDerWaalsRadius\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van 't Hoff factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VantHoffFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VantHoffFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeability\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPermeability\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPermeance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporResistance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporResistivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vascular resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VascularResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vector irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VectorIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDeceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle distance traveled\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VehicleDistanceTraveled\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Velocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Velocity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity distribution function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VelocityDistributionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VelocityDistributionFunction\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"Verdet constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VerdetConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VerdetConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Verdet constant (for the magnetic field)\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VerdetConstantInH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VerdetConstantInH\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vergence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VibrationalConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalEnergy\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibration strain gauge factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VibrationStrainGaugeFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationStrainGaugeFactor\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virtual work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirtualWork\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirtualWork\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virus count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirusCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirusCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virus deposition rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirusDepositionRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VirusDepositionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousDampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous drag torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousDragTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousDragTorque\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visit count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisitCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisitCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visit rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisitRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisitRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual acuity number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisualAcuityNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VisualAcuityNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisualAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual distance modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VisualDistanceModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualDistanceModulus\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual geometric albedo\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VisualGeometricAlbedo\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualGeometricAlbedo\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"void ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoidRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoidRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Voltage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Voltage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage phasor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltagePhasor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltagePhasor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage responsivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltageResponsivity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltageResponsivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage to frequency ratio\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltageToFrequencyRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltageToFrequencyRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter impedance change\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltmeterImpedanceChange\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoltmeterImpedanceChange\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter rating\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltMeterRating\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoltMeterRating\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter resistance change\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltmeterResistanceChange\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltmeterResistanceChange\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume change per temperature difference\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeChangePerTemperatureDifference\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangePerTemperatureDifference\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume cross section\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume density rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeDensityRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeDensityRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume erosion rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeErosionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeErosionRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowPerPerson\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowPerPerson\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate per time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeFlowRatePerTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeFlowRatePerTime\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume fraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFraction\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGainRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGainRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume growth rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGrowthRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGrowthRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume loss rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeLossRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeLossRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per money\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerMoney\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumePerMoney\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerPerson\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumePerPerson\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumePerVolume\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume scattering emission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringEmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringEmissionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeScatteringFunction\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"normalized volume scattering function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringFunctionNormalized\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringFunctionNormalized\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering phase function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringPhaseFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringPhaseFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering reflection function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringReflectionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringReflectionFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering source function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringSourceFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringSourceFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering transmission function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringTransmissionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringTransmissionFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume spread rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume synthesis rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSynthesisRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSynthesisRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric airflow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricAirflow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricAirflow\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricHeatCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric radioactive activity density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricRadioactiveActivityDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadioactiveActivityDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumetric radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric thermal expansion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricThermalExpansionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricThermalExpansionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumic total cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumicTotalCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vorticity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vorticity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity advection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VorticityAdvection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VorticityAdvection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"waffle count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaffleCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaffleCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake field\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakeFieldLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakeFieldLongitudinal\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WakePotentialLongitudinal\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transversal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialTransversal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakePotentialTransversal\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"walking speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"warping constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water potential\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterPotential\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaterPotential\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave amplitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAmplitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAttenuationCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength temperature product\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"WavelengthTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WavelengthTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"wave mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WavePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WavePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakCoupling\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakCoupling\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak mixing angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakMixingAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakMixingAngle\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearFactor\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weber number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeberNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeberNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wedge count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WedgeCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WedgeCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Weight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Weight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weiss constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WeissConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weissenberg number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissenbergNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeissenbergNumber\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBiomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBiomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet bulb globe temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WetBulbGlobeTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wetted perimeter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Wiedemann\[Hyphen]Franz law ratio\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WiedemannFranzLawRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WiedemannFranzLawRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wilting point\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WiltingPoint\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WiltingPoint\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"winding count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindingCount\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing loading\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingLoading\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingLoading\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wingspan\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"current\[Hyphen]carrying capacity of a wire\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WireCurrentCarryingCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WireCurrentCarryingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Wolfram credit count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WolframCreditCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WolframCreditCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Womersley number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WomersleyNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WomersleyNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word correct count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCorrectCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WordCorrectCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word per page\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordPerPage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordPerPage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word size\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordSize\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordSize\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Work\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Work\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkFunction\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkFunction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkingTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work per weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkPerWeight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkPerWeight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to elastic limit\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to maximum load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToMaximumLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkToMaximumLoad\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"world population\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorldPopulation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorldPopulation\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray brilliance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"XRayBrilliance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayBrilliance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray detector sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"XRayDetectorSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayDetectorSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YardYield\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YardYield\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn inverse linear density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"YarnInverseLinearDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yaw\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Yaw\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Yaw\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yield strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Young modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"YoungModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Yukawa coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YukawaCoupling\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YukawaCoupling\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zenith angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZenithAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZenithAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zero\[Hyphen]point energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zeroth\[Hyphen]order rate constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ZerothOrderRateConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ZerothOrderRateConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zoomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"]}], "}"}], Short[#, 5]& ], 
   "line" -> 1, "sessionID" -> 19507201263403742062, "byteCount" -> 487336, 
   "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8763345678499255`*^9, 3.876336859139018*^9},
 CellLabel->"Out[1]=",
 CellID->320434115,ExpressionUUID->"40044ebc-ec56-41eb-b56d-a4af7859a30c"]
}, Open  ]],

Cell["How many physical quantities are there?", "Text",
 CellChangeTimes->{{3.876334567441903*^9, 3.8763346258540077`*^9}, {
  3.8763353324596534`*^9, 3.876335367438491*^9}},
 CellID->49939769,ExpressionUUID->"8ba195ad-b9d2-4089-b2c2-f1fdc6d0fc73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8763345893206*^9, 3.876334591024543*^9}, 
   3.8763353695719457`*^9},
 CellLabel->"In[2]:=",
 CellID->145521628,ExpressionUUID->"5a0f3558-b505-4b5e-b23c-aa87ed10578c"],

Cell[BoxData["3046"], "Output",
 CellChangeTimes->{3.876335370413292*^9, 3.876336877622534*^9},
 CellLabel->"Out[2]=",
 CellID->77502944,ExpressionUUID->"37db8d16-644c-4936-9368-7e1a2fd41091"]
}, Open  ]],

Cell["Select physical quantities spanned by the Planck units.", "Text",
 CellChangeTimes->{{3.8763368828972883`*^9, 3.8763368927232113`*^9}},
 CellID->7310103,ExpressionUUID->"118071da-55bb-4b7c-98d4-e4299e326914"],

Cell["First work on how to get the dimensions for a unit example:", "Text",
 CellChangeTimes->{{3.876340657206299*^9, 3.8763406678113527`*^9}},
 CellID->585879,ExpressionUUID->"87a22544-9981-44d3-9577-e4dd59423b07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.876340668431157*^9, 3.8763406707438607`*^9}},
 CellLabel->"In[21]:=",
 CellID->20464229,ExpressionUUID->"ebe6046a-6b2f-4b80-9f9c-100c25d70975"],

Cell[BoxData[
 TemplateBox[{"\"Abbe number\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"AbbeNumber\""}], "]"}], 
   "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbbeNumber\\\"]\"", 
   "\"physical quantity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8763406710879745`*^9},
 CellLabel->"Out[21]=",
 CellID->342103201,ExpressionUUID->"5910dd03-b93e-4807-a125-2506e76b7508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}], "[", 
  "\"\<Dimensions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.876340668431157*^9, 3.876340674737462*^9}},
 CellLabel->"In[22]:=",
 CellID->217079357,ExpressionUUID->"3a8cc0cf-a3a9-4891-b217-d9f24a87c53c"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.876340675045938*^9},
 CellLabel->"Out[22]=",
 CellID->374702278,ExpressionUUID->"f9b171d4-825e-48ee-b0d9-f4e0ecc627e4"]
}, Open  ]],

Cell["I'm going to try the next example:", "Text",
 CellChangeTimes->{{3.876340678548173*^9, 3.8763406874654875`*^9}},
 CellID->181442683,ExpressionUUID->"b8ae7f9a-19bf-4a9e-909a-2c436790c383"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Dimensions\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.876340668431157*^9, 3.8763406962697487`*^9}},
 CellLabel->"In[23]:=",
 CellID->167656822,ExpressionUUID->"08f36e8e-2ff4-43e0-ad8d-81807a47ae73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TimeUnit\"\>", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.876340696624585*^9},
 CellLabel->"Out[23]=",
 CellID->355149675,ExpressionUUID->"f03b81c6-4f68-43e1-8799-db7edbeab2ed"]
}, Open  ]],

Cell["Transpose the dimensions to isolate the dimensions:", "Text",
 CellChangeTimes->{{3.876340701768484*^9, 3.876340712552251*^9}},
 CellID->72070909,ExpressionUUID->"8c4dffa2-82b6-40b6-ab54-85a1f9cdc8d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Transpose", "@", 
  RowBox[{
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Dimensions\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8763407143290358`*^9, 3.876340716385829*^9}},
 CellLabel->"In[24]:=",
 CellID->1051509,ExpressionUUID->"9a01ed13-8253-4e94-9cb8-9e0dabac6257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8763407167412157`*^9},
 CellLabel->"Out[24]=",
 CellID->152743432,ExpressionUUID->"4b5820bf-cd66-4094-8dc5-1a06ca75d4e4"]
}, Open  ]],

Cell["I can also enter the transpose as a superscript tr.", "Text",
 CellChangeTimes->{{3.876340717988412*^9, 3.8763407342882504`*^9}},
 CellID->834400762,ExpressionUUID->"016d1a26-a414-4788-93a1-b0e381286857"],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Dimensions\>\"", "]"}], 
  "\[Transpose]"]], "Input",
 CellChangeTimes->{{3.8763407143290358`*^9, 3.876340742090332*^9}},
 CellLabel->"In[25]:=",
 CellID->344415345,ExpressionUUID->"33793613-ec48-4e71-9133-4194d924e0f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"TimeUnit\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.876340742519726*^9},
 CellLabel->"Out[25]=",
 CellID->615170608,ExpressionUUID->"90d4f2da-0864-4e3d-866b-e9effe57f9cf"]
}, Open  ]],

Cell["Get just the dimensions:", "Text",
 CellChangeTimes->{{3.8763407463083863`*^9, 3.8763407506085205`*^9}},
 CellID->207669800,ExpressionUUID->"03fc65f6-431c-4187-81b0-e6e5afcd4de4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  SuperscriptBox[
   RowBox[{
    RowBox[{
     RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Dimensions\>\"", "]"}], 
   "\[Transpose]"], "]"}]], "Input",
 CellChangeTimes->{{3.8763407532345157`*^9, 3.8763407541525393`*^9}},
 CellLabel->"In[26]:=",
 CellID->110823852,ExpressionUUID->"705c2dd3-1aa8-4544-a27b-dd4fdeb23aee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"LengthUnit\"\>", ",", "\<\"TimeUnit\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8763407544766254`*^9},
 CellLabel->"Out[26]=",
 CellID->13707685,ExpressionUUID->"aee931e8-e4a6-4fe7-a20d-912f2e1ad763"]
}, Open  ]],

Cell["\<\
Verify that the planck dimensions contain all of the dimensions of the second \
physical quantity:\
\>", "Text",
 CellChangeTimes->{{3.8763407565426865`*^9, 3.8763407742780323`*^9}},
 CellID->620538228,ExpressionUUID->"ef465df6-dd42-473b-82a9-f56627e594de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", 
     ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
   RowBox[{"First", "[", 
    SuperscriptBox[
     RowBox[{
      RowBox[{
       RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "\"\<Dimensions\>\"", "]"}], 
     "\[Transpose]"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763407755229917`*^9, 3.876340792800169*^9}},
 CellLabel->"In[27]:=",
 CellID->613867709,ExpressionUUID->"46836c27-0c1b-4e07-aeb7-5d578f374e42"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.876340793436262*^9},
 CellLabel->"Out[27]=",
 CellID->360618022,ExpressionUUID->"ab692096-fed7-45c0-a280-efed1bd7650d"]
}, Open  ]],

Cell["Verify that a case with a different quantity fails:", "Text",
 CellChangeTimes->{{3.876340796097952*^9, 3.8763408080426674`*^9}},
 CellID->569811375,ExpressionUUID->"5cf3f039-145e-499c-b39d-c8fecee12d77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", 
     ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<TimeUnit\>\"", ",", "\"\<ElectricCurrentUnit\>\""}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8763407755229917`*^9, 3.876340828643408*^9}},
 CellLabel->"In[28]:=",
 CellID->7251249,ExpressionUUID->"16ae7899-399d-4b89-a35f-149018aff1a8"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8763408289810286`*^9},
 CellLabel->"Out[28]=",
 CellID->211633835,ExpressionUUID->"38fad763-541e-45f6-a6ce-03428ccc3806"]
}, Open  ]],

Cell["\<\
I need to make First return something that will make quantities like the Abbe \
number with dimensions {} evaluate to false. I can do this with \
First[arguments, {False}. For example:\
\>", "Text",
 CellChangeTimes->{{3.876340831430483*^9, 3.8763408472256365`*^9}, {
  3.8763409206732073`*^9, 3.876340956463957*^9}},
 CellID->218568486,ExpressionUUID->"e1a319be-ad65-4278-bbfb-03535be18c94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContainsAll", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", 
     ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
   RowBox[{"First", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       RowBox[{
        RowBox[{"PhysicalQuantityData", "[", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Dimensions\>\"", "]"}], 
      "\[Transpose]"], ",", 
     RowBox[{"{", "False", "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.876340879372894*^9, 3.8763409082808647`*^9}},
 CellLabel->"In[33]:=",
 CellID->402820916,ExpressionUUID->"a800f65b-7c4a-476f-8742-87f42856e7f9"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8763408850290985`*^9, 3.8763409086178784`*^9}},
 CellLabel->"Out[33]=",
 CellID->610347574,ExpressionUUID->"8ba75b0f-8491-48dd-bb8f-60aec280fba3"]
}, Open  ]],

Cell["\<\
Select the quantities spanned by the dimensions of the Planck system:\
\>", "Text",
 CellChangeTimes->{{3.8763409604056797`*^9, 3.8763409734532924`*^9}},
 CellID->274640948,ExpressionUUID->"c08868a1-876c-40d9-be02-824ac9968496"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"quantitiesExpressibleInPlanckUnits", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"ContainsAll", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", 
         "\"\<MassUnit\>\"", ",", "\"\<TemperatureUnit\>\""}], "}"}], ",", 
       RowBox[{"First", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "\[Transpose]"], ",", 
         RowBox[{"{", "False", "}"}]}], "]"}]}], "]"}], "&"}], "]"}], "[", 
   RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8763409747306657`*^9, 3.876340998643834*^9}},
 CellLabel->"In[34]:=",
 CellID->98821221,ExpressionUUID->"b885486e-b9ec-4987-9fc8-e235df0f4a47"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         TemplateBox[{"\"absackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abseleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abseleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abserk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absnap\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute global warming potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteGlobalWarmingPotential\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteGlobalWarmingPotential\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absolute humidity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteHumidity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteHumidity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMass\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteVorticity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity vertical component\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteVorticityVerticalComponent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteVorticityVerticalComponent\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absop\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absop\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absop\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbed dose of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorbed dose rate of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseRateOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseRateOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Acceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Acceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration gradient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationGradient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration spectral density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationSpectralDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationSpectralDensity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"acceptor density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAttenutationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticImpedance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcousticImpedance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acousto\[Hyphen]optical figure of merit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcoustoOpticalFigureOfMerit\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcoustoOpticalFigureOfMerit\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"actinic dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActinicDose\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActinicDose\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"action\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Action\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Action\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActiveEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActiveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActivePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"actual exhaust speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActualExhaustSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic bulk modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticBulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticBulkModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticCompressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic linear compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticLinearCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLinearCompressibility\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticWork\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aerodynamic force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AerodynamicForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AerodynamicForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"age\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AgriculturalYield\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYield\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AgriculturalYieldRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYieldRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airflow permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alpha disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlphaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlphaDisintegrationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularDiameterDistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular impulse\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularImpulse\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularImpulse\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularMomentum\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularMomentum\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular reciprocal lattice vector\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularReciprocalLatticeVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anharmonicity constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnharmonicityConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant B\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantB\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apoapsis distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApoapsisDistance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"applied moment of force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AppliedMomentOfForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AppliedMomentOfForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arc length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area heating capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaHeatingCapacity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaHeatingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area under flow\[Hyphen]volume curve\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaUnderFlowVolumeCurve\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaUnderFlowVolumeCurve\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"assignable area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssignableArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atmospheric pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtmosphericPressure\""}],
              "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicBindingEnergy\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicBindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"mass of atom\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"atomic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttenuationLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attractive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttractiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttractiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"authalic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AuthalicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"autoignition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AutoignitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingPace\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingPace\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageMovingSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial area moment of inertia\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AxialAreaMomentOfInertia\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialAreaMomentOfInertia\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialStress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialStress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"backward absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bandwidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bandwidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barycentric mass flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarycentricMassFlux\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarycentricMassFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baseband bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasebandBandwidth\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasebandBandwidth\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basis weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasisWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasisWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryEnergyCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityMassDensity\""}], "]"}], 
           
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity volume density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityVolumeDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityVolumeDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy self\[Hyphen]discharge rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergySelfDischargeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergySelfDischargeRate\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery power capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryPowerCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryPowerCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"beat frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeatFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bending moment of force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BendingMomentOfForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BendingMomentOfForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bending stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BendingStiffness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BendingStiffness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bend radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"best pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BestPace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BestPace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beta disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BetaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BetaDisintegrationEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BiaxialCompression\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BiaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BindingEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bin width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biogas energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BiogasEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"BiogasEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Biomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Biomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body mass index\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyMassIndex\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BodyMassIndex\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"body temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"boiling temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BoilingTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BoilingTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bollard pull\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BollardPull\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BollardPull\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bolometric luminosity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BolometricLuminosity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BolometricLuminosity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond force constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondForceConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondForceConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bond length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"brake specific fuel consumption\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BrakeSpecificFuelConsumption\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrakeSpecificFuelConsumption\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"breadth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"breaking length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BreakingLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"brightness temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BrightnessTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BrightnessTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Brillouin gain factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BrillouinGainFactor\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrillouinGainFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"broad\[Hyphen]beam attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BroadBeamAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BroadBeamAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bulk density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BulkDensity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bulk modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BulkModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bulk viscosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BulkViscosity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BulkViscosity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"buoyancy flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BuoyancyFlux\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"BuoyancyFlux\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"buoyancy force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BuoyancyForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BuoyancyForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Burgers vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BurgersVector\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bus speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BusSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BusSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cabbeling coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CabbelingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CabbelingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"caliber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"calibrated airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CalibratedAirspeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CalibratedAirspeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"caliper\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"canopy surface resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CanopySurfaceResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CanopySurfaceResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"capacitor insulation resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CapacitorInsulationResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CapacitorInsulationResistance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"capacitor leakage current rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CapacitorLeakageCurrentRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CapacitorLeakageCurrentRate\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Capacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Capacity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"carrier lifetime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CarrierLifetime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CarrierLifetime\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Cartesian coordinate z\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CartesianCoordinateZ\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateZ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Casimir force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CasimirForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"CasimirForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Casimir pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CasimirPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CasimirPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cell wall density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CellWallDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CellWallDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centrifugal acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CentrifugalAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentrifugalAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centrifugal force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CentrifugalForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentrifugalForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centripetal acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CentripetalAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentripetalAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"centripetal force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CentripetalForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CentripetalForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicAcousticImpedance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicAcousticImpedance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"characteristic frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicMass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicMass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic radius\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicSpeed\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharacteristicStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"characteristic time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicTime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicTime\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"charge radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Charpy impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharpyImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharpyImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Charpy notched impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CharpyNotchedImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharpyNotchedImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"chemical energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChemicalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemicalEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chemical mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChemicalMassDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemicalMassDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chemistry electron density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ChemistryElectronDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChemistryElectronDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ch\[EAcute]zy coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChezyCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChezyCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chiller efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillerEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChillerEfficiency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"chill temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChillTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circulation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circulation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circulation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circulation area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CirculationArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CirculationArea\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circumference\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Circumference\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"circumradius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cleavage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Cleavage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Cleavage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"climate change velocity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ClimateChangeVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClimateChangeVelocity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"clock rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ClockRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClockRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cloud point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CloudPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CloudPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"cogging torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoggingTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoggingTorque\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cohesive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CohesiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CohesiveForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil core factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilCoreFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilCoreFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil effective area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilEffectiveArea\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"coil effective length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"color temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ColorTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ColorTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"column density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ColumnDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ColumnDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"combustion engine emission\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CombustionEngineEmissions\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CombustionEngineEmissions\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"committed dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommittedDose\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommittedDose\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"committed dose equivalent\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CommittedDoseEquivalent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommittedDoseEquivalent\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"common area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommonArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CommonArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"community biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CommunityBiomass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CommunityBiomass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"comoving distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingDistance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"comoving transverse distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ComovingTransverseDistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingTransverseDistance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compressibility\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Compressibility\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"Compressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Compression\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Compression\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"compressive strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CompressiveStrength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CompressiveStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Compton wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComptonWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"condensed matter physics angular wavenumber\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterPhysicsAngularWavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsAngularWavenumber\\\"]\"", "\"physical quantity\""},
           "Entity"], ",", 
         TemplateBox[{"\"condensed matter physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"condensed matter relaxation time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CondensedMatterRelaxationTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterRelaxationTime\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"contact\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"contact density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ContactDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ContactDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"convective available potential energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ConvectiveAvailablePotentialEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ConvectiveAvailablePotentialEnergy\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"tonnage rating\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoolingTonnageRating\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoolingTonnageRating\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"core body temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoreBodyTemperature\""}],
              "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoreBodyTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoriolisAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis deceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CoriolisDeceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coriolis force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoriolisForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoriolisForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"correlated color temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CorrelatedColorTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CorrelatedColorTemperature\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"cosmological vacuum energy density length\[Hyphen]based \
proportionality factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFac\
tor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb attraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombAttraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoulombAttraction\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoulombForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Coulomb repulsion\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CoulombRepulsion\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoulombRepulsion\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"covalent radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CovalentRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"CPU speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CPUSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CPUSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"crackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Crackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Crackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"creep rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CreepRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"CreepRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"creep strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CreepStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CreepStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalTemperature\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"critical volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cross sectional area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CrossSectionalArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CrossSectionalArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cumulative radon exposure\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"CumulativeRadonExposure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CumulativeRadonExposure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Curie constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurieConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Curie temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurieTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"curvature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Curvature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Curvature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"curvature vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CurvatureVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CurvatureVorticity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cutoff frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffFrequency\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cutoff wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CutoffWavelength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cyclotron frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CyclotronFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CyclotronFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"cylinder stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"CylinderStress\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CylinderStress\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"damping coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DampingCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"data transfer time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DataTransferTime\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DataTransferTime\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"deadweight tonnage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DeadweightTonnage\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DeadweightTonnage\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"de Broglie wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DeBroglieWavelength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Debye temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DebyeTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DebyeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"decadic absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DecadicLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DecadicLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Deceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Deceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density excess\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityExcess\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DensityExcess\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityGradient\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"density of vibrational states\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DensityOfVibrationalStates\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityOfVibrationalStates\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth of field\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"depth of focus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"dew point temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DewPointTemperature\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DewPointTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diagonal length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiagonalLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diameter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"diameter at breast height (1.3 meters above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"diameter at breast height (1.4 meters above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"dietary energy intake rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DietaryEnergyIntakeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"dietary recommended intake\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DietaryRecommendedIntake\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DietaryRecommendedIntake\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"differential flux per energy interval\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DifferentialFluxPerEnergyInterval\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialFluxPerEnergyInterval\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"differential radar reflectivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DifferentialRadarReflectivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialRadarReflectivity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"diffusion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiffusionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiffusionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diffusion flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiffusionFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diffusion length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionLength\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diffusion permeability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiffusionPermeability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionPermeability\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"diffusive coefficient A\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DiffusiveCoefficientA\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusiveCoefficientA\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"directional attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"DirectionalAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DirectionalAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"838"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{
          "\"spectral radiant energy density (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantEnergyDensityWithRespectToWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantEnergyDensityWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant energy density (with respect to wavenumber)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantEnergyDensityWithRespectToWavenumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantEnergyDensityWithRespectToWavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectral radiant energy fluence\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantEnergyFluence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantEnergyFluence\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{
          "\"spectral radiant exitance (with respect to frequency)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExitanceWithRespectToFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExitanceWithRespectToFrequency\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant exitance with respect to wavelength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExitanceWithRespectToWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExitanceWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant exitance (with respect to wavenumber)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExitanceWithRespectToWavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExitanceWithRespectToWavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant exposure with respect to frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExposureWithRespectToFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExposureWithRespectToFrequency\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant exposure with respect to wavelength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantExposureWithRespectToWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantExposureWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectral radiant flux (with respect to frequency)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantFluxWithRespectToFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantFluxWithRespectToFrequency\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"spectral radiant flux (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectralRadiantFluxWithRespectToWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralRadiantFluxWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectroscopic term value\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectroscopicTermValue\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicTermValue\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spectroscopic wavenumber\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SpectroscopicWavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicWavenumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Speed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Speed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"speed squared\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedSquared\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedSquared\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"x\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedX\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"y\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedY\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"z\[Hyphen]component of speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedZ\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedZ\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spherical irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SphericalIrradiance\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SphericalIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spin\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Spin\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Spin\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"spring constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SpringConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpringConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stagnation temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StagnationTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StagnationTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"standard gravitational parameter\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StandardGravitationalParameter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StandardGravitationalParameter\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"static friction force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StaticFrictionForce\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StaticFrictionForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"static pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StaticPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StaticPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Stefan\[Hyphen]Boltzmann constant unit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 1 dimension\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits1D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits1D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 2 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits2D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits2D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 4 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits4D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits4D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"Stefan\[Hyphen]Boltzmann constant unit in 5 dimensions\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StefanBoltzmannConstantUnits5D\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StefanBoltzmannConstantUnits5D\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"stellar luminosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StellarLuminosity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StellarLuminosity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Stiffness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Stiffness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"storage modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StorageModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StorageModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stowage factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StowageFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StowageFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain noise density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainNoiseDensity\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StrainNoiseDensity\\\"]\"",
            "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StrainRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"strain sensitivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StrainSensitivity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Stress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Stress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StressCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StressCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress corrosion cracking fracture toughness\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StressCorrosionCrackingFractureToughness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StressCorrosionCrackingFractureToughness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress\[Hyphen]energy tensor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StressEnergyTensor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StressEnergyTensor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"stress optical coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"StressOpticalCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"StressOpticalCoefficient\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"struck measure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StruckMeasure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StruckMeasure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"structural load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"StructuralLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StructuralLoad\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"sublimation temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SublimationTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SublimationTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"superconductor coherence length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SuperconductingCoherenceLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"superconduction transition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SuperconductionTransitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductionTransitionTemperature\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface energy density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SurfaceEnergyDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceMassDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceMassDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface power density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfacePowerDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfacePowerDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfacePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfacePressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"surface tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"swimming speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SwimmingSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SwimmingSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"synchotron frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SynchotronFrequency\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SynchotronFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"synthesis gas flow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"SynthesisGasFlow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SynthesisGasFlow\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"systematic vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"SystematicVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SystematicVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"tachyonic speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TachyonicSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TachyonicSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tangential acceleration\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TangentialAcceleration\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TangentialAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tangential speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TangentialSpeed\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TangentialSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tare area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TareArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tare weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TareWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tear strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TearStrength\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TearStrength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TemperaturePerMass\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TemperaturePerMass\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"temperature per pressure\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TemperaturePerPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TemperaturePerPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tempergy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tempergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tempergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TensileImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TensileImpactStrength\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile stiffness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStiffness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileStiffness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStress\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileStress\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile toughness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileToughness\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileToughness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tensile yield strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TensileYieldStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileYieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tension\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tension\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal capacitance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalCapacitance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCapacitance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thermal de Broglie wavelength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalDeBroglieWavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalDeBroglieWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal diffusion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermalDiffusionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDiffusionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thermal diffusivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalDiffusivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDiffusivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal inductance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermal time constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalTimeConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalTimeConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic beta\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermodynamicBeta\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermodynamicBeta\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic density of states\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermodynamicDensityOfStates\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermodynamicDensityOfStates\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"thermodynamic free energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermodynamicFreeEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermodynamicFreeEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermodynamic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermodynamicWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermodynamicWork\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermoelectromotive force\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermoelectromotiveForce\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermoelectromotiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thermophoretic velocity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThermophoreticVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermophoreticVelocity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thickness\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thickness frequency product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThicknessFrequencyProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThicknessFrequencyProduct\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"thin film permeability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThinFilmPermeability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThinFilmPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"third ionization energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThirdIonizationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThirdIonizationEnergy\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thrust\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Thrust\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thrust\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"thrust specific fuel consumption\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ThrustSpecificFuelConsumption\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThrustSpecificFuelConsumption\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"tidal energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TidalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TidalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tidal power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TidalPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TidalPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time\[Hyphen]averaged sound intensity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TimeAveragedSoundIntensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeAveragedSoundIntensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeConstant\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeConstant\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time difference\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeDifference\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimeDifference\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimePerArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimePerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimePerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time shift\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeShift\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeShift\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time squared\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeSquared\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeSquared\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"time temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TimeTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TimeTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tomperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tomperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tomperature\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tonnage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tonnage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tonnage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Torque\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Torque\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorqueGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorqueGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorsionalConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentum\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentum\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total floor area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalFloorArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radioactive activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioactiveActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalRadioactiveActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalScatteringCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"total surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalSurfaceArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"toughness modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ToughnessModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ToughnessModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"first Townsend coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"track gauge\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer area product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerAreaProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer core geometry coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transformer specific weight\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSpecificWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSpecificWeight\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transformer VA density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerVADensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerVADensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"translational damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TranslationalDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TranslationalDampingCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transpiration rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TranspirationRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TranspirationRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transportation cost\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransportationCost\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransportationCost\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAirspeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAirspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueVaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueVaporPressure\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"turbulent kinetic energy dissipation rate per mass\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurbulentKineticEnergyDissipationRatePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TurbulentKineticEnergyDissipationRatePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turnover frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnoverFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"enzymology turnover number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurnoverNumberEnzymology\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverNumberEnzymology\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twistability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Twistability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Twistability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"typographic length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypographicLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ultimate tensile strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UltimateTensileStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UltimateTensileStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ungel point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UngelPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UngelPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uniaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UniaxialCompression\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"universal spectral irradiance (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"unnotched Izod impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UnnotchedIzodImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnnotchedIzodImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Unruh temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnruhTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uptime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UpwardIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward scalar irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardScalarIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardScalarIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward vector irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardVectorIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardVectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergyDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum pump leakage rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", "\"VacuumPumpLeakageRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumPumpLeakageRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VanDerWaalsRadius\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeability\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPermeability\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPermeance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporResistance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporResistivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vascular resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VascularResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vector irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VectorIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDeceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle distance traveled\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VehicleDistanceTraveled\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Velocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Velocity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity distribution function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VelocityDistributionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VelocityDistributionFunction\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"vergence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VibrationalConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalEnergy\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibration strain gauge factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VibrationStrainGaugeFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationStrainGaugeFactor\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virtual work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirtualWork\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirtualWork\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousDampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous drag torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousDragTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousDragTorque\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume cross section\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume density rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeDensityRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeDensityRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume erosion rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeErosionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeErosionRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate per time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeFlowRatePerTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeFlowRatePerTime\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGainRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGainRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume growth rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGrowthRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGrowthRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume loss rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeLossRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeLossRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume spread rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume synthesis rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSynthesisRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSynthesisRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric airflow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricAirflow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricAirflow\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric radioactive activity density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricRadioactiveActivityDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadioactiveActivityDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumetric radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumic total cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumicTotalCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vorticity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vorticity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity advection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VorticityAdvection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VorticityAdvection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"walking speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"warping constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water potential\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterPotential\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaterPotential\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave amplitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAmplitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAttenuationCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WavelengthTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WavelengthTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"wave mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WavePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WavePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Weight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Weight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weiss constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WeissConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBiomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBiomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet bulb globe temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WetBulbGlobeTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wetted perimeter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing loading\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingLoading\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingLoading\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wingspan\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Work\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Work\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkFunction\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkFunction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkingTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work per weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkPerWeight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkPerWeight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to elastic limit\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to maximum load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToMaximumLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkToMaximumLoad\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray detector sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"XRayDetectorSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayDetectorSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YardYield\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YardYield\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn inverse linear density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"YarnInverseLinearDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yield strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Young modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"YoungModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zero\[Hyphen]point energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zoomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"]}], "}"}], Short[#, 5]& ], 
   "line" -> 34, "sessionID" -> 19507220242782537097, "byteCount" -> 217232, 
   "size" -> 5, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8763410111248603`*^9},
 CellLabel->"Out[34]=",
 CellID->621038680,ExpressionUUID->"ab948457-847b-4380-b84c-b9c931d639a7"]
}, Open  ]],

Cell["\<\
Select a random sample and replace quantities with planck units:\
\>", "Text",
 CellChangeTimes->{{3.8763408638202596`*^9, 3.8763408647852736`*^9}, {
  3.876341344233945*^9, 3.87634135710939*^9}},
 CellID->166670478,ExpressionUUID->"58b42f90-31b6-4b69-81de-122cb89cf887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"quantitiesExpressibleInPlanckUnits", ",", "19"}], "]"}]], "Input",
 CellChangeTimes->{{3.8763413577321024`*^9, 3.8763413625968523`*^9}},
 CellLabel->"In[36]:=",
 CellID->76158289,ExpressionUUID->"2a711d1d-ec24-4a7a-bf1b-cee881d90d35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"energy rate density\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyRateDensity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyRateDensity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"product area moment of inertia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"ProductAreaMomentOfInertia\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProductAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"irradiation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Irradiation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Irradiation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"specific enthalpy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificEnthalpy\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpecificEnthalpy\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"diffusion flux\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionFlux\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionFlux\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"root\[Hyphen]mean\[Hyphen]square speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RootMeanSquareSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RootMeanSquareSpeed\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"radiant spectral energy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiantSpectralEnergy\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadiantSpectralEnergy\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"extrusion rate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ExtrusionRate\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ExtrusionRate\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"damping coefficient\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DampingCoefficient\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"DampingCoefficient\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"stress\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Stress\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Stress\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"rainfall energy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RainfallEnergy\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RainfallEnergy\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal inductance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalInductance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalInductance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"cutoff frequency\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffFrequency\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffFrequency\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"tempergy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Tempergy\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tempergy\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"biomass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Biomass\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Biomass\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"periapsis distance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PeriapsisDistance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PeriapsisDistance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"spectral radiant energy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralRadiantEnergy\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpectralRadiantEnergy\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fermi temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"FermiTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Planck function\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PlanckFunction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlanckFunction\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.876341451073439*^9},
 CellLabel->"Out[36]=",
 CellID->57995569,ExpressionUUID->"4580ad0c-5431-4d90-b71f-12dfd02f352f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", 
      RowBox[{"Power", "@@@", 
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<TimeUnit\>\"", "->", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           StyleBox["\"t\"", Italic, StripOnInput -> False], 
           StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck times", 
          "\"PlanckTime\""},
         "Quantity"]}], ",", 
       RowBox[{"\"\<LengthUnit\>\"", "->", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           StyleBox["\"l\"", Italic, StripOnInput -> False], 
           StyleBox["\"P\"", Italic, StripOnInput -> False]], 
          "Planck lengths", "\"PlanckLength\""},
         "Quantity"]}], ",", 
       RowBox[{"\"\<MassUnit\>\"", "->", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           StyleBox["\"m\"", Italic, StripOnInput -> False], 
           StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck masses",
           "\"PlanckMass\""},
         "Quantity"]}], ",", 
       RowBox[{"\"\<TemperatureUnit\>\"", "->", 
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          SubscriptBox[
           StyleBox["\"T\"", Italic, StripOnInput -> False], 
           StyleBox["\"P\"", Italic, StripOnInput -> False]], 
          "Planck temperatures", "\"PlanckTemperature\""},
         "Quantity"]}]}], "}"}]}], "&"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["19", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["3040", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {
     Entity["PhysicalQuantity", "CurieConstant"], 
     Entity["PhysicalQuantity", "TrueAltitude"], 
     Entity["PhysicalQuantity", "AdiabaticBulkModulus"], 
     Entity["PhysicalQuantity", "ThermodynamicBeta"], 
     Entity["PhysicalQuantity", "WorkToElasticLimit"], 
     Entity["PhysicalQuantity", "SpectralBandwidth"], 
     Entity["PhysicalQuantity", "SpecificInternalEnergy"], 
     Entity["PhysicalQuantity", "ExchangeIntegral"], 
     Entity["PhysicalQuantity", "QuasiIsothermalLinearCompressibility"], 
     Entity["PhysicalQuantity", "Spin"], 
     Entity["PhysicalQuantity", "AttenuationLength"], 
     Entity["PhysicalQuantity", "SpectralForceSensitivity"], 
     Entity["PhysicalQuantity", "DryWeight"], 
     Entity["PhysicalQuantity", "MassChangeRate"], 
     Entity["PhysicalQuantity", "GaitSpeed"], 
     Entity["PhysicalQuantity", "PositiveCarrierLifetime"], 
     Entity["PhysicalQuantity", "TownsendCoefficient"], 
     Entity["PhysicalQuantity", "DietaryEnergyIntakeRate"], 
     Entity["PhysicalQuantity", "GroupSpeed"]},
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.876341366772496*^9, 3.8763414238383675`*^9}, {
  3.8763414588660192`*^9, 3.8763414697577343`*^9}},
 CellLabel->"In[38]:=",
 CellID->94736355,ExpressionUUID->"89cac3ef-dbb7-447d-8544-6e38f7703334"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Curie constant\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieConstant\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CurieConstant\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      SubscriptBox[
       StyleBox["\"T\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], 
      "Planck temperature", "\"PlanckTemperature\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"true altitude\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      SubscriptBox[
       StyleBox["\"l\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck length", 
      "\"PlanckLength\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"adiabatic bulk modulus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticBulkModulus\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticBulkModulus\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[InvisibleSpace]", "\")\""}], 
      "Planck mass per Planck length Planck time squared", 
      FractionBox["\"PlanckMass\"", 
       RowBox[{"\"PlanckLength\"", " ", 
         SuperscriptBox["\"PlanckTime\"", "2"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"thermodynamic beta\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermodynamicBeta\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermodynamicBeta\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[InvisibleSpace]", "\")\""}], 
      "Planck time squared per Planck mass Planck length squared", 
      FractionBox[
       SuperscriptBox["\"PlanckTime\"", "2"], 
       RowBox[{
         SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"work to elastic limit\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[InvisibleSpace]", "\")\""}], 
      "Planck mass per Planck length Planck time squared", 
      FractionBox["\"PlanckMass\"", 
       RowBox[{"\"PlanckLength\"", " ", 
         SuperscriptBox["\"PlanckTime\"", "2"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"spectral bandwidth\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralBandwidth\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpectralBandwidth\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
      "Planck length squared", 
      SuperscriptBox["\"PlanckLength\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"specific internal energy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificInternalEnergy\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpecificInternalEnergy\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
      "Planck length squared per Planck time squared", 
      FractionBox[
       SuperscriptBox["\"PlanckLength\"", "2"], 
       SuperscriptBox["\"PlanckTime\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"exhange integral\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ExchangeIntegral\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ExchangeIntegral\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
      "Planck mass Planck length squared per Planck time squared", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
       SuperscriptBox["\"PlanckTime\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"quasi\[Hyphen]isothermal linear compressibility\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"QuasiIsothermalLinearCompressibility\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuasiIsothermalLinearCompressibility\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck length Planck time squared per Planck mass", 
      FractionBox[
       RowBox[{"\"PlanckLength\"", " ", 
         SuperscriptBox["\"PlanckTime\"", "2"]}], "\"PlanckMass\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"spin\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Spin\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Spin\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck mass Planck length squared per Planck time", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
       "\"PlanckTime\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"attenuation length\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttenuationLength\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      SubscriptBox[
       StyleBox["\"l\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck length", 
      "\"PlanckLength\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"spectral force sensitivity\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralForceSensitivity\""}],
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralForceSensitivity\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], 
         RowBox[{"3", "/", "2"}]]}], 
      "Planck mass Planck length per Planck time to the 3/2", 
      FractionBox[
       RowBox[{"\"PlanckLength\"", " ", "\"PlanckMass\""}], 
       SuperscriptBox["\"PlanckTime\"", 
        RowBox[{"3", "/", "2"}]]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dry weight\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DryWeight\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"DryWeight\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      SubscriptBox[
       StyleBox["\"m\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck mass", 
      "\"PlanckMass\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mass change rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MassChangeRate\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassChangeRate\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck mass per Planck time", 
      FractionBox["\"PlanckMass\"", "\"PlanckTime\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"gait speed\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"GaitSpeed\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"GaitSpeed\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck length per Planck time", 
      FractionBox["\"PlanckLength\"", "\"PlanckTime\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"positive carrier lifetime\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PositiveCarrierLifetime\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositiveCarrierLifetime\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], 
      SubscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck time", 
      "\"PlanckTime\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"first Townsend coefficient\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "reciprocal Planck length", 
      FractionBox["1", "\"PlanckLength\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
      "Planck mass Planck length squared per Planck time cubed", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
       SuperscriptBox["\"PlanckTime\"", "3"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"group speed\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"GroupSpeed\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"GroupSpeed\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], 
        "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]]}], 
      "Planck length per Planck time", 
      FractionBox["\"PlanckLength\"", "\"PlanckTime\""]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.876341460246709*^9, 3.8763414704244375`*^9}},
 CellLabel->"Out[38]=",
 CellID->171677995,ExpressionUUID->"1af0ef65-055e-409c-b8d0-69898dac520f"]
}, Open  ]],

Cell["\<\
I want to expand the dataset for each physical quantity. I can do this by \
first looking at the dataset for a quantity:\
\>", "Text",
 CellChangeTimes->{{3.8763415473456726`*^9, 3.876341570004485*^9}},
 CellID->258071238,ExpressionUUID->"5e07d64f-ded0-4946-8d4f-6eba27c42436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"dietary energy intake rate\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
      "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8763415238054066`*^9, 3.876341527827508*^9}, {
  3.8763415777421665`*^9, 3.8763415876483345`*^9}},
 CellLabel->"In[42]:=",
 CellID->124196404,ExpressionUUID->"77cd7b0f-f1e1-4493-b99b-064ed6b66369"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["PhysicalQuantity", "Abbreviations"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "AlgebraicTypes"] -> {
        "positive real", "scalar"}, 
       EntityProperty["PhysicalQuantity", "AlternateNames"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "BasePhysicalQuantity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "CanonicalUnit"] -> 
       Quantity[1, "Days"^(-1) "DietaryCalories"], 
       EntityProperty["PhysicalQuantity", "Classes"] -> {}, 
       EntityProperty[
        "PhysicalQuantity", "Dimensions"] -> {{"LengthUnit", 2}, {
         "MassUnit", 1}, {"TimeUnit", -3}}, 
       EntityProperty["PhysicalQuantity", "EntityClasses"] -> {}, 
       EntityProperty["PhysicalQuantity", "Instances"] -> 
       Missing["NotApplicable"], EntityProperty["PhysicalQuantity", "Name"] -> 
       "dietary energy intake rate", 
       EntityProperty["PhysicalQuantity", "NamedSIUnit"] -> 
       Quantity[1, "Watts"], 
       EntityProperty["PhysicalQuantity", "PhysicalPropertyType"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "QuantityVariable"] -> 
       QuantityVariable["DietaryEnergyIntakeRate"], 
       EntityProperty["PhysicalQuantity", "SIBaseUnit"] -> 
       Quantity[1, "Kilograms" "Meters"^2 "Seconds"^(-3)], 
       EntityProperty["PhysicalQuantity", "SIUnit"] -> Quantity[1, "Watts"], 
       EntityProperty["PhysicalQuantity", "StandardIdentifiers"] -> <||>, 
       EntityProperty["PhysicalQuantity", "StandardSymbols"] -> <||>, 
       EntityProperty["PhysicalQuantity", "Symbols"] -> {}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Path" -> {}, "DisplayedRowCount" -> 18, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 18, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"abbreviations\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"algebraic types\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"positive real", "scalar"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"positive real", "scalar"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"alternate names\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"base physical quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"canonical unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  
                  RowBox[{
                   "\"Cal\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"day\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Classes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{{"LengthUnit", 2}, {"MassUnit", 1}, {
                    "TimeUnit", -3}}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{{"LengthUnit", 2}, {"MassUnit", 1}, {
                    "TimeUnit", -3}}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Dimensions"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "EntityClasses"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"instances\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["dietary energy intake rate", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"named SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"W\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"physical property type\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quantity variable\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"DietaryEnergyIntakeRate\""}, 
                  "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    
                    RowBox[{
                    "Quantity variable:", " dietary energy intake rate"}], 
                    TooltipStyle -> "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI base unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", 
                  RowBox[{"\"kg\"", "\[ThinSpace]", 
                    SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", 
                    "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"W\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard identifiers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardIdentifiers"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[<||>, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[<||>, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Symbols"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{425., {238.9206298828125, 244.0793701171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{425., {238.9206298828125, 244.0793701171875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8763415243737497`*^9, 3.876341532414982*^9}, {
  3.8763415796807632`*^9, 3.876341589330352*^9}},
 CellLabel->"Out[42]=",
 CellID->680142903,ExpressionUUID->"5b856a06-4378-44e6-83b3-d4fbb07220e3"]
}, Open  ]],

Cell["I can also analyze the association:", "Text",
 CellChangeTimes->{{3.8763416114981785`*^9, 3.876341621284446*^9}},
 CellID->192896050,ExpressionUUID->"cc0f5e0f-0634-4a82-a475-465e07aa373b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"dietary energy intake rate\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
      "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
   "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8763415238054066`*^9, 3.876341527827508*^9}, {
  3.8763415777421665`*^9, 3.8763416077622995`*^9}},
 CellLabel->"In[43]:=",
 CellID->308299939,ExpressionUUID->"5b935693-25b9-418a-bb9e-d12cf24173cf"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
       "\"Cal\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"day\""}], "dietary Calorie per day", 
      FractionBox["\"DietaryCalories\"", "\"Days\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"dietary energy intake rate\"\>"}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"DietaryEnergyIntakeRate\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " dietary energy intake rate"}], 
       TooltipStyle -> "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "3"]}], 
      "kilogram meter squared per second cubed", 
      FractionBox[
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Meters\"", "2"]}], 
       SuperscriptBox["\"Seconds\"", "3"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8763416082685366`*^9},
 CellLabel->"Out[43]=",
 CellID->195273897,ExpressionUUID->"bce023e6-ef95-4054-a548-0405490186a6"]
}, Open  ]],

Cell["Convert the properties to canonical name:", "Text",
 CellChangeTimes->{{3.8763416273144255`*^9, 3.8763416612446833`*^9}},
 CellID->105955903,ExpressionUUID->"417eaf37-fef4-444b-8eef-96242766df7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"CanonicalName", ",", 
   RowBox[{
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763416618619566`*^9, 3.8763416746856365`*^9}},
 CellLabel->"In[45]:=",
 CellID->135846546,ExpressionUUID->"eb9be703-65a4-4734-9f85-c7b5cbf7c556"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
       "\"Cal\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"day\""}], "dietary Calorie per day", 
      FractionBox["\"DietaryCalories\"", "\"Days\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"dietary energy intake rate\"\>"}], 
   ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{"\"DietaryEnergyIntakeRate\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " dietary energy intake rate"}], 
       TooltipStyle -> "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "3"]}], 
      "kilogram meter squared per second cubed", 
      FractionBox[
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Meters\"", "2"]}], 
       SuperscriptBox["\"Seconds\"", "3"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.876341664965267*^9, 3.8763416749470234`*^9}},
 CellLabel->"Out[45]=",
 CellID->52092850,ExpressionUUID->"1d1a27df-2bac-456b-93f7-2207c2bc8992"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"KeyMap", "[", 
    RowBox[{"CanonicalName", ",", 
     RowBox[{
      TemplateBox[{"\"dietary energy intake rate\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DietaryEnergyIntakeRate\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
       "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<PlanckForm\>\"", "->", 
        RowBox[{"Times", "@@", 
         RowBox[{"Power", "@@@", 
          RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}]}]}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<TimeUnit\>\"", "->", 
          TemplateBox[{
            InterpretationBox["\[InvisibleSpace]", 1], 
            SubscriptBox[
             StyleBox["\"t\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False]], 
            "Planck times", "\"PlanckTime\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<LengthUnit\>\"", "->", 
          TemplateBox[{
            InterpretationBox["\[InvisibleSpace]", 1], 
            SubscriptBox[
             StyleBox["\"l\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False]], 
            "Planck lengths", "\"PlanckLength\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<MassUnit\>\"", "->", 
          TemplateBox[{
            InterpretationBox["\[InvisibleSpace]", 1], 
            SubscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False]], 
            "Planck masses", "\"PlanckMass\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<TemperatureUnit\>\"", "->", 
          TemplateBox[{
            InterpretationBox["\[InvisibleSpace]", 1], 
            SubscriptBox[
             StyleBox["\"T\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False]], 
            "Planck temperatures", "\"PlanckTemperature\""},
           "Quantity"]}]}], "}"}]}], "|>"}], "&"}], "[", 
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763416849750805`*^9, 3.876341762972861*^9}},
 CellLabel->"In[50]:=",
 CellID->61038929,ExpressionUUID->"957cc583-cb82-4702-ab40-5604da372c4c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
       "\"Cal\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"day\""}], "dietary Calorie per day", 
      FractionBox["\"DietaryCalories\"", "\"Days\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"dietary energy intake rate\"\>"}], 
   ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{"\"DietaryEnergyIntakeRate\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " dietary energy intake rate"}], 
       TooltipStyle -> "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "3"]}], 
      "kilogram meter squared per second cubed", 
      FractionBox[
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Meters\"", "2"]}], 
       SuperscriptBox["\"Seconds\"", "3"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"l\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
      "Planck mass Planck length squared per Planck time cubed", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
       SuperscriptBox["\"PlanckTime\"", "3"]]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8763416900778255`*^9, {3.876341721820143*^9, 3.876341729737105*^9}, 
   3.8763417632796097`*^9},
 CellLabel->"Out[50]=",
 CellID->37818568,ExpressionUUID->"f7b600b0-2537-4b5b-aa65-baa82975cb8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<question\>\"", "->", "#1"}], ",", 
        RowBox[{"\"\<NaturalUnitsData\>\"", "->", "#2"}]}], "|>"}], "&"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "\"\<PlanckForm\>\"", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Times", "@@", 
          RowBox[{"Power", "@@@", 
           RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}]}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<TimeUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"t\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck times", "\"PlanckTime\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<LengthUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"l\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck lengths", "\"PlanckLength\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<MassUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck masses", "\"PlanckMass\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<TemperatureUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"T\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck temperatures", "\"PlanckTemperature\""},
             "Quantity"]}]}], "}"}]}], "}"}]}], "}"}]}], "]"}], "&"}], "[", 
  TemplateBox[{"\"dietary energy intake rate\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
      "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
   "Entity"], "]"}]], "Input",
 CellChangeTimes->{{3.8763420362422013`*^9, 3.876342040363289*^9}, {
  3.876342084085791*^9, 3.8763421451550055`*^9}},
 CellLabel->"In[58]:=",
 CellID->32591521,ExpressionUUID->"1b612b8d-f325-4ae9-954d-f2593830aa63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"question\"\>", "\[Rule]", "\<\"PlanckForm\"\>"}], ",", 
    RowBox[{"\<\"NaturalUnitsData\"\>", "\[Rule]", 
     TemplateBox[{"1", 
       RowBox[{
         SubscriptBox[
          StyleBox["\"m\"", Italic, StripOnInput -> False], 
          StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
         SubsuperscriptBox[
          StyleBox["\"l\"", Italic, StripOnInput -> False], 
          StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
         "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
         SubsuperscriptBox[
          StyleBox["\"t\"", Italic, StripOnInput -> False], 
          StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
       "Planck mass Planck length squared per Planck time cubed", 
       FractionBox[
        RowBox[{
          SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
        SuperscriptBox["\"PlanckTime\"", "3"]]},
      "Quantity"]}]}], "\[RightAssociation]"}], "}"}]], "Output",
 CellChangeTimes->{{3.8763420946967883`*^9, 3.8763421459255114`*^9}},
 CellLabel->"Out[58]=",
 CellID->438339180,ExpressionUUID->"e4d4e516-cec4-417e-9351-faff80cf7ae9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "->", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<question\>\"", "->", "#1"}], ",", 
          RowBox[{"\"\<NaturalUnitsData\>\"", "->", "#2"}]}], "|>"}], "&"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "\"\<PlanckForm\>\"", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Times", "@@", 
            RowBox[{"Power", "@@@", 
             RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}]}]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\"\<TimeUnit\>\"", "->", 
              TemplateBox[{
                InterpretationBox["\[InvisibleSpace]", 1], 
                SubscriptBox[
                 StyleBox["\"t\"", Italic, StripOnInput -> False], 
                 StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                "Planck times", "\"PlanckTime\""},
               "Quantity"]}], ",", 
             RowBox[{"\"\<LengthUnit\>\"", "->", 
              TemplateBox[{
                InterpretationBox["\[InvisibleSpace]", 1], 
                SubscriptBox[
                 StyleBox["\"l\"", Italic, StripOnInput -> False], 
                 StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                "Planck lengths", "\"PlanckLength\""},
               "Quantity"]}], ",", 
             RowBox[{"\"\<MassUnit\>\"", "->", 
              TemplateBox[{
                InterpretationBox["\[InvisibleSpace]", 1], 
                SubscriptBox[
                 StyleBox["\"m\"", Italic, StripOnInput -> False], 
                 StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                "Planck masses", "\"PlanckMass\""},
               "Quantity"]}], ",", 
             RowBox[{"\"\<TemperatureUnit\>\"", "->", 
              TemplateBox[{
                InterpretationBox["\[InvisibleSpace]", 1], 
                SubscriptBox[
                 StyleBox["\"T\"", Italic, StripOnInput -> False], 
                 StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                "Planck temperatures", "\"PlanckTemperature\""},
               "Quantity"]}]}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], "&"}], 
   ",", 
   RowBox[{"{", 
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763421718140025`*^9, 3.8763421955288277`*^9}, {
  3.876342297950796*^9, 3.876342303173257*^9}},
 CellLabel->"In[64]:=",
 CellID->8006613,ExpressionUUID->"e6abd0f3-bc83-4820-b447-1b12261fc75c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   TemplateBox[{"\"dietary energy intake rate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DietaryEnergyIntakeRate\
\\\"]\"", "\"physical quantity\""},
    "Entity"], "\[Rule]", 
   RowBox[{
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"question\"\>", "\[Rule]", "\<\"PlanckForm\"\>"}], ",", 
       RowBox[{"\<\"NaturalUnitsData\"\>", "\[Rule]", 
        TemplateBox[{"1", 
          RowBox[{
            SubscriptBox[
             StyleBox["\"m\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False]], 
            "\[ThinSpace]", 
            SubsuperscriptBox[
             StyleBox["\"l\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
            "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
            SubsuperscriptBox[
             StyleBox["\"t\"", Italic, StripOnInput -> False], 
             StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
          "Planck mass Planck length squared per Planck time cubed", 
          FractionBox[
           RowBox[{
             SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
           SuperscriptBox["\"PlanckTime\"", "3"]]},
         "Quantity"]}]}], "\[RightAssociation]"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8763421957893095`*^9, 3.8763423034950476`*^9},
 CellLabel->"Out[64]=",
 CellID->36182783,ExpressionUUID->"7db7dc1e-5b85-4fba-8ad1-e374d7ac9be0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<PlanckForm\>\"", "->", "#1"}], "|>"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Times", "@@", 
          RowBox[{"Power", "@@@", 
           RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}]}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<TimeUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"t\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck times", "\"PlanckTime\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<LengthUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"l\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck lengths", "\"PlanckLength\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<MassUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"m\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck masses", "\"PlanckMass\""},
             "Quantity"]}], ",", 
           RowBox[{"\"\<TemperatureUnit\>\"", "->", 
            TemplateBox[{
              InterpretationBox["\[InvisibleSpace]", 1], 
              SubscriptBox[
               StyleBox["\"T\"", Italic, StripOnInput -> False], 
               StyleBox["\"P\"", Italic, StripOnInput -> False]], 
              "Planck temperatures", "\"PlanckTemperature\""},
             "Quantity"]}]}], "}"}]}], "}"}], "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"dietary energy intake rate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"specific internal energy\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificInternalEnergy\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpecificInternalEnergy\\\"]\"", "\"physical quantity\""},
      "Entity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8763421718140025`*^9, 3.8763421955288277`*^9}, {
  3.876342235823412*^9, 3.8763422755607457`*^9}, {3.876342306422721*^9, 
  3.876342306595727*^9}},
 CellLabel->"In[65]:=",
 CellID->101825039,ExpressionUUID->"f42b4450-2f8e-48a0-9edd-af49b0d14052"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"dietary energy intake rate\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DietaryEnergyIntakeRate\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DietaryEnergyIntakeRate\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SubscriptBox[
            StyleBox["\"m\"", Italic, StripOnInput -> False], 
            StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
           SubsuperscriptBox[
            StyleBox["\"l\"", Italic, StripOnInput -> False], 
            StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
           "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
           SubsuperscriptBox[
            StyleBox["\"t\"", Italic, StripOnInput -> False], 
            StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
         "Planck mass Planck length squared per Planck time cubed", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
          SuperscriptBox["\"PlanckTime\"", "3"]]},
        "Quantity"]}], "\[RightAssociation]"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"specific internal energy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificInternalEnergy\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpecificInternalEnergy\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\<\"PlanckForm\"\>", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SubsuperscriptBox[
            StyleBox["\"l\"", Italic, StripOnInput -> False], 
            StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
           "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
           SubsuperscriptBox[
            StyleBox["\"t\"", Italic, StripOnInput -> False], 
            StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
         "Planck length squared per Planck time squared", 
         FractionBox[
          SuperscriptBox["\"PlanckLength\"", "2"], 
          SuperscriptBox["\"PlanckTime\"", "2"]]},
        "Quantity"]}], "\[RightAssociation]"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.876342245770896*^9, 3.8763422760566998`*^9}, 
   3.8763423069578915`*^9},
 CellLabel->"Out[65]=",
 CellID->239625027,ExpressionUUID->"41f56986-fe1a-405e-92e5-92e20e7681d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<question\>\"", "->", "#1"}], ",", 
      RowBox[{"\"\<NaturalUnitsData\>\"", "->", "#2"}]}], "|>"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GenerateCombinatoricsWordProblems", "[", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<k\>\"", "->", "13"}], ",", 
         RowBox[{"\"\<n\>\"", "->", "23"}], ",", 
         RowBox[{"\"\<N\>\"", "->", "\"\<marbles\>\""}], ",", 
         RowBox[{"\"\<K\>\"", "->", "\"\<urns\>\""}], ",", 
         RowBox[{"\"\<distinct\>\"", "->", "\"\<marked\>\""}], ",", 
         RowBox[{"\"\<orbit\>\"", "->", "\"\<unmarked\>\""}]}], "|>"}], ",", 
       "\"\<twenty-fold-way\>\""}], "]"}], ",", 
     RowBox[{"FindCombinatoricsWordProblemSolutions", "[", 
      RowBox[{"13", ",", "23", ",", "\"\<twenty-fold-way\>\""}], "]"}]}], 
    "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8763415140059137`*^9, 3.876341518149578*^9}, {
  3.8763417877921343`*^9, 3.876341789838874*^9}, {3.8763418221956167`*^9, 
  3.876341882651668*^9}},
 CellID->27028090,ExpressionUUID->"050b9851-aa1a-4ef7-b32b-209a5db67857"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GenerateCombinatoricsWordProblems", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<k\>\"", "->", "13"}], ",", 
     RowBox[{"\"\<n\>\"", "->", "23"}], ",", 
     RowBox[{"\"\<N\>\"", "->", "\"\<marbles\>\""}], ",", 
     RowBox[{"\"\<K\>\"", "->", "\"\<urns\>\""}], ",", 
     RowBox[{"\"\<distinct\>\"", "->", "\"\<marked\>\""}], ",", 
     RowBox[{"\"\<orbit\>\"", "->", "\"\<unmarked\>\""}]}], "|>"}], ",", 
   "\"\<twenty-fold-way\>\""}], "]"}]], "Input",
 CellLabel->"In[54]:=",
 CellID->12809751,ExpressionUUID->"ade5bc92-e466-4459-b7df-5c5e27e6b729"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 marked\\n   marbles into 13 \
marked urns\\n   with no rules on placement?\"\>", 
     ",", "\<\"How many ways can you place 23 marked\\n   marbles into 13 \
unmarked urns\\n   with no rules on placement?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 marked marbles\\n   into 13 \
marked urns\\n   with at most one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 marked marbles\\n   into 13 \
unmarked urns\\n   with at most one marble per urn?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 marked marbles\\n   into 13 \
marked urns\\n   with at least one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 marked marbles\\n  \\n into 13 \
unmarked urns\\n   with at least one marble per urn?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place\\n 23 marked marbles\\n   into \
13 marked urns\\n   with exactly one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 marked marbles\\n   into 13 \
unmarked urns\\n   with exactly one marble per urn?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 marked ordered \\n   marbles \
into 13 marked urns\\n  \\n with no rules on placement?\"\>", 
     ",", "\<\"How many ways can you place 23 ordered marked\\n   marbles \
into 13 unmarked urns\\n   with no rules on placement?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 marked ordered marbles\\n   \
into 13 marked urns\\n   with at least one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 marked ordered marbles\\n   \
into 13 unmarked urns\\n   with at least one marble per urn?\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 unmarked \\n  marbles into 13 \
marked urns\\n   with no rules on placement?\"\>", 
     ",", "\<\"How many ways can you place 23 unmarked \\n  marbles into 13 \
unmarked urns\\n   with no rules on placement?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 unmarked marbles \\n  into 13 \
marked urns\\n   with at most one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 unmarked marbles \\n  into 13 \
unmarked urns\\n   with at most one marble per urn?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 unmarked marbles \\n  into 13 \
marked urns\\n   \\nwith at least one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 unmarked marbles \\n  into 13 \
unmarked urns\\n   with at least one marble per urn?\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"How many ways can you place 23 unmarked marbles\\n   into 13 \
marked urns\\n   with exactly one marble per urn?\"\>", 
     ",", "\<\"How many ways can you place 23 unmarked marbles\\n   into 13 \
unmarked urns\\n   with exactly one marble per urn?\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.876342016373513*^9},
 CellLabel->"Out[54]=",
 CellID->112268682,ExpressionUUID->"6c094ced-4e18-449c-ad46-b3acfb3aaa47"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindCombinatoricsWordProblemSolutions", "[", 
  RowBox[{"13", ",", "23", ",", "\"\<twenty-fold-way\>\""}], "]"}]], "Input",
 CellLabel->"In[53]:=",
 CellID->4100434,ExpressionUUID->"7886c24f-41bc-4791-841d-e46d20151a3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"504036361936467383", ",", "27644437"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7124122778572800", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6227020800", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9193186188426240000", ",", "202976401213"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1476337800", ",", "1868"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1144066", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "101"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8763420079023285`*^9},
 CellLabel->"Out[53]=",
 CellID->746130641,ExpressionUUID->"32a39776-eac1-4bd4-9acb-ac1d6a50be1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"mappedQuestionsAndSolutions", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<distinct-no-restriction\>\"", ",", "\"\<distinct-at-most-one\>\"", 
      ",", "\[IndentingNewLine]", "\"\<distinct-at-least-one\>\"", ",", 
      "\"\<distinct-exactly-one\>\"", ",", 
      "\"\<distinct-ordered-no-restriction\>\"", ",", 
      "\"\<distinct-ordered-at-least-one\>\"", ",", 
      "\"\<identical-no-restriction\>\"", ",", 
      "\"\<identical-at-most-one\>\"", ",", "\"\<identical-at-least-one\>\"", 
      ",", "\"\<identical-exactly-one\>\""}], "}"}], "->", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<distinct recipients\>\"", ",", 
           "\"\<identical recipients\>\""}], "}"}], "->", "#"}], "]"}], "&"}],
       ",", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<question\>\"", "->", "#1"}], ",", 
           RowBox[{"\"\<NaturalUnitsData\>\"", "->", "#2"}]}], "|>"}], "&"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GenerateCombinatoricsWordProblems", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<k\>\"", "->", "13"}], ",", 
              RowBox[{"\"\<n\>\"", "->", "23"}], ",", 
              RowBox[{"\"\<N\>\"", "->", "\"\<marbles\>\""}], ",", 
              RowBox[{"\"\<K\>\"", "->", "\"\<urns\>\""}], ",", 
              RowBox[{"\"\<distinct\>\"", "->", "\"\<marked\>\""}], ",", 
              RowBox[{"\"\<orbit\>\"", "->", "\"\<unmarked\>\""}]}], "|>"}], 
            ",", "\"\<twenty-fold-way\>\""}], "]"}], ",", 
          RowBox[{"FindCombinatoricsWordProblemSolutions", "[", 
           RowBox[{"13", ",", "23", ",", "\"\<twenty-fold-way\>\""}], "]"}]}],
          "}"}], ",", "2"}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8763415140059137`*^9, 3.876341518149578*^9}, {
  3.8763417877921343`*^9, 3.876341789838874*^9}, {3.8763418221956167`*^9, 
  3.8763418577382755`*^9}},
 CellID->235041670,ExpressionUUID->"e3c2e2fc-e93a-4dfb-8755-c9a15200dd37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", 
  InterpretationBox[
   RowBox[{"CloudObject", "[", 
    TemplateBox[{
     "\"https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data\"", 
      "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"},
     "HyperlinkURL"], "]"}],
   CloudObject[
   "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"],
   SelectWithContents->True], "]"}]], "Input",
 CellChangeTimes->{3.8763428830504584`*^9},
 CellLabel->"In[13]:=",
 CellID->154146669,ExpressionUUID->"dbb6da6a-7122-4ab6-829b-038694e0b549"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {9.78211430170387, {0., 9.78211430170387}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ColorFunction -> 
                 GrayLevel, ImageResolution -> 144.], AspectRatio -> 1, Axes -> 
                False, Background -> None, Frame -> None, FrameTicks -> None, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 
                    13.7794}, {6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 
                    13.8454}, {7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 
                    13.8994}, {6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, AspectRatio -> Automatic, ImageSize -> 12, 
                 PlotRange -> {{0., 15.}, {0., 15.}}], 
                Alignment -> {Right, Bottom}, ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit"]}, 
              Alignment -> {Right, Bottom}], StripOnInput -> False, 
             CacheGraphics -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {9.78211430170387, {0., 9.78211430170387}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             OverlayBox[{
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztWVFIU1EYHiYiIiEhPfRUERH02EshEmOIiISoSESIaC2RoTJXhEggERER
ESLRQ/QQIiEiPUSEiIREhIwhIowhMkIiYoiIyBhjfH3nv3dz13uv3s22Cfl/
3O3ce8/9v3P+/z//Oefecz2DbffKXC5XoJI/bd0P3UND3cPtNTzpGAj09Q54
7zYN3Pf2eoeu9pzgxTr9UI+gNCiFCGsIn/C5KJhFIsM6imtwFwHXcQNbGdbH
qIOnCHCjJYs1ggV8IxYRLBi+C8MPJDOsaZnHB0wVBNPYNkVTWvpp6cL404N1
W9ZB3m8oADxo3If1J1YQxqqOMBHBmiAi13fLUdZVUOU1HeFMOf2spiciZwlb
ViVJqRehXiV/JMIW+a/apJVVFI7BR8sEEGN5SaJlCSlqDkqNiDy7IcxhLWqN
YmKNcUypGO+Vs3GUoZrHOMs+KZdzpIP3XSxVsV9JXEQlcYGcP1HDa+V8XskE
6mndeuaGg1k30EovNKBPzl6jgpoq+K9iTZUrMcdyE7WfRC0tksRltqUal4T1
NK9W8Xklk2xbE48vx6zHrMesJWX1MGNUkmGtqKxB/s5xZowTxWPdlZ0jwFr7
n/R1h5G1Qiwzxg7Hmj3THcxqlPxZJ6jzCo+JorKmaDWFVFFZs+VosZ6n38tw
1rjiLTBrEjN4T8xoq/oisdrL0WeNcd+lVutmVh/XnCfJPOuQdYI7iUYezlam
t8h7A35T1QBO4Qwz7bxD1in2tJWHRStNrClsCswr9i38FiRMd6wlrmuyqG9g
HaPv/Higw0+bfnTIYJQodyN+2kbTE5ByzJZ1707ymuTf3GWF+wznO8nH9Gln
Fm5K/s1dVnHboKcTXfSMHWtCViTZ2DvynUnKpCcumTyb9SP95xcELODPC3Z6
BvFMRZdLzdz1Wbvq6wWAJ6PfTVvHhXVS3so0CVolhlWb/hVUJN9itlDaFatf
72sC3/GQ19TbgxY84QokZeewPGQdbxiVjWLHbmaOTd2vmv9DGEWz3usR7vLz
iyOjrOEV2kWnyuufdudCQwyH8Zy9VSOskZb5qjyQp6Q4Zp8yr2q6/JwxDLpM
GTHKzNDOuqp9Ps4Xe1cIThhDeCR2U3POMP1nspvlm9pfeMsIcAv3Hc7XFm9R
bCSpx4h6tplZJ2QdI7bvh2OM7S5pr4f/k8Y8ailxzkaDtKdibKWvIvZV930r
vcV+eoXZzb6/pQ3sZJux0icjw40O+ii6fwMPfBe+Q9/6dH3tlvo2MU0/pNv2
zphx82RVksACY1qzXQteZNkuxvmhMyc/OGdVkuQYHmGEpONkWWLuph5zXmZz
5zGX29eGFLnSo7CZEaONxn6uUXIcX3l841jFywzjA9re6YrmcKxK1jlTjSKY
b8Y+xPecQ8wRJfqK9Bee5yp4
                 "], {{0, 0}, {29.5, 29.5}}, {0, 255}, ColorFunction -> 
                 GrayLevel, ImageResolution -> 144.], AspectRatio -> 1, Axes -> 
                False, Background -> None, Frame -> None, FrameTicks -> None, 
                ImageSize -> {Automatic, 
                  Dynamic[
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 29.5}, {0, 29.5}}], 
               PaneBox[
                GraphicsBox[{
                  Thickness[0.0666667], {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.5, 1.}, {3.916, 1.}, {1., 3.916}, {1., 7.5}, {
                    1., 11.084}, {3.916, 14.}, {7.5, 14.}, {11.084, 14.}, {
                    14., 11.084}, {14., 7.5}, {14., 3.916}, {11.084, 1.}, {
                    7.5, 1.}}}]}, {
                   FaceForm[{
                    RGBColor[0.961, 0.961, 0.961], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{6.3018, 13.8604}, {6.3448, 13.8224}, {6.3878, 
                    13.7794}, {6.4298, 13.7324}, {6.6778, 13.7954}, {6.9228, 
                    13.8454}, {7.1638, 13.8874}, {6.8998, 13.9074}, {6.6038, 
                    13.8994}, {6.3018, 13.8604}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQzXiPibNrvoBDZJvFtaO6Wg5uU76xxc8QcJg+gb/K
TFvLYXnlcU2rSQIOQkv3HhRX03K4xADSIODQszOb86eClkPyuygnuwwBB2+Q
AaxaDv83VX/aECDgUGW22i78tqZD/Awf0R4vAYenn+Qv5c/XdFDqKy2U7hV0
uHY016Thu6YDiMv7QMghrSM59o6blsNSPwfhRGcRhxMzdk+b0K/lsPCH4bN1
S0Uddjg0PTp+Q8th+0WQA8QdMja/Kt4qqg21X8Jh9jPZ5S88tB0mna732P9X
3GEmUDt/lbbDtbA3+ruXizuEGmitFJ6g7QB2ThaCbwXSYC8G8X+utgPINboC
og5yQNP07LWBjjl8WfupsMPv0+9OHmbShoSHkDDINTN2X9NyuLXmV0yuq5BD
C6//+ilLtRz+tn+5fb1R0GGl8AWXGwVaDsycXfLJeYIO4OAL1nLwfsViImgm
6MBcwa2iYaflsFh555/2LwIOLz30/ivaajkAbUuVfITgSz6KEN9+UcDhnGTg
LWkbLYevQNOLjwlA/Gel5dDgsb9WdoeAA1D132+mWg5gB68WcDjitDbznqGW
A3r8AgDQ0ctg
                    "], {{3.7778, 12.8334}, {3.5278, 12.6464}, {3.3078, 
                    12.4414}, {3.1268, 12.2294}, {3.3328, 12.3744}, {3.5488, 
                    12.5134}, {3.7778, 12.6464}, {3.7738, 12.7104}, {3.7738, 
                    12.7724}, {3.7778, 12.8334}}, {{6.6368, 13.4714}, {6.9668,
                     13.0044}, {7.2878, 12.3314}, {7.5608, 11.6724}, {8.5148, 
                    11.9084}, {9.4438, 12.0174}, {10.3218, 11.9634}, {10.2298,
                     12.1494}, {10.1318, 12.3294}, {10.0238, 12.4944}, {
                    9.6438, 13.0864}, {9.1848, 13.4954}, {8.6808, 13.6954}, {
                    8.0458, 13.7164}, {7.3508, 13.6384}, {6.6368, 
                    13.4714}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQbffi5ppfMQIOnnr/Ff9+03BYXnlc02qSgENRV9+T
T/IaDvtrZS3SXQQddjg0PTp+Q82hrFCa98FaIYe/30ofzBFUdeDn3rqs0l3E
oSM59o5bs6qDBkjgp6jDxv1v5tm8UXXokk9+F3VI3IHPf/2UVA81h6Zitynf
2iQdvoO0L1VzmPKNLX6Gj7TDvUKQhWoOB1cs8XMQlnUwW20XHm2o7qCTKvko
Yrq0QwrQeOYfGg5VIOd5SzkogRwgo+Xgkpn/odVTEmL+CS2Hr7evNxYfE3cw
CjXQWjlZy4HVRNDMxlbMAeydIC0HkHHi20Uc8kwatjswaUH8oyvsEHhLuiZx
k6bDrPI5i5R3CjporRS+4BKh6YAePgAosYDV
                    "], {{7.6738, 11.3924}, {7.6758, 11.3864}, {7.6798, 
                    11.3794}, {7.6818, 11.3714}, {8.0108, 10.5424}, {8.3188, 
                    9.6174}, {8.5848, 8.6684}, {9.4528, 8.8744}, {10.2858, 
                    8.9404}, {11.0388, 8.8814}, {10.9878, 9.8874}, {10.7938, 
                    10.8434}, {10.4588, 11.6554}, {9.5868, 11.7194}, {8.6418, 
                    11.6304}, {7.6738, 11.3924}}, {{2.1998, 11.0654}, {1.9728,
                     10.5674}, {1.9298, 9.9504}, {2.0738, 9.2504}, {2.1148, 
                    9.0524}, {2.1688, 8.8544}, {2.2378, 8.6544}, {2.8098, 
                    9.2804}, {3.5448, 9.8744}, {4.4068, 10.3844}, {4.1488, 
                    11.0344}, {3.9038, 11.7494}, {3.8118, 12.3214}, {3.1858, 
                    11.9434}, {2.6408, 11.5174}, {2.1998, 11.0654}}, {{
                    11.3548, 8.8484}, {12.1358, 8.7434}, {12.8068, 8.4904}, {
                    13.2948, 8.1004}, {13.4048, 8.9724}, {13.3168, 9.8354}, {
                    13.0018, 10.6244}, {12.9808, 10.6744}, {12.9608, 
                    10.7244}, {12.9378, 10.7734}, {12.4408, 11.2104}, {
                    11.7128, 11.5044}, {10.7998, 11.6204}, {10.7978, 
                    11.6204}, {11.1208, 10.7934}, {11.3058, 9.8424}, {11.3548,
                     8.8484}}, CompressedData["
1:eJxTTMoPSmViYGAQB2IQbWazN2iaorBDR3LsHbdmFYetyyqPa1oJO7gzV3Cr
ZKg4JB6+rJ06U8Ths/yl/PjjSg4umfkfWj3FHFgXT7Ji5FV0yJ5VPmeRsoRD
fiPL0f6Ncg5v9Her83dLOswxXrTFvELewVe0x+sVi7SD1krhCy4SCg5g6/pk
HHZlc/5ckK7gAOSUFkrLOXz84hXZtkPBAaibe+syeYfNr4q3iv5WcLj6PEv7
23QFB5D2GwaKDn1sH8Q8BBQcTszYPW0Cv7LDDB+QBXIOJg3bHZoeqTgw3mPi
7Jov6+Ad2WZxrVXNQSdV8lHEdFkHa0bfFt5+NYdwkAP7ZR12AFUfn6Hm0FTs
NuVbm6zDIXG1YNbFag5L/RyEEw9LO2TdK+zqS1Fz0AA556ekw1zBpXsPiqs5
eL9iMRE0k4C4b7eqw4uba37F5Io5rJ+SCgxCVYcLV8OANog4AG0/mvtFxQE9
fAEgVZNo
                    "], {{2.3508, 8.3484}, {2.6768, 7.5344}, {3.2068, 
                    6.7164}, {3.8718, 5.9644}, {4.3768, 6.5444}, {5.0268, 
                    7.0754}, {5.7768, 7.5244}, {5.3048, 8.3884}, {4.8768, 
                    9.2624}, {4.5308, 10.0874}, {4.5288, 10.0944}, {4.5248, 
                    10.1004}, {4.5228, 10.1064}, {3.6468, 9.5864}, {2.9068, 
                    8.9804}, {2.3508, 8.3484}}, {{8.6648, 8.3814}, {8.9438, 
                    7.3674}, {9.1748, 6.3344}, {9.3418, 5.3704}, {9.8098, 
                    5.4794}, {10.2748, 5.5234}, {10.6978, 5.4854}, {10.9578, 
                    6.4934}, {11.0758, 7.5614}, {11.0508, 8.5894}, {10.3228, 
                    8.6544}, {9.5118, 8.5824}, {8.6648, 8.3814}}, {{11.0058, 
                    5.4504}, {11.4468, 5.3784}, {11.8088, 5.2254}, {12.0748, 
                    5.0074}, {12.6668, 5.8644}, {13.0678, 6.8104}, {13.2428, 
                    7.7584}, {12.8008, 8.1744}, {12.1448, 8.4454}, {11.3638, 
                    8.5544}, {11.3878, 7.5264}, {11.2678, 6.4624}, {11.0058, 
                    5.4504}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQnSr5KEJ8u4SDV3Wzvs8yWYelfg7CiYelHBpZjvYb
fpd0OK5pNen0fxmHzTyFa7qjxRy8X7GYCJrJOxj4LONyUxV2qJizSHnnH3mH
gD8SxdcnCTtcF/rkeD5NwSH96vMs7W/CDvcmt7dGXVZwiFhhetbaT8QBaMrt
DAdFh/qbtpURK0QcynUV5b+sUXR49HLqJp6PIg4z7gI1SCk5WCmDXCTqkMmQ
D3SKooP2t+l3J7NLOjyzX3J/n5+iw1bzH4dStGQd/jn/evv6gILD+impHclz
FRxAriplUnB4f/Kw09pMBYe/7V9uX2+Uc0g0CjXQ0oTyGWUdgKbwzdks7yC+
/SLDvSZphw9iHkAvyDvcud5Y7CYiBfWHnAN6+AAACRuBjw==
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBmIQrXla4PiuHxoOyfU3bStvCDoUrum+ncGg6ZDfyHK0
f6Ogg/a36Xcns2s6JIYEqS/oFHQAKd/Bq+mQG1a7bluSoIMgkNvbpuUAlNzw
MFPEgf2DmEdAjbbDM/sl9/fxSTg8EZE9+XS/toO4R8Afic/SDkCe/ZL52hD9
j6Qd3hywVPaq1nbY+PDl1E08Mg6sR/sNy3O1HVaYnrX2C5RxYAA5xF/bYdEW
8x+Hnsg4gJwZoaHtMCnmn/OvXFmHixNBDC0I/60sRN9ELYf9fHOMF5lIOYCs
u79PE+pOMYdssIc0HKyAtjbrCzsAPVF/c6+GQybYIiGI++5rOPw4lLIqIUTI
AT18AEBqh4k=
                    "], {{4.0748, 5.7404}, {4.7758, 4.9884}, {5.6068, 
                    4.3094}, {6.4978, 3.7704}, {6.7808, 4.0894}, {7.1348, 
                    4.3824}, {7.5428, 4.6364}, {6.9898, 5.4424}, {6.4338, 
                    6.3414}, {5.9218, 7.2614}, {5.1908, 6.8244}, {4.5598, 
                    6.3064}, {4.0748, 5.7404}}, {{12.1048, 4.5434}, {11.6738, 
                    3.9744}, {11.1638, 3.4514}, {10.5818, 2.9974}, {11.2228, 
                    3.2894}, {11.7948, 3.6654}, {12.2758, 4.1024}, {12.2638, 
                    4.1884}, {12.2398, 4.2704}, {12.2088, 4.3484}, {12.1818, 
                    4.4164}, {12.1468, 4.4804}, {12.1048, 4.5434}}, {{9.3908, 
                    5.0744}, {9.5178, 4.2904}, {9.5988, 3.5594}, {9.6258, 
                    2.9304}, {9.6868, 3.0344}, {9.7508, 3.1434}, {9.8178, 
                    3.2594}, {10.1518, 3.8474}, {10.4178, 4.5024}, {10.6168, 
                    5.1914}, {10.2358, 5.2134}, {9.8158, 5.1734}, {9.3908, 
                    5.0744}}, {{10.9268, 5.1604}, {10.7158, 4.4334}, {10.4338,
                     3.7394}, {10.0778, 3.1124}, {10.0388, 3.0464}, {10.0018, 
                    2.9814}, {9.9668, 2.9204}, {10.7238, 3.4334}, {11.3778, 
                    4.0644}, {11.8998, 4.7644}, {11.6678, 4.9614}, {11.3348, 
                    5.0974}, {10.9268, 5.1604}}, {{7.9738, 4.5394}, {8.4428, 
                    3.8754}, {8.9048, 3.2874}, {9.3298, 2.8244}, {9.3108, 
                    3.4554}, {9.2298, 4.1984}, {9.1008, 5.0004}, {8.9098, 
                    4.9434}, {8.7168, 4.8784}, {8.5268, 4.7994}, {8.3358, 
                    4.7214}, {8.1508, 4.6344}, {7.9738, 4.5394}}, {{6.7608, 
                    3.6164}, {7.3858, 3.2634}, {8.0338, 2.9834}, {8.6828, 
                    2.7984}, {8.7268, 2.7854}, {8.8338, 2.7564}, {8.9398, 
                    2.7244}, {9.0398, 2.6974}, {8.6218, 3.1634}, {8.1698, 
                    3.7414}, {7.7148, 4.3904}, {7.3448, 4.1634}, {7.0198, 
                    3.9004}, {6.7608, 3.6164}}, {{10.2408, 2.5324}, {10.2668, 
                    2.5324}, {10.9168, 2.5324}, {11.4838, 2.6774}, {11.9208, 
                    2.9564}, {12.0968, 3.2104}, {12.2088, 3.4574}, {12.2578, 
                    3.6944}, {11.6838, 3.2144}, {11.0018, 2.8204}, {10.2408, 
                    2.5324}}, {{3.0898, 3.6224}, {3.8778, 3.0654}, {4.8278, 
                    2.6724}, {5.8458, 2.4714}, {5.8868, 2.8144}, {6.0408, 
                    3.1724}, {6.3038, 3.5304}, {5.4078, 4.0704}, {4.5768, 
                    4.7454}, {3.8738, 5.4954}, {3.3818, 4.8524}, {3.1148, 
                    4.2124}, {3.0898, 3.6224}}, {{6.1418, 2.4214}, {7.0118, 
                    2.2854}, {7.9208, 2.2894}, {8.8168, 2.4504}, {8.7598, 
                    2.4654}, {8.7028, 2.4814}, {8.6458, 2.4974}, {8.6008, 
                    2.5104}, {7.9068, 2.7094}, {7.2208, 3.0064}, {6.5628, 
                    3.3794}, {6.3158, 3.0494}, {6.1728, 2.7224}, {6.1418, 
                    2.4214}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPcGwXFfxvrID7wPdCQt+MDpof5t+d3K7igOH7ezQ
+av/209pb426/EfF4WZ8mb+c2D/7dduS6m/aqsL5Jou2mP9wQvAv73ksIuuJ
4NtVRqww9VV1cJZ5/chM6p99KdMsDuk4VYdDbcvDTxn9s78u9MnxfJqqw4Fo
BcePyf/s5b/khNXmqTpc2Bz5deetf/bLuNxUS5tUHaKAvK6//+27Njx8OXWT
qoP3KxYTQTMGh3uTQQ5Udbjd9Tf1+5P/9kZA78ibqEH9w+AAtr9XzeHgiiV+
DsJMDi+yQD5Uc9i6rPK4phWzA0j67G9VB51UyUcR4kwO20He+6niEO1k9+Lm
GkYH9PABAEvkiL8=
                    "], {{6.1498, 2.1194}, {6.1628, 2.0444}, {6.1828, 
                    1.9714}, {6.2118, 1.9014}, {6.2428, 1.8234}, {6.2838, 
                    1.7524}, {6.3348, 1.6834}, {6.9868, 1.7054}, {7.6598, 
                    1.8374}, {8.3208, 2.0764}, {7.5918, 1.9954}, {6.8628, 
                    2.0124}, {6.1498, 2.1194}}, {{9.6158, 2.1214}, {9.5888, 
                    1.7654}, {9.5308, 1.4864}, {9.4438, 1.2884}, {9.5948, 
                    1.3354}, {9.7448, 1.3894}, {9.8948, 1.4504}, {10.0428, 
                    1.5094}, {10.1888, 1.5764}, {10.3288, 1.6484}, {10.0958, 
                    1.7424}, {9.8438, 1.9264}, {9.6158, 2.1214}}, {{6.6328, 
                    1.4014}, {6.8308, 1.2664}, {7.0858, 1.1684}, {7.3878, 
                    1.1094}, {7.9088, 1.2174}, {8.4168, 1.5134}, {8.8848, 
                    1.9794}, {8.1428, 1.6544}, {7.3798, 1.4604}, {6.6328, 
                    1.4014}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrVrKNItjtpJDjILjx+Qz/+1XJYQEqT9QdOjVeMu7
z+Cn/Y9DKasSRBQdDrUtDz9l9MX+n/Ovt68dFBwEXm5fz/z8g/3exyKyJ5cq
OOy61fU39fsH+2f2S+7v41N0eMg9eWVT4Ef7OcaLtphXKDoUnOu4dO/BR/vt
SfU3bSsVHWZqSUy9wvnJPl7ztMDxKkUHXWeZ14/MPtmv2wZUUKvooA2Szvhk
H7HC9Kx1n6JDnPcJdtvZnyHqdyHcA3TNAcvHaPK/FB0WXjN5b+H62T4R6J0F
nEoOp4yObNTL+2yvqyj/JUdMycEYxF382d4NFAAeSg4ZSjkVVUu/2Beu6b6d
0aDkEDZ/9dob8T/s0cMHAKszj7c=
                    "], CompressedData["
1:eJxdV3l8jOcWnsxkMpkZkcRMMpbMZJmZfDPzDbXkEuv7WFtqqVhaIk1T1BpK
KEUpilaVUNVaamkpsYfromoJJbVvJZSbqpIm1iQIWXDfrbm/X//wi295z5zz
PM95zvli3x2dNFir0WgK6D/2t+zr/345Rx+D7IP3VrbyF5Jho4tnHe8dXX29
5lmjgq3rHLhS/LhLv9mFZOKK75x7q+w414HdKSKrTm88e+myHS7P1Hl7RxSR
ygHpR1/ssKPbJyE9ti0uIm/ee2WfssCO1/vNTrx8tIgkhDdttT/JjjN1ev5W
b0oRSTtyUR1cx44paY37NPQVkX623ec1+VFg0YzlhcSQ+k3XiHlRYKfTEwrJ
rZkrT2/sEYVvw9ftz7HdIbt++DDX2+Lv5/dIqJndqQt+fPVDUrDVTY/UwbTK
Fu+f+bSUdOAF1kb7qLs3m9YtI/O63AlMWPj/a1Z9zgZr9XXiEHYiDPTwhfwb
5aTztx/HH55txrlLfWllGtQ9lBzTtsSEnA1ru8MSgCT+ggk8z7MBMo4ZWexx
mhYnGv+c3WCUGQylyaVaxI2cOGmdvwYYKktiddjRYNT3AT/VwCRa1aKTWtyo
n7n6WaNwnNvZ78ne316Qdm0Kr26eZMUf5i+zZvSslPnZcDttzeWEhxUSPxtW
bdpyJfWDSiLi2LDUV/urX41VJGbgg/7tDtjATnf+topc0ORrjXNtONCQvfGC
MLS7DLdB8KQBj/e2TeYfgPnjx9QLeccCTttNLb5+mTm1skUo9lbNeXwtT4+g
WlZy7HowukUwZE0YdCrl9V8MRnBZ5QSDoXEo2Qhe7nwDOC0XjGBZRA8MAsty
aJwJggc9TEMZQiZcmZ7RaXFZINb5GaImPLmWR+8Eyt83gybzlm23TtZpBsep
QitxMGE2C7dWK88bIXSuRbdH83uNcxnRmAtFi0Y8QDDieKE6mW8wPmF0XtKh
hyNyeLdHBvQcsWzCiu8C8TatrvVyA1I4oXosnMoqCoKHC9EAKo6Bp1KCMKV0
+xsjlhklb0GSXzMm8YQCwPskNBT67xe1COhWRQzFka+9MSUcM27mfrNvSRnx
ngzL/XGPBSeOtNsyLP8JadX9/MIBLywoYW2ZWEYKh6tlX6dYETap6aY2bz4l
S3bUGLP5cyu2LR786cCUZ6RDxf27h/ZakfDxbhqznETYj98ma604bIvvpf++
guxkrydbMSjleifdxJeERW8/qZbUnRYXf/rTaj8eJvEMQjIHuKbE24DQFU2+
+/fucGxmj3sYccvKfsCKPdt0f83zhIjrg5Hgcmgdggd3DzV3nogEh+f1ENSP
jX488nKkxDsEPL3fI0GbQV/LGgye37U6kh8dVn+2/Y+iCDsCafT7IQE49eD4
kXb1Y0CLT84++JgcXdBoQv3YKLC0mj17QPTsxhYbavZgiDwh4r4Fj6IvjE41
lJGz7136a/gmCxbcKqV3npAN/zrdsnvPv/F9THonKas/a2iBlRtfKam38m1K
iQVxz8vG31hRQg7WpBETLGjt/3VZgb2EcF+dZUEIS3voLfKiPSPAhlGcgGKB
97UoWZ8Gywvs6wt/iZF8vyBz59NEkmJxm6WT+px0ZHZ7NVaeryJj2QupcRie
P4b+r4L4siznOrzlrOZTN9Hs8rRxYc2QnXcydlUSKpoxc2u6wW04vZgs3bck
M7SFU/JUSITuYsHlk1xCWLnb06KRamBOXUJm92cKiEblSQZ0CUnlgnSAy8Vc
TNzjtcuClzugcGLuk3uU3i6THZLHOyST0bHKgSTxAmGoaB468AHtshv1rxAO
48JYHBm08Z3eSXcJHx9uF3rxxF4SwmgdGS/1osEehtSVeNlPAUjmA0uRPqaV
OCooDy3avU2nQ/lqCsROBXPWv0ktWCd0vkdBXsLDxI6vBoq6lytg3T2/VyA4
nt8oUo+BGMpg/EqByg0qELUZzIsUqcdAPKSobMlS0IwPBD2as3F0SAG3w116
0Zd5ivR7PcbtiqBQKtIf9VI3Hnz+fPDTW2l6HEtnRHswgBuIAU8pPOFub/X8
4PxVeKXfhIKdXr/BB27/2jCMNLKKfWDoZsaECXx+8oGazrTXSBioKVzvdMSH
PnxwheNPBleYKn2/FuhwphNZFXNqrAV0OGdZMlXweb3UCiavqadUHPzInjjk
5wgRv0rFzsnU6O5GCt1G+8Fc+bzGJnwnzg8/N2obBL9+4SN+G35k41rxowEb
dwV1BF8ZfjxnY2V6FBj8EZP9Yh5mO2Rf+sUcOObAwlAGsF/Mq3yH1Kkf3Haf
OsDl3cEP1vWHXTGinjf80IyeHnj0bAzaMsG09IPrcnQsKNrr9gf48YOpk3v8
DJfYb+6qWPv7gZorHsWD99MZHxp2pW/cVoSP5HqEDz5VUJetN2s86DJ55itd
CxTBR4YHfT/a+p93D8rnaR6YO7HOUcD139ODdtyI/vG8v4w/x4PBrD3Wx4t9
Su+T/ib7/IkP9Nd+MB2LE887quC+l+4EX8+O+8Bty+AS+1GMD3ysfOHC+7zR
vdi354ug4ssu4WvXPWBjqKq2uzof7gO93WDteC9fwVzazF+NdYPbxDVF4LnA
LftTEb+/xS30dEkB99VwRfC9XsF1ivb0Dh5R36sKuG+09Aq+98Uj8dnhQRtj
vEL/t+ORw2xF5xVzMkSR+HsEvk0UOBngpzyiX/sooMln5F3w4EAONcZZiuTP
I/S5SoGltO3Z9yK8Yt/cqyCcwdHJC9b+V7Yrwr9SvYKfhQrqZOTVKs3xCv2E
KWDoZNh8Qi/T40FdkI4GH8Q665Z+6MOrzJCHusHKeae3KvrtnAtMDtOWqlL/
LvDjWarof41LzMUlKli4rItOtGAFjlZl/zqRTeHf0VWV/e4ELzBKFfUedQo8
aqjC9+87xRw3qmJffuwUeglShf4rnUhgctKqUv8u5NMp1r+XipexFIHVcSLf
fqr8PogF9/VoFYvoulCRHi31pgqd5TpAs6eSV4XOQhxg8lVuqHLu2EW/PVTF
XEizYxgTkN4PRlutsXYZ34/G7M84u8i/sx8pbKCOsGPa1dYfvjWU+gKltUmc
XehhsB+MprZno8DU2KiZX+qmttg7TKq4nmkBbzfVK/baG6Ei//peXGfr5eKa
1frje3ObEKhssBu8KG/EFkYz+N5l90rfrQG+t7XyQnwnmYXeaV+J/dQs6/Li
5Q5mlGbsfpdV4AUfg5mmar3xcEYT5gfRgGFesG12QHowblK6a2R75H5qEHW0
98h89OB7XnMP+OfFdr3Av4FH+OAEvfQ/j/R9vcA1QcFUO/uS0IDJre9+N/ry
Re8Z4WumzgW2pZBjpYT708Y48DUy9x5JY4tR59jq78V/fk/+D7IVO+o=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3,
                     3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                    4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1,
                     3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                    3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1,
                     4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 
                    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                    1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
                     3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}}}, {{{7.7637, 13.7021}, {7.3677, 13.6671}, {
                    6.9677, 13.5151}, {6.5867, 13.2581}, {7.0327, 13.4111}, {
                    7.4817, 13.5171}, {7.9227, 13.5781}, {7.9107, 13.5821}, {
                    7.8997, 13.5881}, {7.8877, 13.5921}, {7.8337, 13.6141}, {
                    7.7907, 13.6531}, {7.7637, 13.7021}}, {{7.5007, 
                    12.9851}, {7.8667, 12.9851}, {8.2287, 12.9601}, {8.5847, 
                    12.9131}, {8.5767, 12.9381}, {8.5697, 12.9621}, {8.5597, 
                    12.9871}, {8.5387, 13.0391}, {8.5117, 13.0881}, {8.4827, 
                    13.1331}, {8.1357, 13.1151}, {7.7837, 13.0641}, {7.4267, 
                    12.9831}, {7.4517, 12.9831}, {7.4757, 12.9851}, {7.5007, 
                    12.9851}}, {{9.1107, 12.8281}, {10.0507, 12.6421}, {
                    10.9327, 12.2981}, {11.6917, 11.8171}, {11.6697, 
                    11.9201}, {11.6387, 12.0221}, {11.5987, 12.1211}, {
                    11.5807, 12.1681}, {11.5737, 12.2221}, {11.5787, 
                    12.2761}, {10.8737, 12.8031}, {9.9897, 13.0941}, {9.0327, 
                    13.1361}, {9.0717, 13.0351}, {9.0967, 12.9321}, {9.1107, 
                    12.8281}}, {{6.5147, 12.4281}, {7.1057, 12.2411}, {7.6927,
                     11.9841}, {8.2617, 11.6681}, {8.4457, 11.9241}, {8.5617, 
                    12.1781}, {8.6067, 12.4141}, {7.9267, 12.5111}, {7.2217, 
                    12.5181}, {6.5147, 12.4281}}, {{2.9727, 11.7961}, {2.9077,
                     11.6911}, {2.8547, 11.5851}, {2.8127, 11.4821}, {3.1877, 
                    11.7661}, {3.6047, 12.0161}, {4.0497, 12.2251}, {3.6367, 
                    12.1561}, {3.2737, 12.0131}, {2.9727, 11.7961}}, {{6.1467,
                     12.0181}, {6.4787, 11.6261}, {6.8257, 11.1711}, {7.1737, 
                    10.6771}, {7.4597, 10.8561}, {7.7137, 11.0601}, {7.9307, 
                    11.2771}, {7.3457, 11.5981}, {6.7427, 11.8521}, {6.1467, 
                    12.0181}}, {{2.7307, 10.7731}, {2.7427, 10.7231}, {2.7557,
                     10.6751}, {2.7757, 10.6281}, {2.7867, 10.5991}, {2.8007, 
                    10.5721}, {2.8167, 10.5451}, {3.0567, 10.8541}, {3.3237, 
                    11.1511}, {3.6127, 11.4281}, {3.2937, 11.2321}, {2.9977, 
                    11.0141}, {2.7307, 10.7731}}, {{5.6847, 11.7981}, {5.7167,
                     11.2771}, {5.7847, 10.6941}, {5.8797, 10.0761}, {6.0237, 
                    10.1211}, {6.1677, 10.1731}, {6.3117, 10.2331}, {6.4587, 
                    10.2931}, {6.6037, 10.3591}, {6.7427, 10.4311}, {6.3807, 
                    10.9401}, {6.0237, 11.4031}, {5.6847, 11.7981}}, {{3.1537,
                     10.1771}, {3.3487, 10.0441}, {3.6067, 9.9441}, {3.9117, 
                    9.8921}, {4.0957, 10.5121}, {4.3317, 11.1021}, {4.6227, 
                    11.6431}, {4.0617, 11.2151}, {3.5677, 10.7181}, {3.1537, 
                    10.1771}}, {{4.4217, 9.8461}, {4.7397, 9.8301}, {5.0647, 
                    9.8771}, {5.3997, 9.9481}, {5.3027, 10.5581}, {5.2347, 
                    11.1361}, {5.1987, 11.6581}, {4.8787, 11.1121}, {4.6187, 
                    10.4971}, {4.4217, 9.8461}}, {{8.6917, 11.4171}, {9.5267, 
                    10.9011}, {10.3107, 10.2661}, {10.9847, 9.5611}, {11.4057,
                     10.1091}, {11.6617, 10.6751}, {11.7187, 11.2071}, {
                    10.9707, 11.7441}, {10.0687, 12.1271}, {9.0967, 
                    12.3291}, {9.0397, 12.0301}, {8.9047, 11.7231}, {8.6917, 
                    11.4171}}, {{7.4557, 10.2681}, {7.9737, 9.5071}, {8.4927, 
                    8.6691}, {8.9707, 7.8161}, {9.6387, 8.2211}, {10.2097, 
                    8.6851}, {10.6577, 9.1721}, {9.9877, 9.8751}, {9.2027, 
                    10.5121}, {8.3717, 11.0211}, {8.1167, 10.7461}, {7.8067, 
                    10.4931}, {7.4557, 10.2681}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQfUU7VfJRxCd74yMb9fIeyzvwc29dVnn8k339b6uC
cyfkHcxs9gZNU/xsX7VUx1lmtbzD/LOrzl8N+2y/8JrJe4tWeYc3+rvV+bm/
2G9rqbmwWVLe4afhs3WqT77Y+8uJZflulnM4fBlkwVf7vMWMe1iD5Bwe6E5Y
8MPwp/0lhntMnK8UHIBkl3zyf/tba37F5C5VcjhoqexVzcziABJ9Z6XisIzL
TbW0idnh6+3rjcVpKg5mZ639LgoyOxiArJ2q4sA/x3jRlu1MDh77a2Utjqs4
eFU36/uoMTh0fAFqEFZxEN9+EWjTH/uyQmneB77KDkv9HIQTD/+wB5tfpeRw
XNNq0un6r/ZaIGqFokOJ25RvbPGf7ZlBCs4pOKCHDwDRJYNH
                    "], {{11.3117, 9.2031}, {11.9047, 8.5271}, {12.3947, 
                    7.7991}, {12.7357, 7.0611}, {13.1967, 7.6751}, {13.4767, 
                    8.3051}, {13.5367, 8.8971}, {13.5177, 8.9491}, {13.4977, 
                    9.0001}, {13.4767, 9.0521}, {13.1947, 9.7471}, {12.7357, 
                    10.3591}, {12.1527, 10.8661}, {12.0287, 10.3141}, {
                    11.7387, 9.7471}, {11.3117, 9.2031}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQPVdw6d6D18Ud4mf4iPZoKTt8/OIV2VYh4XDhatgb
/WhFB98WXv/1IZIOk1c2BXrelXNoenR8xu4wKQfDmVoSU0WkHd6fPOy0dqW0
g3vRT/6X5dIOE/mrzFb/k3FQyqmoWvpG2sEo1EBrZbCcQ+2FzZFfK2UcOH8u
SN+8St5h4TWT9xassg6ab3n3GVQqOITNX732xnxZh+9PEhdeE1F0SDkT633C
Xc5B5vUjMykFBQcNfu6ty24qOES2WVw7qivnsFsdKNCm5LB+SmpHsqyMA8j5
XlwqDs9ll7/wyJN2qJizSHnnHWWHmbunTeDfJeWwvPK4ptUmZYfojfvfzPsj
6bC5+tOGgG5lh8/yl/Lj3SUdmordpnxLU3YoiGc/JzlRwkFvwoIfhm7KDujh
AwD7jYGy
                    "], {{1.1157, 7.0881}, {1.1307, 6.8891}, {1.1617, 
                    6.6871}, {1.2087, 6.4901}, {1.2167, 6.6401}, {1.2317, 
                    6.7901}, {1.2507, 6.9411}, {1.2027, 6.9871}, {1.1587, 
                    7.0381}, {1.1157, 7.0881}}, {{1.7767, 7.1351}, {2.1907, 
                    6.8001}, {2.7637, 6.5791}, {3.4397, 6.4821}, {3.4297, 
                    7.4581}, {3.5437, 8.4591}, {3.7807, 9.4121}, {3.4177, 
                    9.4791}, {3.1107, 9.6031}, {2.8647, 9.7741}, {2.3107, 
                    8.9471}, {1.9367, 8.0411}, {1.7767, 7.1351}}, {{3.9477, 
                    6.4331}, {4.6137, 6.4021}, {5.3437, 6.4691}, {6.1067, 
                    6.6461}, {5.8547, 7.5901}, {5.6417, 8.5531}, {5.4807, 
                    9.4591}, {5.0687, 9.3731}, {4.6707, 9.3411}, {4.2847, 
                    9.3541}, {4.0457, 8.4091}, {3.9317, 7.4061}, {3.9477, 
                    6.4331}}, {{9.2067, 7.3851}, {9.6467, 6.5751}, {10.0427, 
                    5.7621}, {10.3677, 4.9991}, {11.1727, 5.4861}, {11.8587, 
                    6.0461}, {12.3827, 6.6311}, {12.0697, 7.3751}, {11.5827, 
                    8.1201}, {10.9807, 8.8131}, {10.5037, 8.2971}, {9.9047, 
                    7.8081}, {9.2067, 7.3851}}, {{12.9467, 6.5541}, {12.9757, 
                    6.4731}, {13.0047, 6.3921}, {13.0297, 6.3111}, {13.1887, 
                    5.8171}, {13.2677, 5.3461}, {13.2677, 4.9071}, {13.7287, 
                    5.6771}, {13.7597, 7.3791}, {13.7777, 7.3811}, {13.7847, 
                    7.5511}, {13.7797, 7.7221}, {13.7637, 7.8901}, {13.5777, 
                    7.4421}, {13.3027, 6.9911}, {12.9467, 
                    6.5541}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQHR69cf+be1IOVUt1nGW0JR16dmZz/nwg7VBwruPS
vQWiDr9Pvzt5mEnWwV9OLMvXWMhh5u5pE/it5BwezBFcuteRD84vAwnY8jns
cGh6dPyGvIPOlVnPZNX5HSpABu9RcAAZ/1pJwGHqFc4MpR5FB5bnPRpvzwo4
bNLLW8wYo+QgJGJ/7E6poMP9B9yTVyopw+2L+rrzVtddZQdzqQPRCozCDkBT
HplZKTtMrPttVcAn5gBS9jlPCUL7STpEnDI6srFP0SFGwfFjco+Mw5ZIoAGv
FBzivE+w296Wdlh3I77M307BYdetrr+p5tIOXX1PPskLyTsATXf8uFjKAeTs
5StkHdasBSrkl3LIM2nY7uAk4/AQ6KymiZIO6OEFABsahTI=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7XdxYsy/wwwOJ9htZ4feF3CYY7xoi3kFi8OeaRP4
q7bxOWx8+HLqph5OB7Vg1sWTdvE4FK7pvp3RwO9wweXGhy+nuB08Av5IFIfz
OvRqvOXd90HAIVv72/S7wjwOFVVLdZxjRBxSVyWEBC3ndshQyqmoeiruoHla
4PguCzaHVU2BnnMdJBwmxfxz/pXL6LBm7Y34Mn5Jh/gZPqI9Xr/t639bFZzz
kHKYsOCH4bN1v+xfbl/P/NxHwqGsUJr3ge5v+8WMe1iFQsQcnjTPO7vq/B/7
op/8L7fnizhYpLtk5n/4Y+8s8/qRWZSIw/aLDPeYOP/aH9mol7fYUcShx+sV
i4ngX/upVzgzlHREHA5f1k6VfPTXfqaWxNQrnsIOi5V3/mn/8s+eAxgc87OF
HLaa/ziUosXgIJbl+7lvsiDUvwwON+PL/OXCBKHhw+AAVL16rYSgA3p4AgB5
XZwg
                    "], {{4.4897, 3.4151}, {5.2717, 3.3701}, {6.1597, 
                    3.4411}, {7.0747, 3.6561}, {6.7727, 4.4241}, {6.4897, 
                    5.2811}, {6.2407, 6.1661}, {5.4367, 5.9761}, {4.6597, 
                    5.8911}, {3.9667, 5.9311}, {4.0227, 5.0231}, {4.1957, 
                    4.1601}, {4.4897, 3.4151}}, {{10.5567, 4.5381}, {10.7837, 
                    3.9611}, {10.9927, 3.3391}, {11.0907, 2.8101}, {11.6917, 
                    3.1851}, {12.2177, 3.6161}, {12.6447, 4.0831}, {12.8357, 
                    4.6461}, {12.8127, 5.3491}, {12.5687, 6.1261}, {12.0227, 
                    5.5511}, {11.3427, 5.0111}, {10.5567, 
                    4.5381}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7dj06PiM33IOf7+VPpgzkcsh5Uys9wl1BYepqR3J
sTEsDhVVS3Wc9yg4cKto1PVYMjiIZfl+7jNWdCjXVZT/kvPbvn15+CmjJ4oO
FyfG/HP+9cd+/uq1N+KnKTm8yNL+Nv3uP3tX96Kf/J7KDkahBlorJzM4bGup
ubD5p7JD4C3pmsRNjA45IAsWqzikxN5xY/7B5AA0PbjERdVBa6XwBZcIFoeX
29czP9dRdXg7z0bnihS7w8dkoANfqDh46v1X/FvG7aDgCBSxVXEA26Mp6PAv
9fuTxEZlh8krmwI9YwUc4rxPsNvuVnJYbRcevdGe32FL5Nedt14pOoC8s/M1
r4P9sTtbW2QUHS7lx7Ofm8njoARykI+Cw+ZXxVtFq7kd0MMHALBvh0A=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAmIQbbJoi/kPJz6HtI7k2DvHGB1qEo1CDbIEHEKC1Bd0
bvhnbx8evXG/jpBD6qoEoNBv+zyThu0OTiIOFyfG/HP+9cP+gsuND1+4hB3m
GIMM+mtvttouPPqjoIPS32+lD2SYHH6ffnfyMJOgw9K9B8XVLrM6vJ1no3Pl
loDDSmGgzgI2h5TYO27MOwQcnNdm3ivkYnc48AaoYIqAgztzBbfKCnaHd68P
WCqf4nE4JK4WzKrM4SBZfF3o00EOqPmcDief2i+5b8fqAOLOmcjlwHq037B8
LZvDLWmgT65yONyb3N4aFczhUPZgjuBSW3YHsDcUuBwEqoAuvc4KNY/LoSCe
/ZzkRVaHzTyFa7qjuR3qenZmc1ayOvCDPLad22FXNufPBc9ZHMQ9Av5IfOZ2
+Cx/KT++ncVh72MR2ZOpPA6OTY+Oz7BmcZhxF2jhLR4Hvf+Kf799ZXYAGe/o
z+vwXHb5C491zA6K8l9ywv7yOnhHtllcc2V2EP7keD4tlM8BFPxuzUwO6PEB
AJrfslk=
                    "], {{6.0867, 1.4101}, {6.7067, 1.3791}, {7.3847, 
                    1.4351}, {8.0877, 1.5861}, {7.7867, 2.0361}, {7.5007, 
                    2.6261}, {7.2627, 3.1931}, {6.3747, 2.9821}, {5.5037, 
                    2.8861}, {4.7137, 2.9171}, {5.0837, 2.1921}, {5.5587, 
                    1.6781}, {6.0867, 1.4101}}, CompressedData["
1:eJxdVndUVMceZmmKiLuA9EV2YdvdvTFCDEGOOp9PBcWgAvYSgooaNYqx81AM
ChgsURFbEBUkxoIBDVHsmhisqIldY9BHsAsSRHYRzMydfeS898eePb9z595f
+8qox82ITbS1sbH5lv7Yf3a4LHrpJT+cH3Lqux0Dq8kj/52P+033bY373qqt
j/LxgUNX19Duxx6TLa6Fx07d9MK7/f+uKx78gqQ9LN945IYb/PI+ES4oasnM
vcvvTl7sgiOHVjrWer4hzhHaOba+TpC+u08GD/9zfxKNPVaUTXUyqxxQP23Y
wn2hNuhi3OV+5WcnvHGM3/ixRxNZfBBpDyPlmJ+bH1T21kKGsgOD5Rj/ctS/
ej62kJzEZePHjpFD7lz67YJyC7m2udp/52Q5pMe3zYRW6aX7TY7ZEesaHOPN
5PCdrObEjxSgRU/dPM9MMncOPx+yVGHt00xUvV6Nv7hFge2NwdX7tGZSE9Y3
8osyBQpo9sz6RnI7fu6gTjcUWFZ/9+aXs96Q96cXyI6eccVQ9joaSLvJgdPm
H3aDU1YALfE1z3fQHWGT+nw2o7aOFNs9WmEo6ohBcE/46bda4ntytKpXiQc8
p0T/tSruJSG/3CtdetQTotTIPbK8OfFN1XY/2NPXXrhUklVzZvq5LFYh4xwr
+BVpw8b0PBBps1iDDaTfiYX+YW00eP7+Eb3c+S3RVS3Ju9ROixlf2p/5ukSG
4exBjRYOZ74OnlckAztVGqHDTbe6XperZQhfeyG131Yd7mdnpo+Ks+V9WHRw
LT98aGWGDKyLdEGPq2vGtPROluGaKdHn4Xw9TnTI/SC/qy3YlDfu1aNhw+/Z
mQ52iPZYEfW0So/8Hz5qPF1lBwNblI8B76kD6qfdsMeNYbSgSAMYXGxq7HGm
hQJqsAEUHTv+6OmA7sdi16unG6z1O0B239YpK9VgzefI688wQIJdZDvsXFAu
hIcIoN1MvD5JjgMMnssFvFM3N8zZ5tYaS+P97p947L0Iu/kXXMFQs/eOgEUM
mN1ckcKAYhEwkcLsnqMr1qvpBpoEzK3MdS1cqAAFSdWSFgFX+lCCtFNg66Xd
l6+HGuFQsDZc5qJACYNZyj+xn0vle6tPGnF0/Wp58lwFGKruvjFijTw5dE+L
gs+z0dia778x55/b/8ab3CHScMQ8Izh/O4KCypRoFtCZNfyhB+eB2cR59qkn
kul41ppE63lPXEyliOkhwlsX51AQ64U41mCMCDYO5yovzovOIiTeKbzB8Way
zsfbum8TXtVHjcxo9OI8nGTC6JITz/NSvGDHADTQhBd53cVro7z4PLqbEN+m
wifG16u1/0iaTvPYExRd54YkGHGI0r58hA8YfOzXmeAbc8cvRa2EhO9IEbR6
l0E1nTi+Jog4u/HI+tWDAiDRLFEEVZE+t4oDrPlF3n9lAAoHUuIFiSgUeyuf
2arwmtFYJ+L30qUpV9xVPL9axFEHt45Ep+J48BXRPntXWswulRXPJkR+YZY/
8VJzXco14cnB7+0eTVNz3ehrQmz/LYt1+RrQty1jok34uaTz9ILtetDtb2t0
NeLKgZGvy5IFsHYm7dBj+42uNWGFAp/vND0WsgObBP59pR5/VDpn7xoncHzX
6ZDaFJ5UYRD4PMp1/PxtA9/fVR26Udkyf2+AJItOeki6tNnA96PX4wNW0BID
6DZy83vrwWRv7FQDiixjPj/ziR57i27Fz51hAFP72FA9HtD0aTMNmEvlp9JF
DyZTKUkGhDAC/EeHjky4Jghch3Q6dDjeZZMxzAjazYqoKC12p8X031Jp5LoZ
pwFVUc8pL4x8H+M1kHS32cj9JEmD0xlUmN1MHM8LNFhJ1e/4YBOf3xoNRr0u
u5O1xYR7dH0RszX4ZujWPUWHTJDsKUQDSTdlIufnoiB+3l/ESK+DV22OB0LS
XVfRij81qPjO1swTUUHpO+yiCrM1G96tzhPxITOAkAAo2IIzRbC1nv5FyfGT
JqJtD5p5qhITLo4dcHaSiKSKZb/eVyn5fHuLoF9Z1GTxQwstJ+GUyPec7o3g
TUbvnK4iuP90xBCWsNiIAWfb9PgmRwFWbnO6kefVK3DdiS5whJHjOknO8+mN
mHzg6azSnA6Yn0wreisgiRHrante32kBoXt6Dh8d7IwfKbwPLBA4Tw858f5j
BM6rB215vXYCWJiwvy3+TKCVXjag1KPpwsv+TmBt7nExQJmSEDK02BETaTvb
KS64P9vzOQzQIZDKbKXStjX+K+DXGfGZNry+7jqu+8NaiIRXHx1ePjvZLSjq
LZHw0qi1PreQHyg97uzW8nvBj2Yi4eVzLYbE6rd9VWwhPL8W0r1icxOxZYQN
0IIGbf3ymok0zy5a7jsT3hFm0w77NQij0e5Pm0knZridNdyn0puINM+dQdxH
ys1E2n+nIJQ8eJKzv30jkex5XSBYNeNSG4jUn3MgLC9YA6+JxOfwQOv5eu7z
0YHW+1Ad4fsOxE80+5DYWiLt0zsQXSQDe07Oh9AFVKjB6BhU9pS/v1Jt9fnn
RMJhrBoq6eLzkrgxwnmoMdXEOqglrNxFd1VgNhk8r066RqR0UYG64KMpplck
a1VVXYBbAPfR4FrC/c4f0rXFvYYUfXZ/ZlaFP9c7y1Mi7TnJH1I45hHZQO0q
9JkSjI4+D6vJs1kUGcuVYHZyIbWakOFU8UVl633x/++TfwOCjIoq
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJeKA0Bcg6vi7eK/j79xT73+e+VH4ME4PyzZ0Dgi72/
g3Di4WABBxj/uKbVpNP/ZeF8XUX5LznXVB1g+r2qm/V90rQdYObD+F48TNrt
QHUwfhoYaDvA9MP4MPNhfJj9MP0w96G7H8Z/IiJ78ul/HYeQx0tnH1HghfMh
8g/s5xgv2mK+Qw3Oh9kH4z82kzoQDdQH018xZ5Hyzj/34ebD+NrtYjfPbVdD
k9d1gOmH8VHN13WA2Q/Tj+o+hPsB+8Gg0w==
                    "]]}}, AspectRatio -> Automatic, ImageSize -> 12, 
                 PlotRange -> {{0., 15.}, {0., 15.}}], 
                Alignment -> {Right, Bottom}, ImageSize -> 13, 
                ImageSizeAction -> "ResizeToFit"]}, 
              Alignment -> {Right, Bottom}], StripOnInput -> False, 
             CacheGraphics -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"SI Brochure Data\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"]}, "RowDefault"], 
                  "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"This data contains data from the SI Brochure published by \
the BIPM\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Mathematics\"", "\"Chemistry\"", 
                    "\"Engineering\"", "\"Physical Sciences\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Text\"", "\"Numerical Data\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"metrology\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data\"", 
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"}, "HyperlinkURL"], "SummaryItem"]}], 
               ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$ = <|
                    "DocumentationLink" -> 
                    URL["https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data"], "ResourceLocations" -> {
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/Resources/298/\
298f8d63-64c1-457a-a098-1f2cc1bab6a4"]}, "Name" -> "SI Brochure Data", "UUID" -> 
                    "298f8d63-64c1-457a-a098-1f2cc1bab6a4", 
                    "RepositoryLocation" -> None, "ResourceType" -> 
                    "DataResource", "ContentSize" -> 
                    Quantity[4.984, "Kilobytes"], "Version" -> None, 
                    "Description" -> 
                    "This data contains data from the SI Brochure published \
by the BIPM", "ContentTypes" -> {"Text", "Numerical Data"}, 
                    "Categories" -> {
                    "Mathematics", "Chemistry", "Engineering", 
                    "Physical Sciences"}, "Keywords" -> {"metrology"}, 
                    "ContentElementAccessType" -> "Dataset", 
                    "ContentValues" -> <||>, 
                    "ContributorInformation" -> <|
                    "ContributedBy" -> "Peter Cullen Burbery"|>, 
                    "DefaultContentElement" -> "Dataset", "ExampleNotebook" -> 
                    CloudObject[
                    "https://www.wolframcloud.com/obj/burbery1/\
DeployedResources/Data/SI-Brochure-Data/SI Brochure Data-ExampleNotebook.nb"],
                     "ExampleNotebookData" -> Automatic, 
                    "RelatedSymbols" -> {
                    "UnitSimplify", "NondimensionalizationTransform"}, 
                    "SeeAlso" -> {"PlanckUnitConversion"}, 
                    "SourceMetadata" -> <|"Citation" -> {
                    TextData[{
                    ButtonBox[
                    "NIST SI Brochure", BaseStyle -> "Hyperlink", ButtonData -> {
                    URL[
                    "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/\
NIST.SP.330-2019.pdf"], None}, ButtonNote -> 
                    "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/\
NIST.SP.330-2019.pdf"], "."}]}|>, 
                    "ContentElements" -> {
                    "base-quantities-and-dimensions", 
                    "base-quantities-and-units", 
                    "coherent-derived-units-in-the-SI-expressed-terms-of-base-\
units", "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols", "Dataset", 
                    "defining-constants-of-the-SI", "SI-prefixes", 
                    "SI-units-with-special-names-and-symbols"}, 
                    "ContentElementLocations" -> <||>, 
                    "InformationElements" -> <|
                    "Dataset" -> 
                    Dataset[<|
                    "hyperfine-transition-frequency-of-Cs" -> <|
                    "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
                    "speed-of-light-in-vacuum" -> <|
                    "numerical-value" -> 299792458, "unit" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "Planck-constant" -> <|
                    "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> 
                    "J s"|>, 
                    "elementary-charge" -> <|
                    "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> 
                    "C"|>, "Boltzmann-constant" -> <|
                    "numerical-value" -> 1.380649*^-23, "unit" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "Avogadro-constant" -> <|
                    "numerical-value" -> 6.02214076*^23, "unit" -> 
                    "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
                    "luminous-efficacy" -> <|
                    "numerical-value" -> 683, "unit" -> 
                    "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], <||>], 
                    "defining-constants-of-the-SI" -> 
                    Dataset[<|
                    "hyperfine-transition-frequency-of-Cs" -> <|
                    "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
                    "speed-of-light-in-vacuum" -> <|
                    "numerical-value" -> 299792458, "unit" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "Planck-constant" -> <|
                    "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> 
                    "J s"|>, 
                    "elementary-charge" -> <|
                    "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> 
                    "C"|>, "Boltzmann-constant" -> <|
                    "numerical-value" -> 1.380649*^-23, "unit" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "Avogadro-constant" -> <|
                    "numerical-value" -> 6.02214076*^23, "unit" -> 
                    "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
                    "luminous-efficacy" -> <|
                    "numerical-value" -> 683, "unit" -> 
                    "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"numerical-value", "unit"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 7], <||>], 
                    "base-quantities-and-units" -> 
                    Dataset[<|
                    "time" -> <|
                    "quantity-name" -> "time", "typical-quantity-symbol" -> 
                    "t", "unit-name" -> "second", "unit-symbol" -> "s"|>, 
                    "length" -> <|
                    "quantity-name" -> "length", "typical-quantity-symbol" -> 
                    "l", "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
                    "mass" -> <|
                    "quantity-name" -> "mass", "typical-quantity-symbol" -> 
                    "l", "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
                    "electric-current" -> <|
                    "quantity-name" -> "electric-current", 
                    "typical-quantity-symbol" -> "i", "unit-name" -> "ampere",
                     "unit-symbol" -> "A"|>, 
                    "thermodynamic-temperature" -> <|
                    "quantity-name" -> "thermodynamic-temperature", 
                    "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin",
                     "unit-symbol" -> "K"|>, 
                    "amount-of-substance" -> <|
                    "quantity-name" -> "amount-of-substance", 
                    "typical-quantity-symbol" -> "n", "unit-name" -> "mole", 
                    "unit-symbol" -> "mol"|>, 
                    "luminous-intensity" -> <|
                    "quantity-name" -> "luminous-intensity", 
                    "typical-quantity-symbol" -> 
                    "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> 
                    "candela", "unit-symbol" -> "cd"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "quantity-name", "typical-quantity-symbol", "unit-name", 
                    "unit-symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], <||>], 
                    "base-quantities-and-dimensions" -> 
                    Dataset[<|
                    "time" -> <|
                    "typical-symbol-for-quantity" -> "t", 
                    "symbol-for-dimension" -> "T"|>, 
                    "length" -> <|
                    "typical-symbol-for-quantity" -> "l", 
                    "symbol-for-dimension" -> "L"|>, 
                    "mass" -> <|
                    "typical-symbol-for-quantity" -> "m", 
                    "symbol-for-dimension" -> "M"|>, 
                    "electric-current" -> <|
                    "typical-symbol-for-quantity" -> "i", 
                    "symbol-for-dimension" -> "I"|>, 
                    "thermodynamic-temperature" -> <|
                    "typical-symbol-for-quantity" -> "T", 
                    "symbol-for-dimension" -> "\[CapitalTheta]"|>, 
                    "amount-of-substance" -> <|
                    "typical-symbol-for-quantity" -> "n", 
                    "symbol-for-dimension" -> "N"|>, 
                    "luminous-intensity" -> <|
                    "typical-symbol-for-quantity" -> 
                    "\!\(\*SubscriptBox[\(I\), \(v\)]\)", 
                    "symbol-for-dimension" -> "J"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol-for-quantity", "symbol-for-dimension"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 7], <||>], 
                    "SI-units-with-special-names-and-symbols" -> 
                    Dataset[<|
                    "plane-angle" -> <|
                    "special-name-of-unit" -> "radian", 
                    "unit-expressed-terms-of-base-units" -> "rad=m/m", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "solid-angle" -> <|
                    "special-name-of-unit" -> "steradian", 
                    "unit-expressed-terms-of-base-units" -> 
                    "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "frequency" -> <|
                    "special-name-of-unit" -> "hertz", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "force" -> <|
                    "special-name-of-unit" -> "newton", 
                    "unit-expressed-terms-of-base-units" -> 
                    "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "pressure-or-stress" -> <|
                    "special-name-of-unit" -> "pascal", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "energy-or-work-or-amount-of-heat" -> <|
                    "special-name-of-unit" -> "joule", 
                    "unit-expressed-terms-of-base-units" -> 
                    "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
                    "power-or-radiant-flux" -> <|
                    "special-name-of-unit" -> "watt", 
                    "unit-expressed-terms-of-base-units" -> 
                    "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
                    "electric-charge" -> <|
                    "special-name-of-unit" -> "coulomb", 
                    "unit-expressed-terms-of-base-units" -> "C=A s", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "electric-potential-difference" -> <|
                    "special-name-of-unit" -> "volt", 
                    "unit-expressed-terms-of-base-units" -> 
                    "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
                    "capacitance" -> <|
                    "special-name-of-unit" -> "farad", 
                    "unit-expressed-terms-of-base-units" -> 
                    "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
                    "electric-resistance" -> <|
                    "special-name-of-unit" -> "ohm", 
                    "unit-expressed-terms-of-base-units" -> 
                    "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
                    "electric-conductance" -> <|
                    "special-name-of-unit" -> "siemens", 
                    "unit-expressed-terms-of-base-units" -> 
                    "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
                    "magnetic-flux" -> <|
                    "special-name-of-unit" -> "weber", 
                    "unit-expressed-terms-of-base-units" -> 
                    
                    "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
                    "magnetic-flux-density" -> <|
                    "special-name-of-unit" -> "tesla", 
                    "unit-expressed-terms-of-base-units" -> 
                    "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "inductance" -> <|
                    "special-name-of-unit" -> "henry", 
                    "unit-expressed-terms-of-base-units" -> 
                    "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
                    "Celsius-temperature" -> <|
                    "special-name-of-unit" -> "degree Celsius", 
                    "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "luminous-flux" -> <|
                    "special-name-of-unit" -> "lumen", 
                    "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "illuminance" -> <|
                    "special-name-of-unit" -> "lux", 
                    "unit-expressed-terms-of-base-units" -> 
                    "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> 
                    "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "activity-referred-to-a-radionuclide" -> <|
                    "special-name-of-unit" -> "becquerel", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
                    "absorbed-dose-or-kerma" -> <|
                    "special-name-of-unit" -> "gray", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
                    "dose-equivalent" -> <|
                    "special-name-of-unit" -> "sievert", 
                    "unit-expressed-terms-of-base-units" -> 
                    "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
                    "catalytic-activity" -> <|
                    "special-name-of-unit" -> "katal", 
                    "unit-expressed-terms-of-base-units" -> 
                    "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "special-name-of-unit", 
                    "unit-expressed-terms-of-base-units", 
                    "unit-expressed-in-terms-of-other-SI-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 22], <||>], 
                    "coherent-derived-units-in-the-SI-expressed-terms-of-base-\
units" -> Dataset[<|"area" -> <|
                    "typical-symbol" -> "A", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
                    "volume" -> <|
                    "typical-symbol" -> "V", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
                    "speed-or-velocity" -> <|
                    "typical-symbol" -> "v", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "acceleration" -> <|
                    "typical-symbol" -> "a", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "wavenumber" -> <|
                    "typical-symbol" -> "\[Sigma]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
                    "density-or-mass-density" -> <|
                    "typical-symbol" -> "\[Rho]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "surface-density" -> <|
                    "typical-symbol" -> 
                    "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "specific-volume" -> <|
                    "typical-symbol" -> "\[Nu]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
                    "current-density" -> <|
                    "typical-symbol" -> "j", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "magnetic-field-strength" -> <|
                    "typical-symbol" -> "H", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
                    "amount-of-substance-concentration" -> <|
                    "typical-symbol" -> "c", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "mass-concentration" -> <|
                    "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "luminance" -> <|
                    "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "typical-symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 13], <||>], 
                    "coherent-derived-units-whose-names-and-symbols-include-\
SI-coherent-derived-units-with-special-names-and-symbols" -> 
                    Dataset[<|
                    "dynamic-viscosity" -> <|
                    "name-of-coherent-derived-unit" -> "pascal second", 
                    "symbol" -> "Pa s", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "moment-of-force" -> <|
                    "name-of-coherent-derived-unit" -> "newton meter", 
                    "symbol" -> "N m", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "surface-tension" -> <|
                    "name-of-coherent-derived-unit" -> "newton per meter", 
                    "symbol" -> "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "angular-velocity-or-angular-frequency" -> <|
                    "name-of-coherent-derived-unit" -> "radian per second", 
                    "symbol" -> "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
                    "angular-acceleration" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "radian per second squared", "symbol" -> 
                    "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "heat-flux-density-or-irradiance" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per square meter", "symbol" -> 
                    "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "heat-capacity-or-entropy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per kelvin", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, "specific-heat-capacity-or-specific-entropy" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per kilogram kelvin", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, "specific-energy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per kilogram", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "thermal-conductivity" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per meter kelvin", "symbol" -> 
                    "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "energy-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per cubic meter", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
                    "electric-field-strength" -> <|
                    "name-of-coherent-derived-unit" -> "volt per meter", 
                    "symbol" -> "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
                    "electric-charge-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per cubic meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
                    "surface-charge-density" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per square meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "electric-flux-density-or-electric-displacement" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "coulomb per square meter", "symbol" -> 
                    "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
                    "permittivity" -> <|
                    "name-of-coherent-derived-unit" -> "farad per meter", 
                    "symbol" -> "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
                    "permeability" -> <|
                    "name-of-coherent-derived-unit" -> "henry per meter", 
                    "symbol" -> "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
                    "molar-energy" -> <|
                    "name-of-coherent-derived-unit" -> "joule per mole", 
                    "symbol" -> "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, "molar-entropy-or-molar-heat-capacity" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "joule per mole kelvin", "symbol" -> 
                    "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
                    "exposure(x-and-\[Gamma]-rays)" -> <|
                    "name-of-coherent-derived-unit" -> "coulomb per kilogram",
                     "symbol" -> "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
                    "absorbed-dose-rate" -> <|
                    "name-of-coherent-derived-unit" -> "gray per second", 
                    "symbol" -> "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "radiant-intensity" -> <|
                    "name-of-coherent-derived-unit" -> "watt per steradian", 
                    "symbol" -> "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "radiance" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "watt per square meter steradian", "symbol" -> 
                    "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
                    "catalytic-activity-concentration" -> <|
                    "name-of-coherent-derived-unit" -> 
                    "katal per cubic meter", "symbol" -> 
                    "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
                    "derived-unit-expressed-in-terms-of-base-units" -> 
                    "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    
                    TypeSystem`Struct[{
                    "name-of-coherent-derived-unit", "symbol", 
                    "derived-unit-expressed-in-terms-of-base-units"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 24], <||>], "SI-prefixes" -> 
                    Dataset[<|
                    "\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", 
                    "name" -> "kilo", "symbol" -> "k"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", 
                    "name" -> "mega", "symbol" -> "M"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", 
                    "name" -> "giga", "symbol" -> "G"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", 
                    "name" -> "tera", "symbol" -> "T"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", 
                    "name" -> "peta", "symbol" -> "P"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", 
                    "name" -> "exa", "symbol" -> "E"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", 
                    "name" -> "zetta", "symbol" -> "Z"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", 
                    "name" -> "yotta", "symbol" -> "Y"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", 
                    "name" -> "milli", "symbol" -> "m"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", 
                    "name" -> "micro", "symbol" -> "\[Mu]"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", 
                    "name" -> "nano", "symbol" -> "n"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", 
                    "name" -> "pico", "symbol" -> "p"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", 
                    "name" -> "femto", "symbol" -> "f"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", 
                    "name" -> "atto", "symbol" -> "a"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", 
                    "name" -> "zepto", "symbol" -> "z"|>, 
                    "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
                    "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", 
                    "name" -> "yocto", "symbol" -> "y"|>|>, 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"factor", "name", "symbol"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[String]}], 16], <||>]|>|>}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "298f8d63-64c1-457a-a098-1f2cc1bab6a4"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {4., {0., 0.}}], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"298f8d63-64c1-457a-a098-1f2cc1bab6a4\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.984`", "\"kB\"", "kilobytes", "\"Kilobytes\""}, 
                   "Quantity"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"base-quantities-and-dimensions\"", ",", 
                    "\"base-quantities-and-units\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",",
                     "\"SI-units-with-special-names-and-symbols\""}], 
                   Short[#, 2]& ], "SummaryItem"]}], ""}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[<|
   "DocumentationLink" -> 
    URL["https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data"], "ResourceLocations" -> {
      CloudObject[
      "https://www.wolframcloud.com/obj/burbery1/Resources/298/298f8d63-64c1-\
457a-a098-1f2cc1bab6a4"]}, "Name" -> "SI Brochure Data", "UUID" -> 
    "298f8d63-64c1-457a-a098-1f2cc1bab6a4", "RepositoryLocation" -> None, 
    "ResourceType" -> "DataResource", "ContentSize" -> 
    Quantity[4.984, "Kilobytes"], "Version" -> None, "Description" -> 
    "This data contains data from the SI Brochure published by the BIPM", 
    "ContentTypes" -> {"Text", "Numerical Data"}, 
    "Categories" -> {
     "Mathematics", "Chemistry", "Engineering", "Physical Sciences"}, 
    "Keywords" -> {"metrology"}, "ContentElementAccessType" -> "Dataset", 
    "ContentValues" -> <||>, 
    "ContributorInformation" -> <|"ContributedBy" -> "Peter Cullen Burbery"|>,
     "DefaultContentElement" -> "Dataset", "ExampleNotebook" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/burbery1/DeployedResources/Data/SI-\
Brochure-Data/SI Brochure Data-ExampleNotebook.nb"], "ExampleNotebookData" -> 
    Automatic, 
    "RelatedSymbols" -> {"UnitSimplify", "NondimensionalizationTransform"}, 
    "SeeAlso" -> {"PlanckUnitConversion"}, "SourceMetadata" -> <|"Citation" -> {
        TextData[{
          ButtonBox["NIST SI Brochure", BaseStyle -> "Hyperlink", ButtonData -> {
             URL[
             "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.\
330-2019.pdf"], None}, ButtonNote -> 
           "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], "."}]}|>, 
    "ContentElements" -> {
     "base-quantities-and-dimensions", "base-quantities-and-units", 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units", 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols", "Dataset", 
      "defining-constants-of-the-SI", "SI-prefixes", 
      "SI-units-with-special-names-and-symbols"}, 
    "ContentElementLocations" -> <||>, 
    "InformationElements" -> <|
     "Dataset" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "defining-constants-of-the-SI" -> 
      Dataset[<|"hyperfine-transition-frequency-of-Cs" -> <|
          "numerical-value" -> 9192631770, "unit" -> "Hz"|>, 
         "speed-of-light-in-vacuum" -> <|
          "numerical-value" -> 299792458, "unit" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "Planck-constant" -> <|
          "numerical-value" -> 6.6260701500000015`*^-34, "unit" -> "J s"|>, 
         "elementary-charge" -> <|
          "numerical-value" -> 1.6021766340000001`*^-19, "unit" -> "C"|>, 
         "Boltzmann-constant" -> <|
          "numerical-value" -> 1.380649*^-23, "unit" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "Avogadro-constant" -> <|
          "numerical-value" -> 6.02214076*^23, "unit" -> 
           "\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)"|>, 
         "luminous-efficacy" -> <|
          "numerical-value" -> 683, "unit" -> 
           "lm \!\(\*SuperscriptBox[\(W\), \(-1\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"numerical-value", "unit"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 7], <||>], "base-quantities-and-units" -> 
      Dataset[<|"time" -> <|
          "quantity-name" -> "time", "typical-quantity-symbol" -> "t", 
           "unit-name" -> "second", "unit-symbol" -> "s"|>, 
         "length" -> <|
          "quantity-name" -> "length", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "meter", "unit-symbol" -> "m"|>, 
         "mass" -> <|
          "quantity-name" -> "mass", "typical-quantity-symbol" -> "l", 
           "unit-name" -> "kilogram", "unit-symbol" -> "kg"|>, 
         "electric-current" -> <|
          "quantity-name" -> "electric-current", "typical-quantity-symbol" -> 
           "i", "unit-name" -> "ampere", "unit-symbol" -> "A"|>, 
         "thermodynamic-temperature" -> <|
          "quantity-name" -> "thermodynamic-temperature", 
           "typical-quantity-symbol" -> "T", "unit-name" -> "kelvin", 
           "unit-symbol" -> "K"|>, 
         "amount-of-substance" -> <|
          "quantity-name" -> "amount-of-substance", "typical-quantity-symbol" -> 
           "n", "unit-name" -> "mole", "unit-symbol" -> "mol"|>, 
         "luminous-intensity" -> <|
          "quantity-name" -> "luminous-intensity", "typical-quantity-symbol" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "unit-name" -> "candela", 
           "unit-symbol" -> "cd"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "quantity-name", "typical-quantity-symbol", "unit-name", 
           "unit-symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "base-quantities-and-dimensions" -> 
      Dataset[<|"time" -> <|
          "typical-symbol-for-quantity" -> "t", "symbol-for-dimension" -> 
           "T"|>, "length" -> <|
          "typical-symbol-for-quantity" -> "l", "symbol-for-dimension" -> 
           "L"|>, "mass" -> <|
          "typical-symbol-for-quantity" -> "m", "symbol-for-dimension" -> 
           "M"|>, "electric-current" -> <|
          "typical-symbol-for-quantity" -> "i", "symbol-for-dimension" -> 
           "I"|>, "thermodynamic-temperature" -> <|
          "typical-symbol-for-quantity" -> "T", "symbol-for-dimension" -> 
           "\[CapitalTheta]"|>, 
         "amount-of-substance" -> <|
          "typical-symbol-for-quantity" -> "n", "symbol-for-dimension" -> 
           "N"|>, "luminous-intensity" -> <|
          "typical-symbol-for-quantity" -> 
           "\!\(\*SubscriptBox[\(I\), \(v\)]\)", "symbol-for-dimension" -> 
           "J"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol-for-quantity", "symbol-for-dimension"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 7], <||>], 
      "SI-units-with-special-names-and-symbols" -> 
      Dataset[<|"plane-angle" -> <|
          "special-name-of-unit" -> "radian", 
           "unit-expressed-terms-of-base-units" -> "rad=m/m", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "solid-angle" -> <|
          "special-name-of-unit" -> "steradian", 
           "unit-expressed-terms-of-base-units" -> 
           "sr=\!\(\*SuperscriptBox[\(m\), \
\(2\)]\)/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "frequency" -> <|
          "special-name-of-unit" -> "hertz", 
           "unit-expressed-terms-of-base-units" -> 
           "Hz=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "force" -> <|
          "special-name-of-unit" -> "newton", 
           "unit-expressed-terms-of-base-units" -> 
           "N=kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "pressure-or-stress" -> <|
          "special-name-of-unit" -> "pascal", 
           "unit-expressed-terms-of-base-units" -> 
           "Pa=kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\
\(s\), \(-2\)]\)", "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "energy-or-work-or-amount-of-heat" -> <|
          "special-name-of-unit" -> "joule", 
           "unit-expressed-terms-of-base-units" -> 
           "J=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "N m"|>, 
         "power-or-radiant-flux" -> <|
          "special-name-of-unit" -> "watt", 
           "unit-expressed-terms-of-base-units" -> 
           "W=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/s"|>, 
         "electric-charge" -> <|
          "special-name-of-unit" -> "coulomb", 
           "unit-expressed-terms-of-base-units" -> "C=A s", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "electric-potential-difference" -> <|
          "special-name-of-unit" -> "volt", 
           "unit-expressed-terms-of-base-units" -> 
           "V=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "W/A"|>, 
         "capacitance" -> <|
          "special-name-of-unit" -> "farad", 
           "unit-expressed-terms-of-base-units" -> 
           "F=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "C/V"|>, 
         "electric-resistance" -> <|
          "special-name-of-unit" -> "ohm", 
           "unit-expressed-terms-of-base-units" -> 
           "\[CapitalOmega]=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V/A"|>, 
         "electric-conductance" -> <|
          "special-name-of-unit" -> "siemens", 
           "unit-expressed-terms-of-base-units" -> 
           "S=\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\) \!\(\*SuperscriptBox[\(s\), \(3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "A/V"|>, 
         "magnetic-flux" -> <|
          "special-name-of-unit" -> "weber", 
           "unit-expressed-terms-of-base-units" -> 
           "Wb=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "V s"|>, 
         "magnetic-flux-density" -> <|
          "special-name-of-unit" -> "tesla", 
           "unit-expressed-terms-of-base-units" -> 
           "T=kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "Wb/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "inductance" -> <|
          "special-name-of-unit" -> "henry", 
           "unit-expressed-terms-of-base-units" -> 
           "H=kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(A\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "Wb/A"|>, 
         "Celsius-temperature" -> <|
          "special-name-of-unit" -> "degree Celsius", 
           "unit-expressed-terms-of-base-units" -> "\[Degree]C=K", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "luminous-flux" -> <|
          "special-name-of-unit" -> "lumen", 
           "unit-expressed-terms-of-base-units" -> "lm=cd sr", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "illuminance" -> <|
          "special-name-of-unit" -> "lux", 
           "unit-expressed-terms-of-base-units" -> 
           "lx=cd sr \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> 
           "lm/\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "activity-referred-to-a-radionuclide" -> <|
          "special-name-of-unit" -> "becquerel", 
           "unit-expressed-terms-of-base-units" -> 
           "Bq=\!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>, 
         "absorbed-dose-or-kerma" -> <|
          "special-name-of-unit" -> "gray", 
           "unit-expressed-terms-of-base-units" -> 
           "Gy=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "dose-equivalent" -> <|
          "special-name-of-unit" -> "sievert", 
           "unit-expressed-terms-of-base-units" -> 
           "Sv=\!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> "J/kg"|>, 
         "catalytic-activity" -> <|
          "special-name-of-unit" -> "katal", 
           "unit-expressed-terms-of-base-units" -> 
           "kat=mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "unit-expressed-in-terms-of-other-SI-units" -> ""|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "special-name-of-unit", "unit-expressed-terms-of-base-units", 
           "unit-expressed-in-terms-of-other-SI-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 22], <||>], 
      "coherent-derived-units-in-the-SI-expressed-terms-of-base-units" -> 
      Dataset[<|"area" -> <|
          "typical-symbol" -> "A", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\)"|>, 
         "volume" -> <|
          "typical-symbol" -> "V", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\)"|>, 
         "speed-or-velocity" -> <|
          "typical-symbol" -> "v", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "acceleration" -> <|
          "typical-symbol" -> "a", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "m \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "wavenumber" -> <|
          "typical-symbol" -> "\[Sigma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "density-or-mass-density" -> <|
          "typical-symbol" -> "\[Rho]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-density" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(\[Rho]\), \(A\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "specific-volume" -> <|
          "typical-symbol" -> "\[Nu]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(3\)]\) \!\(\*SuperscriptBox[\(kg\), \
\(-1\)]\)"|>, 
         "current-density" -> <|
          "typical-symbol" -> "j", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "magnetic-field-strength" -> <|
          "typical-symbol" -> "H", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A \!\(\*SuperscriptBox[\(m\), \(-1\)]\)"|>, 
         "amount-of-substance-concentration" -> <|
          "typical-symbol" -> "c", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "mass-concentration" -> <|
          "typical-symbol" -> "\[Rho]-or-\[Gamma]", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "luminance" -> <|
          "typical-symbol" -> "\!\(\*SubscriptBox[\(L\), \(v\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "cd \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "typical-symbol", "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 13], <||>], 
      "coherent-derived-units-whose-names-and-symbols-include-SI-coherent-\
derived-units-with-special-names-and-symbols" -> 
      Dataset[<|"dynamic-viscosity" -> <|
          "name-of-coherent-derived-unit" -> "pascal second", "symbol" -> 
           "Pa s", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-1\)]\)"|>, 
         "moment-of-force" -> <|
          "name-of-coherent-derived-unit" -> "newton meter", "symbol" -> 
           "N m", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "surface-tension" -> <|
          "name-of-coherent-derived-unit" -> "newton per meter", "symbol" -> 
           "N \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "angular-velocity-or-angular-frequency" -> <|
          "name-of-coherent-derived-unit" -> "radian per second", "symbol" -> 
           "rad \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-1\)]\)"|>, 
         "angular-acceleration" -> <|
          "name-of-coherent-derived-unit" -> "radian per second squared", 
           "symbol" -> "rad/\!\(\*SuperscriptBox[\(s\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(s\), \(-2\)]\)"|>, 
         "heat-flux-density-or-irradiance" -> <|
          "name-of-coherent-derived-unit" -> "watt per square meter", 
           "symbol" -> "W/\!\(\*SuperscriptBox[\(m\), \(2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "heat-capacity-or-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kelvin", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(K\), \
\(-1\)]\)"|>, 
         "specific-heat-capacity-or-specific-entropy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \!\(\*SuperscriptBox[\(kg\
\), \(-1\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\) \!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "specific-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per kilogram", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-2\)]\)"|>, 
         "thermal-conductivity" -> <|
          "name-of-coherent-derived-unit" -> "watt per meter kelvin", 
           "symbol" -> 
           "W \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "energy-density" -> <|
          "name-of-coherent-derived-unit" -> "joule per cubic meter", 
           "symbol" -> "J \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(-1\)]\) \!\(\*SuperscriptBox[\(s\
\), \(-2\)]\)"|>, 
         "electric-field-strength" -> <|
          "name-of-coherent-derived-unit" -> "volt per meter", "symbol" -> 
           "V \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-3\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-1\)]\)"|>, 
         "electric-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per cubic meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>, 
         "surface-charge-density" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "electric-flux-density-or-electric-displacement" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per square meter", 
           "symbol" -> "C \!\(\*SuperscriptBox[\(m\), \(-2\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(m\), \(-2\)]\)"|>, 
         "permittivity" -> <|
          "name-of-coherent-derived-unit" -> "farad per meter", "symbol" -> 
           "F \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(kg\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\) \!\(\*SuperscriptBox[\(s\), \(4\)]\) \!\
\(\*SuperscriptBox[\(A\), \(2\)]\)"|>, 
         "permeability" -> <|
          "name-of-coherent-derived-unit" -> "henry per meter", "symbol" -> 
           "H \!\(\*SuperscriptBox[\(m\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg m \!\(\*SuperscriptBox[\(s\), \(-2\)]\) \
\!\(\*SuperscriptBox[\(A\), \(-2\)]\)"|>, 
         "molar-energy" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole", "symbol" -> 
           "J \!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \
\(-1\)]\)"|>, 
         "molar-entropy-or-molar-heat-capacity" -> <|
          "name-of-coherent-derived-unit" -> "joule per mole kelvin", 
           "symbol" -> 
           "J \!\(\*SuperscriptBox[\(K\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(mol\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-2\)]\) \!\(\*SuperscriptBox[\(mol\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(K\), \(-1\)]\)"|>, 
         "exposure(x-and-\[Gamma]-rays)" -> <|
          "name-of-coherent-derived-unit" -> "coulomb per kilogram", "symbol" -> 
           "C \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "A s \!\(\*SuperscriptBox[\(kg\), \(-1\)]\)"|>, 
         "absorbed-dose-rate" -> <|
          "name-of-coherent-derived-unit" -> "gray per second", "symbol" -> 
           "Gy \!\(\*SuperscriptBox[\(s\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "\!\(\*SuperscriptBox[\(m\), \(2\)]\) \!\(\*SuperscriptBox[\(s\), \
\(-3\)]\)"|>, 
         "radiant-intensity" -> <|
          "name-of-coherent-derived-unit" -> "watt per steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(m\), \(2\)]\) \
\!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "radiance" -> <|
          "name-of-coherent-derived-unit" -> 
           "watt per square meter steradian", "symbol" -> 
           "W \!\(\*SuperscriptBox[\(sr\), \(-1\)]\) \!\(\*SuperscriptBox[\(m\
\), \(-2\)]\)", "derived-unit-expressed-in-terms-of-base-units" -> 
           "kg \!\(\*SuperscriptBox[\(s\), \(-3\)]\)"|>, 
         "catalytic-activity-concentration" -> <|
          "name-of-coherent-derived-unit" -> "katal per cubic meter", 
           "symbol" -> "kat \!\(\*SuperscriptBox[\(m\), \(-3\)]\)", 
           "derived-unit-expressed-in-terms-of-base-units" -> 
           "mol \!\(\*SuperscriptBox[\(s\), \(-1\)]\) \
\!\(\*SuperscriptBox[\(m\), \(-3\)]\)"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{
          "name-of-coherent-derived-unit", "symbol", 
           "derived-unit-expressed-in-terms-of-base-units"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 24], <||>], "SI-prefixes" -> 
      Dataset[<|"\!\(\*SuperscriptBox[\(10\), \(3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(3\)]\)", "name" -> 
           "kilo", "symbol" -> "k"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(6\)]\)", "name" -> 
           "mega", "symbol" -> "M"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(9\)]\)", "name" -> 
           "giga", "symbol" -> "G"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(12\)]\)", "name" -> 
           "tera", "symbol" -> "T"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(15\)]\)", "name" -> 
           "peta", "symbol" -> "P"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(18\)]\)", "name" -> 
           "exa", "symbol" -> "E"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(21\)]\)", "name" -> 
           "zetta", "symbol" -> "Z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(24\)]\)", "name" -> 
           "yotta", "symbol" -> "Y"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-3\)]\)", "name" -> 
           "milli", "symbol" -> "m"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-6\)]\)", "name" -> 
           "micro", "symbol" -> "\[Mu]"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-9\)]\)", "name" -> 
           "nano", "symbol" -> "n"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-12\)]\)", "name" -> 
           "pico", "symbol" -> "p"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-15\)]\)", "name" -> 
           "femto", "symbol" -> "f"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-18\)]\)", "name" -> 
           "atto", "symbol" -> "a"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-21\)]\)", "name" -> 
           "zepto", "symbol" -> "z"|>, 
         "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)" -> <|
          "factor" -> "\!\(\*SuperscriptBox[\(10\), \(-24\)]\)", "name" -> 
           "yocto", "symbol" -> "y"|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Struct[{"factor", "name", "symbol"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 16], <||>]|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.876342883837098*^9},
 CellLabel->"Out[13]=",
 CellID->341657153,ExpressionUUID->"a532688b-264a-4c25-bf7d-cb5609d6bde9"]
}, Open  ]],

Cell["XXXX", "Text",
 CellChangeTimes->{{3.876340751430173*^9, 3.876340751961138*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"4", "\[Pi]", " ", 
   RowBox[{"Quantity", "[", "\"\<ElectricConstant\>\"", "]"}], 
   RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.876343390706625*^9, 3.8763434368104973`*^9}},
 CellLabel->"In[18]:=",
 CellID->31208938,ExpressionUUID->"d2021035-01ac-4dc5-87cf-7158265435b6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"4", " ", "\[Pi]"}], 
   RowBox[{
     SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[ThinSpace]", 
     StyleBox["\"c\"", Italic, StripOnInput -> False]}], 
   "electric constant speed of light", 
   RowBox[{"\"ElectricConstant\"", " ", "\"SpeedOfLight\""}]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.8763434091448917`*^9, 3.8763434370961723`*^9}},
 CellLabel->"Out[18]=",
 CellID->195893208,ExpressionUUID->"1470c60a-a1e2-4e4a-893e-140f12b28d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"4", "\[Pi]", " ", 
    RowBox[{"Quantity", "[", "\"\<ElectricConstant\>\"", "]"}], 
    RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}]}], ")"}], 
  RowBox[{"-", "1"}]]], "Input",
 CellChangeTimes->{{3.876343390706625*^9, 3.8763434404362826`*^9}},
 CellLabel->"In[19]:=",
 CellID->56393202,ExpressionUUID->"ef4c18b9-e1d6-4e7f-b499-3f65e6884d7f"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1", 
    RowBox[{"4", " ", "\[Pi]"}]], 
   RowBox[{"\"/(\"", "\[InvisibleSpace]", 
     SubscriptBox["\"\[CurlyEpsilon]\"", "0"], "\[ThinSpace]", 
     StyleBox["\"c\"", Italic, StripOnInput -> False], "\[InvisibleSpace]", 
     "\")\""}], "per electric constant speed of light", 
   FractionBox["1", 
    RowBox[{"\"ElectricConstant\"", " ", "\"SpeedOfLight\""}]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8763434408012066`*^9},
 CellLabel->"Out[19]=",
 CellID->82495593,ExpressionUUID->"31ad1e33-dbb3-40b0-be0c-2186a564428f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", "\[Pi]"}]], ",", 
    FractionBox["1", 
     RowBox[{"\"\<ElectricConstant\>\"", " ", "\"\<SpeedOfLight\>\""}]]}], 
   "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[20]:=",
 CellID->16401720,ExpressionUUID->"8448e3dc-858a-41e9-ac57-1f58a14d4e5d"],

Cell[BoxData[
 TemplateBox[{
  "29.9792458163212749834`9.532175381914792", "\"\[CapitalOmega]\"", "ohms", 
   "\"Ohms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8763434437835107`*^9},
 CellLabel->"Out[20]=",
 CellID->507846634,ExpressionUUID->"1c70daa9-a731-450a-97fa-fabf35aa4ee8"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{-5.3999999999999995`, Automatic}, {-5.399999999999977, 
   Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"26dea91c-8224-4529-a79b-e7e19507045e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 142, 2, 88, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 142, 2, 88, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[725, 26, 181, 4, 27, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[909, 32, 144, 2, 55, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[909, 32, 144, 2, 55, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1078, 38, 129, 2, 59, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[619714, 12010, 196, 3, 31, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[619913, 12015, 129, 2, 34, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[620067, 12021, 239, 5, 25, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[620309, 12028, 242, 5, 28, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 734994, 14239},
 {"Your Essay Title", 735180, 14243},
 {"AuthorName", 735360, 14247},
 {"Abstract", 735519, 14251},
 {"TemplateCell", 735700, 14255},
 {"SectionHeader", 735882, 14259},
 {"ExampleTopicSentence", 736058, 14263},
 {"ExampleCodeText", 736238, 14267},
 {"ExampleInput", 736413, 14271},
 {"ExampleOutput", 736584, 14275}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 142, 2, 88, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[725, 26, 181, 4, 27, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[909, 32, 144, 2, 55, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1078, 38, 129, 2, 59, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[CellGroupData[{
Cell[1232, 44, 756, 19, 39, "Input",ExpressionUUID->"ffbbe41d-391b-470a-b5a7-b77fc3e2c35f",
 CellID->137093261],
Cell[1991, 65, 733, 19, 41, "Output",ExpressionUUID->"3a12710c-154b-410c-8517-f07b0ba2e6f4",
 CellID->29031524]
}, Open  ]],
Cell[CellGroupData[{
Cell[2761, 89, 436, 12, 70, "Input",ExpressionUUID->"ddbc2c3d-21d9-4f94-93dd-ea189ac6e474",
 CellID->468359857],
Cell[3200, 103, 357, 7, 39, "Output",ExpressionUUID->"31d155e0-f6fd-4164-96d5-f51221ea1304",
 CellID->12826900]
}, Open  ]],
Cell[CellGroupData[{
Cell[3594, 115, 343, 8, 29, "Input",ExpressionUUID->"41911eb6-0dfa-4eab-9e2e-81a300cb1837",
 CellID->155411773],
Cell[3940, 125, 309, 7, 35, "Output",ExpressionUUID->"a6a07413-01f9-4fb6-86c7-f994f956750e",
 CellID->445483753]
}, Open  ]],
Cell[CellGroupData[{
Cell[4286, 137, 551, 12, 64, "Input",ExpressionUUID->"77a57353-15bb-4761-b6fe-d1d8552ea27f",
 CellID->17660970],
Cell[4840, 151, 925, 24, 39, "Output",ExpressionUUID->"95e1da17-0a7e-4caf-9900-0a338a54da53",
 CellID->317058709]
}, Open  ]],
Cell[CellGroupData[{
Cell[5802, 180, 659, 19, 94, "Input",ExpressionUUID->"c2f220d7-9f84-4532-b4ea-e31eeca9a0fc",
 CellID->90314835],
Cell[6464, 201, 837, 22, 39, "Output",ExpressionUUID->"ff903430-2d5b-45ff-b131-44a6d8115263",
 CellID->33244809]
}, Open  ]],
Cell[CellGroupData[{
Cell[7338, 228, 535, 14, 78, "Input",ExpressionUUID->"eb836dd6-d7d5-4a5b-9ab8-53d4d2e4f193",
 CellID->183472900],
Cell[7876, 244, 315, 7, 37, "Output",ExpressionUUID->"616ba003-1d23-4f5d-aa4d-f588d4b4ee7b",
 CellID->128074595]
}, Open  ]],
Cell[CellGroupData[{
Cell[8228, 256, 603, 15, 64, "Input",ExpressionUUID->"112b4613-46ce-4bf5-abf6-b216dab7025a",
 CellID->484242721],
Cell[8834, 273, 962, 25, 54, "Output",ExpressionUUID->"87f5e117-0d71-4d4f-b27a-a886e5c566a4",
 CellID->208375590]
}, Open  ]],
Cell[CellGroupData[{
Cell[9833, 303, 692, 21, 130, "Input",ExpressionUUID->"3d9189f1-cccc-43de-8b53-55137fa7496c",
 CellID->211391236],
Cell[10528, 326, 898, 24, 56, "Output",ExpressionUUID->"8c4ff746-14c2-49b9-a27b-dea02a1deaf7",
 CellID->71544455]
}, Open  ]],
Cell[CellGroupData[{
Cell[11463, 355, 489, 14, 117, "Input",ExpressionUUID->"97a34c96-8618-4d70-af86-206c548d0583",
 CellID->15024468],
Cell[11955, 371, 722, 16, 39, "Output",ExpressionUUID->"87609cfa-4b36-4191-9ace-2e85c467a726",
 CellID->781318194]
}, Open  ]],
Cell[CellGroupData[{
Cell[12714, 392, 482, 11, 46, "Input",ExpressionUUID->"77b4d160-9215-4ae0-9948-b810a654454a",
 CellID->956143958],
Cell[13199, 405, 289, 7, 37, "Output",ExpressionUUID->"09aa1629-839f-4946-b6a2-7a69b1c206f0",
 CellID->35433293]
}, Open  ]],
Cell[CellGroupData[{
Cell[13525, 417, 574, 13, 139, "Input",ExpressionUUID->"73a2b60b-6721-4f60-92f2-7e7110f388b7",
 CellID->299151566],
Cell[14102, 432, 5008, 120, 125, "Output",ExpressionUUID->"7597e5ec-377a-407d-b97b-761b0ebe6c11",
 CellID->130418119]
}, Open  ]],
Cell[19125, 555, 262, 5, 52, "Text",ExpressionUUID->"1701dd95-8252-4ab6-bac5-95e30d746a5c",
 CellID->396955892],
Cell[CellGroupData[{
Cell[19412, 564, 234, 4, 25, "Input",ExpressionUUID->"d2bebd8c-abe5-4cb1-ad0e-155042a666d9",
 CellID->3072962],
Cell[19649, 570, 161816, 3029, 2376, "Output",ExpressionUUID->"40044ebc-ec56-41eb-b56d-a4af7859a30c",
 CellID->320434115]
}, Open  ]],
Cell[181480, 3602, 248, 3, 31, "Text",ExpressionUUID->"8ba195ad-b9d2-4089-b2c2-f1fdc6d0fc73",
 CellID->49939769],
Cell[CellGroupData[{
Cell[181753, 3609, 291, 6, 25, "Input",ExpressionUUID->"5a0f3558-b505-4b5e-b23c-aa87ed10578c",
 CellID->145521628],
Cell[182047, 3617, 192, 3, 28, "Output",ExpressionUUID->"37db8d16-644c-4936-9368-7e1a2fd41091",
 CellID->77502944]
}, Open  ]],
Cell[182254, 3623, 214, 2, 31, "Text",ExpressionUUID->"118071da-55bb-4b7c-98d4-e4299e326914",
 CellID->7310103],
Cell[182471, 3627, 215, 2, 31, "Text",ExpressionUUID->"87a22544-9981-44d3-9577-e4dd59423b07",
 CellID->585879],
Cell[CellGroupData[{
Cell[182711, 3633, 266, 5, 25, "Input",ExpressionUUID->"ebe6046a-6b2f-4b80-9f9c-100c25d70975",
 CellID->20464229],
Cell[182980, 3640, 404, 9, 38, "Output",ExpressionUUID->"5910dd03-b93e-4807-a125-2506e76b7508",
 CellID->342103201]
}, Open  ]],
Cell[CellGroupData[{
Cell[183421, 3654, 314, 7, 25, "Input",ExpressionUUID->"3a8cc0cf-a3a9-4891-b217-d9f24a87c53c",
 CellID->217079357],
Cell[183738, 3663, 186, 4, 28, "Output",ExpressionUUID->"f9b171d4-825e-48ee-b0d9-f4e0ecc627e4",
 CellID->374702278]
}, Open  ]],
Cell[183939, 3670, 193, 2, 31, "Text",ExpressionUUID->"b8ae7f9a-19bf-4a9e-909a-2c436790c383",
 CellID->181442683],
Cell[CellGroupData[{
Cell[184157, 3676, 333, 7, 25, "Input",ExpressionUUID->"08f36e8e-2ff4-43e0-ad8d-81807a47ae73",
 CellID->167656822],
Cell[184493, 3685, 344, 9, 28, "Output",ExpressionUUID->"f03b81c6-4f68-43e1-8799-db7edbeab2ed",
 CellID->355149675]
}, Open  ]],
Cell[184852, 3697, 207, 2, 31, "Text",ExpressionUUID->"8c4dffa2-82b6-40b6-ab54-85a1f9cdc8d9",
 CellID->72070909],
Cell[CellGroupData[{
Cell[185084, 3703, 369, 9, 25, "Input",ExpressionUUID->"9a01ed13-8253-4e94-9cb8-9e0dabac6257",
 CellID->1051509],
Cell[185456, 3714, 346, 9, 28, "Output",ExpressionUUID->"4b5820bf-cd66-4094-8dc5-1a06ca75d4e4",
 CellID->152743432]
}, Open  ]],
Cell[185817, 3726, 210, 2, 31, "Text",ExpressionUUID->"016d1a26-a414-4788-93a1-b0e381286857",
 CellID->834400762],
Cell[CellGroupData[{
Cell[186052, 3732, 374, 9, 27, "Input",ExpressionUUID->"33793613-ec48-4e71-9133-4194d924e0f3",
 CellID->344415345],
Cell[186429, 3743, 344, 9, 28, "Output",ExpressionUUID->"90d4f2da-0864-4e3d-866b-e9effe57f9cf",
 CellID->615170608]
}, Open  ]],
Cell[186788, 3755, 185, 2, 31, "Text",ExpressionUUID->"03fc65f6-431c-4187-81b0-e6e5afcd4de4",
 CellID->207669800],
Cell[CellGroupData[{
Cell[186998, 3761, 413, 10, 29, "Input",ExpressionUUID->"705c2dd3-1aa8-4544-a27b-dd4fdeb23aee",
 CellID->110823852],
Cell[187414, 3773, 247, 5, 28, "Output",ExpressionUUID->"aee931e8-e4a6-4fe7-a20d-912f2e1ad763",
 CellID->13707685]
}, Open  ]],
Cell[187676, 3781, 267, 5, 31, "Text",ExpressionUUID->"ef465df6-dd42-473b-82a9-f56627e594de",
 CellID->620538228],
Cell[CellGroupData[{
Cell[187968, 3790, 634, 16, 29, "Input",ExpressionUUID->"46836c27-0c1b-4e07-aeb7-5d578f374e42",
 CellID->613867709],
Cell[188605, 3808, 172, 3, 28, "Output",ExpressionUUID->"ab692096-fed7-45c0-a280-efed1bd7650d",
 CellID->360618022]
}, Open  ]],
Cell[188792, 3814, 210, 2, 31, "Text",ExpressionUUID->"5cf3f039-145e-499c-b39d-c8fecee12d77",
 CellID->569811375],
Cell[CellGroupData[{
Cell[189027, 3820, 494, 12, 25, "Input",ExpressionUUID->"16ae7899-399d-4b89-a35f-149018aff1a8",
 CellID->7251249],
Cell[189524, 3834, 175, 3, 28, "Output",ExpressionUUID->"38fad763-541e-45f6-a6ce-03428ccc3806",
 CellID->211633835]
}, Open  ]],
Cell[189714, 3840, 402, 7, 52, "Text",ExpressionUUID->"e1a319be-ad65-4278-bbfb-03535be18c94",
 CellID->218568486],
Cell[CellGroupData[{
Cell[190141, 3851, 695, 18, 29, "Input",ExpressionUUID->"a800f65b-7c4a-476f-8742-87f42856e7f9",
 CellID->402820916],
Cell[190839, 3871, 201, 3, 28, "Output",ExpressionUUID->"8ba75b0f-8491-48dd-bb8f-60aec280fba3",
 CellID->610347574]
}, Open  ]],
Cell[191055, 3877, 238, 4, 31, "Text",ExpressionUUID->"c08868a1-876c-40d9-be02-824ac9968496",
 CellID->274640948],
Cell[CellGroupData[{
Cell[191318, 3885, 801, 19, 46, "Input",ExpressionUUID->"b885486e-b9ec-4987-9fc8-e235df0f4a47",
 CellID->98821221],
Cell[192122, 3906, 165952, 3145, 2431, "Output",ExpressionUUID->"ab948457-847b-4380-b84c-b9c931d639a7",
 CellID->621038680]
}, Open  ]],
Cell[358089, 7054, 281, 5, 31, "Text",ExpressionUUID->"58b42f90-31b6-4b69-81de-122cb89cf887",
 CellID->166670478],
Cell[CellGroupData[{
Cell[358395, 7063, 290, 5, 25, "Input",ExpressionUUID->"2a711d1d-ec24-4a7a-bf1b-cee881d90d35",
 CellID->76158289],
Cell[358688, 7070, 5356, 120, 94, "Output",ExpressionUUID->"4580ad0c-5431-4d90-b71f-12dfd02f352f",
 CellID->57995569]
}, Open  ]],
Cell[CellGroupData[{
Cell[364081, 7195, 3796, 86, 33, "Input",ExpressionUUID->"89cac3ef-dbb7-447d-8544-6e38f7703334",
 CellID->94736355],
Cell[367880, 7283, 16623, 386, 152, "Output",ExpressionUUID->"1af0ef65-055e-409c-b8d0-69898dac520f",
 CellID->171677995]
}, Open  ]],
Cell[384518, 7672, 287, 5, 31, "Text",ExpressionUUID->"5e07d64f-ded0-4946-8d4f-6eba27c42436",
 CellID->258071238],
Cell[CellGroupData[{
Cell[384830, 7681, 567, 11, 35, "Input",ExpressionUUID->"77cd7b0f-f1e1-4493-b99b-064ed6b66369",
 CellID->124196404],
Cell[385400, 7694, 44627, 851, 500, "Output",ExpressionUUID->"5b856a06-4378-44e6-83b3-d4fbb07220e3",
 CellID->680142903]
}, Open  ]],
Cell[430042, 8548, 194, 2, 31, "Text",ExpressionUUID->"cc0f5e0f-0634-4a82-a475-465e07aa373b",
 CellID->192896050],
Cell[CellGroupData[{
Cell[430261, 8554, 579, 11, 36, "Input",ExpressionUUID->"5b935693-25b9-418a-bb9e-d12cf24173cf",
 CellID->308299939],
Cell[430843, 8567, 7415, 167, 129, "Output",ExpressionUUID->"bce023e6-ef95-4054-a548-0405490186a6",
 CellID->195273897]
}, Open  ]],
Cell[438273, 8737, 202, 2, 31, "Text",ExpressionUUID->"417eaf37-fef4-444b-8eef-96242766df7b",
 CellID->105955903],
Cell[CellGroupData[{
Cell[438500, 8743, 607, 12, 36, "Input",ExpressionUUID->"eb9be703-65a4-4734-9f85-c7b5cbf7c556",
 CellID->135846546],
Cell[439110, 8757, 3276, 73, 119, "Output",ExpressionUUID->"1d1a27df-2bac-456b-93f7-2207c2bc8992",
 CellID->52092850]
}, Open  ]],
Cell[CellGroupData[{
Cell[442423, 8835, 2755, 64, 114, "Input",ExpressionUUID->"957cc583-cb82-4702-ab40-5604da372c4c",
 CellID->61038929],
Cell[445181, 8901, 4195, 94, 136, "Output",ExpressionUUID->"f7b600b0-2537-4b5b-aa65-baa82975cb8a",
 CellID->37818568]
}, Open  ]],
Cell[CellGroupData[{
Cell[449413, 9000, 2661, 62, 86, "Input",ExpressionUUID->"1b612b8d-f325-4ae9-954d-f2593830aa63",
 CellID->32591521],
Cell[452077, 9064, 1245, 26, 42, "Output",ExpressionUUID->"e4d4e516-cec4-417e-9351-faff80cf7ae9",
 CellID->438339180]
}, Open  ]],
Cell[CellGroupData[{
Cell[453359, 9095, 2861, 66, 186, "Input",ExpressionUUID->"e6abd0f3-bc83-4820-b447-1b12261fc75c",
 CellID->8006613],
Cell[456223, 9163, 2016, 43, 72, "Output",ExpressionUUID->"7db7dc1e-5b85-4fba-8ad1-e374d7ac9be0",
 CellID->36182783]
}, Open  ]],
Cell[CellGroupData[{
Cell[458276, 9211, 2974, 67, 161, "Input",ExpressionUUID->"f42b4450-2f8e-48a0-9edd-af49b0d14052",
 CellID->101825039],
Cell[461253, 9280, 2714, 59, 74, "Output",ExpressionUUID->"41f56986-fe1a-405e-92e5-92e20e7681d7",
 CellID->239625027]
}, Open  ]],
Cell[463982, 9342, 1208, 27, 60, "Input",ExpressionUUID->"050b9851-aa1a-4ef7-b32b-209a5db67857",
 CellID->27028090],
Cell[CellGroupData[{
Cell[465215, 9373, 600, 13, 26, "Input",ExpressionUUID->"ade5bc92-e466-4459-b7df-5c5e27e6b729",
 CellID->12809751],
Cell[465818, 9388, 3248, 57, 1108, "Output",ExpressionUUID->"6c094ced-4e18-449c-ad46-b3acfb3aaa47",
 CellID->112268682]
}, Closed]],
Cell[CellGroupData[{
Cell[469103, 9450, 244, 4, 23, "Input",ExpressionUUID->"7886c24f-41bc-4791-841d-e46d20151a3b",
 CellID->4100434],
Cell[469350, 9456, 883, 25, 47, "Output",ExpressionUUID->"32a39776-eac1-4bd4-9acb-ac1d6a50be1e",
 CellID->746130641]
}, Open  ]],
Cell[470248, 9484, 2266, 51, 249, "Input",ExpressionUUID->"e3c2e2fc-e93a-4dfb-8755-c9a15200dd37",
 CellID->235041670],
Cell[CellGroupData[{
Cell[472539, 9539, 634, 16, 47, InheritFromParent,ExpressionUUID->"dbb6da6a-7122-4ab6-829b-038694e0b549",
 CellID->154146669],
Cell[473176, 9557, 146523, 2450, 247, "Output",ExpressionUUID->"a532688b-264a-4c25-bf7d-cb5609d6bde9",
 CellID->341657153]
}, Open  ]],
Cell[619714, 12010, 196, 3, 31, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[619913, 12015, 129, 2, 34, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[620067, 12021, 239, 5, 25, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[620309, 12028, 242, 5, 28, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[CellGroupData[{
Cell[620588, 12038, 366, 7, 26, "Input",ExpressionUUID->"d2021035-01ac-4dc5-87cf-7158265435b6",
 CellID->31208938],
Cell[620957, 12047, 493, 11, 37, "Output",ExpressionUUID->"1470c60a-a1e2-4e4a-893e-140f12b28d05",
 CellID->195893208]
}, Open  ]],
Cell[CellGroupData[{
Cell[621487, 12063, 411, 9, 27, "Input",ExpressionUUID->"ef4c18b9-e1d6-4e7f-b499-3f65e6884d7f",
 CellID->56393202],
Cell[621901, 12074, 579, 13, 57, "Output",ExpressionUUID->"31ad1e33-dbb3-40b0-be0c-2186a564428f",
 CellID->82495593]
}, Open  ]],
Cell[CellGroupData[{
Cell[622517, 12092, 391, 11, 44, "Input",ExpressionUUID->"8448e3dc-858a-41e9-ac57-1f58a14d4e5d",
 CellID->16401720],
Cell[622911, 12105, 291, 7, 35, "Output",ExpressionUUID->"1c70daa9-a731-450a-97fa-fabf35aa4ee8",
 CellID->507846634]
}, Open  ]],
Cell[623217, 12115, 95, 1, 28, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[623315, 12118, 95, 1, 28, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]]
}, Open  ]]
}
]
*)

