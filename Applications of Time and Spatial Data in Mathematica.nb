(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    887545,      19241]
NotebookOptionsPosition[    737431,      16283]
NotebookOutlinePosition[    851085,      18454]
CellTagsIndexPosition[    850694,      18440]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Applications of Time and Spatial Data in Mathematica", "Title",
 CellChangeTimes->{{3.8746779010710087`*^9, 3.874677939502393*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Author", " ", "Name"}], "Author"]], "Author",
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Time", "Section",
 CellChangeTimes->{{3.8746779187823052`*^9, 3.874677919316288*^9}},
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["What time is it now?", "Text",
 CellChangeTimes->{{3.8746779871005077`*^9, 3.874677989987012*^9}},
 CellID->26783567,ExpressionUUID->"05188177-8e57-4d37-9938-43741e506a59"],

Cell[CellGroupData[{

Cell[BoxData["Now"], "Input",
 CellChangeTimes->{{3.8746779828780575`*^9, 3.87467798393898*^9}},
 CellLabel->"In[1]:=",
 CellID->212331350,ExpressionUUID->"867b691b-9e6c-4270-b842-79032f7107af"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 15:26:24\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "26", ",", 
           "24.2159853`9.136677068014999"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746779842299795`*^9},
 CellLabel->"Out[1]=",
 CellID->528830301,ExpressionUUID->"ae9de746-ff29-477a-9242-2a204a1c51f5"]
}, Closed]],

Cell["What is today?", "Text",
 CellChangeTimes->{{3.874677992642617*^9, 3.8746780009847307`*^9}},
 CellID->288775150,ExpressionUUID->"10213706-142e-4075-9370-1af6c888da5c"],

Cell[CellGroupData[{

Cell[BoxData["Today"], "Input",
 CellChangeTimes->{{3.874677995328349*^9, 3.8746779975514545`*^9}},
 CellLabel->"In[2]:=",
 CellID->134082873,ExpressionUUID->"ecd29544-d018-45dc-93c3-827bb6b7aaaa"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\""}], 
     "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746779978819084`*^9},
 CellLabel->"Out[2]=",
 CellID->68318337,ExpressionUUID->"6f26310e-c634-4a1f-8c18-60438541dde3"]
}, Closed]],

Cell["What is yesterday?", "Text",
 CellChangeTimes->{{3.8746780027043614`*^9, 3.87467801813586*^9}},
 CellID->18275147,ExpressionUUID->"3f810540-5255-41ef-af7c-199cccdb4ae7"],

Cell[CellGroupData[{

Cell[BoxData["Yesterday"], "Input",
 CellChangeTimes->{{3.874678009115188*^9, 3.874678022908149*^9}},
 CellLabel->"In[3]:=",
 CellID->69238722,ExpressionUUID->"1461257d-d88f-4b4f-aae9-cf5a5a360d83"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 12 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\""}], 
     "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.87467802325373*^9},
 CellLabel->"Out[3]=",
 CellID->188157671,ExpressionUUID->"ef57d009-1706-411d-80ee-095362153495"]
}, Closed]],

Cell["What is tomorrow?", "Text",
 CellChangeTimes->{{3.8746780245923243`*^9, 3.8746780269173365`*^9}},
 CellID->280154155,ExpressionUUID->"16e45225-7ef3-41cd-9e82-511771aee35b"],

Cell[CellGroupData[{

Cell[BoxData["Tomorrow"], "Input",
 CellChangeTimes->{{3.874678027892705*^9, 3.874678029093525*^9}},
 CellLabel->"In[4]:=",
 CellID->741904749,ExpressionUUID->"200232f9-6e5b-45d8-a889-76860cafab2a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\""}], 
     "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.87467802940273*^9},
 CellLabel->"Out[4]=",
 CellID->50880995,ExpressionUUID->"ec31a280-f2a6-4158-a7cc-f71462331fd5"]
}, Closed]],

Cell["What is the current date?", "Text",
 CellChangeTimes->{{3.874678050494833*^9, 3.874678054357313*^9}},
 CellID->534909424,ExpressionUUID->"f3fdca2d-0aff-44d7-a2af-6ee715ac6f83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780621801076`*^9}},
 CellLabel->"In[5]:=",
 CellID->733113451,ExpressionUUID->"2d159554-6b1d-44f2-83d4-f97367234d3c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 15:27:42\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "27", ",", 
           "42.5225959`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746780625256147`*^9},
 CellLabel->"Out[5]=",
 CellID->330366557,ExpressionUUID->"6cf1ad42-16db-40b9-8515-18152290b1cb"]
}, Closed]],

Cell["What is the exact instant?:", "Text",
 CellChangeTimes->{{3.874678066687496*^9, 3.8746780953067884`*^9}, {
  3.874678785784848*^9, 3.874678804286358*^9}},
 CellID->386070864,ExpressionUUID->"5cfab878-2929-45b7-aeee-d9220f5d25b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Instant\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780621801076`*^9}, {
  3.8746787876503158`*^9, 3.8746788102247643`*^9}},
 CellLabel->"In[31]:=",
 CellID->463020431,ExpressionUUID->"63fdea07-2110-4782-a7b8-a3bf850a07a5"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 15:40:10\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "40", ",", 
           "10.5510417`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874678790073613*^9, 3.8746788105540457`*^9}},
 CellLabel->"Out[31]=",
 CellID->305961262,ExpressionUUID->"d9a6f705-c4ad-412c-a448-82600fb58171"]
}, Closed]],

Cell["See the full list:", "Text",
 CellChangeTimes->{{3.8746788340852995`*^9, 3.874678837581365*^9}},
 CellID->576585238,ExpressionUUID->"dea53b90-30f5-472c-a317-62d3d30645d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"CurrentDate", "[", "\"\<Instant\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87467881822649*^9, 3.8746788211559114`*^9}},
 CellLabel->"In[32]:=",
 CellID->259507836,ExpressionUUID->"d10b5b1a-ae6f-4590-a5d4-b2486e7bca28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2022", ",", "10", ",", "13", ",", "15", ",", "40", ",", "21.4445571`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8746788214475656`*^9},
 CellLabel->"Out[32]=",
 CellID->17859382,ExpressionUUID->"ff43f6bd-8817-404c-8b51-738ea448c19e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Second", "Subsubsection",
 CellChangeTimes->{{3.874679115433941*^9, 3.874679116434333*^9}},
 CellID->26516802,ExpressionUUID->"b623baa2-ea7b-4dd7-945a-32ebcf82645f"],

Cell["What is the current date-time to the second?:", "Text",
 CellChangeTimes->{{3.874678066687496*^9, 3.8746780953067884`*^9}, {
  3.874678785784848*^9, 3.874678786793654*^9}},
 CellID->60566017,ExpressionUUID->"e1e5f8d8-dc04-4c8b-9c88-c1b28b6620c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Second\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780621801076`*^9}, {
  3.8746787876503158`*^9, 3.8746787897054863`*^9}},
 CellLabel->"In[30]:=",
 CellID->148106480,ExpressionUUID->"a223258e-3158-4f5d-bc06-266fbfac77bf"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Second: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 15:39:50\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "39", ",", "50"}], 
         "}"}], ",", "\"Second\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678790073613*^9},
 CellLabel->"Out[30]=",
 CellID->388511141,ExpressionUUID->"414bc059-b0e2-47d4-8d95-c943353bf362"]
}, Closed]],

Cell["See the full list:", "Text",
 CellChangeTimes->{{3.8746788412800417`*^9, 3.8746788442382245`*^9}},
 CellID->418342747,ExpressionUUID->"aef51761-5d80-4d2d-9e4d-5037a86918e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"CurrentDate", "[", "\"\<Second\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746788258839827`*^9, 3.8746788270527897`*^9}},
 CellLabel->"In[33]:=",
 CellID->231969633,ExpressionUUID->"5524d99b-3d32-41af-800c-417e6a639771"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "40", ",", "27"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.874678827351117*^9},
 CellLabel->"Out[33]=",
 CellID->109348528,ExpressionUUID->"78e0a07b-d8d4-4031-b762-02dabaeeaf8b"]
}, Closed]],

Cell["Compare the current, previous and next seconds:", "Text",
 CellChangeTimes->{{3.8746790588066907`*^9, 3.8746790665187187`*^9}, {
  3.874679097366745*^9, 3.874679104496979*^9}, {3.8746791648891673`*^9, 
  3.8746791716999006`*^9}},
 CellID->156636521,ExpressionUUID->"39e234c4-ad5f-47ac-bdfa-a17d85758f47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<Second\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CurrentDate", "[", "\"\<Second\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<Second\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.8746791615156155`*^9}},
 CellLabel->"In[47]:=",
 CellID->19100910,ExpressionUUID->"7085973c-1830-4965-a86c-687e0c3c1453"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Second: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 15:46:12\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "46", ",", "12"}], 
         "}"}], ",", "\"Second\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, 
   3.874679173204652*^9},
 CellLabel->"Out[47]=",
 CellID->541316750,ExpressionUUID->"5c59d65e-39b6-4e84-b781-9fd2f8676f39"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Second: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 15:46:13\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "46", ",", "13"}], 
         "}"}], ",", "\"Second\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, 
   3.874679173371583*^9},
 CellLabel->"Out[48]=",
 CellID->51189614,ExpressionUUID->"0d1c819e-095c-4de4-8333-c0623065ed1c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Second: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 15:46:14\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "46", ",", "14"}], 
         "}"}], ",", "\"Second\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, 
   3.8746791735495644`*^9},
 CellLabel->"Out[49]=",
 CellID->124355293,ExpressionUUID->"38897bf7-c544-442f-828c-b43419bca016"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Minute", "Subsubsection",
 CellChangeTimes->{{3.8746791278383455`*^9, 3.874679128823802*^9}},
 CellID->161268256,ExpressionUUID->"cd9f17f4-77ca-404a-b631-87bcb50f1cd9"],

Cell["What is the current date-time to the minute?:", "Text",
 CellChangeTimes->{{3.874678066687496*^9, 3.8746780953067884`*^9}},
 CellID->3232410,ExpressionUUID->"0559868e-7cc4-4c83-8f24-8e735fde05df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Minute\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}},
 CellLabel->"In[7]:=",
 CellID->851692497,ExpressionUUID->"15285e52-4af6-44c6-a29a-022403b76879"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Minute: \"", "DateObjectLabel"], "\"Thu 13 Oct 2022 15:28\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "28"}], "}"}], 
       ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746780782092276`*^9, 3.874678083128584*^9}},
 CellLabel->"Out[7]=",
 CellID->509084134,ExpressionUUID->"a2f41fa9-6d42-43ae-89c6-ea1474c7e1a3"]
}, Closed]],

Cell["Compare the current, previous and next minutes:", "Text",
 CellChangeTimes->{{3.8746790588066907`*^9, 3.8746790665187187`*^9}, {
  3.874679097366745*^9, 3.874679104496979*^9}, {3.8746791648891673`*^9, 
  3.8746792014409227`*^9}},
 CellID->283655409,ExpressionUUID->"3b934961-2fe7-41fc-a496-6c1fbde6df1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<Minute\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CurrentDate", "[", "\"\<Minute\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<Minute\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}},
 CellLabel->"In[50]:=",
 CellID->10209223,ExpressionUUID->"d1d0d101-5bbc-4b9d-8809-b8b6a8bf9218"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Minute: \"", "DateObjectLabel"], "\"Thu 13 Oct 2022 15:45\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "45"}], "}"}], 
       ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
  3.874679173204652*^9, 3.8746791930281363`*^9}},
 CellLabel->"Out[50]=",
 CellID->135856805,ExpressionUUID->"370a77d1-41d0-4509-8c79-8d54de68abfc"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Minute: \"", "DateObjectLabel"], "\"Thu 13 Oct 2022 15:46\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "46"}], "}"}], 
       ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
  3.874679173204652*^9, 3.874679193198281*^9}},
 CellLabel->"Out[51]=",
 CellID->6937160,ExpressionUUID->"3972b409-cbb0-477c-88f3-5a1fb4bed251"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Minute: \"", "DateObjectLabel"], "\"Thu 13 Oct 2022 15:47\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "47"}], "}"}], 
       ",", "\"Minute\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
  3.874679173204652*^9, 3.87467919337728*^9}},
 CellLabel->"Out[52]=",
 CellID->56095960,ExpressionUUID->"d6882081-38fd-4be0-a8a8-a0a6c7c01378"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hour", "Subsubsection",
 CellChangeTimes->{{3.87467921241095*^9, 3.874679212879633*^9}},
 CellID->787460011,ExpressionUUID->"c3c9d226-901d-4cbd-af58-6c33e2a985f6"],

Cell["I can change the granularity to hour:", "Text",
 CellChangeTimes->{{3.8746781057244425`*^9, 3.874678112635578*^9}},
 CellID->25990520,ExpressionUUID->"1251f9ab-6602-488e-8226-3b0a4d611de1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Hour\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.87467811566636*^9}},
 CellLabel->"In[8]:=",
 CellID->145399823,ExpressionUUID->"38711cd1-6c23-487e-a7c4-ea5564b09ea8"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Hour beginning: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 3 pm\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15"}], "}"}], ",", 
       "\"Hour\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678115944784*^9},
 CellLabel->"Out[8]=",
 CellID->166889862,ExpressionUUID->"9d5e5424-7a9c-4ed9-a1a3-e098c447e698"]
}, Closed]],

Cell["Compare the current, previous and next hours:", "Text",
 CellChangeTimes->{{3.8746790588066907`*^9, 3.8746790665187187`*^9}, {
  3.874679097366745*^9, 3.874679104496979*^9}, {3.8746791648891673`*^9, 
  3.8746792164950333`*^9}},
 CellID->203391407,ExpressionUUID->"09a6dffd-b073-40d0-85a3-c5c5f93b6e88"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<Hour\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CurrentDate", "[", "\"\<Hour\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<Hour\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679223887602*^9}},
 CellLabel->"In[53]:=",
 CellID->160216940,ExpressionUUID->"7c184c91-d567-4d57-850c-8885b2302fbc"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Hour beginning: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 2 pm\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "14"}], "}"}], ",", 
       "\"Hour\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.874679224196865*^9},
 CellLabel->"Out[53]=",
 CellID->38044996,ExpressionUUID->"4f92e8f2-29fc-476e-a8c8-aa246728f456"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Hour beginning: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 3 pm\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "15"}], "}"}], ",", 
       "\"Hour\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.874679224372037*^9},
 CellLabel->"Out[54]=",
 CellID->322909035,ExpressionUUID->"e6ae627a-73c5-4886-9c92-6e3e13acf70b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Hour beginning: \"", "DateObjectLabel"], 
     "\"Thu 13 Oct 2022 4 pm\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13", ",", "16"}], "}"}], ",", 
       "\"Hour\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.874679224562045*^9},
 CellLabel->"Out[55]=",
 CellID->31946536,ExpressionUUID->"41873c4a-54a0-4adc-86ae-183923e799d5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Time of Day", "Subsubsection",
 CellChangeTimes->{{3.8746874799011583`*^9, 3.874687482795391*^9}},
 CellID->189217935,ExpressionUUID->"4afaf46d-97bb-4ff7-a29c-475141839e39"],

Cell["What is my local time?", "Text",
 CellChangeTimes->{{3.8746874845355744`*^9, 3.8746874881062293`*^9}},
 CellID->13757996,ExpressionUUID->"505a47f3-2e33-4887-93d4-7a07d85ca93c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8746875074660287`*^9, 3.8746875091838903`*^9}},
 CellLabel->"In[1]:=",
 CellID->680981657,ExpressionUUID->"2153d8bd-1542-4432-8d65-e22a97742781"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 18:16:21\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "18", ",", "16", ",", 
           "21.6629964`9.088293459424266"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746875134220743`*^9, 3.8746881822399073`*^9},
 CellLabel->"Out[1]=",
 CellID->214890789,ExpressionUUID->"738423d8-42fe-4657-8da4-020ec70d90af"]
}, Open  ]],

Cell["Find the current local time in Paris:", "ExampleText",
 CellID->1685256102,ExpressionUUID->"65ff64f2-5c99-4a66-99c8-997b9c97e1da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}],
              "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "paris", "template" -> 
       "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
       "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "City", "desc" -> "a city", "input" -> 
          "{\"C\", \"paris\"} -> {\"City\"}"}, {
         "name" -> "AdministrativeDivision", "desc" -> 
          "an administrative division", "input" -> 
          "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
         "name" -> "Surname", "desc" -> "a surname", "input" -> 
          "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
         "name" -> "GivenName", "desc" -> "a given name", "input" -> 
          "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
      "type" -> "SubCategory", "word" -> "paris", "template" -> 
       "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
        "pulldownlength" -> "13", "default" -> 
       "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
       "Values" -> {{
         "name" -> "{Paris, IleDeFrance, France}", "desc" -> "Paris (France)",
           "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"IleDeFrance\", \"France\"}}"}, {
         "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
          "Paris (Kentucky, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
          "Paris (Texas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
          "Paris (Tennessee, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Tennessee\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
          "Paris (Illinois, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
          "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
         "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
          "Paris (New York, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
          "Paris (Maine, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
          "Paris (Arkansas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
          "Paris (Pennsylvania, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Pennsylvania\
\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Kenosha, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Wisconsin\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
          "Paris (Missouri, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
         "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Grant, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
         "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
          "Paris Township (Michigan, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
          "Paris (Idaho, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.5347348`7.1796834419617035, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.874687755001196*^9, 3.874687756149866*^9}, {
   3.8746878338661838`*^9, 3.8746878423202696`*^9}, 3.874688184604974*^9},
 CellLabel->"In[2]:=",
 CellID->937486031,ExpressionUUID->"15b11900-c717-4f98-870d-f35ccec2b62b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022 00:16:26\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
        StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "14", ",", "0", ",", "16", ",", 
           "26.4918531`9.175687256418959"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746881866984625`*^9},
 CellLabel->"Out[2]=",
 CellID->85983046,ExpressionUUID->"fc55ed63-830d-4db3-b153-48d8b36e2a3b"]
}, Open  ]],

Cell["What is my local time zone?", "Text",
 CellChangeTimes->{{3.8746875957614594`*^9, 3.8746876000319138`*^9}},
 CellID->39234742,ExpressionUUID->"77dc2639-c43d-4b55-bddb-8d691269de8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8746876013015795`*^9, 3.874687604164834*^9}},
 CellLabel->"In[177]:=",
 CellID->450428696,ExpressionUUID->"a27a5c7b-4d1a-46b5-b1a4-fea94c73049b"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"TimeZone\"\>", ",", "\<\"America/New_York\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.874687604846811*^9, 3.874687738516756*^9},
 CellLabel->"Out[177]=",
 CellID->308399,ExpressionUUID->"ed26d9c1-5541-45ac-a216-1ffbd075e9f7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Day", "Subsubsection",
 CellChangeTimes->{{3.8746792368201103`*^9, 3.8746792372582817`*^9}},
 CellID->86574943,ExpressionUUID->"26446418-088f-470b-88df-91ac65210aeb"],

Cell["Day:", "Text",
 CellChangeTimes->{{3.8746781174041557`*^9, 3.8746781200494576`*^9}},
 CellID->162698889,ExpressionUUID->"9b7c957b-5125-43be-b488-683ba956cfaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Day\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678123094578*^9}},
 CellLabel->"In[9]:=",
 CellID->21304163,ExpressionUUID->"9d0000b4-3086-47f0-8608-9e7cb1a207f4"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678123409944*^9},
 CellLabel->"Out[9]=",
 CellID->461849083,ExpressionUUID->"5981dea0-e7d1-45e9-af4d-c2813ff43fb2"]
}, Closed]],

Cell["Compare the current, previous and next days:", "Text",
 CellChangeTimes->{{3.8746790588066907`*^9, 3.8746790665187187`*^9}, {
  3.874679097366745*^9, 3.874679104496979*^9}, {3.8746791648891673`*^9, 
  3.8746792014409227`*^9}, {3.8746792414996443`*^9, 3.8746792436345997`*^9}},
 CellID->71983471,ExpressionUUID->"fe3024f2-0906-42ea-8e9c-6b63b1fa4536"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<Day\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CurrentDate", "[", "\"\<Day\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<Day\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}},
 CellLabel->"In[56]:=",
 CellID->412909757,ExpressionUUID->"983b5d71-d809-4731-8ad9-d758c868c36b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 12 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.8746792488527937`*^9},
 CellLabel->"Out[56]=",
 CellID->80165763,ExpressionUUID->"64e5dbc5-cabf-4481-a17b-193cbf493f40"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.874679249032401*^9},
 CellLabel->"Out[57]=",
 CellID->62451225,ExpressionUUID->"76a0b1f0-d981-4c18-93f3-234a63dc9e4e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.8746792492243977`*^9},
 CellLabel->"Out[58]=",
 CellID->46947382,ExpressionUUID->"0ce23bac-371a-4a7e-8285-1c52e316dd67"]
}, Closed]],

Cell["Compare the previous and next week days:", "Text",
 CellChangeTimes->{{3.8746790588066907`*^9, 3.8746790665187187`*^9}, {
  3.874679097366745*^9, 3.874679104496979*^9}, {3.8746791648891673`*^9, 
  3.8746792014409227`*^9}, {3.8746792414996443`*^9, 3.8746792436345997`*^9}, {
  3.8746792759816923`*^9, 3.8746792789485416`*^9}},
 CellID->383829720,ExpressionUUID->"5b046aae-7d94-4731-8a77-3d091e363493"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<Weekday\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<Weekday\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}, {3.874679281108184*^9, 3.8746792918081045`*^9}},
 CellLabel->"In[62]:=",
 CellID->157630307,ExpressionUUID->"55eabe40-b8a6-449e-b332-de9bd2d0eac3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 12 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.8746792488527937`*^9, {
   3.8746792823352194`*^9, 3.874679292103301*^9}},
 CellLabel->"Out[62]=",
 CellID->740141501,ExpressionUUID->"dd2f4c01-bbe8-4bbd-a0be-47ce79613650"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746790796645412`*^9, 3.8746790903694944`*^9}, {
   3.874679173204652*^9, 3.8746791930281363`*^9}, 3.8746792488527937`*^9, {
   3.8746792823352194`*^9, 3.874679292293743*^9}},
 CellLabel->"Out[63]=",
 CellID->2189094,ExpressionUUID->"7bc89cad-3f86-4a33-9dc4-85ca2e810b65"]
}, Closed]],

Cell["Weekend days:", "Text",
 CellChangeTimes->{{3.874679316096487*^9, 3.874679318155979*^9}},
 CellID->147956191,ExpressionUUID->"217bab5c-9f27-4d86-88b3-376c47c8923f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<WeekendDay\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<WeekendDay\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}, {3.874679281108184*^9, 3.874679309166706*^9}},
 CellLabel->"In[66]:=",
 CellID->433279807,ExpressionUUID->"06a3ba86-2380-4644-9167-393002ff5c1d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sun 9 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "9"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746793051600018`*^9, 3.874679309525917*^9}},
 CellLabel->"Out[66]=",
 CellID->376545226,ExpressionUUID->"edb3ec47-7651-4beb-b1f3-9ed2828a6d53"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sat 15 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "15"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746793051600018`*^9, 3.8746793097138844`*^9}},
 CellLabel->"Out[67]=",
 CellID->495895683,ExpressionUUID->"9f326dbd-dd26-4dbe-9061-3642c4dcdfba"]
}, Closed]],

Cell["Sunday:", "Text",
 CellChangeTimes->{{3.8746794324439898`*^9, 3.8746794335918694`*^9}},
 CellID->156660971,ExpressionUUID->"2169f2f5-63e8-4fde-91dc-ac19bcf91b72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Sunday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Sunday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679377026532*^9, 3.8746794410022817`*^9}},
 CellLabel->"In[90]:=",
 CellID->21639591,ExpressionUUID->"dab3b7a1-12f2-47df-b283-0e8e06fbc2be"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sun 9 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "9"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746794381623015`*^9, 3.874679441301982*^9}},
 CellLabel->"Out[90]=",
 CellID->123787879,ExpressionUUID->"94a91a17-1063-4c36-83d5-696636f8fce5"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sun 16 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "16"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746794381623015`*^9, 3.8746794415243454`*^9}},
 CellLabel->"Out[91]=",
 CellID->743526113,ExpressionUUID->"4127a481-6d84-4354-9f73-a54ef477838e"]
}, Closed]],

Cell["Monday:", "Text",
 CellChangeTimes->{{3.8746793212741127`*^9, 3.874679322289988*^9}},
 CellID->65431094,ExpressionUUID->"8c4a3537-f327-471a-b6c6-7f7b14831926"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Monday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Monday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}, {3.874679281108184*^9, 3.8746793326181817`*^9}},
 CellLabel->"In[70]:=",
 CellID->547481649,ExpressionUUID->"7d16f50d-f757-4ced-843a-45c6bf5c03fe"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 10 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "10"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679328614378*^9, 3.874679332950838*^9}},
 CellLabel->"Out[70]=",
 CellID->39998999,ExpressionUUID->"70ec9082-4c31-4464-8a5c-61665b2b9c2e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 17 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "17"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679328614378*^9, 3.874679333144291*^9}},
 CellLabel->"Out[71]=",
 CellID->79110049,ExpressionUUID->"6d83f5d9-8051-4358-a780-efee0682c42e"]
}, Closed]],

Cell["Tuesday:", "Text",
 CellChangeTimes->{{3.874679334535096*^9, 3.874679336035124*^9}},
 CellID->230553250,ExpressionUUID->"14371eed-30d0-4bc7-81b5-ee26c8d79a8f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Tuesday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Tuesday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}, {3.874679281108184*^9, 3.874679343101839*^9}},
 CellLabel->"In[72]:=",
 CellID->170477102,ExpressionUUID->"a4d9831d-8257-43b0-bd44-847c32f26eaf"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 11 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "11"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746793435098515`*^9},
 CellLabel->"Out[72]=",
 CellID->88955089,ExpressionUUID->"4df1edf8-1b2f-4010-b34a-304bb7d67602"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 18 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "18"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679343720841*^9},
 CellLabel->"Out[73]=",
 CellID->829412135,ExpressionUUID->"12595254-918f-440a-8a3a-28c04c201034"]
}, Closed]],

Cell["Wednesday:", "Text",
 CellChangeTimes->{{3.8746793475808506`*^9, 3.8746793494478617`*^9}},
 CellID->360983855,ExpressionUUID->"cf728be2-d2b5-4c26-b42b-56c8cf65b0a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Wednesday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Wednesday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679076167451*^9, 3.874679090070154*^9}, {
  3.8746791424802504`*^9, 3.874679192726245*^9}, {3.874679244575279*^9, 
  3.874679248137926*^9}, {3.874679281108184*^9, 3.8746793650159116`*^9}},
 CellLabel->"In[78]:=",
 CellID->731636961,ExpressionUUID->"d94d0ec6-eab9-4926-9930-9ff603b7c1f1"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 12 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679353827547*^9, 3.874679365377805*^9}},
 CellLabel->"Out[78]=",
 CellID->256611926,ExpressionUUID->"008b3792-6d7a-4e31-8710-266178337243"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 19 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "19"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679353827547*^9, 3.8746793655862684`*^9}},
 CellLabel->"Out[79]=",
 CellID->597337915,ExpressionUUID->"fb5f5119-478c-48a0-8f43-1c410401a5d0"]
}, Closed]],

Cell["Thursday:", "Text",
 CellChangeTimes->{{3.874679370805045*^9, 3.8746793727329*^9}},
 CellID->739142617,ExpressionUUID->"d630178e-6b31-42db-9e40-cdf7b517c483"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Thursday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Thursday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679377026532*^9, 3.874679382763015*^9}},
 CellLabel->"In[80]:=",
 CellID->7445225,ExpressionUUID->"2d22f57f-b559-44bc-9ad9-619f5a0f2c00"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 6 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "6"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679383099513*^9},
 CellLabel->"Out[80]=",
 CellID->109259336,ExpressionUUID->"7c7d03cc-0bf6-4726-a6c7-f2aed6b7cd46"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 20 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "20"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746793833118515`*^9},
 CellLabel->"Out[81]=",
 CellID->178957779,ExpressionUUID->"153d038f-e85e-4268-8802-59e495231447"]
}, Closed]],

Cell["Friday:", "Text",
 CellChangeTimes->{{3.874679370805045*^9, 3.8746793727329*^9}, {
  3.8746794131169395`*^9, 3.874679416205592*^9}},
 CellID->373375094,ExpressionUUID->"0e8800ad-3463-4135-8003-b34251f5a5c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Friday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Friday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679377026532*^9, 3.8746793971831274`*^9}},
 CellLabel->"In[84]:=",
 CellID->204895381,ExpressionUUID->"4a69ac97-25b7-4e6b-9945-12b33e5e4738"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 7 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "7"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679383099513*^9, 3.8746793975281754`*^9}},
 CellLabel->"Out[84]=",
 CellID->298659628,ExpressionUUID->"a28e87ff-41fe-4202-bf3d-96428c6c9745"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874679383099513*^9, 3.8746793977388783`*^9}},
 CellLabel->"Out[85]=",
 CellID->142066524,ExpressionUUID->"3c09902d-e116-4347-a386-649b76860d42"]
}, Closed]],

Cell["Saturday:", "Text",
 CellChangeTimes->{{3.874679370805045*^9, 3.8746793727329*^9}, {
  3.8746794269804068`*^9, 3.874679428708624*^9}},
 CellID->6859004,ExpressionUUID->"ad800078-b4ad-451e-8ac2-3024aff1d7d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "Saturday", "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "Saturday", "]"}]}], "Input",
 CellChangeTimes->{{3.874679377026532*^9, 3.8746794239346294`*^9}},
 CellLabel->"In[86]:=",
 CellID->244240936,ExpressionUUID->"a5224d8c-3d19-4c4a-80b0-7e717b51200b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sat 8 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "8"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679383099513*^9, 3.874679424341556*^9},
 CellLabel->"Out[86]=",
 CellID->311634460,ExpressionUUID->"b6540bd8-6610-496c-85cc-16b906b9c248"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sat 15 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "15"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679383099513*^9, 3.874679424561288*^9},
 CellLabel->"Out[87]=",
 CellID->172569195,ExpressionUUID->"f98ecc8b-042e-4a18-b10f-d1314f3a0f95"]
}, Closed]],

Cell["The next and previous first days of the month:", "Text",
 CellChangeTimes->{{3.8746794609204283`*^9, 3.874679497276772*^9}},
 CellID->320961726,ExpressionUUID->"9f0cf2e6-1d64-413f-a82e-c850faf6ac22"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<MonthFirstDay\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<MonthFirstDay\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8746794714129763`*^9, 3.874679482642149*^9}},
 CellLabel->"In[92]:=",
 CellID->66878119,ExpressionUUID->"ccbf3414-c087-42f0-ba05-d6e61ad155fa"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Sat 1 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "1"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746794829400997`*^9},
 CellLabel->"Out[92]=",
 CellID->771181413,ExpressionUUID->"db1ddb8c-d819-453f-9f1a-ffa8c0959875"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 1 Nov 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "11", ",", "1"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679483166168*^9},
 CellLabel->"Out[93]=",
 CellID->2200014,ExpressionUUID->"e9277af6-7223-4129-93b1-82992d936cf7"]
}, Closed]],

Cell["The next and previous last days of the month: ", "Text",
 CellChangeTimes->{{3.8746794853969984`*^9, 3.874679507956563*^9}},
 CellID->789830514,ExpressionUUID->"461ae9df-833f-4b1e-be0f-4e2dde29438a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<MonthLastDay\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<MonthLastDay\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8746794714129763`*^9, 3.8746795198172646`*^9}},
 CellLabel->"In[96]:=",
 CellID->383866559,ExpressionUUID->"dba8224d-670e-4654-9c1f-d5bb5a0f0c3e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 30 Sep 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "9", ",", "30"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.87467951527923*^9, 3.8746795201145988`*^9}},
 CellLabel->"Out[96]=",
 CellID->116332323,ExpressionUUID->"08ca5e04-20c5-4bd5-af61-e6a3b4d67f7a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 31 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "31"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.87467951527923*^9, 3.8746795203406053`*^9}},
 CellLabel->"Out[97]=",
 CellID->255284174,ExpressionUUID->"994815bb-3713-4a46-96d4-5e4c06b8853f"]
}, Closed]],

Cell["The next and previous business days: ", "Text",
 CellChangeTimes->{{3.8746795293485413`*^9, 3.874679545567791*^9}},
 CellID->737294213,ExpressionUUID->"055ee6de-f0bb-4477-8e23-63b1b162b7e4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreviousDate", "[", "\"\<BusinessDay\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NextDate", "[", "\"\<BusinessDay\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8746794714129763`*^9, 3.8746795582846823`*^9}},
 CellLabel->"In[98]:=",
 CellID->191414398,ExpressionUUID->"8c98d975-964d-4cf2-a6a3-bd88c3f7b5d0"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 12 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746795585840735`*^9},
 CellLabel->"Out[98]=",
 CellID->700411220,ExpressionUUID->"19cf6430-3de6-4e56-bf96-b2f6c4958776"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874679558830073*^9},
 CellLabel->"Out[99]=",
 CellID->315330947,ExpressionUUID->"ba3ae879-be4b-4542-b7cc-5f8793a35ee6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["large time periods", "Subsection",
 CellChangeTimes->{{3.874678525680624*^9, 3.8746785283731422`*^9}},
 CellID->68586317,ExpressionUUID->"5a82abbe-aa77-4936-8d89-1bbcd89c7e6e"],

Cell[CellGroupData[{

Cell["week", "Subsubsection",
 CellChangeTimes->{{3.874678886415784*^9, 3.8746788871207123`*^9}},
 CellID->11595345,ExpressionUUID->"2f934d0a-c5d3-471f-9bda-50236f1fd562"],

Cell["Week:", "Text",
 CellChangeTimes->{{3.874678124563836*^9, 3.874678125730957*^9}},
 CellID->57655436,ExpressionUUID->"d5fabe68-77aa-4712-b294-193b11a94235"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Week\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678128183009*^9}},
 CellLabel->"In[10]:=",
 CellID->725024671,ExpressionUUID->"07e3975b-90d4-4faa-8534-537cdacf9ed7"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Week beginning: \"", "DateObjectLabel"], 
     "\"Mon 10 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "10"}], "}"}], ",", "\"Week\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678128440657*^9},
 CellLabel->"Out[10]=",
 CellID->67183355,ExpressionUUID->"9f57408b-9c70-497f-a0ec-1010058b656a"]
}, Closed]],

Cell["I can ask for the week with Sunday as the first day:", "Text",
 CellChangeTimes->{{3.8746787301534147`*^9, 3.874678742112184*^9}},
 CellID->603031067,ExpressionUUID->"d59b1d97-a919-4df3-9859-e7a6a5d28503"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<WeekBeginningSunday\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678128183009*^9}, {3.8746787430331063`*^9, 
  3.8746787478927383`*^9}},
 CellLabel->"In[29]:=",
 CellID->234229459,ExpressionUUID->"2cde63ae-dbe8-40f9-a627-e0f80a88b96f"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Week beginning: \"", "DateObjectLabel"], 
     "\"Sun 9 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "9"}], "}"}], ",", 
       "\"WeekBeginningSunday\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678748314693*^9},
 CellLabel->"Out[29]=",
 CellID->106451001,ExpressionUUID->"0a688b9d-2370-4b04-b89a-a1f7256d1966"]
}, Closed]],

Cell["Ask for specific days of the week:", "Text",
 CellChangeTimes->{{3.874678897361945*^9, 3.874678903989362*^9}},
 CellID->271974236,ExpressionUUID->"5a7762cf-54bc-486f-9e28-4d01e8b32d4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Weekday\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678128183009*^9}, {3.8746787430331063`*^9, 
  3.8746787478927383`*^9}, {3.87467890473664*^9, 3.8746789082694244`*^9}},
 CellLabel->"In[35]:=",
 CellID->205246252,ExpressionUUID->"c2c1870d-4b1e-4992-bd85-70f805ac0526"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678908610608*^9},
 CellLabel->"Out[35]=",
 CellID->264485683,ExpressionUUID->"a6cc3c9c-fcc2-4bc6-b0d2-e14ede183ab5"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<BusinessDay\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678128183009*^9}, {3.8746787430331063`*^9, 
  3.8746787478927383`*^9}, {3.87467890473664*^9, 3.8746789126016073`*^9}, {
  3.874678946130796*^9, 3.874678984889118*^9}},
 CellLabel->"In[39]:=",
 CellID->49129261,ExpressionUUID->"fb8ee88a-d98e-4681-9261-2ec086610d4b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8746789130280313`*^9, {3.874678952505113*^9, 3.8746789853743753`*^9}},
 CellLabel->"Out[39]=",
 CellID->509254341,ExpressionUUID->"c8b257b7-fcfa-4cbf-bf00-5ce5d25d79f2"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextDate", "[", "\"\<MonthFirstDay\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678128183009*^9}, {3.8746787430331063`*^9, 
  3.8746787478927383`*^9}, {3.87467890473664*^9, 3.8746789126016073`*^9}, {
  3.874678946130796*^9, 3.8746790161625657`*^9}},
 CellLabel->"In[41]:=",
 CellID->168467094,ExpressionUUID->"c28f5b3f-1959-403a-a2c2-aa3794b21ed1"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Tue 1 Nov 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "11", ",", "1"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874678995081005*^9, 3.8746790165092764`*^9}},
 CellLabel->"Out[41]=",
 CellID->583040225,ExpressionUUID->"5cf2d3c6-ab33-418a-85ad-36eed6f3348b"]
}, Closed]],

Cell["Month:", "Text",
 CellChangeTimes->{{3.874678130881264*^9, 3.8746781319651623`*^9}},
 CellID->416259141,ExpressionUUID->"4b74ae3d-646a-4d92-bc32-f48ff30f0932"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Month\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.8746781369865837`*^9}},
 CellLabel->"In[11]:=",
 CellID->224569103,ExpressionUUID->"c54d7958-6aa9-4575-95fd-275a3a6a312e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Oct 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10"}], "}"}], ",", "\"Month\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746781372851677`*^9},
 CellLabel->"Out[11]=",
 CellID->55197013,ExpressionUUID->"10f78d62-cadf-4ed8-b933-94af0d969ec0"]
}, Closed]],

Cell["Quarter:", "Text",
 CellChangeTimes->{{3.8746781395112686`*^9, 3.8746781407775445`*^9}},
 CellID->33323168,ExpressionUUID->"8e4f4c82-75e2-4539-83c9-6dadc1a885a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Quarter\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.8746781438820815`*^9}},
 CellLabel->"In[12]:=",
 CellID->342130326,ExpressionUUID->"89046871-1723-49cf-84dc-d27f80a38d7c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Quarter: \"", "DateObjectLabel"], "\"Q4 2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "10"}], "}"}], ",", "\"Quarter\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746781441917653`*^9},
 CellLabel->"Out[12]=",
 CellID->118603753,ExpressionUUID->"5907d597-41fe-4607-91af-6d8f6ca9a691"]
}, Closed]],

Cell["Year:", "Text",
 CellChangeTimes->{{3.8746781482389603`*^9, 3.8746781491213303`*^9}},
 CellID->184468569,ExpressionUUID->"11cb60b4-4a2b-4883-8db8-a1c6d5fa5e90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Year\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.87467815279828*^9}},
 CellLabel->"In[13]:=",
 CellID->26861294,ExpressionUUID->"b5b8798a-a089-434d-9f46-5f0a4fafdc07"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Year: \"", "DateObjectLabel"], "\"2022\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2022", "}"}], ",", "\"Year\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746781531194715`*^9},
 CellLabel->"Out[13]=",
 CellID->153023364,ExpressionUUID->"2c4fd7a9-b566-48dd-b5d2-a1ac149e8067"]
}, Closed]],

Cell["Decade:", "Text",
 CellChangeTimes->{{3.8746781552839313`*^9, 3.874678157920413*^9}},
 CellID->213071282,ExpressionUUID->"93ed4462-e2d7-4f89-bb13-3cfd517f9610"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Decade\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.874678163934312*^9}},
 CellLabel->"In[14]:=",
 CellID->79691432,ExpressionUUID->"d018d5f3-ad06-4b85-8060-d250e552e482"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Decade: \"", "DateObjectLabel"], "\"2020s\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2020", "}"}], ",", "\"Decade\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678164226415*^9},
 CellLabel->"Out[14]=",
 CellID->441551044,ExpressionUUID->"39a1c12f-67c6-47e5-99b1-32b45e599910"]
}, Closed]],

Cell["Century:", "Text",
 CellChangeTimes->{{3.874678165615219*^9, 3.874678167162808*^9}},
 CellID->187336554,ExpressionUUID->"4af146cc-bda5-4284-b5bc-9c07577c3993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Century\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.87467817093174*^9}},
 CellLabel->"In[15]:=",
 CellID->359059497,ExpressionUUID->"71371399-22ef-4dbe-bc8d-aab5f9993cc2"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Century: \"", "DateObjectLabel"], "\"2000s\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2000", "}"}], ",", "\"Century\"", ",", "\"Gregorian\"", 
       ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678171207631*^9},
 CellLabel->"Out[15]=",
 CellID->730619120,ExpressionUUID->"38d58d3e-9e32-4b1f-bf09-79ae6732dc36"]
}, Closed]],

Cell["Millennium:", "Text",
 CellChangeTimes->{{3.874678474051575*^9, 3.8746784794538083`*^9}},
 CellID->339860660,ExpressionUUID->"1d2c7416-e941-444e-a5f6-2d9be585c430"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<Millennium\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.87467817093174*^9}, {3.874678480209198*^9, 
  3.874678482331953*^9}},
 CellLabel->"In[25]:=",
 CellID->27540887,ExpressionUUID->"9a76ce48-09ca-45e8-9124-999ef749ac22"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Millennium: \"", "DateObjectLabel"], "\"2000-3000\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2000", "}"}], ",", "\"Millennium\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678482725015*^9},
 CellLabel->"Out[25]=",
 CellID->273673065,ExpressionUUID->"28e21dea-0a4f-4113-bb70-a0a7a95b7702"]
}, Closed]],

Cell["\<\
I can also specify the first year to be 1 for century and millenium:\
\>", "Text",
 CellChangeTimes->{{3.8746785336342897`*^9, 3.8746785477355614`*^9}},
 CellID->570960683,ExpressionUUID->"4e30819d-ca71-4b90-b902-9a3d176768b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<CenturyBeginning01\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678548946329*^9, 3.874678556446069*^9}},
 CellLabel->"In[26]:=",
 CellID->240506194,ExpressionUUID->"746b12ea-06c8-4111-8ff9-07c7eba75778"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Century: \"", "DateObjectLabel"], "\"2001-2100\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2001", "}"}], ",", "\"CenturyBeginning01\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678556777065*^9},
 CellLabel->"Out[26]=",
 CellID->450976440,ExpressionUUID->"30979e68-4631-4f9c-ae48-2f5952b2a774"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentDate", "[", "\"\<MillenniumBeginning01\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678548946329*^9, 3.874678573545965*^9}},
 CellLabel->"In[28]:=",
 CellID->441536187,ExpressionUUID->"0088e4c9-917a-45d2-a1c9-43a5ade29cd9"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Millennium: \"", "DateObjectLabel"], "\"2001-3000\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "2001", "}"}], ",", "\"MillenniumBeginning01\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.874678561114292*^9, 3.8746785738913317`*^9}},
 CellLabel->"Out[28]=",
 CellID->31568105,ExpressionUUID->"ba0f1723-9239-4408-80fa-76322d51f705"]
}, Closed]],

Cell["There's also infinite future:", "Text",
 CellChangeTimes->{{3.874678173212643*^9, 3.8746782390725594`*^9}},
 CellID->130058483,ExpressionUUID->"6f685323-253c-4ae6-a887-f14815127147"],

Cell[CellGroupData[{

Cell[BoxData["InfiniteFuture"], "Input",
 CellChangeTimes->{{3.874678055161768*^9, 3.8746780828450785`*^9}, {
  3.8746781133993025`*^9, 3.87467818116084*^9}, {3.874678218866582*^9, 
  3.874678222321453*^9}},
 CellLabel->"In[17]:=",
 CellID->18941179,ExpressionUUID->"4ac68389-8c37-4429-906c-f4c0528ead1d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Infinite future\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "\[Infinity]", "}"}], ",", "\"Eternity\""}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746781814556184`*^9, 3.8746782226810083`*^9},
 CellLabel->"Out[17]=",
 CellID->511848000,ExpressionUUID->"74c594e4-623f-4b03-9de7-b8872255dfd7"]
}, Closed]],

Cell["Infinite past:", "Text",
 CellChangeTimes->{{3.8746782419846573`*^9, 3.874678247832821*^9}},
 CellID->550622784,ExpressionUUID->"d09055a5-c735-4791-b098-dcf3f2992627"],

Cell[CellGroupData[{

Cell[BoxData["InfinitePast"], "Input",
 CellChangeTimes->{{3.874678248687271*^9, 3.874678250379253*^9}},
 CellLabel->"In[18]:=",
 CellID->138739419,ExpressionUUID->"835dadc9-b7b3-4d30-b454-2e96beb9c244"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Infinite past\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"-", "\[Infinity]"}], "}"}], ",", "\"Eternity\""}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874678250697007*^9},
 CellLabel->"Out[18]=",
 CellID->137154194,ExpressionUUID->"e439b4db-c41d-4143-a21f-e075f7f67de8"]
}, Closed]],

Cell["What is absolute time, the time elapsed since 1900?", "Text",
 CellChangeTimes->{{3.874678318687217*^9, 3.874678328963294*^9}},
 CellID->299816776,ExpressionUUID->"55d293b6-47e1-4cdd-bc0f-2009ae2fc6a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTime", "[", "]"}]], "Input",
 CellChangeTimes->{{3.874678329653036*^9, 3.8746783324683924`*^9}},
 CellLabel->"In[19]:=",
 CellID->442567572,ExpressionUUID->"ad11a970-0f4b-4fa6-ac64-f6014a76e930"],

Cell[BoxData["3.874663932748791`17.340809029297223*^9"], "Output",
 CellChangeTimes->{3.8746783327518015`*^9},
 CellLabel->"Out[19]=",
 CellID->269874694,ExpressionUUID->"b2bd4f4f-a79a-4b43-a5a4-40d8f898090d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", 
  RowBox[{"AbsoluteTime", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746783952881336`*^9, 3.8746783976417246`*^9}},
 CellLabel->"In[22]:=",
 CellID->397715411,ExpressionUUID->"f1879070-89de-4f18-922d-82728723af94"],

Cell[BoxData["3874663997"], "Output",
 CellChangeTimes->{3.874678397948262*^9},
 CellLabel->"Out[22]=",
 CellID->53476719,ExpressionUUID->"8272cc74-d778-4c51-abc9-f3f1c2d2d5d2"]
}, Closed]],

Cell["What is the next millenium?", "Text",
 CellChangeTimes->{{3.8746784207714744`*^9, 3.8746784456772723`*^9}},
 CellID->115282032,ExpressionUUID->"7fc7c8a9-8ce8-4023-a091-4895d94b29c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NextDate", "[", "\"\<Millennium\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874678447167057*^9, 3.8746784650514803`*^9}},
 CellLabel->"In[24]:=",
 CellID->10984292,ExpressionUUID->"82e744e0-f123-43c8-805e-cf5a51e80e46"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     StyleBox["\"Millennium: \"", "DateObjectLabel"], "\"3000-4000\""}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", "3000", "}"}], ",", "\"Millennium\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746784539832263`*^9, 3.8746784658823566`*^9}},
 CellLabel->"Out[24]=",
 CellID->270876794,ExpressionUUID->"9be40444-4273-4171-8df3-049d5691f189"]
}, Closed]],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Closed]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["arity testing", "Subsection",
 CellChangeTimes->{{3.8746882273159313`*^9, 3.8746882289309874`*^9}},
 CellID->236411855,ExpressionUUID->"5e1443db-fbd9-4765-8513-3a816b892f10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dateAndTimeFunctions", "=", 
  RowBox[{"Unevaluated", "@", 
   RowBox[{"{", 
    RowBox[{
    "DateObject", ",", "TimeObject", ",", "DateInterval", ",", "CalendarType",
      ",", "TimeZone", ",", "TimeSystem", ",", "DateFormat", ",", "Now", ",", 
     "Today", ",", "Tomorrow", ",", "CurrentDate", ",", "NextDate", ",", 
     "PreviousDate", ",", "InfiniteFuture", ",", "InfinitePast", ",", 
     "DateString", ",", "FromDateString", ",", "$DateStringFormat", ",", 
     "DateList", ",", "AbsoluteTime", ",", "Clock", ",", "DatedUnit", ",", 
     "LocalTime", ",", "LocalTimeZone", ",", "TimeZoneConvert", ",", 
     "$TimeZone", ",", "$SystemTimeZone", ",", "$TimeZoneEntity", ",", 
     "CalendarConvert", ",", "CalendarData", ",", "LeapVariant", ",", 
     "DateValue", ",", "DayName", ",", "Monday", ",", "Tuesday", ",", 
     "Wednesday", ",", "Thursday", ",", "Friday", ",", "Saturday", ",", 
     "Sunday", ",", "DateSelect", ",", "DateRange", ",", "DatePlus", ",", 
     "DateDifference", ",", "DateBounds", ",", "Duration", ",", "MinDate", 
     ",", "MaxDate", ",", "TimeZoneConvert", ",", "Nearest", ",", 
     "DateWithinQ", ",", "DateOverlapsQ", ",", "DateObjectQ", ",", 
     "TimeObjectQ", ",", "LeapYearQ", ",", "DayRange", ",", "DayPlus", ",", 
     "DayRound", ",", "DayCount", ",", "DayMatchQ", ",", "BusinessDayQ", ",", 
     "Sunrise", ",", "Sunset", ",", "DaylightQ", ",", "SunPosition", ",", 
     "MoonPosition", ",", "MoonPhase", ",", "SiderealTime", ",", "JulianDate",
      ",", "FromJulianDate", ",", "TimelinePlot", ",", "DateListPlot", ",", 
     "DateHistogram", ",", "DateListLogPlot", ",", "StackedDateListPlot", ",",
      "TimeSeries", ",", "MovingMap", ",", "TimeSeriesMap", ",", "Mean", ",", 
     "TradingChart", ",", "InteractiveTradingChart", ",", "CandlestickChart", 
     ",", "KagiChart", ",", "Interpreter", ",", "DatePattern", ",", 
     "UnixTime", ",", "FromUnixTime", ",", "FromAbsoluteTime", ",", "Timing", 
     ",", "AbsoluteTiming", ",", "TimeConstrained", ",", "SessionTime", ",", 
     "ScheduledTask", ",", "SessionSubmit", ",", "LocalSubmit", ",", 
     "CloudSubmit", ",", "HandlerFunctions", ",", "TaskObject"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8746882311587796`*^9, 3.8746885328120832`*^9}, {
  3.8746889558043923`*^9, 3.8746889566633396`*^9}},
 CellLabel->"In[36]:=",
 CellID->801296335,ExpressionUUID->"131a2436-0e47-4149-9e5c-06ece1db1ad6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "DateObject", ",", "TimeObject", ",", "DateInterval", ",", "CalendarType", 
   ",", "TimeZone", ",", "TimeSystem", ",", "DateFormat", ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 18:29:16\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "29", ",", 
             "16.973701`8.98235149311893"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "4.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\""}], 
       "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\""}], 
       "]"}]},
    "DateObject",
    Editable->False], ",", "CurrentDate", ",", "NextDate", ",", 
   "PreviousDate", ",", 
   TemplateBox[{
     RowBox[{"\"Infinite future\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", "\[Infinity]", "}"}], ",", "\"Eternity\""}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Infinite past\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"-", "\[Infinity]"}], "}"}], ",", "\"Eternity\""}], "]"}]},
    "DateObject",
    Editable->False], ",", "DateString", ",", "FromDateString", ",", 
   RowBox[{"{", "\<\"DateTimeShort\"\>", "}"}], ",", "DateList", ",", 
   "AbsoluteTime", ",", "Clock", ",", "DatedUnit", ",", "LocalTime", ",", 
   "LocalTimeZone", ",", "TimeZoneConvert", ",", 
   RowBox[{"-", "4.`"}], ",", 
   RowBox[{"-", "4.`"}], ",", 
   TemplateBox[{"\"America/New_York\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"TimeZone\"", ",", "\"America/New_York\""}], "]"}], 
     "\"Entity[\\\"TimeZone\\\", \\\"America/New_York\\\"]\"", 
     "\"time zone\""},
    "Entity"], ",", "CalendarConvert", ",", "CalendarData", ",", 
   "LeapVariant", ",", "DateValue", ",", "DayName", ",", "Monday", ",", 
   "Tuesday", ",", "Wednesday", ",", "Thursday", ",", "Friday", ",", 
   "Saturday", ",", "Sunday", ",", "DateSelect", ",", "DateRange", ",", 
   "DatePlus", ",", "DateDifference", ",", "DateBounds", ",", "Duration", ",",
    "MinDate", ",", "MaxDate", ",", "TimeZoneConvert", ",", "Nearest", ",", 
   "DateWithinQ", ",", "DateOverlapsQ", ",", "DateObjectQ", ",", 
   "TimeObjectQ", ",", "LeapYearQ", ",", "DayRange", ",", "DayPlus", ",", 
   "DayRound", ",", "DayCount", ",", "DayMatchQ", ",", "BusinessDayQ", ",", 
   "Sunrise", ",", "Sunset", ",", "DaylightQ", ",", "SunPosition", ",", 
   "MoonPosition", ",", "MoonPhase", ",", "SiderealTime", ",", "JulianDate", 
   ",", "FromJulianDate", ",", "TimelinePlot", ",", "DateListPlot", ",", 
   "DateHistogram", ",", "DateListLogPlot", ",", "StackedDateListPlot", ",", 
   "TimeSeries", ",", "MovingMap", ",", "TimeSeriesMap", ",", "Mean", ",", 
   "TradingChart", ",", "InteractiveTradingChart", ",", "CandlestickChart", 
   ",", "KagiChart", ",", "Interpreter", ",", "DatePattern", ",", "UnixTime", 
   ",", "FromUnixTime", ",", "FromAbsoluteTime", ",", "Timing", ",", 
   "AbsoluteTiming", ",", "TimeConstrained", ",", "SessionTime", ",", 
   "ScheduledTask", ",", "SessionSubmit", ",", "LocalSubmit", ",", 
   "CloudSubmit", ",", "HandlerFunctions", ",", "TaskObject"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87468851094733*^9, 3.8746885330990987`*^9}, 
   3.8746889569867005`*^9},
 CellLabel->"Out[36]=",
 CellID->726238231,ExpressionUUID->"18e8ffa4-96c6-44e1-91e2-6015fadb27f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"Arity", ",", "dateAndTimeFunctions"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746885367841215`*^9, 3.874688653764141*^9}, {
  3.8746889632670336`*^9, 3.8746889644101505`*^9}},
 CellLabel->"In[37]:=",
 CellID->156553228,ExpressionUUID->"8224cfc3-b559-4953-bb7f-c338721440df"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"DateObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateInterval", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CalendarType", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"TimeZone", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"TimeSystem", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"DateFormat", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 13 Oct 2022 18:29:24\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "29", ",", 
              "24.6536269`9.144455742922538"}], "}"}], ",", "\"Instant\"", 
          ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "4.`"}]}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 13 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 14 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"CurrentDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"NextDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"PreviousDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Infinite future\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "\[Infinity]", "}"}], ",", "\"Eternity\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Infinite past\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"-", "\[Infinity]"}], "}"}], ",", "\"Eternity\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"DateString", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromDateString", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "\<\"DateTimeShort\"\>", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"DateList", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AbsoluteTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Clock", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DatedUnit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"LocalTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"LocalTimeZone", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"TimeZoneConvert", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.`"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"America/New_York\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"TimeZone\"", ",", "\"America/New_York\""}], "]"}], 
      "\"Entity[\\\"TimeZone\\\", \\\"America/New_York\\\"]\"", 
      "\"time zone\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"CalendarConvert", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CalendarData", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"LeapVariant", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"DateValue", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayName", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Monday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Tuesday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Wednesday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Thursday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Friday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Saturday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Sunday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"DateSelect", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DatePlus", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateDifference", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateBounds", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Duration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"MinDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"MaxDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Nearest", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateWithinQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateOverlapsQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateObjectQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TimeObjectQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"LeapYearQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"DayRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayPlus", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayRound", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayCount", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayMatchQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"BusinessDayQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Sunrise", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"Sunset", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"DaylightQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"SunPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"MoonPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"MoonPhase", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"SiderealTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"JulianDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromJulianDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimelinePlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"DateListPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateHistogram", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"DateListLogPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"StackedDateListPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeSeries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"MovingMap", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"TimeSeriesMap", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Mean", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TradingChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"InteractiveTradingChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CandlestickChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"KagiChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Interpreter", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DatePattern", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"UnixTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"FromUnixTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromAbsoluteTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"Timing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AbsoluteTiming", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TimeConstrained", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"SessionTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"ScheduledTask", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"SessionSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"LocalSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CloudSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"HandlerFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"TaskObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8746885440327597`*^9, 3.8746886013073177`*^9}, 
   3.874688692137598*^9, 3.874688964740636*^9},
 CellLabel->"Out[37]=",
 CellID->153678033,ExpressionUUID->"23e44e52-319b-4db2-8b2e-f2f45b828366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReverseSortBy", "[", 
  RowBox[{
   RowBox[{"AssociationMap", "[", 
    RowBox[{"Arity", ",", "dateAndTimeFunctions"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"First", ",", "Last"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87468870586858*^9, 3.8746887217310333`*^9}, {
  3.8746889698277535`*^9, 3.874688970529351*^9}},
 CellLabel->"In[38]:=",
 CellID->45607913,ExpressionUUID->"2ff11d03-683a-4be8-84e4-e13cb5bed9e2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"MovingMap", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"DateRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayPlus", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayCount", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"TimeConstrained", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateWithinQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateOverlapsQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DayMatchQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeSeriesMap", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"ScheduledTask", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateHistogram", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"DateValue", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateDifference", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"Nearest", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayRound", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"Interpreter", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateInterval", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"NextDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"PreviousDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromDateString", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DatedUnit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeZoneConvert", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CalendarConvert", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateSelect", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DatePlus", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateBounds", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"MinDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"MaxDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromJulianDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateListPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateListLogPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"StackedDateListPlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeSeries", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TradingChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"InteractiveTradingChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"KagiChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DatePattern", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromUnixTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"FromAbsoluteTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"SessionSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"LocalSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CloudSubmit", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"LeapVariant", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Duration", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"DateObjectQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TimeObjectQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"LeapYearQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"BusinessDayQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TimelinePlot", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Mean", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"CandlestickChart", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Timing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AbsoluteTiming", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"TaskObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"Sunrise", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"Sunset", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"SiderealTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"Clock", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"LocalTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"LocalTimeZone", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DaylightQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"SunPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"MoonPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"TimeObject", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CurrentDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateString", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"CalendarData", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"MoonPhase", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"JulianDate", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"DateList", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AbsoluteTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"DayName", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"UnixTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"CalendarType", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"TimeZone", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"TimeSystem", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"DateFormat", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 13 Oct 2022 18:29:30\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
           StyleBox[
            RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> 
            False]}], FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "29", ",", 
              "30.7796853`9.240839082505541"}], "}"}], ",", "\"Instant\"", 
          ",", "\"Gregorian\"", ",", 
          RowBox[{"-", "4.`"}]}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 13 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "13"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 14 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Infinite future\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", "\[Infinity]", "}"}], ",", "\"Eternity\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Infinite past\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"-", "\[Infinity]"}], "}"}], ",", "\"Eternity\""}], "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "\<\"DateTimeShort\"\>", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"-", "4.`"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"America/New_York\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"TimeZone\"", ",", "\"America/New_York\""}], "]"}], 
      "\"Entity[\\\"TimeZone\\\", \\\"America/New_York\\\"]\"", 
      "\"time zone\""},
     "Entity"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Monday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Tuesday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Wednesday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Thursday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Friday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Saturday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"Sunday", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"SessionTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"HandlerFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.874688716648543*^9, 3.8746887222030306`*^9}, 
   3.874688970859704*^9},
 CellLabel->"Out[38]=",
 CellID->41793490,ExpressionUUID->"562d03ec-0830-4533-aaf3-b73a632ed0b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"ReverseSortBy", "[", 
   RowBox[{
    RowBox[{"AssociationMap", "[", 
     RowBox[{"Arity", ",", "dateAndTimeFunctions"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"Last", ",", "First"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8746889276465015`*^9, 3.874688935745639*^9}, {
  3.8746889750756426`*^9, 3.874688990920084*^9}},
 CellLabel->"In[40]:=",
 CellID->128465464,ExpressionUUID->"a5983884-49ed-4879-b074-ead0b2c71cc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8746889359760475`*^9, 3.874688991421934*^9},
 CellLabel->"Out[40]=",
 CellID->152607750,ExpressionUUID->"e2bd9ef9-ea89-40f7-a10b-e121ef6c19a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Keys", "[", 
   RowBox[{
    RowBox[{"ReverseSortBy", "[", 
     RowBox[{"{", 
      RowBox[{"Last", ",", "First"}], "}"}], "]"}], "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Last", "[", "#", "]"}], ">=", "3"}], "&"}], "]"}], "[", 
     RowBox[{"AssociationMap", "[", 
      RowBox[{"Arity", ",", "dateAndTimeFunctions"}], "]"}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8746888499016204`*^9, 3.874688853046686*^9}, {
  3.874688997110518*^9, 3.874688997766059*^9}},
 CellLabel->"In[41]:=",
 CellID->58809334,ExpressionUUID->"e81d38f8-bd6a-4a0f-9ca1-161d3f79d8ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateHistogram",
                ButtonNote->"paclet:ref/DateHistogram"],
               "\"paclet:ref/DateHistogram\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots a histogram of the dates \\!\\(\\*SubscriptBox[StyleBox[\\\
\"date\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a \
histogram with bin width specification \\!\\(\\*StyleBox[\\\"bspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"hspec\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a histogram with bin heights computed \
according to the specification \\!\\(\\*StyleBox[\\\"hspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots histograms \
for multiple datasets \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateHistogram",
                     "paclet:ref/DateHistogram", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateHistogram.\
html"], None}, "http://reference.wolfram.com/language/ref/DateHistogram.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                    PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BarOrigin", "\[Rule]", "Bottom"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ChartBaseStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartElementFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartElements", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ChartLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ChartLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ChartStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DateFunction", "\[Rule]", "Identity"}]},
                    {
                    RowBox[{"DateReduction", "\[Rule]", "None"}]},
                    {
                    RowBox[{"DateTicksFormat", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"LegendAppearance", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"TimeZone", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "58", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "58", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateHistogram\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateHistogram",
                ButtonNote->"paclet:ref/DateHistogram"],
               "\"paclet:ref/DateHistogram\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\"]\\\"}]\\) plots a histogram of the dates \\!\\(\\*SubscriptBox[StyleBox[\\\
\"date\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a \
histogram with bin width specification \\!\\(\\*StyleBox[\\\"bspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"bspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"hspec\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) plots a histogram with bin heights computed \
according to the specification \\!\\(\\*StyleBox[\\\"hspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateHistogram\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"data\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots histograms \
for multiple datasets \\!\\(\\*SubscriptBox[StyleBox[\\\"data\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateHistogram\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots a histogram \
of the dates \!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"DateHistogram\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"bspec\", \
\"TI\"]}], \"]\"}]\) plots a histogram with bin width specification \
\!\(\*StyleBox[\"bspec\", \"TI\"]\).\n\!\(\*RowBox[{\"DateHistogram\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", StyleBox[\"bspec\", \"TI\"], \",\", StyleBox[\"hspec\", \
\"TI\"]}], \"]\"}]\) plots a histogram with bin heights computed according to \
the specification \!\(\*StyleBox[\"hspec\", \"TI\"]\).\n\
\!\(\*RowBox[{\"DateHistogram\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"data\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) plots histograms \
for multiple datasets \!\(\*SubscriptBox[StyleBox[\"data\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateHistogram", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateHistogram.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, 
        AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
        Background -> None, BarOrigin -> Bottom, BaselinePosition -> 
        Automatic, BaseStyle -> {}, ChartBaseStyle -> Automatic, 
        ChartElementFunction -> Automatic, ChartElements -> Automatic, 
        ChartLabels -> None, ChartLayout -> Automatic, ChartLegends -> None, 
        ChartStyle -> Automatic, ColorFunction -> Automatic, 
        ColorFunctionScaling -> True, ColorOutput -> Automatic, 
        ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, 
        DateFunction -> Identity, DateReduction -> None, DateTicksFormat -> 
        Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, 
        FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, 
        FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, 
        GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., 
        ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> 
        Automatic, LabelingFunction -> Automatic, LabelStyle -> {}, 
        LegendAppearance -> Automatic, Method -> Automatic, 
        PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> 
        Automatic, PlotRangeClipping -> False, PlotRangePadding -> Automatic, 
        PlotRegion -> Automatic, PlotTheme :> $PlotTheme, 
        PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, 
        ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> 
        Automatic, TicksStyle -> {}, TimeZone -> Automatic}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DateHistogram"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MovingMap",
                ButtonNote->"paclet:ref/MovingMap"],
               "\"paclet:ref/MovingMap\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to size \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) windows in the specified \
\\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"wspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses windows specified by \\!\\(\\*StyleBox[\\\"wspec\\\", \\\"TI\\\"]\\).\\n\
\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"wspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"padding\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) pads \\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\) using \\!\\(\\*StyleBox[\\\"padding\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MovingMap", 
                    "paclet:ref/MovingMap", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MovingMap.\
html"], None}, "http://reference.wolfram.com/language/ref/MovingMap.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MovingMap\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MovingMap",
                ButtonNote->"paclet:ref/MovingMap"],
               "\"paclet:ref/MovingMap\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) to size \
\\!\\(\\*StyleBox[\\\"w\\\", \\\"TI\\\"]\\) windows in the specified \
\\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"wspec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses windows specified by \\!\\(\\*StyleBox[\\\"wspec\\\", \\\"TI\\\"]\\).\\n\
\\!\\(\\*RowBox[{\\\"MovingMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"wspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"padding\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) pads \\!\\(\\*StyleBox[\\\"data\\\", \
\\\"TI\\\"]\\) using \\!\\(\\*StyleBox[\\\"padding\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MovingMap\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \
\",\", StyleBox[\"data\", \"TI\"], \",\", StyleBox[\"w\", \"TI\"]}], \
\"]\"}]\) applies \!\(\*StyleBox[\"f\", \"TI\"]\) to size \
\!\(\*StyleBox[\"w\", \"TI\"]\) windows in the specified \
\!\(\*StyleBox[\"data\", \"TI\"]\).\n\!\(\*RowBox[{\"MovingMap\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"data\", \"TI\"], \",\", \
StyleBox[\"wspec\", \"TI\"]}], \"]\"}]\) uses windows specified by \
\!\(\*StyleBox[\"wspec\", \"TI\"]\).\n\!\(\*RowBox[{\"MovingMap\", \"[\", \
RowBox[{StyleBox[\"f\", \"TI\"], \",\", StyleBox[\"data\", \"TI\"], \",\", \
StyleBox[\"wspec\", \"TI\"], \",\", StyleBox[\"padding\", \"TI\"]}], \
\"]\"}]\) pads \!\(\*StyleBox[\"data\", \"TI\"]\) using \
\!\(\*StyleBox[\"padding\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MovingMap", "Web" -> 
        "http://reference.wolfram.com/language/ref/MovingMap.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MovingMap"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Sunrise",
                ButtonNote->"paclet:ref/Sunrise"],
               "\"paclet:ref/Sunrise\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the time of the next sunrise for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the times of the \
next sunrise for the specified dates.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \
\\\"[\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives \
the times of the next sunrise for the specified \
locations.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"locationspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"datespec\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the time of the next sunrise for the specified \
date and location.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the times of the next sunrise for all \
specified locations on the specified \
dates.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Sunrise", 
                    "paclet:ref/Sunrise", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Sunrise.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Sunrise.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TimeDirection", "\[RuleDelayed]", "1"}], ",", 
                    RowBox[{"TimeZone", "\[RuleDelayed]", "$TimeZone"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Sunrise\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Sunrise",
                ButtonNote->"paclet:ref/Sunrise"],
               "\"paclet:ref/Sunrise\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the time of the next sunrise for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the times of the \
next sunrise for the specified dates.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \
\\\"[\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives \
the times of the next sunrise for the specified \
locations.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"locationspec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"datespec\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the time of the next sunrise for the specified \
date and location.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the times of the next sunrise for all \
specified locations on the specified \
dates.\\n\\!\\(\\*RowBox[{\\\"Sunrise\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Sunrise\", \"[\", \"]\"}]\) gives the time of the next \
sunrise for the current date and location.\n\!\(\*RowBox[{\"Sunrise\", \"[\", \
StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives the times of the next sunrise \
for the specified dates.\n\!\(\*RowBox[{\"Sunrise\", \"[\", \
StyleBox[\"locationspec\", \"TI\"], \"]\"}]\) gives the times of the next \
sunrise for the specified locations.\n\!\(\*RowBox[{\"Sunrise\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives the time of the next sunrise for the specified \
date and location.\n\!\(\*RowBox[{\"Sunrise\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives the times of the next sunrise for all specified locations on the \
specified dates.\n\!\(\*RowBox[{\"Sunrise\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"], \",\", StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \
\!\(\*StyleBox[\"func\", \"TI\"]\) to determine what to return for extended \
locations.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/Sunrise", "Web" -> 
        "http://reference.wolfram.com/language/ref/Sunrise.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {TimeDirection :> 1, TimeZone :> $TimeZone}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`Sunrise"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Sunset",
                ButtonNote->"paclet:ref/Sunset"],
               "\"paclet:ref/Sunset\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \\\"]\
\\\"}]\\) gives the time of the next sunset for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", StyleBox[\\\"datespec\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the time of the next sunset for the \
specified dates.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the times of \
the next sunset for the specified \
locations.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the time of \
the next sunset for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\
\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"2\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives the times \
of the next sunset for all specified locations on the specified \
dates.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Sunset", 
                    "paclet:ref/Sunset", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Sunset.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Sunset.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TimeDirection", "\[RuleDelayed]", "1"}], ",", 
                    RowBox[{"TimeZone", "\[RuleDelayed]", "$TimeZone"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Sunset\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Sunset",
                ButtonNote->"paclet:ref/Sunset"],
               "\"paclet:ref/Sunset\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \\\"]\
\\\"}]\\) gives the time of the next sunset for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", StyleBox[\\\"datespec\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the time of the next sunset for the \
specified dates.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the times of \
the next sunset for the specified \
locations.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the time of \
the next sunset for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\
\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"2\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives the times \
of the next sunset for all specified locations on the specified \
dates.\\n\\!\\(\\*RowBox[{\\\"Sunset\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Sunset\", \"[\", \"]\"}]\) gives the time of the next \
sunset for the current date and location.\n\!\(\*RowBox[{\"Sunset\", \"[\", \
StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives the time of the next sunset \
for the specified dates.\n\!\(\*RowBox[{\"Sunset\", \"[\", \
StyleBox[\"locationspec\", \"TI\"], \"]\"}]\) gives the times of the next \
sunset for the specified locations.\n\!\(\*RowBox[{\"Sunset\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives the time of the next sunset for the specified date \
and location.\n\!\(\*RowBox[{\"Sunset\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives the times of the next sunset for all specified locations on the \
specified dates.\n\!\(\*RowBox[{\"Sunset\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"], \",\", StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \
\!\(\*StyleBox[\"func\", \"TI\"]\) to determine what to return for extended \
locations.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/Sunset", "Web" -> 
        "http://reference.wolfram.com/language/ref/Sunset.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {TimeDirection :> 1, TimeZone :> $TimeZone}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`Sunset"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SiderealTime",
                ButtonNote->"paclet:ref/SiderealTime"],
               "\"paclet:ref/SiderealTime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the right ascension of the local meridian for the \
current date and location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \
\\\"[\\\", StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the right \
ascension of the local meridian for the specified date.\\n\\!\\(\\*RowBox[{\\\
\"SiderealTime\\\", \\\"[\\\", StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\
\\) gives the right ascension of the local meridian for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the right ascension of the local meridian \
for the specified date and location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"loc\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"loc\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
gives the right ascensions of the local meridians for all specified locations \
on the specified dates.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"func\\\", \\\"TI\\\"]\\) to determine what to \
return for extended locations.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"\\\\\\\"MeanTime\\\\\\\"\\\",ShowStringCharacters->\
True], \\\",\\\", StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the mean sidereal time for the specified \
date, location and aggregation function.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SiderealTime", 
                    "paclet:ref/SiderealTime", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SiderealTime.\
html"], None}, "http://reference.wolfram.com/language/ref/SiderealTime.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SiderealTime\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SiderealTime",
                ButtonNote->"paclet:ref/SiderealTime"],
               "\"paclet:ref/SiderealTime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the right ascension of the local meridian for the \
current date and location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \
\\\"[\\\", StyleBox[\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the right \
ascension of the local meridian for the specified date.\\n\\!\\(\\*RowBox[{\\\
\"SiderealTime\\\", \\\"[\\\", StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\
\\) gives the right ascension of the local meridian for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the right ascension of the local meridian \
for the specified date and location.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"loc\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"loc\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) \
gives the right ascensions of the local meridians for all specified locations \
on the specified dates.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"func\\\", \\\"TI\\\"]\\) to determine what to \
return for extended locations.\\n\\!\\(\\*RowBox[{\\\"SiderealTime\\\", \\\"[\
\\\", RowBox[{StyleBox[\\\"\\\\\\\"MeanTime\\\\\\\"\\\",ShowStringCharacters->\
True], \\\",\\\", StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the mean sidereal time for the specified \
date, location and aggregation function.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SiderealTime\", \"[\", \"]\"}]\) gives the right \
ascension of the local meridian for the current date and location.\n\
\!\(\*RowBox[{\"SiderealTime\", \"[\", StyleBox[\"date\", \"TI\"], \"]\"}]\) \
gives the right ascension of the local meridian for the specified date.\n\!\(\
\*RowBox[{\"SiderealTime\", \"[\", StyleBox[\"loc\", \"TI\"], \"]\"}]\) gives \
the right ascension of the local meridian for the specified location.\n\
\!\(\*RowBox[{\"SiderealTime\", \"[\", RowBox[{StyleBox[\"loc\", \"TI\"], \",\
\", StyleBox[\"date\", \"TI\"]}], \"]\"}]\) gives the right ascension of the \
local meridian for the specified date and location.\n\
\!\(\*RowBox[{\"SiderealTime\", \"[\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"loc\", \"TI\"], StyleBox[\"1\", \"TR\"]], \",\
\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"loc\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]}], \"}\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) gives the right \
ascensions of the local meridians for all specified locations on the \
specified dates.\n\!\(\*RowBox[{\"SiderealTime\", \"[\", \
RowBox[{StyleBox[\"loc\", \"TI\"], \",\", StyleBox[\"date\", \"TI\"], \",\", \
StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \!\(\*StyleBox[\"func\", \"TI\"]\
\) to determine what to return for extended locations.\n\
\!\(\*RowBox[{\"SiderealTime\", \"[\", \
RowBox[{StyleBox[\"\\\"MeanTime\\\"\",ShowStringCharacters->True], \",\", \
StyleBox[\"loc\", \"TI\"], \",\", StyleBox[\"date\", \"TI\"], \",\", \
StyleBox[\"func\", \"TI\"]}], \"]\"}]\) gives the mean sidereal time for the \
specified date, location and aggregation function.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SiderealTime", "Web" -> 
        "http://reference.wolfram.com/language/ref/SiderealTime.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SiderealTime"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateRange",
                ButtonNote->"paclet:ref/DateRange"],
               "\"paclet:ref/DateRange\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives all dates in the \
range from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"increment\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the dates in the range from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) that are \
\\!\\(\\*StyleBox[\\\"increment\\\", \\\"TI\\\"]\\) apart.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateRange", 
                    "paclet:ref/DateRange", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateRange.\
html"], None}, "http://reference.wolfram.com/language/ref/DateRange.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateRange\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateRange",
                ButtonNote->"paclet:ref/DateRange"],
               "\"paclet:ref/DateRange\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives all dates in the \
range from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DateRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"increment\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the dates in the range from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) that are \
\\!\\(\\*StyleBox[\\\"increment\\\", \\\"TI\\\"]\\) apart.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateRange\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) gives all dates in the range from \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"2\", \"TR\"]], \"TI\"]\).\n\
\!\(\*RowBox[{\"DateRange\", \"[\", RowBox[{SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"increment\", \"TI\"]}], \
\"]\"}]\) gives the dates in the range from \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"2\", \"TR\"]], \"TI\"]\) \
that are \!\(\*StyleBox[\"increment\", \"TI\"]\) apart.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateRange", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateRange.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DateRange"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayRange",
                ButtonNote->"paclet:ref/DayRange"],
               "\"paclet:ref/DayRange\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the dates in the \
range from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DayRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the dates in the range from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) that are of the specified \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DayRange", 
                    "paclet:ref/DayRange", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DayRange.html"]\
, None}, "http://reference.wolfram.com/language/ref/DayRange.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}], ",", 
                    RowBox[{"\<\"IncludeEndPoints\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DayRange\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayRange",
                ButtonNote->"paclet:ref/DayRange"],
               "\"paclet:ref/DayRange\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the dates in the \
range from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DayRange\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the dates in the range from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\) that are of the specified \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DayRange\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) gives the dates in the range from \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"2\", \"TR\"]], \"TI\"]\).\n\
\!\(\*RowBox[{\"DayRange\", \"[\", RowBox[{SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"daytype\", \"TI\"]}], \
\"]\"}]\) gives the dates in the range from \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"2\", \"TR\"]], \"TI\"]\) \
that are of the specified \!\(\*StyleBox[\"daytype\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DayRange", "Web" -> 
        "http://reference.wolfram.com/language/ref/DayRange.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}, 
        "IncludeEndPoints" -> {True, True}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DayRange"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayPlus",
                ButtonNote->"paclet:ref/DayPlus"],
               "\"paclet:ref/DayPlus\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayPlus\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives the date \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) days away from \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DayPlus\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the date that is \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) days of \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) away from \
\\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DayPlus", 
                    "paclet:ref/DayPlus", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DayPlus.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/DayPlus.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DayPlus\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayPlus",
                ButtonNote->"paclet:ref/DayPlus"],
               "\"paclet:ref/DayPlus\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayPlus\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives the date \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) days away from \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DayPlus\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the date that is \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) days of \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) away from \
\\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DayPlus\", \"[\", RowBox[{StyleBox[\"date\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives the date \!\(\*StyleBox[\"n\
\", \"TI\"]\) days away from \!\(\*StyleBox[\"date\", \"TI\"]\).\n\
\!\(\*RowBox[{\"DayPlus\", \"[\", RowBox[{StyleBox[\"date\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"daytype\", \"TI\"]}], \"]\"}]\) \
gives the date that is \!\(\*StyleBox[\"n\", \"TI\"]\) days of \
\!\(\*StyleBox[\"daytype\", \"TI\"]\) away from \!\(\*StyleBox[\"date\", \"TI\
\"]\).", "Documentation" -> <|
       "Local" -> "paclet:ref/DayPlus", "Web" -> 
        "http://reference.wolfram.com/language/ref/DayPlus.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DayPlus"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayCount",
                ButtonNote->"paclet:ref/DayCount"],
               "\"paclet:ref/DayCount\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayCount\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the number of days \
from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DayCount\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the number of days of the specified \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DayCount", 
                    "paclet:ref/DayCount", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DayCount.html"]\
, None}, "http://reference.wolfram.com/language/ref/DayCount.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DayCount\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayCount",
                ButtonNote->"paclet:ref/DayCount"],
               "\"paclet:ref/DayCount\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayCount\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the number of days \
from \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DayCount\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"daytype\\\", \\\"TI\
\\\"]}], \\\"]\\\"}]\\) gives the number of days of the specified \
\\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\"TI\\\"]\\) to \\!\\(\\*StyleBox[SubscriptBox[\\\"date\\\", \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DayCount\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) gives the number of days from \!\(\*StyleBox[SubscriptBox[\"date\", \
StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \!\(\*StyleBox[SubscriptBox[\"date\", \
StyleBox[\"2\", \"TR\"]], \"TI\"]\).\n\!\(\*RowBox[{\"DayCount\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"daytype\", \"TI\"]}], \"]\"}]\) gives the number of days of \
the specified \!\(\*StyleBox[\"daytype\", \"TI\"]\) from \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"1\", \"TR\"]], \"TI\"]\) to \
\!\(\*StyleBox[SubscriptBox[\"date\", StyleBox[\"2\", \"TR\"]], \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DayCount", "Web" -> 
        "http://reference.wolfram.com/language/ref/DayCount.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DayCount"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TimeConstrained",
                ButtonNote->"paclet:ref/TimeConstrained"],
               "\"paclet:ref/TimeConstrained\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TimeConstrained\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), stopping after \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) seconds. \
\\n\\!\\(\\*RowBox[{\\\"TimeConstrained\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"failexpr\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) returns \\!\\(\\*StyleBox[\\\"failexpr\\\", \\\"TI\\\"]\\) if \
the time constraint is not met. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/TimeConstrained", 
                    "paclet:ref/TimeConstrained", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
TimeConstrained.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
TimeConstrained.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`TimeConstrained\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/TimeConstrained",
                ButtonNote->"paclet:ref/TimeConstrained"],
               "\"paclet:ref/TimeConstrained\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"TimeConstrained\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), stopping after \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) seconds. \
\\n\\!\\(\\*RowBox[{\\\"TimeConstrained\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"failexpr\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) returns \\!\\(\\*StyleBox[\\\"failexpr\\\", \\\"TI\\\"]\\) if \
the time constraint is not met. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"TimeConstrained\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\", StyleBox[\"t\", \"TI\"]}], \"]\"}]\) evaluates \
\!\(\*StyleBox[\"expr\", \"TI\"]\), stopping after \!\(\*StyleBox[\"t\", \"TI\
\"]\) seconds. \n\!\(\*RowBox[{\"TimeConstrained\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"t\", \"TI\"], \",\", \
StyleBox[\"failexpr\", \"TI\"]}], \"]\"}]\) returns \!\(\*StyleBox[\"failexpr\
\", \"TI\"]\) if the time constraint is not met. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/TimeConstrained", "Web" -> 
        "http://reference.wolfram.com/language/ref/TimeConstrained.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {HoldAll, Protected}, "FullName" -> 
      "System`TimeConstrained"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateValue",
                ButtonNote->"paclet:ref/DateValue"],
               "\"paclet:ref/DateValue\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"elem\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
the specified element of the current date and \
time.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a list of the specified \
elements of the current date and time.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"elem\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the specified element of the \
specified date.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"elem\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the result in the specified form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DateValue", 
                    "paclet:ref/DateValue", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateValue.\
html"], None}, "http://reference.wolfram.com/language/ref/DateValue.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateValue\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateValue",
                ButtonNote->"paclet:ref/DateValue"],
               "\"paclet:ref/DateValue\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"elem\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) gives \
the specified element of the current date and \
time.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a list of the specified \
elements of the current date and time.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"elem\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the specified element of the \
specified date.\\n\\!\\(\\*RowBox[{\\\"DateValue\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"elem\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the result in the specified form.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateValue\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"elem\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) gives the specified element of the \
current date and time.\n\!\(\*RowBox[{\"DateValue\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) gives a list of \
the specified elements of the current date and time.\n\
\!\(\*RowBox[{\"DateValue\", \"[\", RowBox[{StyleBox[\"date\", \"TI\"], \
\",\", StyleBox[\"elem\", \"TI\"]}], \"]\"}]\) gives the specified element of \
the specified date.\n\!\(\*RowBox[{\"DateValue\", \"[\", \
RowBox[{StyleBox[\"date\", \"TI\"], \",\", StyleBox[\"elem\", \"TI\"], \",\", \
StyleBox[\"form\", \"TI\"]}], \"]\"}]\) gives the result in the specified \
form.", "Documentation" -> <|
       "Local" -> "paclet:ref/DateValue", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateValue.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DateValue"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateDifference",
                ButtonNote->"paclet:ref/DateDifference"],
               "\"paclet:ref/DateDifference\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateDifference\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the \
number of days from \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"DateDifference\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
the difference between \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) in the specified \
unit.\\n\\!\\(\\*RowBox[{\\\"DateDifference\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\_1\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\
\\\\\\\"TI\\\\\\\"]\\\\_2\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) gives the difference as a list with elements corresponding to \
the successive \\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"unit\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/DateDifference", "paclet:ref/DateDifference", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DateDifference.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/DateDifference.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{
                    "DayCountConvention", "\[Rule]", "\<\"ActualActual\"\>"}],
                     ",", 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DateDifference\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DateDifference",
                ButtonNote->"paclet:ref/DateDifference"],
               "\"paclet:ref/DateDifference\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DateDifference\\\", \
\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\
\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}]\\) gives the \
number of days from \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"DateDifference\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
the difference between \\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]\\) in the specified \
unit.\\n\\!\\(\\*RowBox[{\\\"DateDifference\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\_1\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"unit\\\\\\\",\
\\\\\\\"TI\\\\\\\"]\\\\_2\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) gives the difference as a list with elements corresponding to \
the successive \\\"\\!\\(\\*SubscriptBox[StyleBox[\\\"unit\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\)\\\".\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DateDifference\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"]\"}]\) gives the number of days from \!\(\*SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"1\", \"TR\"]]\) to \!\(\*SubscriptBox[StyleBox[\"date\", \
\"TI\"], StyleBox[\"2\", \"TR\"]]\).\n\!\(\*RowBox[{\"DateDifference\", \
\"[\", RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"unit\\\",\\\"TI\\\"]\\)\
\\\"\", ShowStringCharacters->True]}], \"]\"}]\) gives the difference between \
\!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]]\) and \
\!\(\*SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]]\) in \
the specified unit.\n\!\(\*RowBox[{\"DateDifference\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", RowBox[{\"{\", \
RowBox[{StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"unit\\\",\\\"TI\\\"]\\_1\\)\\\"\"\
, ShowStringCharacters->True], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"unit\\\",\\\"TI\\\"]\\_2\\)\\\"\", \
ShowStringCharacters->True], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) gives the difference as a list with elements \
corresponding to the successive \"\!\(\*SubscriptBox[StyleBox[\"unit\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\)\".", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DateDifference", "Web" -> 
        "http://reference.wolfram.com/language/ref/DateDifference.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, DayCountConvention -> "ActualActual", 
        Method -> Automatic}, "Attributes" -> {Protected}, "FullName" -> 
      "System`DateDifference"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Nearest",
                ButtonNote->"paclet:ref/Nearest"],
               "\"paclet:ref/Nearest\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the list of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) corresponding to the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives the same result. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\
\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", StyleBox[\\\"prop\\\", \
\\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) for the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest.\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) effectively gives \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\
\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Nearest\\\", \\\"[\\\", RowBox[{StyleBox[\\\"data\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) nearest \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"r\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\
\\) gives the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) or fewer nearest \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) that are \
within radius \\!\\(\\*StyleBox[\\\"r\\\", \\\"TI\\\"]\\) of \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Nearest\\\
\", \\\"[\\\", StyleBox[\\\"data\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"NearestFunction\\\", \\\"[\\\", StyleBox[\\\"\[Ellipsis]\
\\\", \\\"TR\\\"], \\\"]\\\"}]\\) that can be applied repeatedly to different \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Nearest", 
                    "paclet:ref/Nearest", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Nearest.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Nearest.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DistanceFunction", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Nearest\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Nearest",
                ButtonNote->"paclet:ref/Nearest"],
               "\"paclet:ref/Nearest\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\
\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\
\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the list of \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\
\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"\[Rule]\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) corresponding to the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives the same result. \\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\
\"[\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"\[Rule]\\\", StyleBox[\\\"prop\\\", \
\\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the property \\!\\(\\*StyleBox[\\\"prop\\\", \\\"TI\\\"]\\) for the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\) to which \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) is \
nearest.\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) effectively gives \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\
\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Nearest\\\", \\\"[\\\", RowBox[{StyleBox[\\\"data\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"]\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]\\).\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) nearest \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Nearest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"data\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\
\"], \\\",\\\", StyleBox[\\\"r\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\
\\) gives the \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) or fewer nearest \
\\!\\(\\*SubscriptBox[StyleBox[\\\"elem\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) that are \
within radius \\!\\(\\*StyleBox[\\\"r\\\", \\\"TI\\\"]\\) of \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Nearest\\\
\", \\\"[\\\", StyleBox[\\\"data\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates a \
\\!\\(\\*RowBox[{\\\"NearestFunction\\\", \\\"[\\\", StyleBox[\\\"\[Ellipsis]\
\\\", \\\"TR\\\"], \\\"]\\\"}]\\) that can be applied repeatedly to different \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Nearest\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"x\", \"TI\
\"]}], \"]\"}]\) gives the list of \!\(\*SubscriptBox[StyleBox[\"elem\", \"TI\
\"], StyleBox[\"i\", \"TI\"]]\) to which \!\(\*StyleBox[\"x\", \"TI\"]\) is \
nearest. \n\!\(\*RowBox[{\"Nearest\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"1\", \"TR\
\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"1\", \"TR\
\"]]}], \",\", RowBox[{SubscriptBox[StyleBox[\"elem\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \"\[Rule]\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) gives the \
\!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
corresponding to the \!\(\*SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\
\"i\", \"TI\"]]\) to which \!\(\*StyleBox[\"x\", \"TI\"]\) is nearest. \n\!\(\
\*RowBox[{\"Nearest\", \"[\", RowBox[{RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\
\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \",\", StyleBox[\"x\", \
\"TI\"]}], \"]\"}]\) gives the same result. \n\!\(\*RowBox[{\"Nearest\", \
\"[\", RowBox[{RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"elem\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"elem\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \"\[Rule]\", StyleBox[\"prop\", \"TI\"]}], \",\", \
StyleBox[\"x\", \"TI\"]}], \"]\"}]\) gives the property \!\(\*StyleBox[\"prop\
\", \"TI\"]\) for the \!\(\*SubscriptBox[StyleBox[\"elem\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\) to which \!\(\*StyleBox[\"x\", \"TI\"]\) is \
nearest.\n\!\(\*RowBox[{\"Nearest\", \"[\", RowBox[{StyleBox[\"data\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}]}], \"]\"}]\) effectively gives \!\(\*RowBox[{\"{\", \
RowBox[{RowBox[{\"Nearest\", \"[\", RowBox[{StyleBox[\"data\", \"TI\"], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]]}], \
\"]\"}], \",\", RowBox[{\"Nearest\", \"[\", RowBox[{StyleBox[\"data\", \
\"TI\"], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"]\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]\).\n\
\!\(\*RowBox[{\"Nearest\", \"[\", RowBox[{StyleBox[\"data\", \"TI\"], \",\", \
StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives \
the \!\(\*StyleBox[\"n\", \"TI\"]\) nearest \
\!\(\*SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) to \
\!\(\*StyleBox[\"x\", \"TI\"]\). \n\!\(\*RowBox[{\"Nearest\", \"[\", \
RowBox[{StyleBox[\"data\", \"TI\"], \",\", StyleBox[\"x\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"r\", \
\"TI\"]}], \"}\"}]}], \"]\"}]\) gives the \!\(\*StyleBox[\"n\", \"TI\"]\) or \
fewer nearest \!\(\*SubscriptBox[StyleBox[\"elem\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\) to \!\(\*StyleBox[\"x\", \"TI\"]\) that are within radius \
\!\(\*StyleBox[\"r\", \"TI\"]\) of \!\(\*StyleBox[\"x\", \"TI\"]\).\n\
\!\(\*RowBox[{\"Nearest\", \"[\", StyleBox[\"data\", \"TI\"], \"]\"}]\) \
generates a \!\(\*RowBox[{\"NearestFunction\", \"[\", \
StyleBox[\"\[Ellipsis]\", \"TR\"], \"]\"}]\) that can be applied repeatedly \
to different \!\(\*StyleBox[\"x\", \"TI\"]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/Nearest", "Web" -> 
        "http://reference.wolfram.com/language/ref/Nearest.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       DistanceFunction -> Automatic, Method -> Automatic, WorkingPrecision -> 
        Automatic}, "Attributes" -> {Protected}, "FullName" -> 
      "System`Nearest"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayRound",
                ButtonNote->"paclet:ref/DayRound"],
               "\"paclet:ref/DayRound\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayRound\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) rounds \\!\\(\\*StyleBox[\\\"date\\\", \
\\\"TI\\\"]\\) to the nearest day of \\!\\(\\*StyleBox[\\\"daytype\\\", \
\\\"TI\\\"]\\),\\!\\(\\*StyleBox[\\\" \\\", \\\"TI\\\"]\\)using the next-day \
rounding convention.\\n\\!\\(\\*RowBox[{\\\"DayRound\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"rounding\\\", \\\"TI\\\"]}], \\\"]\\\
\"}]\\) rounds \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\) to the nearest \
day of \\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\), using \
\\!\\(\\*StyleBox[\\\"rounding\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DayRound", 
                    "paclet:ref/DayRound", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DayRound.html"]\
, None}, "http://reference.wolfram.com/language/ref/DayRound.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CalendarType", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"HolidayCalendar", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"UnitedStates\"\>", ",", "\<\"Default\"\>"}], 
                    "}"}]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DayRound\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DayRound",
                ButtonNote->"paclet:ref/DayRound"],
               "\"paclet:ref/DayRound\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DayRound\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"]}], \\\"]\\\"}]\\) rounds \\!\\(\\*StyleBox[\\\"date\\\", \
\\\"TI\\\"]\\) to the nearest day of \\!\\(\\*StyleBox[\\\"daytype\\\", \
\\\"TI\\\"]\\),\\!\\(\\*StyleBox[\\\" \\\", \\\"TI\\\"]\\)using the next-day \
rounding convention.\\n\\!\\(\\*RowBox[{\\\"DayRound\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"date\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"daytype\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"rounding\\\", \\\"TI\\\"]}], \\\"]\\\
\"}]\\) rounds \\!\\(\\*StyleBox[\\\"date\\\", \\\"TI\\\"]\\) to the nearest \
day of \\!\\(\\*StyleBox[\\\"daytype\\\", \\\"TI\\\"]\\), using \
\\!\\(\\*StyleBox[\\\"rounding\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DayRound\", \"[\", RowBox[{StyleBox[\"date\", \"TI\"], \
\",\", StyleBox[\"daytype\", \"TI\"]}], \"]\"}]\) rounds \
\!\(\*StyleBox[\"date\", \"TI\"]\) to the nearest day of \
\!\(\*StyleBox[\"daytype\", \"TI\"]\),\!\(\*StyleBox[\" \", \"TI\"]\)using \
the next-day rounding convention.\n\!\(\*RowBox[{\"DayRound\", \"[\", \
RowBox[{StyleBox[\"date\", \"TI\"], \",\", StyleBox[\"daytype\", \"TI\"], \",\
\", StyleBox[\"rounding\", \"TI\"]}], \"]\"}]\) rounds \
\!\(\*StyleBox[\"date\", \"TI\"]\) to the nearest day of \
\!\(\*StyleBox[\"daytype\", \"TI\"]\), using \!\(\*StyleBox[\"rounding\", \
\"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DayRound", "Web" -> 
        "http://reference.wolfram.com/language/ref/DayRound.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       CalendarType -> Automatic, 
        HolidayCalendar -> {"UnitedStates", "Default"}}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DayRound"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Interpreter",
                ButtonNote->"paclet:ref/Interpreter"],
               "\"paclet:ref/Interpreter\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Interpreter\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an interpreter \
object that can be applied to an input to try to interpret it as an object of \
the specified form. \\n\\!\\(\\*RowBox[{\\\"Interpreter\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns the interpreted object only if applying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) to it yields True; otherwise \
it returns a Failure object.\\n\\!\\(\\*RowBox[{\\\"Interpreter\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"fail\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) returns the result of applying the function \\!\\(\\*StyleBox[\
\\\"fail\\\", \\\"TI\\\"]\\) if the test fails.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Interpreter", 
                    "paclet:ref/Interpreter", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Interpreter.\
html"], None}, "http://reference.wolfram.com/language/ref/Interpreter.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                    PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AmbiguityFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DateFormat", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DigitBlock", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GeoLocation", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImportOptions", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"NumberPoint", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NumberSeparator", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"NumberSigns", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TimeZone", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "9", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AmbiguityFunction", "\[Rule]", "Automatic"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "9", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Interpreter\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Interpreter",
                ButtonNote->"paclet:ref/Interpreter"],
               "\"paclet:ref/Interpreter\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Interpreter\\\", \\\"[\\\", \
StyleBox[\\\"form\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an interpreter \
object that can be applied to an input to try to interpret it as an object of \
the specified form. \\n\\!\\(\\*RowBox[{\\\"Interpreter\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"test\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) returns the interpreted object only if applying \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) to it yields True; otherwise \
it returns a Failure object.\\n\\!\\(\\*RowBox[{\\\"Interpreter\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"form\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"fail\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) returns the result of applying the function \\!\\(\\*StyleBox[\
\\\"fail\\\", \\\"TI\\\"]\\) if the test fails.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Interpreter\", \"[\", StyleBox[\"form\", \"TI\"], \
\"]\"}]\) represents an interpreter object that can be applied to an input to \
try to interpret it as an object of the specified form. \n\
\!\(\*RowBox[{\"Interpreter\", \"[\", RowBox[{StyleBox[\"form\", \"TI\"], \",\
\", StyleBox[\"test\", \"TI\"]}], \"]\"}]\) returns the interpreted object \
only if applying \!\(\*StyleBox[\"test\", \"TI\"]\) to it yields True; \
otherwise it returns a Failure object.\n\!\(\*RowBox[{\"Interpreter\", \"[\", \
RowBox[{StyleBox[\"form\", \"TI\"], \",\", StyleBox[\"test\", \"TI\"], \",\", \
StyleBox[\"fail\", \"TI\"]}], \"]\"}]\) returns the result of applying the \
function \!\(\*StyleBox[\"fail\", \"TI\"]\) if the test fails.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/Interpreter", "Web" -> 
        "http://reference.wolfram.com/language/ref/Interpreter.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       AmbiguityFunction -> Automatic, DateFormat -> Automatic, DigitBlock -> 
        Automatic, GeoLocation -> Automatic, ImportOptions -> {}, NumberPoint -> 
        Automatic, NumberSeparator -> Automatic, NumberSigns -> Automatic, 
        TimeZone -> Automatic}, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`Interpreter"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Clock",
                ButtonNote->"paclet:ref/Clock"],
               "\"paclet:ref/Clock\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
\\\"]\\\"}]\\) represents a clock variable whose value cycles continuously \
from 0 to 1 once per second when it appears inside a dynamically updated \
object such as a Dynamic. \\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\"]\\\"}]\\) cycles from 0 to \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) every \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) \
seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
cycles from 0 to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\
\"]\\\"}]\\) cycles through the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) cycles through the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) over the course of \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\"-\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dv\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"]\\\"}]\\) cycles from \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\
\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps of \\!\
\\(\\*StyleBox[\\\"dv\\\", \\\"TI\\\"]\\), spending \
\\!\\(\\*StyleBox[\\\"dv\\\", \\\"TI\\\"]\\) seconds at each \
value.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dv\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) cycles from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps \\!\\(\\*StyleBox[\\\"dv\\\", \
\\\"TI\\\"]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) \
seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"vals\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) goes \
through the cycle only \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times, \
then always yields only the maximum value.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Clock", 
                    "paclet:ref/Clock", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Clock.html"], 
                    None}, 
                    "http://reference.wolfram.com/language/ref/Clock.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Clock\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Clock",
                ButtonNote->"paclet:ref/Clock"],
               "\"paclet:ref/Clock\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
\\\"]\\\"}]\\) represents a clock variable whose value cycles continuously \
from 0 to 1 once per second when it appears inside a dynamically updated \
object such as a Dynamic. \\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\"]\\\"}]\\) cycles from 0 to \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) every \
\\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) \
seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
cycles from 0 to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\
\"]\\\"}]\\) cycles through the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) cycles through the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) over the course of \
\\!\\(\\*RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\"-\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\) seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dv\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\"]\\\"}]\\) cycles from \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\
\"], StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\
\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps of \\!\
\\(\\*StyleBox[\\\"dv\\\", \\\"TI\\\"]\\), spending \
\\!\\(\\*StyleBox[\\\"dv\\\", \\\"TI\\\"]\\) seconds at each \
value.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"v\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dv\\\", \\\"TI\\\"]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"t\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) cycles from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"v\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps \\!\\(\\*StyleBox[\\\"dv\\\", \
\\\"TI\\\"]\\) every \\!\\(\\*StyleBox[\\\"t\\\", \\\"TI\\\"]\\) \
seconds.\\n\\!\\(\\*RowBox[{\\\"Clock\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"vals\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"t\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) goes \
through the cycle only \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times, \
then always yields only the maximum value.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Clock\", \"[\", \"]\"}]\) represents a clock variable \
whose value cycles continuously from 0 to 1 once per second when it appears \
inside a dynamically updated object such as a Dynamic. \n\
\!\(\*RowBox[{\"Clock\", \"[\", StyleBox[\"t\", \"TI\"], \"]\"}]\) cycles \
from 0 to \!\(\*StyleBox[\"t\", \"TI\"]\) every \!\(\*StyleBox[\"t\", \"TI\"]\
\) seconds.\n\!\(\*RowBox[{\"Clock\", \"[\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\
\", StyleBox[\"t\", \"TI\"]}], \"]\"}]\) cycles from 0 to \
\!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) \
every \!\(\*StyleBox[\"t\", \"TI\"]\) seconds.\n\!\(\*RowBox[{\"Clock\", \
\"[\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"t\", \"TI\"]}], \
\"]\"}]\) cycles through the range \!\(\*SubscriptBox[StyleBox[\"v\", \
\"TI\"], StyleBox[\"min\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"v\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]\) every \!\(\*StyleBox[\"t\", \"TI\"]\) \
seconds.\n\!\(\*RowBox[{\"Clock\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}], \"]\"}]\) cycles through the range \
\!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) over \
the course of \!\(\*RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \"-\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]}]\) seconds.\n\!\(\*RowBox[{\"Clock\", \"[\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \",\", StyleBox[\"dv\", \"TI\"]}], \"}\"}], \
\"]\"}]\) cycles from \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]\) in steps of \!\(\*StyleBox[\"dv\", \"TI\"]\), \
spending \!\(\*StyleBox[\"dv\", \"TI\"]\) seconds at each value.\n\
\!\(\*RowBox[{\"Clock\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"max\", \"TI\"]], \",\", \
StyleBox[\"dv\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"t\", \"TI\"]}], \
\"]\"}]\) cycles from \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"v\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]\) in steps \!\(\*StyleBox[\"dv\", \"TI\"]\) every \
\!\(\*StyleBox[\"t\", \"TI\"]\) seconds.\n\!\(\*RowBox[{\"Clock\", \"[\", \
RowBox[{StyleBox[\"vals\", \"TI\"], \",\", StyleBox[\"t\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) goes through the cycle only \
\!\(\*StyleBox[\"n\", \"TI\"]\) times, then always yields only the maximum \
value.", "Documentation" -> <|
       "Local" -> "paclet:ref/Clock", "Web" -> 
        "http://reference.wolfram.com/language/ref/Clock.html"|>, "OwnValues" -> 
      None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`Clock"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LocalTime",
                ButtonNote->"paclet:ref/LocalTime"],
               "\"paclet:ref/LocalTime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives a DateObject corresponding to the current local time at \
the current geo location.\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the current local \
time at the geo location specified by \\!\\(\\*StyleBox[\\\"loc\\\", \\\"TI\\\
\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"time\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the local time corresponding to the date \
object \\!\\(\\*StyleBox[\\\"time\\\", \\\"TI\\\"]\\) at the geo location \\!\
\\(\\*StyleBox[\\\"loc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"time\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"func\\\", \\\"TI\\\"]\\) to determine what to \
return for extended geographic regions.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LocalTime", 
                    "paclet:ref/LocalTime", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LocalTime.\
html"], None}, "http://reference.wolfram.com/language/ref/LocalTime.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LocalTime\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LocalTime",
                ButtonNote->"paclet:ref/LocalTime"],
               "\"paclet:ref/LocalTime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives a DateObject corresponding to the current local time at \
the current geo location.\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the current local \
time at the geo location specified by \\!\\(\\*StyleBox[\\\"loc\\\", \\\"TI\\\
\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"time\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the local time corresponding to the date \
object \\!\\(\\*StyleBox[\\\"time\\\", \\\"TI\\\"]\\) at the geo location \\!\
\\(\\*StyleBox[\\\"loc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"time\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
uses \\!\\(\\*StyleBox[\\\"func\\\", \\\"TI\\\"]\\) to determine what to \
return for extended geographic regions.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LocalTime\", \"[\", \"]\"}]\) gives a DateObject \
corresponding to the current local time at the current geo location.\n\
\!\(\*RowBox[{\"LocalTime\", \"[\", StyleBox[\"loc\", \"TI\"], \"]\"}]\) \
gives the current local time at the geo location specified by \!\(\*StyleBox[\
\"loc\", \"TI\"]\).\n\!\(\*RowBox[{\"LocalTime\", \"[\", \
RowBox[{StyleBox[\"loc\", \"TI\"], \",\", StyleBox[\"time\", \"TI\"]}], \
\"]\"}]\) gives the local time corresponding to the date object \
\!\(\*StyleBox[\"time\", \"TI\"]\) at the geo location \
\!\(\*StyleBox[\"loc\", \"TI\"]\).\n\!\(\*RowBox[{\"LocalTime\", \"[\", \
RowBox[{StyleBox[\"loc\", \"TI\"], \",\", StyleBox[\"time\", \"TI\"], \",\", \
StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \!\(\*StyleBox[\"func\", \"TI\"]\
\) to determine what to return for extended geographic regions.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LocalTime", "Web" -> 
        "http://reference.wolfram.com/language/ref/LocalTime.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`LocalTime"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LocalTimeZone",
                ButtonNote->"paclet:ref/LocalTimeZone"],
               "\"paclet:ref/LocalTimeZone\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \
\\\"[\\\", \\\"]\\\"}]\\) gives the current time zone for the current geo \
location.\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the current time zone \
for the geo location specified by \\!\\(\\*StyleBox[\\\"loc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the time zone for the geo location \\!\\(\
\\*StyleBox[\\\"loc\\\", \\\"TI\\\"]\\) on the specified \
date.\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
the specified property of the time zone.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/LocalTimeZone",
                     "paclet:ref/LocalTimeZone", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/LocalTimeZone.\
html"], None}, "http://reference.wolfram.com/language/ref/LocalTimeZone.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`LocalTimeZone\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/LocalTimeZone",
                ButtonNote->"paclet:ref/LocalTimeZone"],
               "\"paclet:ref/LocalTimeZone\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \
\\\"[\\\", \\\"]\\\"}]\\) gives the current time zone for the current geo \
location.\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the current time zone \
for the geo location specified by \\!\\(\\*StyleBox[\\\"loc\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the time zone for the geo location \\!\\(\
\\*StyleBox[\\\"loc\\\", \\\"TI\\\"]\\) on the specified \
date.\\n\\!\\(\\*RowBox[{\\\"LocalTimeZone\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"loc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"date\\\", \
\\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"prop\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
the specified property of the time zone.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"LocalTimeZone\", \"[\", \"]\"}]\) gives the current \
time zone for the current geo location.\n\!\(\*RowBox[{\"LocalTimeZone\", \"[\
\", StyleBox[\"loc\", \"TI\"], \"]\"}]\) gives the current time zone for the \
geo location specified by \!\(\*StyleBox[\"loc\", \"TI\"]\).\n\
\!\(\*RowBox[{\"LocalTimeZone\", \"[\", RowBox[{StyleBox[\"loc\", \"TI\"], \
\",\", StyleBox[\"date\", \"TI\"]}], \"]\"}]\) gives the time zone for the \
geo location \!\(\*StyleBox[\"loc\", \"TI\"]\) on the specified date.\n\
\!\(\*RowBox[{\"LocalTimeZone\", \"[\", RowBox[{StyleBox[\"loc\", \"TI\"], \
\",\", StyleBox[\"date\", \"TI\"], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\
\"prop\\\",\\\"TI\\\"]\\)\\\"\", ShowStringCharacters->True]}], \"]\"}]\) \
gives the specified property of the time zone.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/LocalTimeZone", "Web" -> 
        "http://reference.wolfram.com/language/ref/LocalTimeZone.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`LocalTimeZone"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DaylightQ",
                ButtonNote->"paclet:ref/DaylightQ"],
               "\"paclet:ref/DaylightQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives True if it is currently daylight from the user's location.\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"datespec\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is daylight from the user's \
location on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"locationspec\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is currently daylight from \
the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is \
daylight from the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\) on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives True if it is daylight from the specified \
locations and dates.\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"inclusionspec\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is daylight from the \
specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \\\"TI\\\"]\\) on the \
specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\) taking \
\\!\\(\\*StyleBox[\\\"inclusionspec\\\", \\\"TI\\\"]\\) into account.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/DaylightQ", 
                    "paclet:ref/DaylightQ", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/DaylightQ.\
html"], None}, "http://reference.wolfram.com/language/ref/DaylightQ.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"\<\"SunAngleTest\"\>", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", ">", "0"}], "&"}], ")"}]}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`DaylightQ\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/DaylightQ",
                ButtonNote->"paclet:ref/DaylightQ"],
               "\"paclet:ref/DaylightQ\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \\\
\"]\\\"}]\\) gives True if it is currently daylight from the user's location.\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"datespec\\\", \
\\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is daylight from the user's \
location on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", StyleBox[\\\"locationspec\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives True if it is currently daylight from \
the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is \
daylight from the specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \
\\\"TI\\\"]\\) on the specified \\!\\(\\*StyleBox[\\\"datespec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives True if it is daylight from the specified \
locations and dates.\\n\\!\\(\\*RowBox[{\\\"DaylightQ\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"inclusionspec\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives True if it is daylight from the \
specified \\!\\(\\*StyleBox[\\\"locationspec\\\", \\\"TI\\\"]\\) on the \
specified \\!\\(\\*StyleBox[\\\"datespec\\\", \\\"TI\\\"]\\) taking \
\\!\\(\\*StyleBox[\\\"inclusionspec\\\", \\\"TI\\\"]\\) into account.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"DaylightQ\", \"[\", \"]\"}]\) gives True if it is \
currently daylight from the user's location.\n\!\(\*RowBox[{\"DaylightQ\", \
\"[\", StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives True if it is daylight \
from the user's location on the specified \!\(\*StyleBox[\"datespec\", \
\"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\", StyleBox[\"locationspec\", \
\"TI\"], \"]\"}]\) gives True if it is currently daylight from the specified \
\!\(\*StyleBox[\"locationspec\", \"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\
\", RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives True if it is daylight from the specified \
\!\(\*StyleBox[\"locationspec\", \"TI\"]\) on the specified \
\!\(\*StyleBox[\"datespec\", \"TI\"]\).\n\!\(\*RowBox[{\"DaylightQ\", \"[\", \
RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives True if it is daylight from the specified locations and dates.\n\
\!\(\*RowBox[{\"DaylightQ\", \"[\", RowBox[{StyleBox[\"locationspec\", \
\"TI\"], \",\", StyleBox[\"datespec\", \"TI\"], \",\", \
StyleBox[\"inclusionspec\", \"TI\"]}], \"]\"}]\) gives True if it is daylight \
from the specified \!\(\*StyleBox[\"locationspec\", \"TI\"]\) on the \
specified \!\(\*StyleBox[\"datespec\", \"TI\"]\) taking \
\!\(\*StyleBox[\"inclusionspec\", \"TI\"]\) into account.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/DaylightQ", "Web" -> 
        "http://reference.wolfram.com/language/ref/DaylightQ.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {"SunAngleTest" -> (# > 0& )}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`DaylightQ"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SunPosition",
                ButtonNote->"paclet:ref/SunPosition"],
               "\"paclet:ref/SunPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the position of the Sun for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the position of \
the Sun for the specified date.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\
\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
positions of the Sun for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the position \
of the Sun for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the positions of the Sun for all specified \
locations on the specified dates.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SunPosition", 
                    "paclet:ref/SunPosition", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SunPosition.\
html"], None}, "http://reference.wolfram.com/language/ref/SunPosition.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "AltitudeMethod", "\[Rule]", "\<\"TrueAltitude\"\>"}], 
                    ",", 
                    RowBox[{
                    "CelestialSystem", "\[Rule]", "\<\"Horizon\"\>"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SunPosition\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SunPosition",
                ButtonNote->"paclet:ref/SunPosition"],
               "\"paclet:ref/SunPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the position of the Sun for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the position of \
the Sun for the specified date.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\
\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
positions of the Sun for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the position \
of the Sun for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the positions of the Sun for all specified \
locations on the specified dates.\\n\\!\\(\\*RowBox[{\\\"SunPosition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SunPosition\", \"[\", \"]\"}]\) gives the position of \
the Sun for the current date and location.\n\!\(\*RowBox[{\"SunPosition\", \
\"[\", StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives the position of the \
Sun for the specified date.\n\!\(\*RowBox[{\"SunPosition\", \"[\", \
StyleBox[\"locationspec\", \"TI\"], \"]\"}]\) gives the positions of the Sun \
for the specified location.\n\!\(\*RowBox[{\"SunPosition\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives the position of the Sun for the specified date and \
location.\n\!\(\*RowBox[{\"SunPosition\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives the positions of the Sun for all specified locations on the \
specified dates.\n\!\(\*RowBox[{\"SunPosition\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"], \",\", StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \
\!\(\*StyleBox[\"func\", \"TI\"]\) to determine what to return for extended \
locations.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SunPosition", "Web" -> 
        "http://reference.wolfram.com/language/ref/SunPosition.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       AltitudeMethod -> "TrueAltitude", CelestialSystem -> "Horizon"}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`SunPosition"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoonPosition",
                ButtonNote->"paclet:ref/MoonPosition"],
               "\"paclet:ref/MoonPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the position of the Moon for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the position of \
the Moon for the specified date.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \
\\\"[\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives \
the position of the Moon for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the position \
of the Moon for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", RowBox[{\\\"{\\\
\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the positions of the Moon for all specified \
locations on the specified dates.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/MoonPosition", 
                    "paclet:ref/MoonPosition", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/MoonPosition.\
html"], None}, "http://reference.wolfram.com/language/ref/MoonPosition.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "AltitudeMethod", "\[Rule]", "\<\"TrueAltitude\"\>"}], 
                    ",", 
                    RowBox[{
                    "CelestialSystem", "\[Rule]", "\<\"Horizon\"\>"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MoonPosition\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/MoonPosition",
                ButtonNote->"paclet:ref/MoonPosition"],
               "\"paclet:ref/MoonPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives the position of the Moon for the current date and \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the position of \
the Moon for the specified date.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \
\\\"[\\\", StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives \
the position of the Moon for the specified \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the position \
of the Moon for the specified date and \
location.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\"[\\\", RowBox[{\\\"{\\\
\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \\\"TI\\\"], StyleBox[\\\"1\\\
\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"location\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"date\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\
\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}], \\\"]\\\"}]\\) gives the positions of the Moon for all specified \
locations on the specified dates.\\n\\!\\(\\*RowBox[{\\\"MoonPosition\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"locationspec\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"datespec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"func\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) uses \\!\\(\\*StyleBox[\\\"func\\\", \
\\\"TI\\\"]\\) to determine what to return for extended locations.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"MoonPosition\", \"[\", \"]\"}]\) gives the position of \
the Moon for the current date and location.\n\!\(\*RowBox[{\"MoonPosition\", \
\"[\", StyleBox[\"datespec\", \"TI\"], \"]\"}]\) gives the position of the \
Moon for the specified date.\n\!\(\*RowBox[{\"MoonPosition\", \"[\", \
StyleBox[\"locationspec\", \"TI\"], \"]\"}]\) gives the position of the Moon \
for the specified location.\n\!\(\*RowBox[{\"MoonPosition\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"]}], \"]\"}]\) gives the position of the Moon for the specified date \
and location.\n\!\(\*RowBox[{\"MoonPosition\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"location\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"date\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\
\"}]\) gives the positions of the Moon for all specified locations on the \
specified dates.\n\!\(\*RowBox[{\"MoonPosition\", \"[\", \
RowBox[{StyleBox[\"locationspec\", \"TI\"], \",\", StyleBox[\"datespec\", \
\"TI\"], \",\", StyleBox[\"func\", \"TI\"]}], \"]\"}]\) uses \
\!\(\*StyleBox[\"func\", \"TI\"]\) to determine what to return for extended \
locations.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/MoonPosition", "Web" -> 
        "http://reference.wolfram.com/language/ref/MoonPosition.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       AltitudeMethod -> "TrueAltitude", CelestialSystem -> "Horizon"}, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`MoonPosition"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.8746888547006216`*^9, 3.8746889992257576`*^9},
 CellLabel->"Out[41]=",
 CellID->193781458,ExpressionUUID->"86d42284-5a9b-472a-9dee-ca1d17cad3e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeySortBy", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#", "]"}], ">=", "3"}], "&"}], "]"}], "[", 
    RowBox[{"AssociationMap", "[", 
     RowBox[{"Arity", ",", "dateAndTimeFunctions"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"dateAndTimeFunctions", ",", "#"}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746890633763742`*^9, 3.874689088966719*^9}},
 CellLabel->"In[42]:=",
 CellID->83152881,ExpressionUUID->"82bfe7d0-9722-49d0-bf34-e7301685e096"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"Clock", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"LocalTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"LocalTimeZone", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateValue", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DateDifference", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"Nearest", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayPlus", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayRound", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"DayCount", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"Sunrise", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"Sunset", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"DaylightQ", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"SunPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"MoonPosition", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"SiderealTime", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "4"}], "}"}]}], ",", 
   RowBox[{"DateHistogram", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"MovingMap", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"Interpreter", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"TimeConstrained", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8746890893829465`*^9},
 CellLabel->"Out[42]=",
 CellID->339524349,ExpressionUUID->"d2a741db-8280-41c3-be79-c19ac98bd275"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}},
 CellLabel->"In[45]:=",
 CellID->376369623,ExpressionUUID->"0a786850-2573-47d3-8f4c-b55429cc0e69"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[], StandardForm],
  ImageSizeCache->{57.179685974121085`, {0., 9.}}]], "Output",
 CellChangeTimes->{{3.8746891204232197`*^9, 3.874689135011042*^9}},
 CellLabel->"Out[45]=",
 CellID->17423283,ExpressionUUID->"4899e022-c5fa-41c8-b100-af59f90d5bc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", "8", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.8746891714129586`*^9}},
 CellLabel->"In[47]:=",
 CellID->254849217,ExpressionUUID->"6adf2091-1583-49f1-8e45-0f86364206b0"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[8], StandardForm],
  ImageSizeCache->{50.03222522735595, {0., 9.}}]], "Output",
 CellChangeTimes->{3.8746891717826486`*^9},
 CellLabel->"Out[47]=",
 CellID->76462826,ExpressionUUID->"59a89bc4-6908-4039-a5f9-aeb095fb9dbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", 
   RowBox[{"20000", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.87468918824366*^9}, {3.8746892202106695`*^9, 
  3.8746892317459655`*^9}},
 CellLabel->"In[50]:=",
 CellID->26378787,ExpressionUUID->"20ea8291-fda4-4a54-90d4-4014e1ee73a5"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[20000, 1], StandardForm],
  ImageSizeCache->{52.176463451385494`, {0., 9.}}]], "Output",
 CellChangeTimes->{
  3.8746891885949054`*^9, {3.874689223630001*^9, 3.874689232385956*^9}},
 CellLabel->"Out[50]=",
 CellID->376239525,ExpressionUUID->"face6908-a860-4271-9b72-9ea1d336e294"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["E", "7"], ",", 
      SuperscriptBox["E", "9"]}], "}"}], ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.87468918824366*^9}, {3.8746892202106695`*^9, 
  3.8746892685956573`*^9}},
 CellLabel->"In[54]:=",
 CellID->581942048,ExpressionUUID->"d8dd7c12-5c7e-4396-9bd7-d64c5e5494fb"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[{E^7, E^9}, 2], StandardForm],
  ImageSizeCache->{50.03222522735595, {0., 9.}}]], "Output",
 CellChangeTimes->{{3.874689251768442*^9, 3.874689269304358*^9}},
 CellLabel->"Out[54]=",
 CellID->136933787,ExpressionUUID->"baed68d8-3cbe-4da1-afae-42a2d3ad6eb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["E", "2"], ",", 
     SuperscriptBox["E", "3"]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.87468918824366*^9}, {3.8746892202106695`*^9, 
  3.874689285024309*^9}},
 CellLabel->"In[55]:=",
 CellID->359432926,ExpressionUUID->"b7a013c5-1794-4db7-8634-eb90347ed4d0"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[{E^2, E^3}], StandardForm],
  ImageSizeCache->{42.88476448059082, {0., 9.}}]], "Output",
 CellChangeTimes->{3.874689285442599*^9},
 CellLabel->"Out[55]=",
 CellID->944647500,ExpressionUUID->"20cf0c4d-94a8-4b96-86e0-2f99c0ef5d20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["E", "5"], ",", 
      SuperscriptBox["E", "7"], ",", 
      SuperscriptBox["E", "2"]}], "}"}], ",", "E"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.87468918824366*^9}, {3.8746892202106695`*^9, 
  3.8746893199374685`*^9}},
 CellLabel->"In[58]:=",
 CellID->23040358,ExpressionUUID->"df56369f-8183-4455-8408-aebd2ecf39c6"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[{E^5, E^7, E^2}, E], StandardForm],
  ImageSizeCache->{50.83839769001007, {1., 11.735742019191385`}}]], "Output",
 CellChangeTimes->{{3.8746893074875555`*^9, 3.8746893207573214`*^9}},
 CellLabel->"Out[58]=",
 CellID->491011006,ExpressionUUID->"e7f75417-74d5-41db-978a-5e8c3f260984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Clock", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["E", "5"], ",", 
      SuperscriptBox["E", "7"], ",", 
      SuperscriptBox["E", "2"]}], "}"}], ",", "E", ",", "3"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874689116820568*^9, 3.874689134753338*^9}, {
  3.8746891682972856`*^9, 3.87468918824366*^9}, {3.8746892202106695`*^9, 
  3.8746893484800315`*^9}},
 CellLabel->"In[59]:=",
 CellID->863393254,ExpressionUUID->"36b7f2bd-73d0-43e7-98e4-aec6e6998919"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Clock[{E^5, E^7, E^2}, E, 3], StandardForm],
  ImageSizeCache->{13.375966262817382`, {1., 11.735742019191385`}}]], "Output",
 CellChangeTimes->{3.874689348819569*^9},
 CellLabel->"Out[59]=",
 CellID->458076985,ExpressionUUID->"7e6d1ad5-f223-4290-ad9d-3b7e049f2538"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DateString", "[", "]"}], ",", 
    RowBox[{"Clock", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", "1"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746891400945745`*^9, 3.874689147492547*^9}},
 CellLabel->"In[46]:=",
 CellID->69540758,ExpressionUUID->"20d64dff-1667-41cc-a538-e9ac12034073"],

Cell[BoxData[
 DynamicBox[ToBoxes[{
    DateString[], 
    Clock[{1, 1}, 1]}, StandardForm],
  ImageSizeCache->{212.58397846221925`, {3., 9.}}]], "Output",
 CellChangeTimes->{3.874689147831873*^9},
 CellLabel->"Out[46]=",
 CellID->366648488,ExpressionUUID->"29329abc-f1a7-4e5c-98b6-4fabe50913ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8746893850054564`*^9, 3.874689386751891*^9}},
 CellLabel->"In[60]:=",
 CellID->205274268,ExpressionUUID->"fec8bb98-6eb8-419a-84c7-0b973623f0de"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 18:36:27\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "18", ",", "36", ",", 
           "27.0342067`9.184488545545646"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874689387487667*^9},
 CellLabel->"Out[60]=",
 CellID->133630056,ExpressionUUID->"83e31883-54aa-48ce-9a2c-704e8da5b018"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}],
              "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "paris", "template" -> 
       "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
       "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "City", "desc" -> "a city", "input" -> 
          "{\"C\", \"paris\"} -> {\"City\"}"}, {
         "name" -> "AdministrativeDivision", "desc" -> 
          "an administrative division", "input" -> 
          "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
         "name" -> "Surname", "desc" -> "a surname", "input" -> 
          "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
         "name" -> "GivenName", "desc" -> "a given name", "input" -> 
          "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
      "type" -> "SubCategory", "word" -> "paris", "template" -> 
       "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
        "pulldownlength" -> "13", "default" -> 
       "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
       "Values" -> {{
         "name" -> "{Paris, IleDeFrance, France}", "desc" -> "Paris (France)",
           "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"IleDeFrance\", \"France\"}}"}, {
         "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
          "Paris (Kentucky, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
          "Paris (Texas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
          "Paris (Tennessee, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Tennessee\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
          "Paris (Illinois, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
          "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
         "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
          "Paris (New York, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
          "Paris (Maine, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
          "Paris (Arkansas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
          "Paris (Pennsylvania, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Pennsylvania\
\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Kenosha, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Wisconsin\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
          "Paris (Missouri, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
         "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Grant, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
         "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
          "Paris Township (Michigan, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
          "Paris (Idaho, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.5087874`7.158081341069054, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.874689388552701*^9, 3.874689390273342*^9}},
 CellLabel->"In[61]:=",
 CellID->90321558,ExpressionUUID->"b1ed0fb6-3c41-4f45-b9fa-f34c61e34c3d"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 14 Oct 2022 00:36:32\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
        StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "14", ",", "0", ",", "36", ",", 
           "32.2112015`9.260581826484104"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8746893924142165`*^9},
 CellLabel->"Out[61]=",
 CellID->74176987,ExpressionUUID->"c37dd5a1-2dec-42ce-a9e0-99bc2566180a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "Paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "Paris", "template" -> 
        "Assuming \"Paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"Paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"Paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"Paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"Paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"Paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "Paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"Paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4444028`7.09932178008505, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", 
   RowBox[{"Now", "-", 
    TemplateBox[<|
     "query" -> "12.34hrs", "boxes" -> 
      TemplateBox[{"12.34", "\"h\"", "hours", "\"Hours\""}, "Quantity", 
        SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
      "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.3162504`6.951576076984773, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.874689411207354*^9}},
 CellLabel->"In[63]:=",
 CellID->257874352,ExpressionUUID->"c321d0f8-0da6-44d5-95a5-29133d91f4c0"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 12:16:31\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
        StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "12", ",", "16", ",", 
           "31.45278835296631`"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", "2.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746893997268267`*^9, 3.8746894156815367`*^9}},
 CellLabel->"Out[63]=",
 CellID->732189583,ExpressionUUID->"772bd001-128d-475c-ac8b-b69f1c62b7d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "Russia", "boxes" -> TemplateBox[{"\"Russia\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3386112`6.9812463123538055, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "List"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.874689437778237*^9}},
 CellLabel->"In[64]:=",
 CellID->314970901,ExpressionUUID->"f9698526-c722-44e9-a525-3ead6e82429a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 00:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["2", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "0", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "2.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 01:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["3", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "1", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "3.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 02:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["4", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "2", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 03:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["5", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "3", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "5.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 04:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["6", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "4", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "6.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 05:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["7", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "5", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "7.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 06:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["8", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "6", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "8.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 07:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["9", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "7", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "9.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 08:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["10", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "8", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "10.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 09:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["11", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "9", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "11.`"}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Fri 14 Oct 2022 10:37:18\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
          StyleBox["12", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "14", ",", "10", ",", "37", ",", 
             "18.0532445`9.009130204024716"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", "12.`"}], "]"}]},
    "DateObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8746894384193497`*^9},
 CellLabel->"Out[64]=",
 CellID->395232560,ExpressionUUID->"00b5dd2d-e21f-4bcb-b314-9b6a83b9243f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "brazil", "boxes" -> TemplateBox[{"\"Brazil\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"", "\"country\""}, 
       "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "brazil", "template" -> 
        "Assuming \"brazil\" is a country${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "{\"C\", \"brazil\"} -> {\"Country\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "Country", "desc" -> "a country", "input" -> 
           "{\"C\", \"brazil\"} -> {\"Country\"}"}, {
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"brazil\"} -> {\"City\"}"}, {
          "name" -> "Word", "desc" -> "a word", "input" -> 
           "{\"C\", \"brazil\"} -> {\"Word\"}"}}}}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3488684`6.994206626953409, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "List"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.874689442436932*^9}},
 CellLabel->"In[65]:=",
 CellID->152789353,ExpressionUUID->"ad0c1f2a-1e69-4557-93aa-59ca2c0e62a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 17:37:24\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "17", ",", "37", ",", 
             "24.8117572`9.147232446344667"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 18:37:24\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "37", ",", 
             "24.8117572`9.147232446344667"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "4.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 19:37:24\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "19", ",", "37", ",", 
             "24.8117572`9.147232446344667"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "3.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 20:37:24\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "2"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "20", ",", "37", ",", 
             "24.8117572`9.147232446344667"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "2.`"}]}], "]"}]},
    "DateObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8746894451421947`*^9},
 CellLabel->"Out[65]=",
 CellID->10771049,ExpressionUUID->"64c86ba4-bf63-430e-8b47-96c74881eaa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|
    "query" -> "usa", "boxes" -> TemplateBox[{"\"United States\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3556786`7.002602729411304, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "List"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.874689450936632*^9}},
 CellLabel->"In[66]:=",
 CellID->30205572,ExpressionUUID->"ea43eb5b-9765-4b54-8ffe-5ad51de1013a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 12:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "10"}], NumberMarks -> False, StripOnInput -> 
           False]}], FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "12", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "10.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 13:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "9"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "13", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "9.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 14:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "8"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "14", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "8.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 15:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "7"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "7.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 16:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "6"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "16", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "6.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 17:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "17", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 18:37:32\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "37", ",", 
             "32.5790078`9.265512755530239"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "4.`"}]}], "]"}]},
    "DateObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.874689452945059*^9},
 CellLabel->"Out[66]=",
 CellID->503172637,ExpressionUUID->"d7e51eec-ada9-4eac-9cf1-cc512e1b29a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "canada", "boxes" -> TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3526327`6.998867575909306, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "List"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.8746894566370983`*^9}},
 CellLabel->"In[67]:=",
 CellID->59502084,ExpressionUUID->"91b9f92d-c5f4-4f64-b88d-87ac2322ee13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 15:37:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "7"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "15", ",", "37", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "7.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 16:37:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "6"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "16", ",", "37", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "6.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 17:37:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "17", ",", "37", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 18:37:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "18", ",", "37", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "4.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 19:37:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}],
         FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "19", ",", "37", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "3.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{
     RowBox[{"\"Thu 13 Oct 2022 20:07:39\"", 
       StyleBox[
        RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
          StyleBox[
           RowBox[{"-", "2.5`"}], NumberMarks -> False, StripOnInput -> 
           False]}], FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2022", ",", "10", ",", "13", ",", "20", ",", "7", ",", 
             "39.1458586`9.345260705826393"}], "}"}], ",", "\"Instant\"", ",",
          "\"Gregorian\"", ",", 
         RowBox[{"-", "2.5`"}]}], "]"}]},
    "DateObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.87468945938221*^9},
 CellLabel->"Out[67]=",
 CellID->397711627,ExpressionUUID->"15a823a7-04d7-4f36-91de-7347b1ecee46"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "canada", "boxes" -> TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3526327`6.998867575909306, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "Center"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.8746894811024485`*^9}},
 CellLabel->"In[69]:=",
 CellID->891451803,ExpressionUUID->"2c6f9e1c-eb57-4a55-8864-45218d8f6998"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "canada", "boxes" -> TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3526327`6.998867575909306, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "Min"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746893930744896`*^9, 3.8746894881777534`*^9}},
 CellLabel->"In[70]:=",
 CellID->688471544,ExpressionUUID->"f586d792-75ef-48c6-b3a4-8402363a72c6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 15:38:08\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "7"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "15", ",", "38", ",", 
           "8.4942034`8.681697623622346"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "7.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.8746894680457926`*^9, 3.8746894888385043`*^9}},
 CellLabel->"Out[70]=",
 CellID->170854664,ExpressionUUID->"3742ec4e-69e2-44fc-8223-82ef1009490e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "canada", "boxes" -> TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3526327`6.998867575909306, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "Max"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746894891225543`*^9, 3.87468949286265*^9}},
 CellLabel->"In[71]:=",
 CellID->125749650,ExpressionUUID->"41c17c1b-eb9a-4631-9c7d-0403eb7c2af6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 20:08:13\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "2.5`"}], NumberMarks -> False, StripOnInput -> 
         False]}], FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "20", ",", "8", ",", 
           "13.1600038`8.871830968384165"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "2.5`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874689493426614*^9},
 CellLabel->"Out[71]=",
 CellID->389316778,ExpressionUUID->"cacfaca5-2c07-4c9e-87e0-ff8dd3c660ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTime", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "canada", "boxes" -> TemplateBox[{"\"Canada\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}], 
        "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"", "\"country\""}, 
       "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.3526327`6.998867575909306, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Now", ",", "Automatic"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746894891225543`*^9, 3.874689497307066*^9}},
 CellLabel->"In[72]:=",
 CellID->632846964,ExpressionUUID->"de6272b0-7a74-4f53-a6f4-af899ca07648"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 13 Oct 2022 18:38:17\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "4"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "10", ",", "13", ",", "18", ",", "38", ",", 
           "17.6261837`8.998733234816592"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "4.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.874689497860322*^9},
 CellLabel->"Out[72]=",
 CellID->304155051,ExpressionUUID->"e9f6cfe8-c5a6-4a92-9e7e-d18fa143d69e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8746895559640727`*^9, 3.874689558476718*^9}},
 CellLabel->"In[73]:=",
 CellID->449266007,ExpressionUUID->"749aba8e-a42e-4fec-91e6-2e6c466aaa6b"],

Cell[BoxData[
 TemplateBox[{"\"America/New_York\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"TimeZone\"", ",", "\"America/New_York\""}], "]"}], 
   "\"Entity[\\\"TimeZone\\\", \\\"America/New_York\\\"]\"", "\"time zone\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8746895593325377`*^9},
 CellLabel->"Out[73]=",
 CellID->28412752,ExpressionUUID->"6225dbda-3e23-48d1-bdad-f1adcdc3a4d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}],
              "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "paris", "template" -> 
       "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
       "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "City", "desc" -> "a city", "input" -> 
          "{\"C\", \"paris\"} -> {\"City\"}"}, {
         "name" -> "AdministrativeDivision", "desc" -> 
          "an administrative division", "input" -> 
          "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
         "name" -> "Surname", "desc" -> "a surname", "input" -> 
          "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
         "name" -> "GivenName", "desc" -> "a given name", "input" -> 
          "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
      "type" -> "SubCategory", "word" -> "paris", "template" -> 
       "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
        "pulldownlength" -> "13", "default" -> 
       "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
       "Values" -> {{
         "name" -> "{Paris, IleDeFrance, France}", "desc" -> "Paris (France)",
           "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"IleDeFrance\", \"France\"}}"}, {
         "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
          "Paris (Kentucky, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
          "Paris (Texas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
          "Paris (Tennessee, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Tennessee\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
          "Paris (Illinois, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
          "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
         "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
          "Paris (New York, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
          "Paris (Maine, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
          "Paris (Arkansas, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
          "Paris (Pennsylvania, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Pennsylvania\
\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Kenosha, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Wisconsin\", \
\"UnitedStates\"}}"}, {
         "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
          "Paris (Missouri, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
         "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
          "Paris (Grant, Wisconsin, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
         "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
          "Paris Township (Michigan, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
         "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
          "Paris (Idaho, USA)", "input" -> 
          "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.874689566289999*^9}},
 CellLabel->"In[74]:=",
 CellID->114189092,ExpressionUUID->"005c9149-932b-4f2c-baf0-c8c503781e15"],

Cell[BoxData[
 TemplateBox[{"\"Europe/Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"TimeZone\"", ",", "\"Europe/Paris\""}], "]"}], 
   "\"Entity[\\\"TimeZone\\\", \\\"Europe/Paris\\\"]\"", "\"time zone\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.874689570804851*^9},
 CellLabel->"Out[74]=",
 CellID->601402464,ExpressionUUID->"3c2446fd-326c-4267-b517-61ef9f65e054"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday"}], "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.8746895758065276`*^9}},
 CellLabel->"In[75]:=",
 CellID->26496228,ExpressionUUID->"5309d0ed-e3f5-4a2c-93de-22ccdb7ea498"],

Cell[BoxData[
 TemplateBox[{"\"Europe/Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"TimeZone\"", ",", "\"Europe/Paris\""}], "]"}], 
   "\"Entity[\\\"TimeZone\\\", \\\"Europe/Paris\\\"]\"", "\"time zone\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8746895764872417`*^9},
 CellLabel->"Out[75]=",
 CellID->21836723,ExpressionUUID->"a962589e-8f1c-4a47-8b1f-e65941ac3c22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday", ",", "\"\<Entity\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.874689593650689*^9}},
 CellLabel->"In[76]:=",
 CellID->417328026,ExpressionUUID->"99826318-d39b-438a-a3a9-a977808892b6"],

Cell[BoxData[
 TemplateBox[{"\"Europe/Paris\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"TimeZone\"", ",", "\"Europe/Paris\""}], "]"}], 
   "\"Entity[\\\"TimeZone\\\", \\\"Europe/Paris\\\"]\"", "\"time zone\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8746895943235507`*^9},
 CellLabel->"Out[76]=",
 CellID->133724384,ExpressionUUID->"4bc06d83-2b18-417c-b2b1-e872c8446135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday", ",", 
   "\"\<InternetName\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.874689599333314*^9}},
 CellLabel->"In[77]:=",
 CellID->405933373,ExpressionUUID->"36c90986-97ba-48d5-9524-eb48a0a41bc0"],

Cell[BoxData["\<\"Europe/Paris\"\>"], "Output",
 CellChangeTimes->{3.874689599961513*^9},
 CellLabel->"Out[77]=",
 CellID->109885855,ExpressionUUID->"9a2d75ae-6c9c-4ab0-b27c-e3746cdc671d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday", ",", 
   "\"\<NumericOffset\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.8746896052633004`*^9}},
 CellLabel->"In[78]:=",
 CellID->363633787,ExpressionUUID->"d2db58f3-f501-42f7-9379-a56c5a9101eb"],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{3.874689605697595*^9},
 CellLabel->"Out[78]=",
 CellID->493860401,ExpressionUUID->"72e7c255-1759-4f3a-af2f-ed80bd125a2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday", ",", "\"\<Offset\>\""}],
   "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.8746896091906815`*^9}},
 CellLabel->"In[79]:=",
 CellID->51962248,ExpressionUUID->"77883d99-c702-480c-a828-9810e41dcef5"],

Cell[BoxData[
 TemplateBox[{"2", "0", "0", 
   RowBox[{"\[ThinSpace]", "\"h\""}], 
   RowBox[{"\[ThinSpace]", "\"min\""}], 
   RowBox[{"\[ThinSpace]", "\"s\""}], "hours,minutes,seconds", 
   RowBox[{"{", 
     RowBox[{"\"Hours\"", ",", "\"Minutes\"", ",", "\"Seconds\""}], "}"}]},
  "QuantityMixedUnit3"]], "Output",
 CellChangeTimes->{3.874689609631895*^9},
 CellLabel->"Out[79]=",
 CellID->830664607,ExpressionUUID->"f7d9eb0a-ccc9-4f7c-8582-449d5d5cded6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalTimeZone", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "paris", "boxes" -> TemplateBox[{"\"Paris\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"City\"", ",", 
            RowBox[{"{", 
              
              RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", 
                "\"France\""}], "}"}]}], "]"}], 
        "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "paris", "template" -> 
        "Assuming \"paris\" is a city${separator}Use as ${desc} or ${desc} or \
${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
        "{\"C\", \"paris\"} -> {\"City\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "City", "desc" -> "a city", "input" -> 
           "{\"C\", \"paris\"} -> {\"City\"}"}, {
          "name" -> "AdministrativeDivision", "desc" -> 
           "an administrative division", "input" -> 
           "{\"C\", \"paris\"} -> {\"AdministrativeDivision\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"paris\"} -> {\"Surname\"}"}, {
          "name" -> "GivenName", "desc" -> "a given name", "input" -> 
           "{\"C\", \"paris\"} -> {\"GivenName\"}"}}}, {
       "type" -> "SubCategory", "word" -> "paris", "template" -> 
        "Assuming Paris (France)${separator}Use ${desc} or ${pulldown} \
instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> "more >>",
         "pulldownlength" -> "13", "default" -> 
        "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\", \
\"France\"}, \"dflt\"}", 
        "Values" -> {{
          "name" -> "{Paris, IleDeFrance, France}", "desc" -> 
           "Paris (France)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"IleDeFrance\
\", \"France\"}}"}, {
          "name" -> "{Paris, Kentucky, UnitedStates}", "desc" -> 
           "Paris (Kentucky, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Kentucky\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Texas, UnitedStates}", "desc" -> 
           "Paris (Texas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Texas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Tennessee, UnitedStates}", "desc" -> 
           "Paris (Tennessee, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Illinois, UnitedStates}", "desc" -> 
           "Paris (Illinois, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Illinois\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Ontario, Canada}", "desc" -> "Paris (Canada)", 
           "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Ontario\", \
\"Canada\"}}"}, {
          "name" -> "{Paris, NewYork, UnitedStates}", "desc" -> 
           "Paris (New York, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"NewYork\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Maine, UnitedStates}", "desc" -> 
           "Paris (Maine, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Maine\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Arkansas, UnitedStates}", "desc" -> 
           "Paris (Arkansas, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Arkansas\", \
\"UnitedStates\"}}"}, {
          "name" -> "{Paris, Pennsylvania, UnitedStates}", "desc" -> 
           "Paris (Pennsylvania, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Kenosha, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Missouri, UnitedStates}", "desc" -> 
           "Paris (Missouri, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Missouri\", \
\"UnitedStates\"}}"}, {
          "name" -> "{ParisGrant, Wisconsin, UnitedStates}", "desc" -> 
           "Paris (Grant, Wisconsin, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisGrant\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
          "name" -> "{ParisTownship, Michigan, UnitedStates}", "desc" -> 
           "Paris Township (Michigan, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"ParisTownship\", \
\"Michigan\", \"UnitedStates\"}}"}, {
          "name" -> "{Paris, Idaho, UnitedStates}", "desc" -> 
           "Paris (Idaho, USA)", "input" -> 
           "{\"DPClash\", \"CityE\", \"paris\"} -> {{\"Paris\", \"Idaho\", \
\"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.4024762`7.056285197419053, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "Yesterday", ",", 
   "\"\<ShortName\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.874689561543804*^9, 3.874689616518118*^9}},
 CellLabel->"In[80]:=",
 CellID->212115420,ExpressionUUID->"3fae3b84-08ed-4274-b958-83142679aa4a"],

Cell[BoxData["\<\"CEST\"\>"], "Output",
 CellChangeTimes->{3.874689617527987*^9},
 CellLabel->"Out[80]=",
 CellID->24618772,ExpressionUUID->"a2bbcf3b-297c-4f6f-a1ab-db8550823e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", "\"\<Year\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8746896641073666`*^9, 3.8746896670824537`*^9}},
 CellLabel->"In[81]:=",
 CellID->112061228,ExpressionUUID->"d087ca19-7178-40d2-a7c1-fc286e0dfe48"],

Cell[BoxData["2022"], "Output",
 CellChangeTimes->{3.8746896673598623`*^9},
 CellLabel->"Out[81]=",
 CellID->97231974,ExpressionUUID->"6d31db38-e284-438e-aaa0-48d97a7a8e64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", "\"\<Month\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8746896641073666`*^9, 3.8746896709162426`*^9}},
 CellLabel->"In[82]:=",
 CellID->182167408,ExpressionUUID->"867ad015-de6a-4f03-9ef6-ac3314b32e8a"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.874689671234251*^9},
 CellLabel->"Out[82]=",
 CellID->83559096,ExpressionUUID->"04908dd1-f744-4ae6-a6bb-338b08fcede1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", "\"\<YearRomanNumeral\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8746896641073666`*^9, 3.8746896771462717`*^9}},
 CellLabel->"In[83]:=",
 CellID->1451135,ExpressionUUID->"59e787c0-4f2f-44cf-884b-56a3b4e02fb8"],

Cell[BoxData["\<\"MMXXII\"\>"], "Output",
 CellChangeTimes->{3.874689677432292*^9},
 CellLabel->"Out[83]=",
 CellID->144354711,ExpressionUUID->"de9d5351-6bb9-4fce-acfa-21dea543df46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", "\"\<Granularity\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8746896641073666`*^9, 3.8746896945368347`*^9}},
 CellLabel->"In[84]:=",
 CellID->5597045,ExpressionUUID->"a07c657c-3af9-4c5a-b726-87c9198f0642"],

Cell[BoxData["\<\"Instant\"\>"], "Output",
 CellChangeTimes->{3.8746896948454704`*^9},
 CellLabel->"Out[84]=",
 CellID->379174966,ExpressionUUID->"98bca6f0-0cf7-4e51-a6eb-6eaf574e91f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", "\"\<AstrologicalSign\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8746896641073666`*^9, 3.874689701384562*^9}},
 CellLabel->"In[85]:=",
 CellID->706683223,ExpressionUUID->"574b6786-cb80-4d51-a554-96c16ae37f99"],

Cell[BoxData["\<\"Libra\"\>"], "Output",
 CellChangeTimes->{3.8746897016631317`*^9},
 CellLabel->"Out[85]=",
 CellID->29494336,ExpressionUUID->"c0c64592-13cd-4ecf-bb64-6ff310234a1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Year\>\"", ",", "\"\<YearFraction\>\"", ",", 
    "\"\<MonthFraction\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.874689731359982*^9}},
 CellLabel->"In[86]:=",
 CellID->448041210,ExpressionUUID->"60eba22c-ee5d-43ac-83be-b8b0901094d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2022", ",", "0.7829569924430206`", ",", "0.4122355561839531`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.874689731718693*^9},
 CellLabel->"Out[86]=",
 CellID->81407850,ExpressionUUID->"177b3a8e-d6f1-464b-9fce-83ddd7e69fc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", "\"\<YearUnsigned\>\"", 
    ",", "\"\<YearExact\>\"", ",", "\"\<YearFraction\>\"", ",", 
    "\"\<YearRomanNumeral\>\"", ",", "\"\<ADBC\>\"", ",", "\"\<Month\>\"", 
    ",", "\"\<MonthShort\>\"", ",", "\"\<MonthExact\>\"", ",", 
    "\"\<MonthFraction\>\"", ",", "\"\<MonthName\>\"", ",", 
    "\"\<MonthNameShort\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
    "\"\<MonthNameInitial\>\"", ",", "\"\<MonthRomanNumeral\>\"", ",", 
    "\"\<MonthRomanNumeralLowerCase\>\"", ",", "\"\<Day\>\"", ",", 
    "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", ",", "\"\<DayFraction\>\"", 
    ",", "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
    "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746898775527115`*^9, 3.874689997998684*^9}},
 CellLabel->"In[100]:=",
 CellID->474160295,ExpressionUUID->"ea63bfd0-5729-4c02-81c4-7c2c046800b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2022", ",", "22", ",", "2022", ",", "2022.782965446338`", ",", 
   "0.7829654463381278`", ",", "\<\"MMXXII\"\>", ",", "\<\"AD\"\>", ",", "10",
    ",", "10", ",", "10.412335093981183`", ",", "0.41233509398118284`", 
   ",", "\<\"October\"\>", ",", "\<\"Oct\"\>", ",", "\<\"O\"\>", 
   ",", "\<\"O\"\>", ",", "\<\"X\"\>", ",", "\<\"x\"\>", ",", "13", ",", "13",
    ",", "13.782387913416667`", ",", "0.7823879134166668`", ",", "Thursday", 
   ",", "4", ",", "4.782387913416667`", ",", "0.7823879134166668`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.874689934553692*^9, 3.8746899983247232`*^9}},
 CellLabel->"Out[100]=",
 CellID->661458330,ExpressionUUID->"e9780aee-6a6b-461f-93f9-b2836f20b46f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"Yesterday", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<YearFraction\>\"", ",", 
     "\"\<MonthFraction\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.874689748441805*^9}},
 CellLabel->"In[87]:=",
 CellID->678421109,ExpressionUUID->"9eea9510-bc7c-49ee-832d-80505aa16dbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2022", ",", "0.7780821917808219`", ",", "0.3548387096774194`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8746897499256277`*^9},
 CellLabel->"Out[87]=",
 CellID->148221858,ExpressionUUID->"bd6ae06d-ad56-4414-96c7-3fac3f55e6c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"Yesterday", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<YearFraction\>\"", ",", 
     "\"\<MonthFraction\>\""}], "}"}], ",", "Quantity"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.874689761618058*^9}},
 CellLabel->"In[88]:=",
 CellID->348040231,ExpressionUUID->"cd5f49bb-240f-4597-8edf-07bdc0e25d72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"2022", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"0.7780821917808219`", "\"yr\"", "years", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"0.3548387096774194`", "\"mo\"", "months", "\"Months\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8746897618940086`*^9},
 CellLabel->"Out[88]=",
 CellID->62786989,ExpressionUUID->"ce137662-aa22-4adc-aa95-19cf0bb8a5d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"Yesterday", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<WeekBeginningSunday\>\"", ",", 
     "\"\<MonthFraction\>\""}], "}"}], ",", "Integer"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.874689806827094*^9}},
 CellLabel->"In[92]:=",
 CellID->564230119,ExpressionUUID->"cb1b73b9-da9e-4c8b-90b2-6b4f5941cf8c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2022", ",", "41", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8746897785694704`*^9, 3.8746898071539183`*^9}},
 CellLabel->"Out[92]=",
 CellID->203874879,ExpressionUUID->"e42fc435-e6a7-4064-9721-195a52874372"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"Yesterday", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<Millisecond\>\"", ",", 
     "\"\<MonthFraction\>\""}], "}"}], ",", "Real"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.8746897834705334`*^9}, {
  3.8746898152053657`*^9, 3.874689846609296*^9}},
 CellLabel->"In[95]:=",
 CellID->28566225,ExpressionUUID->"9817e52a-fb53-489f-8dc0-8f4dbf72a84b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2022.`", ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   "0.3548387096774194`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.874689783782272*^9, {3.8746898161072264`*^9, 3.8746898469540043`*^9}},
 CellLabel->"Out[95]=",
 CellID->122361444,ExpressionUUID->"18bb7526-82d2-4f05-b640-8c84b8a8d544"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateValue", "[", 
  RowBox[{"Yesterday", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<YearFraction\>\"", ",", 
     "\"\<MonthFraction\>\""}], "}"}], ",", "DateObject"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746897161699934`*^9, 3.874689788327331*^9}},
 CellLabel->"In[91]:=",
 CellID->193594321,ExpressionUUID->"11442306-4abc-4f36-ad97-12c1869d2b5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{
       StyleBox["\"Year: \"", "DateObjectLabel"], "\"2022\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", "2022", "}"}], ",", "\"Year\""}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   RowBox[{"DateValue", "[", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 12 Oct 2022\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], ",", "\<\"YearFraction\"\>", ",", "DateObject"}], 
    "]"}], ",", 
   RowBox[{"DateValue", "[", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 12 Oct 2022\""}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"2022", ",", "10", ",", "12"}], "}"}], ",", "\"Day\""}], 
         "]"}]},
      "DateObject",
      Editable->False], ",", "\<\"MonthFraction\"\>", ",", "DateObject"}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.874689788643894*^9},
 CellLabel->"Out[91]=",
 CellID->592372256,ExpressionUUID->"e86c8dc1-4eed-47cc-af94-349ad4bd3f9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Arity", "[", "GraphData", "]"}]], "Input",
 CellChangeTimes->{{3.874690001472269*^9, 3.87469000436789*^9}},
 CellLabel->"In[101]:=",
 CellID->21058937,ExpressionUUID->"159ee7ce-ea0c-4995-ada5-53d412a99767"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8746900046825705`*^9},
 CellLabel->"Out[101]=",
 CellID->397372947,ExpressionUUID->"06cff7f9-bcbe-4a1e-8d53-10147c447966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", "\"\<YearUnsigned\>\"", 
     ",", "\"\<YearExact\>\"", ",", "\"\<YearFraction\>\"", ",", 
     "\"\<YearRomanNumeral\>\"", ",", "\"\<ADBC\>\"", ",", "\"\<Month\>\"", 
     ",", "\"\<MonthShort\>\"", ",", "\"\<MonthExact\>\"", ",", 
     "\"\<MonthFraction\>\"", ",", "\"\<MonthName\>\"", ",", 
     "\"\<MonthNameShort\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
     "\"\<MonthNameInitial\>\"", ",", "\"\<MonthRomanNumeral\>\"", ",", 
     "\"\<MonthRomanNumeralLowerCase\>\"", ",", "\"\<Day\>\"", ",", 
     "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", ",", "\"\<DayFraction\>\"", 
     ",", "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
     "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\"", ",", 
     "\"\<DayNameShort\>\"", ",", "\"\<DayNameInitial\>\"", ",", 
     "\"\<DayNameInstanceInMonth\>\"", ",", "\"\<Hour\>\"", ",", 
     "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", "\"\<HourShort\>\"", ",", 
     "\"\<Hour12Short\>\"", ",", "\"\<Hour24Short\>\"", ",", 
     "\"\<HourExact\>\"", ",", "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", 
     ",", "\"\<AMPMLowerCase\>\"", ",", "\"\<Minute\>\"", ",", 
     "\"\<MinuteShort\>\"", ",", "\"\<MinuteExact\>\"", ",", 
     "\"\<MinuteFraction\>\"", ",", "\"\<Second\>\"", ",", 
     "\"\<SecondShort\>\"", ",", "\"\<SecondExact\>\"", ",", 
     "\"\<SecondFraction\>\"", ",", "\"\<Millisecond\>\"", ",", 
     "\"\<MillisecondShort\>\"", ",", "\"\<MillisecondExact\>\"", ",", 
     "\"\<MillisecondFraction\>\"", ",", "\"\<Millennium\>\"", ",", 
     "\"\<MillenniumBeginning01\>\"", ",", "\"\<Century\>\"", ",", 
     "\"\<CenturyBeginning01\>\"", ",", "\"\<Decade\>\"", ",", 
     "\"\<Quarter\>\"", ",", "\"\<QuarterName\>\"", ",", 
     "\"\<QuarterNameShort\>\"", ",", "\"\<Week\>\"", ",", 
     "\"\<WeekShort\>\"", ",", "\"\<WeekExact\>\"", ",", 
     "\"\<WeekFraction\>\"", ",", "\"\<ISOWeekYear\>\"", ",", 
     "\"\<ISOYearDay\>\"", ",", "\"\<ISOYearDayShort\>\"", ",", 
     "\"\<ISOYearDayExact\>\"", ",", "\"\<ISOYearDayFraction\>\"", ",", 
     "\"\<TimeZone\>\"", ",", "\"\<TimeZoneName\>\"", ",", 
     "\"\<TimeZoneNameShort\>\"", ",", "\"\<TimeZoneID\>\"", ",", 
     "\"\<TimeZoneOffset\>\"", ",", "\"\<TimeZoneEntity\>\"", ",", 
     "\"\<DayOfYear\>\"", ",", "\"\<WeekBeginningSunday\>\"", ",", 
     "\"\<JulianDate\>\"", ",", "\"\<CalendarType\>\"", ",", 
     "\"\<Granularity\>\"", ",", "\"\<AstrologicalSign\>\""}], "}"}], "->", 
   RowBox[{"DateValue", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", "\"\<YearUnsigned\>\"", 
      ",", "\"\<YearExact\>\"", ",", "\"\<YearFraction\>\"", ",", 
      "\"\<YearRomanNumeral\>\"", ",", "\"\<ADBC\>\"", ",", "\"\<Month\>\"", 
      ",", "\"\<MonthShort\>\"", ",", "\"\<MonthExact\>\"", ",", 
      "\"\<MonthFraction\>\"", ",", "\"\<MonthName\>\"", ",", 
      "\"\<MonthNameShort\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
      "\"\<MonthNameInitial\>\"", ",", "\"\<MonthRomanNumeral\>\"", ",", 
      "\"\<MonthRomanNumeralLowerCase\>\"", ",", "\"\<Day\>\"", ",", 
      "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", ",", "\"\<DayFraction\>\"",
       ",", "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
      "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\"", ",", 
      "\"\<DayNameShort\>\"", ",", "\"\<DayNameInitial\>\"", ",", 
      "\"\<DayNameInstanceInMonth\>\"", ",", "\"\<Hour\>\"", ",", 
      "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", "\"\<HourShort\>\"", ",", 
      "\"\<Hour12Short\>\"", ",", "\"\<Hour24Short\>\"", ",", 
      "\"\<HourExact\>\"", ",", "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", 
      ",", "\"\<AMPMLowerCase\>\"", ",", "\"\<Minute\>\"", ",", 
      "\"\<MinuteShort\>\"", ",", "\"\<MinuteExact\>\"", ",", 
      "\"\<MinuteFraction\>\"", ",", "\"\<Second\>\"", ",", 
      "\"\<SecondShort\>\"", ",", "\"\<SecondExact\>\"", ",", 
      "\"\<SecondFraction\>\"", ",", "\"\<Millisecond\>\"", ",", 
      "\"\<MillisecondShort\>\"", ",", "\"\<MillisecondExact\>\"", ",", 
      "\"\<MillisecondFraction\>\"", ",", "\"\<Millennium\>\"", ",", 
      "\"\<MillenniumBeginning01\>\"", ",", "\"\<Century\>\"", ",", 
      "\"\<CenturyBeginning01\>\"", ",", "\"\<Decade\>\"", ",", 
      "\"\<Quarter\>\"", ",", "\"\<QuarterName\>\"", ",", 
      "\"\<QuarterNameShort\>\"", ",", "\"\<Week\>\"", ",", 
      "\"\<WeekShort\>\"", ",", "\"\<WeekExact\>\"", ",", 
      "\"\<WeekFraction\>\"", ",", "\"\<ISOWeekYear\>\"", ",", 
      "\"\<ISOYearDay\>\"", ",", "\"\<ISOYearDayShort\>\"", ",", 
      "\"\<ISOYearDayExact\>\"", ",", "\"\<ISOYearDayFraction\>\"", ",", 
      "\"\<TimeZone\>\"", ",", "\"\<TimeZoneName\>\"", ",", 
      "\"\<TimeZoneNameShort\>\"", ",", "\"\<TimeZoneID\>\"", ",", 
      "\"\<TimeZoneOffset\>\"", ",", "\"\<TimeZoneEntity\>\"", ",", 
      "\"\<DayOfYear\>\"", ",", "\"\<WeekBeginningSunday\>\"", ",", 
      "\"\<JulianDate\>\"", ",", "\"\<CalendarType\>\"", ",", 
      "\"\<Granularity\>\"", ",", "\"\<AstrologicalSign\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874700999302934*^9, 3.8747014563746367`*^9}},
 CellLabel->"In[18]:=",
 CellID->644420079,ExpressionUUID->"348ebd45-1524-459a-a32e-dfd8cf8f996b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Year\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"YearUnsigned\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearExact\"\>", "\[Rule]", "2022.7833287932979`"}], ",", 
   RowBox[{"\<\"YearFraction\"\>", "\[Rule]", "0.7833287932977676`"}], ",", 
   RowBox[{"\<\"YearRomanNumeral\"\>", "\[Rule]", "\<\"MMXXII\"\>"}], ",", 
   RowBox[{"\<\"ADBC\"\>", "\[Rule]", "\<\"AD\"\>"}], ",", 
   RowBox[{"\<\"Month\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthShort\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthExact\"\>", "\[Rule]", "10.4166132114092`"}], ",", 
   RowBox[{"\<\"MonthFraction\"\>", "\[Rule]", "0.41661321140919955`"}], ",", 
   RowBox[{"\<\"MonthName\"\>", "\[Rule]", "\<\"October\"\>"}], ",", 
   RowBox[{"\<\"MonthNameShort\"\>", "\[Rule]", "\<\"Oct\"\>"}], ",", 
   RowBox[{"\<\"MonthNameInitial\"\>", "\[Rule]", "\<\"O\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeral\"\>", "\[Rule]", "\<\"X\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeralLowerCase\"\>", "\[Rule]", "\<\"x\"\>"}], 
   ",", 
   RowBox[{"\<\"Day\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayShort\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayExact\"\>", "\[Rule]", "13.915009553685184`"}], ",", 
   RowBox[{"\<\"DayFraction\"\>", "\[Rule]", "0.9150095536851852`"}], ",", 
   RowBox[{"\<\"DayName\"\>", "\[Rule]", "Thursday"}], ",", 
   RowBox[{"\<\"ISOWeekDay\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"ISOWeekDayExact\"\>", "\[Rule]", "4.915009553685185`"}], ",", 
   RowBox[{"\<\"ISOWeekDayFraction\"\>", "\[Rule]", "0.9150095536851852`"}], 
   ",", 
   RowBox[{"\<\"DayNameShort\"\>", "\[Rule]", "\<\"Thu\"\>"}], ",", 
   RowBox[{"\<\"DayNameInitial\"\>", "\[Rule]", "\<\"T\"\>"}], ",", 
   RowBox[{"\<\"DayNameInstanceInMonth\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Hour\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"Hour12\"\>", "\[Rule]", "9"}], ",", 
   RowBox[{"\<\"Hour24\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"HourShort\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"Hour12Short\"\>", "\[Rule]", "9"}], ",", 
   RowBox[{"\<\"Hour24Short\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"HourExact\"\>", "\[Rule]", "21.960229288444445`"}], ",", 
   RowBox[{"\<\"HourFraction\"\>", "\[Rule]", "0.9602292884444444`"}], ",", 
   RowBox[{"\<\"AMPM\"\>", "\[Rule]", "\<\"PM\"\>"}], ",", 
   RowBox[{"\<\"AMPMLowerCase\"\>", "\[Rule]", "\<\"pm\"\>"}], ",", 
   RowBox[{"\<\"Minute\"\>", "\[Rule]", "57"}], ",", 
   RowBox[{"\<\"MinuteShort\"\>", "\[Rule]", "57"}], ",", 
   RowBox[{"\<\"MinuteExact\"\>", "\[Rule]", "57.61375730666666`"}], ",", 
   RowBox[{"\<\"MinuteFraction\"\>", "\[Rule]", "0.6137573066666667`"}], ",", 
   RowBox[{"\<\"Second\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"SecondShort\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"SecondExact\"\>", "\[Rule]", "36.8254384`9.318722816709423"}],
    ",", 
   RowBox[{"\<\"SecondFraction\"\>", "\[Rule]", 
    "0.8254384`7.669259559678188"}], ",", 
   RowBox[{"\<\"Millisecond\"\>", "\[Rule]", "825"}], ",", 
   RowBox[{"\<\"MillisecondShort\"\>", "\[Rule]", "825"}], ",", 
   RowBox[{"\<\"MillisecondExact\"\>", "\[Rule]", 
    "825.4384000000000000201`7.669259559678188"}], ",", 
   RowBox[{"\<\"MillisecondFraction\"\>", "\[Rule]", 
    "0.4384000000000000201`4.394445436445202"}], ",", 
   RowBox[{"\<\"Millennium\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"MillenniumBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Century\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"CenturyBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Decade\"\>", "\[Rule]", "2020"}], ",", 
   RowBox[{"\<\"Quarter\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"QuarterName\"\>", "\[Rule]", "\<\"Quarter 4\"\>"}], ",", 
   RowBox[{"\<\"QuarterNameShort\"\>", "\[Rule]", "\<\"Q4\"\>"}], ",", 
   RowBox[{"\<\"Week\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekShort\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekExact\"\>", "\[Rule]", "41.55928707909805`"}], ",", 
   RowBox[{"\<\"WeekFraction\"\>", "\[Rule]", "0.5592870790980481`"}], ",", 
   RowBox[{"\<\"ISOWeekYear\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"ISOYearDay\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayShort\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayExact\"\>", "\[Rule]", "286.9150095536852`"}], ",", 
   RowBox[{"\<\"ISOYearDayFraction\"\>", "\[Rule]", "0.9150095536851852`"}], 
   ",", 
   RowBox[{"\<\"TimeZone\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneName\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneNameShort\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneID\"\>", "\[Rule]", "\<\"GMT-4\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneOffset\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneEntity\"\>", "\[Rule]", 
    TemplateBox[{"\"GMT-4\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"TimeZone\"", ",", "\"GMT-4\""}], "]"}], 
      "\"Entity[\\\"TimeZone\\\", \\\"GMT-4\\\"]\"", "\"time zone\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"DayOfYear\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"WeekBeginningSunday\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"JulianDate\"\>", "\[Rule]", "2.4598665816762205`*^6"}], ",", 
   RowBox[{"\<\"CalendarType\"\>", "\[Rule]", "\<\"Gregorian\"\>"}], ",", 
   RowBox[{"\<\"Granularity\"\>", "\[Rule]", "\<\"Instant\"\>"}], ",", 
   RowBox[{"\<\"AstrologicalSign\"\>", "\[Rule]", "\<\"Libra\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.874701008411146*^9, {3.874701050001209*^9, 3.874701095273524*^9}, 
   3.8747011349190826`*^9, 3.874701177088546*^9, {3.874701278722273*^9, 
   3.874701322146824*^9}, 3.8747013675111504`*^9, {3.8747014132746367`*^9, 
   3.8747014590138903`*^9}},
 CellLabel->"Out[18]=",
 CellID->132509580,ExpressionUUID->"9f0df958-682f-4667-89cb-e0a4cc0dd339"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDateValues", "[", "]"}], ":=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", "\"\<YearUnsigned\>\"", 
      ",", "\"\<YearExact\>\"", ",", "\"\<YearFraction\>\"", ",", 
      "\"\<YearRomanNumeral\>\"", ",", "\"\<ADBC\>\"", ",", "\"\<Month\>\"", 
      ",", "\"\<MonthShort\>\"", ",", "\"\<MonthExact\>\"", ",", 
      "\"\<MonthFraction\>\"", ",", "\"\<MonthName\>\"", ",", 
      "\"\<MonthNameShort\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
      "\"\<MonthNameInitial\>\"", ",", "\"\<MonthRomanNumeral\>\"", ",", 
      "\"\<MonthRomanNumeralLowerCase\>\"", ",", "\"\<Day\>\"", ",", 
      "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", ",", "\"\<DayFraction\>\"",
       ",", "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
      "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\"", ",", 
      "\"\<DayNameShort\>\"", ",", "\"\<DayNameInitial\>\"", ",", 
      "\"\<DayNameInstanceInMonth\>\"", ",", "\"\<Hour\>\"", ",", 
      "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", "\"\<HourShort\>\"", ",", 
      "\"\<Hour12Short\>\"", ",", "\"\<Hour24Short\>\"", ",", 
      "\"\<HourExact\>\"", ",", "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", 
      ",", "\"\<AMPMLowerCase\>\"", ",", "\"\<Minute\>\"", ",", 
      "\"\<MinuteShort\>\"", ",", "\"\<MinuteExact\>\"", ",", 
      "\"\<MinuteFraction\>\"", ",", "\"\<Second\>\"", ",", 
      "\"\<SecondShort\>\"", ",", "\"\<SecondExact\>\"", ",", 
      "\"\<SecondFraction\>\"", ",", "\"\<Millisecond\>\"", ",", 
      "\"\<MillisecondShort\>\"", ",", "\"\<MillisecondExact\>\"", ",", 
      "\"\<MillisecondFraction\>\"", ",", "\"\<Millennium\>\"", ",", 
      "\"\<MillenniumBeginning01\>\"", ",", "\"\<Century\>\"", ",", 
      "\"\<CenturyBeginning01\>\"", ",", "\"\<Decade\>\"", ",", 
      "\"\<Quarter\>\"", ",", "\"\<QuarterName\>\"", ",", 
      "\"\<QuarterNameShort\>\"", ",", "\"\<Week\>\"", ",", 
      "\"\<WeekShort\>\"", ",", "\"\<WeekExact\>\"", ",", 
      "\"\<WeekFraction\>\"", ",", "\"\<ISOWeekYear\>\"", ",", 
      "\"\<ISOYearDay\>\"", ",", "\"\<ISOYearDayShort\>\"", ",", 
      "\"\<ISOYearDayExact\>\"", ",", "\"\<ISOYearDayFraction\>\"", ",", 
      "\"\<TimeZone\>\"", ",", "\"\<TimeZoneName\>\"", ",", 
      "\"\<TimeZoneNameShort\>\"", ",", "\"\<TimeZoneID\>\"", ",", 
      "\"\<TimeZoneOffset\>\"", ",", "\"\<TimeZoneEntity\>\"", ",", 
      "\"\<DayOfYear\>\"", ",", "\"\<WeekBeginningSunday\>\"", ",", 
      "\"\<JulianDate\>\"", ",", "\"\<CalendarType\>\"", ",", 
      "\"\<Granularity\>\"", ",", "\"\<AstrologicalSign\>\""}], "}"}], "->", 
    RowBox[{"DateValue", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", "\"\<YearUnsigned\>\"", 
       ",", "\"\<YearExact\>\"", ",", "\"\<YearFraction\>\"", ",", 
       "\"\<YearRomanNumeral\>\"", ",", "\"\<ADBC\>\"", ",", "\"\<Month\>\"", 
       ",", "\"\<MonthShort\>\"", ",", "\"\<MonthExact\>\"", ",", 
       "\"\<MonthFraction\>\"", ",", "\"\<MonthName\>\"", ",", 
       "\"\<MonthNameShort\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
       "\"\<MonthNameInitial\>\"", ",", "\"\<MonthRomanNumeral\>\"", ",", 
       "\"\<MonthRomanNumeralLowerCase\>\"", ",", "\"\<Day\>\"", ",", 
       "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", ",", 
       "\"\<DayFraction\>\"", ",", "\"\<DayName\>\"", ",", 
       "\"\<ISOWeekDay\>\"", ",", "\"\<ISOWeekDayExact\>\"", ",", 
       "\"\<ISOWeekDayFraction\>\"", ",", "\"\<DayNameShort\>\"", ",", 
       "\"\<DayNameInitial\>\"", ",", "\"\<DayNameInstanceInMonth\>\"", ",", 
       "\"\<Hour\>\"", ",", "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", 
       "\"\<HourShort\>\"", ",", "\"\<Hour12Short\>\"", ",", 
       "\"\<Hour24Short\>\"", ",", "\"\<HourExact\>\"", ",", 
       "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", ",", 
       "\"\<AMPMLowerCase\>\"", ",", "\"\<Minute\>\"", ",", 
       "\"\<MinuteShort\>\"", ",", "\"\<MinuteExact\>\"", ",", 
       "\"\<MinuteFraction\>\"", ",", "\"\<Second\>\"", ",", 
       "\"\<SecondShort\>\"", ",", "\"\<SecondExact\>\"", ",", 
       "\"\<SecondFraction\>\"", ",", "\"\<Millisecond\>\"", ",", 
       "\"\<MillisecondShort\>\"", ",", "\"\<MillisecondExact\>\"", ",", 
       "\"\<MillisecondFraction\>\"", ",", "\"\<Millennium\>\"", ",", 
       "\"\<MillenniumBeginning01\>\"", ",", "\"\<Century\>\"", ",", 
       "\"\<CenturyBeginning01\>\"", ",", "\"\<Decade\>\"", ",", 
       "\"\<Quarter\>\"", ",", "\"\<QuarterName\>\"", ",", 
       "\"\<QuarterNameShort\>\"", ",", "\"\<Week\>\"", ",", 
       "\"\<WeekShort\>\"", ",", "\"\<WeekExact\>\"", ",", 
       "\"\<WeekFraction\>\"", ",", "\"\<ISOWeekYear\>\"", ",", 
       "\"\<ISOYearDay\>\"", ",", "\"\<ISOYearDayShort\>\"", ",", 
       "\"\<ISOYearDayExact\>\"", ",", "\"\<ISOYearDayFraction\>\"", ",", 
       "\"\<TimeZone\>\"", ",", "\"\<TimeZoneName\>\"", ",", 
       "\"\<TimeZoneNameShort\>\"", ",", "\"\<TimeZoneID\>\"", ",", 
       "\"\<TimeZoneOffset\>\"", ",", "\"\<TimeZoneEntity\>\"", ",", 
       "\"\<DayOfYear\>\"", ",", "\"\<WeekBeginningSunday\>\"", ",", 
       "\"\<JulianDate\>\"", ",", "\"\<CalendarType\>\"", ",", 
       "\"\<Granularity\>\"", ",", "\"\<AstrologicalSign\>\""}], "}"}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8747017205578065`*^9, 3.874701731049904*^9}},
 CellLabel->"In[19]:=",
 CellID->670798337,ExpressionUUID->"ca04654a-fab4-4a0a-a35e-bd01ffd3bba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllDateValues", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8747017411245437`*^9, 3.874701742685402*^9}},
 CellLabel->"In[20]:=",
 CellID->110837770,ExpressionUUID->"e24c0953-d999-4885-9637-f6269f7a9554"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Year\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"YearUnsigned\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearExact\"\>", "\[Rule]", "2022.783337866263`"}], ",", 
   RowBox[{"\<\"YearFraction\"\>", "\[Rule]", "0.7833378662630011`"}], ",", 
   RowBox[{"\<\"YearRomanNumeral\"\>", "\[Rule]", "\<\"MMXXII\"\>"}], ",", 
   RowBox[{"\<\"ADBC\"\>", "\[Rule]", "\<\"AD\"\>"}], ",", 
   RowBox[{"\<\"Month\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthShort\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthExact\"\>", "\[Rule]", "10.416720038257916`"}], ",", 
   RowBox[{"\<\"MonthFraction\"\>", "\[Rule]", "0.4167200382579152`"}], ",", 
   RowBox[{"\<\"MonthName\"\>", "\[Rule]", "\<\"October\"\>"}], ",", 
   RowBox[{"\<\"MonthNameShort\"\>", "\[Rule]", "\<\"Oct\"\>"}], ",", 
   RowBox[{"\<\"MonthNameInitial\"\>", "\[Rule]", "\<\"O\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeral\"\>", "\[Rule]", "\<\"X\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeralLowerCase\"\>", "\[Rule]", "\<\"x\"\>"}], 
   ",", 
   RowBox[{"\<\"Day\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayShort\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayExact\"\>", "\[Rule]", "13.91832118599537`"}], ",", 
   RowBox[{"\<\"DayFraction\"\>", "\[Rule]", "0.9183211859953703`"}], ",", 
   RowBox[{"\<\"DayName\"\>", "\[Rule]", "Thursday"}], ",", 
   RowBox[{"\<\"ISOWeekDay\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"ISOWeekDayExact\"\>", "\[Rule]", "4.91832118599537`"}], ",", 
   RowBox[{"\<\"ISOWeekDayFraction\"\>", "\[Rule]", "0.9183211859953703`"}], 
   ",", 
   RowBox[{"\<\"DayNameShort\"\>", "\[Rule]", "\<\"Thu\"\>"}], ",", 
   RowBox[{"\<\"DayNameInitial\"\>", "\[Rule]", "\<\"T\"\>"}], ",", 
   RowBox[{"\<\"DayNameInstanceInMonth\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Hour\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"Hour12\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"Hour24\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"HourShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"Hour12Short\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"Hour24Short\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"HourExact\"\>", "\[Rule]", "22.03970846388889`"}], ",", 
   RowBox[{"\<\"HourFraction\"\>", "\[Rule]", "0.039708463888888886`"}], ",", 
   RowBox[{"\<\"AMPM\"\>", "\[Rule]", "\<\"PM\"\>"}], ",", 
   RowBox[{"\<\"AMPMLowerCase\"\>", "\[Rule]", "\<\"pm\"\>"}], ",", 
   RowBox[{"\<\"Minute\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"MinuteShort\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"MinuteExact\"\>", "\[Rule]", "2.3825078333333334`"}], ",", 
   RowBox[{"\<\"MinuteFraction\"\>", "\[Rule]", "0.3825078333333333`"}], ",", 
   RowBox[{"\<\"Second\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"SecondShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"SecondExact\"\>", "\[Rule]", "22.95047`9.113366512984719"}], 
   ",", 
   RowBox[{"\<\"SecondFraction\"\>", "\[Rule]", "0.95047`7.730513342791243"}],
    ",", 
   RowBox[{"\<\"Millisecond\"\>", "\[Rule]", "950"}], ",", 
   RowBox[{"\<\"MillisecondShort\"\>", "\[Rule]", "950"}], ",", 
   RowBox[{"\<\"MillisecondExact\"\>", "\[Rule]", 
    "950.4699999999999999751`7.730513342791243"}], ",", 
   RowBox[{"\<\"MillisecondFraction\"\>", "\[Rule]", 
    "0.4699999999999999751`4.424672787090016"}], ",", 
   RowBox[{"\<\"Millennium\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"MillenniumBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Century\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"CenturyBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Decade\"\>", "\[Rule]", "2020"}], ",", 
   RowBox[{"\<\"Quarter\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"QuarterName\"\>", "\[Rule]", "\<\"Quarter 4\"\>"}], ",", 
   RowBox[{"\<\"QuarterNameShort\"\>", "\[Rule]", "\<\"Q4\"\>"}], ",", 
   RowBox[{"\<\"Week\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekShort\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekExact\"\>", "\[Rule]", "41.55976016942786`"}], ",", 
   RowBox[{"\<\"WeekFraction\"\>", "\[Rule]", "0.5597601694278617`"}], ",", 
   RowBox[{"\<\"ISOWeekYear\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"ISOYearDay\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayShort\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayExact\"\>", "\[Rule]", "286.91832118599535`"}], ",", 
   RowBox[{"\<\"ISOYearDayFraction\"\>", "\[Rule]", "0.9183211859953703`"}], 
   ",", 
   RowBox[{"\<\"TimeZone\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneName\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneNameShort\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneID\"\>", "\[Rule]", "\<\"GMT-4\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneOffset\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneEntity\"\>", "\[Rule]", 
    TemplateBox[{"\"GMT-4\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"TimeZone\"", ",", "\"GMT-4\""}], "]"}], 
      "\"Entity[\\\"TimeZone\\\", \\\"GMT-4\\\"]\"", "\"time zone\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"DayOfYear\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"WeekBeginningSunday\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"JulianDate\"\>", "\[Rule]", "2.4598665849878527`*^6"}], ",", 
   RowBox[{"\<\"CalendarType\"\>", "\[Rule]", "\<\"Gregorian\"\>"}], ",", 
   RowBox[{"\<\"Granularity\"\>", "\[Rule]", "\<\"Instant\"\>"}], ",", 
   RowBox[{"\<\"AstrologicalSign\"\>", "\[Rule]", "\<\"Libra\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.874701742977483*^9},
 CellLabel->"Out[20]=",
 CellID->771918707,ExpressionUUID->"8d83613f-5fb8-44bf-aef2-d9382c225ea4"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllDateValues", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8747017411245437`*^9, 3.8747017445909986`*^9}},
 CellLabel->"In[21]:=",
 CellID->135812967,ExpressionUUID->"a9de2a8e-81eb-4a8b-8c8e-97f7a4e127a4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Year\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"YearUnsigned\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"YearExact\"\>", "\[Rule]", "2022.7833379302624`"}], ",", 
   RowBox[{"\<\"YearFraction\"\>", "\[Rule]", "0.7833379302623098`"}], ",", 
   RowBox[{"\<\"YearRomanNumeral\"\>", "\[Rule]", "\<\"MMXXII\"\>"}], ",", 
   RowBox[{"\<\"ADBC\"\>", "\[Rule]", "\<\"AD\"\>"}], ",", 
   RowBox[{"\<\"Month\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthShort\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"MonthExact\"\>", "\[Rule]", "10.416720791798163`"}], ",", 
   RowBox[{"\<\"MonthFraction\"\>", "\[Rule]", "0.41672079179816307`"}], ",", 
   RowBox[{"\<\"MonthName\"\>", "\[Rule]", "\<\"October\"\>"}], ",", 
   RowBox[{"\<\"MonthNameShort\"\>", "\[Rule]", "\<\"Oct\"\>"}], ",", 
   RowBox[{"\<\"MonthNameInitial\"\>", "\[Rule]", "\<\"O\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeral\"\>", "\[Rule]", "\<\"X\"\>"}], ",", 
   RowBox[{"\<\"MonthRomanNumeralLowerCase\"\>", "\[Rule]", "\<\"x\"\>"}], 
   ",", 
   RowBox[{"\<\"Day\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayShort\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"DayExact\"\>", "\[Rule]", "13.918344545743055`"}], ",", 
   RowBox[{"\<\"DayFraction\"\>", "\[Rule]", "0.9183445457430556`"}], ",", 
   RowBox[{"\<\"DayName\"\>", "\[Rule]", "Thursday"}], ",", 
   RowBox[{"\<\"ISOWeekDay\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"ISOWeekDayExact\"\>", "\[Rule]", "4.9183445457430555`"}], ",", 
   RowBox[{"\<\"ISOWeekDayFraction\"\>", "\[Rule]", "0.9183445457430556`"}], 
   ",", 
   RowBox[{"\<\"DayNameShort\"\>", "\[Rule]", "\<\"Thu\"\>"}], ",", 
   RowBox[{"\<\"DayNameInitial\"\>", "\[Rule]", "\<\"T\"\>"}], ",", 
   RowBox[{"\<\"DayNameInstanceInMonth\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"Hour\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"Hour12\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"Hour24\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"HourShort\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"Hour12Short\"\>", "\[Rule]", "10"}], ",", 
   RowBox[{"\<\"Hour24Short\"\>", "\[Rule]", "22"}], ",", 
   RowBox[{"\<\"HourExact\"\>", "\[Rule]", "22.040269097833335`"}], ",", 
   RowBox[{"\<\"HourFraction\"\>", "\[Rule]", "0.04026909783333334`"}], ",", 
   RowBox[{"\<\"AMPM\"\>", "\[Rule]", "\<\"PM\"\>"}], ",", 
   RowBox[{"\<\"AMPMLowerCase\"\>", "\[Rule]", "\<\"pm\"\>"}], ",", 
   RowBox[{"\<\"Minute\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"MinuteShort\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"MinuteExact\"\>", "\[Rule]", "2.4161458700000003`"}], ",", 
   RowBox[{"\<\"MinuteFraction\"\>", "\[Rule]", "0.41614587000000003`"}], ",", 
   RowBox[{"\<\"Second\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"\<\"SecondShort\"\>", "\[Rule]", "24"}], ",", 
   RowBox[{"\<\"SecondExact\"\>", "\[Rule]", "24.9687522`9.149971762959069"}],
    ",", 
   RowBox[{"\<\"SecondFraction\"\>", "\[Rule]", 
    "0.9687522`7.738787625481244"}], ",", 
   RowBox[{"\<\"Millisecond\"\>", "\[Rule]", "968"}], ",", 
   RowBox[{"\<\"MillisecondShort\"\>", "\[Rule]", "968"}], ",", 
   RowBox[{"\<\"MillisecondExact\"\>", "\[Rule]", 
    "968.7521999999999999993`7.738787625481244"}], ",", 
   RowBox[{"\<\"MillisecondFraction\"\>", "\[Rule]", 
    "0.7521999999999999993`4.6289082527856165"}], ",", 
   RowBox[{"\<\"Millennium\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"MillenniumBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Century\"\>", "\[Rule]", "2000"}], ",", 
   RowBox[{"\<\"CenturyBeginning01\"\>", "\[Rule]", "2001"}], ",", 
   RowBox[{"\<\"Decade\"\>", "\[Rule]", "2020"}], ",", 
   RowBox[{"\<\"Quarter\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"QuarterName\"\>", "\[Rule]", "\<\"Quarter 4\"\>"}], ",", 
   RowBox[{"\<\"QuarterNameShort\"\>", "\[Rule]", "\<\"Q4\"\>"}], ",", 
   RowBox[{"\<\"Week\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekShort\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"WeekExact\"\>", "\[Rule]", "41.55976350653503`"}], ",", 
   RowBox[{"\<\"WeekFraction\"\>", "\[Rule]", "0.5597635065350268`"}], ",", 
   RowBox[{"\<\"ISOWeekYear\"\>", "\[Rule]", "2022"}], ",", 
   RowBox[{"\<\"ISOYearDay\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayShort\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"ISOYearDayExact\"\>", "\[Rule]", "286.9183445457431`"}], ",", 
   RowBox[{"\<\"ISOYearDayFraction\"\>", "\[Rule]", "0.9183445457430556`"}], 
   ",", 
   RowBox[{"\<\"TimeZone\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneName\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneNameShort\"\>", "\[Rule]", "\<\"GMT-04:00\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneID\"\>", "\[Rule]", "\<\"GMT-4\"\>"}], ",", 
   RowBox[{"\<\"TimeZoneOffset\"\>", "\[Rule]", 
    RowBox[{"-", "4.`"}]}], ",", 
   RowBox[{"\<\"TimeZoneEntity\"\>", "\[Rule]", 
    TemplateBox[{"\"GMT-4\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"TimeZone\"", ",", "\"GMT-4\""}], "]"}], 
      "\"Entity[\\\"TimeZone\\\", \\\"GMT-4\\\"]\"", "\"time zone\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"DayOfYear\"\>", "\[Rule]", "286"}], ",", 
   RowBox[{"\<\"WeekBeginningSunday\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"JulianDate\"\>", "\[Rule]", "2.4598665850112126`*^6"}], ",", 
   RowBox[{"\<\"CalendarType\"\>", "\[Rule]", "\<\"Gregorian\"\>"}], ",", 
   RowBox[{"\<\"Granularity\"\>", "\[Rule]", "\<\"Instant\"\>"}], ",", 
   RowBox[{"\<\"AstrologicalSign\"\>", "\[Rule]", "\<\"Libra\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.874701744996767*^9},
 CellLabel->"Out[21]=",
 CellID->689181662,ExpressionUUID->"f1e2b88a-8791-4d66-83cf-bf0f5d58f7f1"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllDateValuesDataset", "[", "]"}], ":=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<Year\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", 
          "\"\<YearUnsigned\>\"", ",", "\"\<YearExact\>\"", ",", 
          "\"\<YearFraction\>\"", ",", "\"\<YearRomanNumeral\>\"", ",", 
          "\"\<ADBC\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", "\"\<YearShort\>\"", ",", 
           "\"\<YearUnsigned\>\"", ",", "\"\<YearExact\>\"", ",", 
           "\"\<YearFraction\>\"", ",", "\"\<YearRomanNumeral\>\"", ",", 
           "\"\<ADBC\>\""}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"\"\<Month\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Month\>\"", ",", "\"\<MonthShort\>\"", ",", 
          "\"\<MonthExact\>\"", ",", "\"\<MonthFraction\>\"", ",", 
          "\"\<MonthName\>\"", ",", "\"\<MonthNameShort\>\"", ",", 
          "\"\<MonthNameInitial\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
          "\"\<MonthRomanNumeral\>\"", ",", 
          "\"\<MonthRomanNumeralLowerCase\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Month\>\"", ",", "\"\<MonthShort\>\"", ",", 
           "\"\<MonthExact\>\"", ",", "\"\<MonthFraction\>\"", ",", 
           "\"\<MonthName\>\"", ",", "\"\<MonthNameShort\>\"", ",", 
           "\"\<MonthNameInitial\>\"", ",", "\"\<MonthNameInitial\>\"", ",", 
           "\"\<MonthRomanNumeral\>\"", ",", 
           "\"\<MonthRomanNumeralLowerCase\>\""}], "}"}], "]"}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Day-of-the-month\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Day\>\"", ",", "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", 
          ",", "\"\<DayFraction\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Day\>\"", ",", "\"\<DayShort\>\"", ",", "\"\<DayExact\>\"", 
           ",", "\"\<DayFraction\>\""}], "}"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"\"\<Day-of-the-week\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
          "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\"", ",", 
          "\"\<DayNameShort\>\"", ",", "\"\<DayNameInitial\>\"", ",", 
          "\"\<DayNameInstanceInMonth\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<DayName\>\"", ",", "\"\<ISOWeekDay\>\"", ",", 
           "\"\<ISOWeekDayExact\>\"", ",", "\"\<ISOWeekDayFraction\>\"", ",", 
           "\"\<DayNameShort\>\"", ",", "\"\<DayNameInitial\>\"", ",", 
           "\"\<DayNameInstanceInMonth\>\""}], "}"}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Hour\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Hour\>\"", ",", "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", 
          "\"\<HourShort\>\"", ",", "\"\<Hour12Short\>\"", ",", 
          "\"\<Hour24Short\>\"", ",", "\"\<HourExact\>\"", ",", 
          "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", ",", 
          "\"\<AMPMLowerCase\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Hour\>\"", ",", "\"\<Hour12\>\"", ",", "\"\<Hour24\>\"", ",", 
           "\"\<HourShort\>\"", ",", "\"\<Hour12Short\>\"", ",", 
           "\"\<Hour24Short\>\"", ",", "\"\<HourExact\>\"", ",", 
           "\"\<HourFraction\>\"", ",", "\"\<AMPM\>\"", ",", 
           "\"\<AMPMLowerCase\>\""}], "}"}], "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Minute\>\"", "->", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Minute\>\"", ",", "\"\<MinuteShort\>\"", ",", 
          "\"\<MinuteExact\>\"", ",", "\"\<MinuteFraction\>\""}], "}"}], "->", 
        RowBox[{"DateValue", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Minute\>\"", ",", "\"\<MinuteShort\>\"", ",", 
           "\"\<MinuteExact\>\"", ",", "\"\<MinuteFraction\>\""}], "}"}], 
         "]"}]}], "]"}]}]}], "|>"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.874701833149681*^9, 3.8747018868381567`*^9}, {
  3.8747019748834596`*^9, 3.8747020429413247`*^9}, {3.874702076408307*^9, 
  3.874702174182485*^9}},
 CellLabel->"In[9]:=",
 CellID->244482292,ExpressionUUID->"d710b0bd-baa1-4fd0-b772-32dddd68b24f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllDateValuesDataset", "[", "]"}]], "Input",
 CellChangeTimes->{{3.874701848207084*^9, 3.874701850406417*^9}},
 CellLabel->"In[10]:=",
 CellID->138029223,ExpressionUUID->"2e4e7171-bfcb-4ba7-8c8a-932042c5687c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Year" -> <|
        "Year" -> 2022, "YearShort" -> 22, "YearUnsigned" -> 2022, 
         "YearExact" -> 2022.7833516246621`, "YearFraction" -> 
         0.783351624662186, "YearRomanNumeral" -> "MMXXII", "ADBC" -> "AD"|>, 
       "Month" -> <|
        "Month" -> 10, "MonthShort" -> 10, "MonthExact" -> 10.41688203341958, 
         "MonthFraction" -> 0.41688203341957886`, "MonthName" -> "October", 
         "MonthNameShort" -> "Oct", "MonthNameInitial" -> "O", 
         "MonthRomanNumeral" -> "X", "MonthRomanNumeralLowerCase" -> "x"|>, 
       "Day-of-the-month" -> <|
        "Day" -> 13, "DayShort" -> 13, "DayExact" -> 13.923343059158565`, 
         "DayFraction" -> 0.9233430591585647|>, 
       "Day-of-the-week" -> <|
        "DayName" -> Thursday, "ISOWeekDay" -> 4, "ISOWeekDayExact" -> 
         4.923343070739583, "ISOWeekDayFraction" -> 0.9233430707395833, 
         "DayNameShort" -> "Thu", "DayNameInitial" -> "T", 
         "DayNameInstanceInMonth" -> 2|>, 
       "Hour" -> <|
        "Hour" -> 22, "Hour12" -> 10, "Hour24" -> 22, "HourShort" -> 22, 
         "Hour12Short" -> 10, "Hour24Short" -> 22, "HourExact" -> 
         22.16023453125, "HourFraction" -> 0.16023453125, "AMPM" -> "PM", 
         "AMPMLowerCase" -> "pm"|>, 
       "Minute" -> <|
        "Minute" -> 9, "MinuteShort" -> 9, "MinuteExact" -> 9.61408848, 
         "MinuteFraction" -> 0.6140884799999999|>|>, "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[134.4], 
            TypeSystem`PackageScope`UnknownShape[False]]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
       6], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[179.20000000000002`], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[134.4], 
            TypeSystem`PackageScope`UnknownShape[False]]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
       6], "Path" -> {}, "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 6, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"], 
                    Key["Year"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["Year"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["YearShort", 
                  Style[
                  "YearShort", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"], 
                    Key["YearShort"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearShort"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearShort"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["YearUnsigned", 
                  Style[
                  "YearUnsigned", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"], 
                    Key["YearUnsigned"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearUnsigned"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2022"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearUnsigned"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["YearExact", 
                  Style[
                  "YearExact", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"], 
                    Key["YearExact"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearExact"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2022.78"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"], 
                 Key["YearExact"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["7 total \:203a ", ""], 
                  Style[
                   Superscript["7 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Month", 
                  Style[
                  "Month", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Month", 
                  Style[
                  "Month", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"], 
                    Key["Month"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["Month"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["Month"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MonthShort", 
                  Style[
                  "MonthShort", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"], 
                    Key["MonthShort"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthShort"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthShort"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MonthExact", 
                  Style[
                  "MonthExact", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"], 
                    Key["MonthExact"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthExact"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.4169"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthExact"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MonthFraction", 
                  Style[
                  "MonthFraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"], 
                    Key["MonthFraction"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthFraction"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.416882"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"], 
                 Key["MonthFraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["9 total \:203a ", ""], 
                  Style[
                   Superscript["9 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Month"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Month"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day-of-the-month", 
                  Style[
                  "Day-of-the-month", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-month"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day", 
                  Style[
                  "Day", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-month"], 
                    Key["Day"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["Day"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["Day"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DayShort", 
                  Style[
                  "DayShort", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-month"], 
                    Key["DayShort"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayShort"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayShort"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DayExact", 
                  Style[
                  "DayExact", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-month"], 
                    Key["DayExact"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayExact"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.9233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayExact"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DayFraction", 
                  Style[
                  "DayFraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-month"], 
                    Key["DayFraction"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayFraction"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.923343"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-month"], 
                 Key["DayFraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Day-of-the-week", 
                  Style[
                  "Day-of-the-week", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DayName", 
                  Style[
                  "DayName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"], 
                    Key["DayName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["DayName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Thursday", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["DayName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISOWeekDay", 
                  Style[
                  "ISOWeekDay", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"], 
                    Key["ISOWeekDay"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDay"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDay"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISOWeekDayExact", 
                  Style[
                  "ISOWeekDayExact", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"], 
                    Key["ISOWeekDayExact"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDayExact"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.92334"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDayExact"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ISOWeekDayFraction", 
                  Style[
                  "ISOWeekDayFraction", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"], 
                    Key["ISOWeekDayFraction"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDayFraction"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.923343"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"], 
                 Key["ISOWeekDayFraction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["7 total \:203a ", ""], 
                  Style[
                   Superscript["7 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Day-of-the-week"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Day-of-the-week"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hour", 
                  Style[
                  "Hour", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hour", 
                  Style[
                  "Hour", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"], 
                    Key["Hour"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hour12", 
                  Style[
                  "Hour12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"], 
                    Key["Hour12"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour12"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Hour24", 
                  Style[
                  "Hour24", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"], 
                    Key["Hour24"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour24"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["Hour24"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HourShort", 
                  Style[
                  "HourShort", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"], 
                    Key["HourShort"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["HourShort"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"], 
                 Key["HourShort"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["10 total \:203a ", ""], 
                  Style[
                   Superscript["10 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Hour"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Hour"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[True, 6, 1], {1, 6 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[False, 6, 1], {1, 6 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[6, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[6, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 6, 1], {1, 6 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 6, 1], {1, 6 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{419., {326.1340332872234, 331.8659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{419., {326.1340332872234, 331.8659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8747018507131925`*^9, 3.8747018888078384`*^9}, 
   3.87470197936693*^9, {3.8747021671435413`*^9, 3.874702176919318*^9}},
 CellLabel->"Out[10]=",
 CellID->38757056,ExpressionUUID->"5093481d-fe93-4c32-a541-d9696b7cd1a9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 257, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 257, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[840, 27, 181, 4, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1024, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1024, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1193, 39, 194, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1390, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[72622, 2013, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[72776, 2019, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[73018, 2026, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 848937, 18397},
 {"Your Essay Title", 849123, 18401},
 {"AuthorName", 849303, 18405},
 {"Abstract", 849462, 18409},
 {"TemplateCell", 849644, 18413},
 {"SectionHeader", 849827, 18417},
 {"ExampleTopicSentence", 850003, 18421},
 {"ExampleCodeText", 850178, 18425},
 {"ExampleInput", 850351, 18429},
 {"ExampleOutput", 850520, 18433}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 257, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[840, 27, 181, 4, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1024, 33, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1193, 39, 194, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1390, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1523, 48, 178, 2, 35, "Text",ExpressionUUID->"05188177-8e57-4d37-9938-43741e506a59",
 CellID->26783567],
Cell[CellGroupData[{
Cell[1726, 54, 194, 3, 28, "Input",ExpressionUUID->"867b691b-9e6c-4270-b842-79032f7107af",
 CellID->212331350],
Cell[1923, 59, 757, 20, 42, "Output",ExpressionUUID->"ae9de746-ff29-477a-9242-2a204a1c51f5",
 CellID->528830301]
}, Closed]],
Cell[2695, 82, 173, 2, 31, "Text",ExpressionUUID->"10213706-142e-4075-9370-1af6c888da5c",
 CellID->288775150],
Cell[CellGroupData[{
Cell[2893, 88, 197, 3, 28, "Input",ExpressionUUID->"ecd29544-d018-45dc-93c3-827bb6b7aaaa",
 CellID->134082873],
Cell[3093, 93, 407, 12, 42, "Output",ExpressionUUID->"6f26310e-c634-4a1f-8c18-60438541dde3",
 CellID->68318337]
}, Closed]],
Cell[3515, 108, 175, 2, 31, "Text",ExpressionUUID->"3f810540-5255-41ef-af7c-199cccdb4ae7",
 CellID->18275147],
Cell[CellGroupData[{
Cell[3715, 114, 198, 3, 28, "Input",ExpressionUUID->"1461257d-d88f-4b4f-aae9-cf5a5a360d83",
 CellID->69238722],
Cell[3916, 119, 405, 12, 42, "Output",ExpressionUUID->"ef57d009-1706-411d-80ee-095362153495",
 CellID->188157671]
}, Closed]],
Cell[4336, 134, 178, 2, 31, "Text",ExpressionUUID->"16e45225-7ef3-41cd-9e82-511771aee35b",
 CellID->280154155],
Cell[CellGroupData[{
Cell[4539, 140, 198, 3, 28, "Input",ExpressionUUID->"200232f9-6e5b-45d8-a889-76860cafab2a",
 CellID->741904749],
Cell[4740, 145, 404, 12, 42, "Output",ExpressionUUID->"ec31a280-f2a6-4158-a7cc-f71462331fd5",
 CellID->50880995]
}, Closed]],
Cell[5159, 160, 182, 2, 31, "Text",ExpressionUUID->"f3fdca2d-0aff-44d7-a2af-6ee715ac6f83",
 CellID->534909424],
Cell[CellGroupData[{
Cell[5366, 166, 225, 4, 28, "Input",ExpressionUUID->"2d159554-6b1d-44f2-83d4-f97367234d3c",
 CellID->733113451],
Cell[5594, 172, 740, 20, 42, "Output",ExpressionUUID->"6cf1ad42-16db-40b9-8515-18152290b1cb",
 CellID->330366557]
}, Closed]],
Cell[6349, 195, 235, 3, 31, "Text",ExpressionUUID->"5cfab878-2929-45b7-aeee-d9220f5d25b9",
 CellID->386070864],
Cell[CellGroupData[{
Cell[6609, 202, 298, 5, 28, "Input",ExpressionUUID->"63fdea07-2110-4782-a7b8-a3bf850a07a5",
 CellID->463020431],
Cell[6910, 209, 765, 20, 42, "Output",ExpressionUUID->"d9a6f705-c4ad-412c-a448-82600fb58171",
 CellID->305961262]
}, Closed]],
Cell[7690, 232, 177, 2, 31, "Text",ExpressionUUID->"dea53b90-30f5-472c-a317-62d3d30645d5",
 CellID->576585238],
Cell[CellGroupData[{
Cell[7892, 238, 276, 5, 28, "Input",ExpressionUUID->"d10b5b1a-ae6f-4590-a5d4-b2486e7bca28",
 CellID->259507836],
Cell[8171, 245, 278, 7, 32, "Output",ExpressionUUID->"ff43f6bd-8817-404c-8b51-738ea448c19e",
 CellID->17859382]
}, Closed]],
Cell[CellGroupData[{
Cell[8486, 257, 171, 2, 37, "Subsubsection",ExpressionUUID->"b623baa2-ea7b-4dd7-945a-32ebcf82645f",
 CellID->26516802],
Cell[8660, 261, 252, 3, 35, "Text",ExpressionUUID->"e1e5f8d8-dc04-4c8b-9c88-c1b28b6620c3",
 CellID->60566017],
Cell[CellGroupData[{
Cell[8937, 268, 297, 5, 28, "Input",ExpressionUUID->"a223258e-3158-4f5d-bc06-266fbfac77bf",
 CellID->148106480],
Cell[9237, 275, 776, 21, 42, "Output",ExpressionUUID->"414bc059-b0e2-47d4-8d95-c943353bf362",
 CellID->388511141]
}, Closed]],
Cell[10028, 299, 179, 2, 31, "Text",ExpressionUUID->"aef51761-5d80-4d2d-9e4d-5037a86918e1",
 CellID->418342747],
Cell[CellGroupData[{
Cell[10232, 305, 278, 5, 28, "Input",ExpressionUUID->"5524d99b-3d32-41af-800c-417e6a639771",
 CellID->231969633],
Cell[10513, 312, 265, 6, 32, "Output",ExpressionUUID->"78e0a07b-d8d4-4031-b762-02dabaeeaf8b",
 CellID->109348528]
}, Closed]],
Cell[10793, 321, 310, 4, 31, "Text",ExpressionUUID->"39e234c4-ad5f-47ac-bdfa-a17d85758f47",
 CellID->156636521],
Cell[CellGroupData[{
Cell[11128, 329, 450, 7, 67, "Input",ExpressionUUID->"7085973c-1830-4965-a86c-687e0c3c1453",
 CellID->19100910],
Cell[11581, 338, 830, 22, 42, "Output",ExpressionUUID->"5c59d65e-39b6-4e84-b781-9fd2f8676f39",
 CellID->541316750],
Cell[12414, 362, 829, 22, 42, "Output",ExpressionUUID->"0d1c819e-095c-4de4-8333-c0623065ed1c",
 CellID->51189614],
Cell[13246, 386, 832, 22, 42, "Output",ExpressionUUID->"38897bf7-c544-442f-828c-b43419bca016",
 CellID->124355293]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14127, 414, 174, 2, 37, "Subsubsection",ExpressionUUID->"cd9f17f4-77ca-404a-b631-87bcb50f1cd9",
 CellID->161268256],
Cell[14304, 418, 202, 2, 35, "Text",ExpressionUUID->"0559868e-7cc4-4c83-8f24-8e735fde05df",
 CellID->3232410],
Cell[CellGroupData[{
Cell[14531, 424, 243, 4, 28, "Input",ExpressionUUID->"15285e52-4af6-44c6-a29a-022403b76879",
 CellID->851692497],
Cell[14777, 430, 768, 19, 42, "Output",ExpressionUUID->"a2f41fa9-6d42-43ae-89c6-ea1474c7e1a3",
 CellID->509084134]
}, Closed]],
Cell[15560, 452, 310, 4, 35, "Text",ExpressionUUID->"3b934961-2fe7-41fc-a496-6c1fbde6df1e",
 CellID->283655409],
Cell[CellGroupData[{
Cell[15895, 460, 448, 7, 67, "Input",ExpressionUUID->"d1d0d101-5bbc-4b9d-8809-b8b6a8bf9218",
 CellID->10209223],
Cell[16346, 469, 822, 20, 42, "Output",ExpressionUUID->"370a77d1-41d0-4509-8c79-8d54de68abfc",
 CellID->135856805],
Cell[17171, 491, 818, 20, 42, "Output",ExpressionUUID->"3972b409-cbb0-477c-88f3-5a1fb4bed251",
 CellID->6937160],
Cell[17992, 513, 818, 20, 42, "Output",ExpressionUUID->"d6882081-38fd-4be0-a8a8-a0a6c7c01378",
 CellID->56095960]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[18859, 539, 169, 2, 37, "Subsubsection",ExpressionUUID->"c3c9d226-901d-4cbd-af58-6c33e2a985f6",
 CellID->787460011],
Cell[19031, 543, 195, 2, 35, "Text",ExpressionUUID->"1251f9ab-6602-488e-8226-3b0a4d611de1",
 CellID->25990520],
Cell[CellGroupData[{
Cell[19251, 549, 291, 5, 28, "Input",ExpressionUUID->"38711cd1-6c23-487e-a7c4-ea5564b09ea8",
 CellID->145399823],
Cell[19545, 556, 742, 20, 42, "Output",ExpressionUUID->"9d5e5424-7a9c-4ed9-a1a3-e098c447e698",
 CellID->166889862]
}, Closed]],
Cell[20302, 579, 308, 4, 35, "Text",ExpressionUUID->"09a6dffd-b073-40d0-85a3-c5c5f93b6e88",
 CellID->203391407],
Cell[CellGroupData[{
Cell[20635, 587, 443, 7, 67, "Input",ExpressionUUID->"7c184c91-d567-4d57-850c-8885b2302fbc",
 CellID->160216940],
Cell[21081, 596, 844, 21, 42, "Output",ExpressionUUID->"4f92e8f2-29fc-476e-a8c8-aa246728f456",
 CellID->38044996],
Cell[21928, 619, 845, 21, 42, "Output",ExpressionUUID->"e6ae627a-73c5-4886-9c92-6e3e13acf70b",
 CellID->322909035],
Cell[22776, 642, 844, 21, 42, "Output",ExpressionUUID->"41873c4a-54a0-4adc-86ae-183923e799d5",
 CellID->31946536]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[23669, 669, 179, 2, 37, "Subsubsection",ExpressionUUID->"4afaf46d-97bb-4ff7-a29c-475141839e39",
 CellID->189217935],
Cell[23851, 673, 182, 2, 35, "Text",ExpressionUUID->"505a47f3-2e33-4887-93d4-7a07d85ca93c",
 CellID->13757996],
Cell[CellGroupData[{
Cell[24058, 679, 225, 4, 28, "Input",ExpressionUUID->"2153d8bd-1542-4432-8d65-e22a97742781",
 CellID->680981657],
Cell[24286, 685, 781, 20, 42, "Output",ExpressionUUID->"738423d8-42fe-4657-8da4-020ec70d90af",
 CellID->214890789]
}, Open  ]],
Cell[25082, 708, 136, 1, 35, "ExampleText",ExpressionUUID->"65ff64f2-5c99-4a66-99c8-997b9c97e1da",
 CellID->1685256102],
Cell[CellGroupData[{
Cell[25243, 713, 5415, 100, 40, "Input",ExpressionUUID->"15b11900-c717-4f98-870d-f35ccec2b62b",
 CellID->937486031],
Cell[30661, 815, 733, 18, 42, "Output",ExpressionUUID->"fc55ed63-830d-4db3-b153-48d8b36e2a3b",
 CellID->85983046]
}, Open  ]],
Cell[31409, 836, 187, 2, 35, "Text",ExpressionUUID->"77dc2639-c43d-4b55-bddb-8d691269de8e",
 CellID->39234742],
Cell[CellGroupData[{
Cell[31621, 842, 229, 4, 28, "Input",ExpressionUUID->"a27a5c7b-4d1a-46b5-b1a4-fea94c73049b",
 CellID->450428696],
Cell[31853, 848, 285, 6, 32, "Output",ExpressionUUID->"ed26d9c1-5541-45ac-a216-1ffbd075e9f7",
 CellID->308399]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32187, 860, 172, 2, 45, "Subsubsection",ExpressionUUID->"26446418-088f-470b-88df-91ac65210aeb",
 CellID->86574943],
Cell[32362, 864, 165, 2, 35, "Text",ExpressionUUID->"9b7c957b-5125-43be-b488-683ba956cfaf",
 CellID->162698889],
Cell[CellGroupData[{
Cell[32552, 870, 290, 5, 28, "Input",ExpressionUUID->"9d0000b4-3086-47f0-8608-9e7cb1a207f4",
 CellID->21304163],
Cell[32845, 877, 465, 13, 42, "Output",ExpressionUUID->"5981dea0-e7d1-45e9-af4d-c2813ff43fb2",
 CellID->461849083]
}, Closed]],
Cell[33325, 893, 356, 4, 35, "Text",ExpressionUUID->"fe3024f2-0906-42ea-8e9c-6b63b1fa4536",
 CellID->71983471],
Cell[CellGroupData[{
Cell[33706, 901, 489, 8, 67, "Input",ExpressionUUID->"983b5d71-d809-4731-8ad9-d758c868c36b",
 CellID->412909757],
Cell[34198, 911, 569, 14, 42, "Output",ExpressionUUID->"64e5dbc5-cabf-4481-a17b-193cbf493f40",
 CellID->80165763],
Cell[34770, 927, 567, 14, 42, "Output",ExpressionUUID->"76a0b1f0-d981-4c18-93f3-234a63dc9e4e",
 CellID->62451225],
Cell[35340, 943, 569, 14, 42, "Output",ExpressionUUID->"0ce23bac-371a-4a7e-8285-1c52e316dd67",
 CellID->46947382]
}, Closed]],
Cell[35924, 960, 406, 5, 35, "Text",ExpressionUUID->"5b046aae-7d94-4731-8a77-3d091e363493",
 CellID->383829720],
Cell[CellGroupData[{
Cell[36355, 969, 470, 7, 48, "Input",ExpressionUUID->"55eabe40-b8a6-449e-b332-de9bd2d0eac3",
 CellID->157630307],
Cell[36828, 978, 622, 15, 42, "Output",ExpressionUUID->"dd2f4c01-bbe8-4bbd-a0be-47ce79613650",
 CellID->740141501],
Cell[37453, 995, 620, 15, 42, "Output",ExpressionUUID->"7bc89cad-3f86-4a33-9dc4-85ca2e810b65",
 CellID->2189094]
}, Closed]],
Cell[38088, 1013, 170, 2, 35, "Text",ExpressionUUID->"217bab5c-9f27-4d86-88b3-376c47c8923f",
 CellID->147956191],
Cell[CellGroupData[{
Cell[38283, 1019, 477, 8, 48, "Input",ExpressionUUID->"06a3ba86-2380-4644-9167-393002ff5c1d",
 CellID->433279807],
Cell[38763, 1029, 490, 13, 42, "Output",ExpressionUUID->"edb3ec47-7651-4beb-b1f3-9ed2828a6d53",
 CellID->376545226],
Cell[39256, 1044, 494, 13, 42, "Output",ExpressionUUID->"9f326dbd-dd26-4dbe-9061-3642c4dcdfba",
 CellID->495895683]
}, Closed]],
Cell[39765, 1060, 168, 2, 35, "Text",ExpressionUUID->"2169f2f5-63e8-4fde-91dc-ac19bcf91b72",
 CellID->156660971],
Cell[CellGroupData[{
Cell[39958, 1066, 305, 5, 48, "Input",ExpressionUUID->"dab3b7a1-12f2-47df-b283-0e8e06fbc2be",
 CellID->21639591],
Cell[40266, 1073, 490, 13, 42, "Output",ExpressionUUID->"94a91a17-1063-4c36-83d5-696636f8fce5",
 CellID->123787879],
Cell[40759, 1088, 494, 13, 42, "Output",ExpressionUUID->"4127a481-6d84-4354-9f73-a54ef477838e",
 CellID->743526113]
}, Closed]],
Cell[41268, 1104, 165, 2, 35, "Text",ExpressionUUID->"8c4a3537-f327-471a-b6c6-7f7b14831926",
 CellID->65431094],
Cell[CellGroupData[{
Cell[41458, 1110, 452, 7, 48, "Input",ExpressionUUID->"7d16f50d-f757-4ced-843a-45c6bf5c03fe",
 CellID->547481649],
Cell[41913, 1119, 489, 13, 42, "Output",ExpressionUUID->"70ec9082-4c31-4464-8a5c-61665b2b9c2e",
 CellID->39998999],
Cell[42405, 1134, 489, 13, 42, "Output",ExpressionUUID->"6d83f5d9-8051-4358-a780-efee0682c42e",
 CellID->79110049]
}, Closed]],
Cell[42909, 1150, 165, 2, 35, "Text",ExpressionUUID->"14371eed-30d0-4bc7-81b5-ee26c8d79a8f",
 CellID->230553250],
Cell[CellGroupData[{
Cell[43099, 1156, 452, 7, 48, "Input",ExpressionUUID->"a4d9831d-8257-43b0-bd44-847c32f26eaf",
 CellID->170477102],
Cell[43554, 1165, 467, 13, 42, "Output",ExpressionUUID->"4df1edf8-1b2f-4010-b34a-304bb7d67602",
 CellID->88955089],
Cell[44024, 1180, 466, 13, 42, "Output",ExpressionUUID->"12595254-918f-440a-8a3a-28c04c201034",
 CellID->829412135]
}, Closed]],
Cell[44505, 1196, 171, 2, 35, "Text",ExpressionUUID->"cf728be2-d2b5-4c26-b42b-56c8cf65b0a3",
 CellID->360983855],
Cell[CellGroupData[{
Cell[44701, 1202, 458, 7, 48, "Input",ExpressionUUID->"d94d0ec6-eab9-4926-9930-9ff603b7c1f1",
 CellID->731636961],
Cell[45162, 1211, 490, 13, 42, "Output",ExpressionUUID->"008b3792-6d7a-4e31-8710-266178337243",
 CellID->256611926],
Cell[45655, 1226, 492, 13, 42, "Output",ExpressionUUID->"fb5f5119-478c-48a0-8f43-1c410401a5d0",
 CellID->597337915]
}, Closed]],
Cell[46162, 1242, 164, 2, 35, "Text",ExpressionUUID->"d630178e-6b31-42db-9e40-cdf7b517c483",
 CellID->739142617],
Cell[CellGroupData[{
Cell[46351, 1248, 306, 5, 48, "Input",ExpressionUUID->"2d22f57f-b559-44bc-9ad9-619f5a0f2c00",
 CellID->7445225],
Cell[46660, 1255, 464, 13, 42, "Output",ExpressionUUID->"7c7d03cc-0bf6-4726-a6c7-f2aed6b7cd46",
 CellID->109259336],
Cell[47127, 1270, 468, 13, 42, "Output",ExpressionUUID->"153d038f-e85e-4268-8802-59e495231447",
 CellID->178957779]
}, Closed]],
Cell[47610, 1286, 213, 3, 35, "Text",ExpressionUUID->"0e8800ad-3463-4135-8003-b34251f5a5c2",
 CellID->373375094],
Cell[CellGroupData[{
Cell[47848, 1293, 306, 5, 48, "Input",ExpressionUUID->"4a69ac97-25b7-4e6b-9945-12b33e5e4738",
 CellID->204895381],
Cell[48157, 1300, 490, 13, 42, "Output",ExpressionUUID->"a28e87ff-41fe-4202-bf3d-96428c6c9745",
 CellID->298659628],
Cell[48650, 1315, 492, 13, 42, "Output",ExpressionUUID->"3c09902d-e116-4347-a386-649b76860d42",
 CellID->142066524]
}, Closed]],
Cell[49157, 1331, 213, 3, 35, "Text",ExpressionUUID->"ad800078-b4ad-451e-8ac2-3024aff1d7d9",
 CellID->6859004],
Cell[CellGroupData[{
Cell[49395, 1338, 310, 5, 48, "Input",ExpressionUUID->"a5224d8c-3d19-4c4a-80b0-7e717b51200b",
 CellID->244240936],
Cell[49708, 1345, 486, 13, 42, "Output",ExpressionUUID->"b6540bd8-6610-496c-85cc-16b906b9c248",
 CellID->311634460],
Cell[50197, 1360, 488, 13, 42, "Output",ExpressionUUID->"f98ecc8b-042e-4a18-b10f-d1314f3a0f95",
 CellID->172569195]
}, Closed]],
Cell[50700, 1376, 205, 2, 35, "Text",ExpressionUUID->"9f0cf2e6-1d64-413f-a82e-c850faf6ac22",
 CellID->320961726],
Cell[CellGroupData[{
Cell[50930, 1382, 338, 6, 48, "Input",ExpressionUUID->"ccbf3414-c087-42f0-ba05-d6e61ad155fa",
 CellID->66878119],
Cell[51271, 1390, 466, 13, 42, "Output",ExpressionUUID->"db1ddb8c-d819-453f-9f1a-ffa8c0959875",
 CellID->771181413],
Cell[51740, 1405, 462, 13, 42, "Output",ExpressionUUID->"e9277af6-7223-4129-93b1-82992d936cf7",
 CellID->2200014]
}, Closed]],
Cell[52217, 1421, 205, 2, 35, "Text",ExpressionUUID->"461ae9df-833f-4b1e-be0f-4e2dde29438a",
 CellID->789830514],
Cell[CellGroupData[{
Cell[52447, 1427, 339, 6, 48, "Input",ExpressionUUID->"dba8224d-670e-4654-9c1f-d5bb5a0f0c3e",
 CellID->383866559],
Cell[52789, 1435, 490, 13, 42, "Output",ExpressionUUID->"08ca5e04-20c5-4bd5-af61-e6a3b4d67f7a",
 CellID->116332323],
Cell[53282, 1450, 491, 13, 42, "Output",ExpressionUUID->"994815bb-3713-4a46-96d4-5e4c06b8853f",
 CellID->255284174]
}, Closed]],
Cell[53788, 1466, 196, 2, 35, "Text",ExpressionUUID->"055ee6de-f0bb-4477-8e23-63b1b162b7e4",
 CellID->737294213],
Cell[CellGroupData[{
Cell[54009, 1472, 337, 6, 48, "Input",ExpressionUUID->"8c98d975-964d-4cf2-a6a3-bd88c3f7b5d0",
 CellID->191414398],
Cell[54349, 1480, 468, 13, 42, "Output",ExpressionUUID->"19cf6430-3de6-4e56-bf96-b2f6c4958776",
 CellID->700411220],
Cell[54820, 1495, 466, 13, 42, "Output",ExpressionUUID->"ba3ae879-be4b-4542-b7cc-5f8793a35ee6",
 CellID->315330947]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55335, 1514, 182, 2, 38, "Subsection",ExpressionUUID->"5a82abbe-aa77-4936-8d89-1bbcd89c7e6e",
 CellID->68586317],
Cell[CellGroupData[{
Cell[55542, 1520, 171, 2, 45, "Subsubsection",ExpressionUUID->"2f934d0a-c5d3-471f-9bda-50236f1fd562",
 CellID->11595345],
Cell[55716, 1524, 161, 2, 35, "Text",ExpressionUUID->"d5fabe68-77aa-4712-b294-193b11a94235",
 CellID->57655436],
Cell[CellGroupData[{
Cell[55902, 1530, 293, 5, 28, "Input",ExpressionUUID->"07e3975b-90d4-4faa-8534-537cdacf9ed7",
 CellID->725024671],
Cell[56198, 1537, 531, 15, 42, "Output",ExpressionUUID->"9f57408b-9c70-497f-a0ec-1010058b656a",
 CellID->67183355]
}, Closed]],
Cell[56744, 1555, 211, 2, 35, "Text",ExpressionUUID->"d59b1d97-a919-4df3-9859-e7a6a5d28503",
 CellID->603031067],
Cell[CellGroupData[{
Cell[56980, 1561, 361, 6, 28, "Input",ExpressionUUID->"2cde63ae-dbe8-40f9-a627-e0f80a88b96f",
 CellID->234229459],
Cell[57344, 1569, 545, 15, 42, "Output",ExpressionUUID->"0a688b9d-2370-4b04-b89a-a1f7256d1966",
 CellID->106451001]
}, Closed]],
Cell[57904, 1587, 191, 2, 35, "Text",ExpressionUUID->"5a7762cf-54bc-486f-9e28-4d01e8b32d4c",
 CellID->271974236],
Cell[CellGroupData[{
Cell[58120, 1593, 396, 6, 28, "Input",ExpressionUUID->"c2c1870d-4b1e-4992-bd85-70f805ac0526",
 CellID->205246252],
Cell[58519, 1601, 466, 13, 42, "Output",ExpressionUUID->"a6cc3c9c-fcc2-4bc6-b0d2-e14ede183ab5",
 CellID->264485683]
}, Closed]],
Cell[CellGroupData[{
Cell[59022, 1619, 448, 7, 28, "Input",ExpressionUUID->"fb8ee88a-d98e-4681-9261-2ec086610d4b",
 CellID->49129261],
Cell[59473, 1628, 519, 14, 42, "Output",ExpressionUUID->"c8b257b7-fcfa-4cbf-bf00-5ce5d25d79f2",
 CellID->509254341]
}, Closed]],
Cell[CellGroupData[{
Cell[60029, 1647, 450, 7, 28, "Input",ExpressionUUID->"c28f5b3f-1959-403a-a2c2-aa3794b21ed1",
 CellID->168467094],
Cell[60482, 1656, 490, 13, 42, "Output",ExpressionUUID->"5cf2d3c6-ab33-418a-85ad-36eed6f3348b",
 CellID->583040225]
}, Closed]],
Cell[60987, 1672, 165, 2, 35, "Text",ExpressionUUID->"4b74ae3d-646a-4d92-bc32-f48ff30f0932",
 CellID->416259141],
Cell[CellGroupData[{
Cell[61177, 1678, 296, 5, 28, "Input",ExpressionUUID->"c54d7958-6aa9-4575-95fd-275a3a6a312e",
 CellID->224569103],
Cell[61476, 1685, 451, 13, 42, "Output",ExpressionUUID->"10f78d62-cadf-4ed8-b933-94af0d969ec0",
 CellID->55197013]
}, Closed]],
Cell[61942, 1701, 168, 2, 35, "Text",ExpressionUUID->"8e4f4c82-75e2-4539-83c9-6dadc1a885a4",
 CellID->33323168],
Cell[CellGroupData[{
Cell[62135, 1707, 298, 5, 28, "Input",ExpressionUUID->"89046871-1723-49cf-84dc-d27f80a38d7c",
 CellID->342130326],
Cell[62436, 1714, 505, 14, 42, "Output",ExpressionUUID->"5907d597-41fe-4607-91af-6d8f6ca9a691",
 CellID->118603753]
}, Closed]],
Cell[62956, 1731, 166, 2, 35, "Text",ExpressionUUID->"11cb60b4-4a2b-4883-8db8-a1c6d5fa5e90",
 CellID->184468569],
Cell[CellGroupData[{
Cell[63147, 1737, 291, 5, 28, "Input",ExpressionUUID->"b5b8798a-a089-434d-9f46-5f0a4fafdc07",
 CellID->26861294],
Cell[63441, 1744, 457, 12, 42, "Output",ExpressionUUID->"2c4fd7a9-b566-48dd-b5d2-a1ac149e8067",
 CellID->153023364]
}, Closed]],
Cell[63913, 1759, 166, 2, 35, "Text",ExpressionUUID->"93ed4462-e2d7-4f89-bb13-3cfd517f9610",
 CellID->213071282],
Cell[CellGroupData[{
Cell[64104, 1765, 294, 5, 28, "Input",ExpressionUUID->"d018d5f3-ad06-4b85-8060-d250e552e482",
 CellID->79691432],
Cell[64401, 1772, 468, 13, 42, "Output",ExpressionUUID->"39a1c12f-67c6-47e5-99b1-32b45e599910",
 CellID->441551044]
}, Closed]],
Cell[64884, 1788, 165, 2, 35, "Text",ExpressionUUID->"4af146cc-bda5-4284-b5bc-9c07577c3993",
 CellID->187336554],
Cell[CellGroupData[{
Cell[65074, 1794, 295, 5, 28, "Input",ExpressionUUID->"71371399-22ef-4dbe-bc8d-aab5f9993cc2",
 CellID->359059497],
Cell[65372, 1801, 470, 13, 42, "Output",ExpressionUUID->"38d58d3e-9e32-4b1f-bf09-79ae6732dc36",
 CellID->730619120]
}, Closed]],
Cell[65857, 1817, 170, 2, 35, "Text",ExpressionUUID->"1d2c7416-e941-444e-a5f6-2d9be585c430",
 CellID->339860660],
Cell[CellGroupData[{
Cell[66052, 1823, 346, 6, 28, "Input",ExpressionUUID->"9a76ce48-09ca-45e8-9124-999ef749ac22",
 CellID->27540887],
Cell[66401, 1831, 480, 13, 42, "Output",ExpressionUUID->"28e21dea-0a4f-4113-bb70-a0a7a95b7702",
 CellID->273673065]
}, Closed]],
Cell[66896, 1847, 237, 4, 35, "Text",ExpressionUUID->"4e30819d-ca71-4b90-b902-9a3d176768b9",
 CellID->570960683],
Cell[CellGroupData[{
Cell[67158, 1855, 254, 4, 28, "Input",ExpressionUUID->"746b12ea-06c8-4111-8ff9-07c7eba75778",
 CellID->240506194],
Cell[67415, 1861, 485, 13, 42, "Output",ExpressionUUID->"30979e68-4631-4f9c-ae48-2f5952b2a774",
 CellID->450976440]
}, Closed]],
Cell[CellGroupData[{
Cell[67937, 1879, 257, 4, 28, "Input",ExpressionUUID->"0088e4c9-917a-45d2-a1c9-43a5ade29cd9",
 CellID->441536187],
Cell[68197, 1885, 516, 13, 42, "Output",ExpressionUUID->"ba0f1723-9239-4408-80fa-76322d51f705",
 CellID->31568105]
}, Closed]],
Cell[68728, 1901, 188, 2, 35, "Text",ExpressionUUID->"6f685323-253c-4ae6-a887-f14815127147",
 CellID->130058483],
Cell[CellGroupData[{
Cell[68941, 1907, 305, 5, 28, "Input",ExpressionUUID->"4ac68389-8c37-4429-906c-f4c0528ead1d",
 CellID->18941179],
Cell[69249, 1914, 397, 10, 42, "Output",ExpressionUUID->"74c594e4-623f-4b03-9de7-b8872255dfd7",
 CellID->511848000]
}, Closed]],
Cell[69661, 1927, 173, 2, 35, "Text",ExpressionUUID->"d09055a5-c735-4791-b098-dcf3f2992627",
 CellID->550622784],
Cell[CellGroupData[{
Cell[69859, 1933, 203, 3, 28, "Input",ExpressionUUID->"835dadc9-b7b3-4d30-b454-2e96beb9c244",
 CellID->138739419],
Cell[70065, 1938, 394, 11, 42, "Output",ExpressionUUID->"e439b4db-c41d-4143-a21f-e075f7f67de8",
 CellID->137154194]
}, Closed]],
Cell[70474, 1952, 208, 2, 35, "Text",ExpressionUUID->"55d293b6-47e1-4cdd-bc0f-2009ae2fc6a3",
 CellID->299816776],
Cell[CellGroupData[{
Cell[70707, 1958, 227, 4, 28, "Input",ExpressionUUID->"ad11a970-0f4b-4fa6-ac64-f6014a76e930",
 CellID->442567572],
Cell[70937, 1964, 209, 3, 32, "Output",ExpressionUUID->"b2bd4f4f-a79a-4b43-a5a4-40d8f898090d",
 CellID->269874694]
}, Closed]],
Cell[CellGroupData[{
Cell[71183, 1972, 261, 5, 28, "Input",ExpressionUUID->"f1879070-89de-4f18-922d-82728723af94",
 CellID->397715411],
Cell[71447, 1979, 177, 3, 32, "Output",ExpressionUUID->"8272cc74-d778-4c51-abc9-f3f1c2d2d5d2",
 CellID->53476719]
}, Closed]],
Cell[71639, 1985, 188, 2, 35, "Text",ExpressionUUID->"7fc7c8a9-8ce8-4023-a091-4895d94b29c3",
 CellID->115282032],
Cell[CellGroupData[{
Cell[71852, 1991, 244, 4, 28, "Input",ExpressionUUID->"82e744e0-f123-43c8-805e-cf5a51e80e46",
 CellID->10984292],
Cell[72099, 1997, 508, 13, 42, "Output",ExpressionUUID->"9be40444-4273-4171-8df3-049d5691f189",
 CellID->270876794]
}, Closed]],
Cell[72622, 2013, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[72776, 2019, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[73018, 2026, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Closed]],
Cell[73275, 2034, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[73373, 2037, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[73517, 2044, 180, 2, 38, "Subsection",ExpressionUUID->"5e1443db-fbd9-4765-8513-3a816b892f10",
 CellID->236411855],
Cell[CellGroupData[{
Cell[73722, 2050, 2443, 37, 485, "Input",ExpressionUUID->"131a2436-0e47-4149-9e5c-06ece1db1ad6",
 CellID->801296335],
Cell[76168, 2089, 4086, 90, 489, "Output",ExpressionUUID->"18e8ffa4-96c6-44e1-91e2-6015fadb27f7",
 CellID->726238231]
}, Open  ]],
Cell[CellGroupData[{
Cell[80291, 2184, 333, 6, 28, "Input",ExpressionUUID->"8224cfc3-b559-4953-bb7f-c338721440df",
 CellID->156553228],
Cell[80627, 2192, 11840, 352, 846, "Output",ExpressionUUID->"23e44e52-319b-4db2-8b2e-f2f45b828366",
 CellID->153678033]
}, Open  ]],
Cell[CellGroupData[{
Cell[92504, 2549, 451, 10, 48, "Input",ExpressionUUID->"2ff11d03-683a-4be8-84e4-e13cb5bed9e2",
 CellID->45607913],
Cell[92958, 2561, 11815, 352, 780, "Output",ExpressionUUID->"562d03ec-0830-4533-aaf3-b73a632ed0b9",
 CellID->41793490]
}, Open  ]],
Cell[CellGroupData[{
Cell[104810, 2918, 486, 11, 67, "Input",ExpressionUUID->"a5983884-49ed-4879-b074-ead0b2c71cc4",
 CellID->128465464],
Cell[105299, 2931, 5892, 197, 261, "Output",ExpressionUUID->"e2bd9ef9-ea89-40f7-a10b-e121ef6c19a3",
 CellID->152607750]
}, Open  ]],
Cell[CellGroupData[{
Cell[111228, 3133, 689, 18, 86, "Input",ExpressionUUID->"e81d38f8-bd6a-4a0f-9ca1-161d3f79d8ef",
 CellID->58809334],
Cell[111920, 3153, 376325, 8002, 1064, "Output",ExpressionUUID->"86d42284-5a9b-472a-9dee-ca1d17cad3e4",
 CellID->193781458]
}, Open  ]],
Cell[CellGroupData[{
Cell[488282, 11160, 596, 16, 67, "Input",ExpressionUUID->"82bfe7d0-9722-49d0-bf34-e7301685e096",
 CellID->83152881],
Cell[488881, 11178, 2333, 68, 166, "Output",ExpressionUUID->"d2a741db-8280-41c3-be79-c19ac98bd275",
 CellID->339524349]
}, Open  ]],
Cell[CellGroupData[{
Cell[491251, 11251, 252, 5, 28, "Input",ExpressionUUID->"0a786850-2573-47d3-8f4c-b55429cc0e69",
 CellID->376369623],
Cell[491506, 11258, 290, 6, 32, "Output",ExpressionUUID->"4899e022-c5fa-41c8-b100-af59f90d5bc4",
 CellID->17423283]
}, Open  ]],
Cell[CellGroupData[{
Cell[491833, 11269, 310, 6, 28, "Input",ExpressionUUID->"6adf2091-1583-49f1-8e45-0f86364206b0",
 CellID->254849217],
Cell[492146, 11277, 265, 6, 32, "Output",ExpressionUUID->"59a89bc4-6908-4039-a5f9-aeb095fb9dbf",
 CellID->76462826]
}, Open  ]],
Cell[CellGroupData[{
Cell[492448, 11288, 387, 8, 28, "Input",ExpressionUUID->"20ea8291-fda4-4a54-90d4-4014e1ee73a5",
 CellID->26378787],
Cell[492838, 11298, 324, 7, 32, "Output",ExpressionUUID->"face6908-a860-4271-9b72-9ea1d336e294",
 CellID->376239525]
}, Open  ]],
Cell[CellGroupData[{
Cell[493199, 11310, 491, 12, 31, "Input",ExpressionUUID->"d8dd7c12-5c7e-4396-9bd7-d64c5e5494fb",
 CellID->581942048],
Cell[493693, 11324, 300, 6, 32, "Output",ExpressionUUID->"baed68d8-3cbe-4da1-afae-42a2d3ad6eb9",
 CellID->136933787]
}, Open  ]],
Cell[CellGroupData[{
Cell[494030, 11335, 461, 11, 31, "Input",ExpressionUUID->"b7a013c5-1794-4db7-8634-eb90347ed4d0",
 CellID->359432926],
Cell[494494, 11348, 273, 6, 32, "Output",ExpressionUUID->"20cf0c4d-94a8-4b96-86e0-2f99c0ef5d20",
 CellID->944647500]
}, Open  ]],
Cell[CellGroupData[{
Cell[494804, 11359, 528, 13, 31, "Input",ExpressionUUID->"df56369f-8183-4455-8408-aebd2ecf39c6",
 CellID->23040358],
Cell[495335, 11374, 326, 6, 32, "Output",ExpressionUUID->"e7f75417-74d5-41db-978a-5e8c3f260984",
 CellID->491011006]
}, Open  ]],
Cell[CellGroupData[{
Cell[495698, 11385, 542, 14, 31, "Input",ExpressionUUID->"36b7f2bd-73d0-43e7-98e4-aec6e6998919",
 CellID->863393254],
Cell[496243, 11401, 303, 6, 32, "Output",ExpressionUUID->"7e6d1ad5-f223-4290-ad9d-3b7e049f2538",
 CellID->458076985]
}, Open  ]],
Cell[CellGroupData[{
Cell[496583, 11412, 425, 12, 28, "Input",ExpressionUUID->"20d64dff-1667-41cc-a538-e9ac12034073",
 CellID->69540758],
Cell[497011, 11426, 296, 7, 32, "Output",ExpressionUUID->"29329abc-f1a7-4e5c-98b6-4fabe50913ca",
 CellID->366648488]
}, Open  ]],
Cell[CellGroupData[{
Cell[497344, 11438, 224, 4, 28, "Input",ExpressionUUID->"fec8bb98-6eb8-419a-84c7-0b973623f0de",
 CellID->205274268],
Cell[497571, 11444, 756, 20, 42, "Output",ExpressionUUID->"83e31883-54aa-48ce-9a2c-704e8da5b018",
 CellID->133630056]
}, Open  ]],
Cell[CellGroupData[{
Cell[498364, 11469, 5338, 99, 40, "Input",ExpressionUUID->"b1ed0fb6-3c41-4f45-b9fa-f34c61e34c3d",
 CellID->90321558],
Cell[503705, 11570, 734, 18, 42, "Output",ExpressionUUID->"c37dd5a1-2dec-42ce-a9e0-99bc2566180a",
 CellID->74176987]
}, Open  ]],
Cell[CellGroupData[{
Cell[504476, 11593, 5940, 112, 42, "Input",ExpressionUUID->"c321d0f8-0da6-44d5-95a5-29133d91f4c0",
 CellID->257874352],
Cell[510419, 11707, 752, 18, 42, "Output",ExpressionUUID->"772bd001-128d-475c-ac8b-b69f1c62b7d3",
 CellID->732189583]
}, Open  ]],
Cell[CellGroupData[{
Cell[511208, 11730, 821, 16, 40, "Input",ExpressionUUID->"f9698526-c722-44e9-a525-3ead6e82429a",
 CellID->314970901],
Cell[512032, 11748, 6836, 170, 188, "Output",ExpressionUUID->"00b5dd2d-e21f-4bcb-b314-9b6a83b9243f",
 CellID->395232560]
}, Open  ]],
Cell[CellGroupData[{
Cell[518905, 11923, 1455, 28, 40, "Input",ExpressionUUID->"ad0c1f2a-1e69-4557-93aa-59ca2c0e62a4",
 CellID->152789353],
Cell[520363, 11953, 2715, 73, 73, "Output",ExpressionUUID->"64c86ba4-bf63-430e-8b47-96c74881eaa4",
 CellID->10771049]
}, Open  ]],
Cell[CellGroupData[{
Cell[523115, 12031, 840, 17, 40, "Input",ExpressionUUID->"ea43eb5b-9765-4b54-8ffe-5ad51de1013a",
 CellID->30205572],
Cell[523958, 12050, 4609, 124, 130, "Output",ExpressionUUID->"d7e51eec-ada9-4eac-9cf1-cc512e1b29a6",
 CellID->503172637]
}, Open  ]],
Cell[CellGroupData[{
Cell[528604, 12179, 821, 16, 40, "Input",ExpressionUUID->"91b9f92d-c5f4-4f64-b88d-87ac2322ee13",
 CellID->59502084],
Cell[529428, 12197, 3979, 107, 102, "Output",ExpressionUUID->"15a823a7-04d7-4f36-91de-7347b1ecee46",
 CellID->397711627]
}, Open  ]],
Cell[533422, 12307, 827, 17, 40, "Input",ExpressionUUID->"2c6f9e1c-eb57-4a55-8864-45218d8f6998",
 CellID->891451803],
Cell[CellGroupData[{
Cell[534274, 12328, 821, 16, 40, "Input",ExpressionUUID->"f586d792-75ef-48c6-b3a4-8402363a72c6",
 CellID->688471544],
Cell[535098, 12346, 783, 20, 42, "Output",ExpressionUUID->"3742ec4e-69e2-44fc-8223-82ef1009490e",
 CellID->170854664]
}, Open  ]],
Cell[CellGroupData[{
Cell[535918, 12371, 818, 16, 40, "Input",ExpressionUUID->"41c17c1b-eb9a-4631-9c7d-0403eb7c2af6",
 CellID->125749650],
Cell[536739, 12389, 762, 20, 42, "Output",ExpressionUUID->"cacfaca5-2c07-4c9e-87e0-ff8dd3c660ef",
 CellID->389316778]
}, Open  ]],
Cell[CellGroupData[{
Cell[537538, 12414, 828, 17, 40, "Input",ExpressionUUID->"de6272b0-7a74-4f53-a6f4-af899ca07648",
 CellID->632846964],
Cell[538369, 12433, 756, 20, 42, "Output",ExpressionUUID->"e9f6cfe8-c5a6-4a92-9e7e-d18fa143d69e",
 CellID->304155051]
}, Open  ]],
Cell[CellGroupData[{
Cell[539162, 12458, 228, 4, 28, "Input",ExpressionUUID->"749aba8e-a42e-4fec-91e6-2e6c466aaa6b",
 CellID->449266007],
Cell[539393, 12464, 392, 8, 43, "Output",ExpressionUUID->"6225dbda-3e23-48d1-bdad-f1adcdc3a4d7",
 CellID->28412752]
}, Open  ]],
Cell[CellGroupData[{
Cell[539822, 12477, 5343, 99, 40, "Input",ExpressionUUID->"005c9149-932b-4f2c-baf0-c8c503781e15",
 CellID->114189092],
Cell[545168, 12578, 379, 8, 43, "Output",ExpressionUUID->"3c2446fd-326c-4267-b517-61ef9f65e054",
 CellID->601402464]
}, Open  ]],
Cell[CellGroupData[{
Cell[545584, 12591, 5468, 101, 40, "Input",ExpressionUUID->"5309d0ed-e3f5-4a2c-93de-22ccdb7ea498",
 CellID->26496228],
Cell[551055, 12694, 380, 8, 43, "Output",ExpressionUUID->"a962589e-8f1c-4a47-8b1f-e65941ac3c22",
 CellID->21836723]
}, Open  ]],
Cell[CellGroupData[{
Cell[551472, 12707, 5493, 102, 40, "Input",ExpressionUUID->"99826318-d39b-438a-a3a9-a977808892b6",
 CellID->417328026],
Cell[556968, 12811, 381, 8, 43, "Output",ExpressionUUID->"4bc06d83-2b18-417c-b2b1-e872c8446135",
 CellID->133724384]
}, Open  ]],
Cell[CellGroupData[{
Cell[557386, 12824, 5500, 102, 40, "Input",ExpressionUUID->"36c90986-97ba-48d5-9524-eb48a0a41bc0",
 CellID->405933373],
Cell[562889, 12928, 188, 3, 32, "Output",ExpressionUUID->"9a2d75ae-6c9c-4ab0-b27c-e3746cdc671d",
 CellID->109885855]
}, Open  ]],
Cell[CellGroupData[{
Cell[563114, 12936, 5503, 102, 40, "Input",ExpressionUUID->"d2db58f3-f501-42f7-9379-a56c5a9101eb",
 CellID->363633787],
Cell[568620, 13040, 171, 3, 32, "Output",ExpressionUUID->"72e7c255-1759-4f3a-af2f-ed80bd125a2e",
 CellID->493860401]
}, Open  ]],
Cell[CellGroupData[{
Cell[568828, 13048, 5494, 102, 40, "Input",ExpressionUUID->"77883d99-c702-480c-a828-9810e41dcef5",
 CellID->51962248],
Cell[574325, 13152, 457, 10, 38, "Output",ExpressionUUID->"f7d9eb0a-ccc9-4f7c-8582-449d5d5cded6",
 CellID->830664607]
}, Open  ]],
Cell[CellGroupData[{
Cell[574819, 13167, 5497, 102, 40, "Input",ExpressionUUID->"3fae3b84-08ed-4274-b958-83142679aa4a",
 CellID->212115420],
Cell[580319, 13271, 179, 3, 32, "Output",ExpressionUUID->"a2bbcf3b-297c-4f6f-a1ab-db8550823e0c",
 CellID->24618772]
}, Open  ]],
Cell[CellGroupData[{
Cell[580535, 13279, 242, 4, 28, "Input",ExpressionUUID->"d087ca19-7178-40d2-a7c1-fc286e0dfe48",
 CellID->112061228],
Cell[580780, 13285, 173, 3, 32, "Output",ExpressionUUID->"6d31db38-e284-438e-aaa0-48d97a7a8e64",
 CellID->97231974]
}, Open  ]],
Cell[CellGroupData[{
Cell[580990, 13293, 243, 4, 28, "Input",ExpressionUUID->"867ad015-de6a-4f03-9ef6-ac3314b32e8a",
 CellID->182167408],
Cell[581236, 13299, 169, 3, 32, "Output",ExpressionUUID->"04908dd1-f744-4ae6-a6bb-338b08fcede1",
 CellID->83559096]
}, Open  ]],
Cell[CellGroupData[{
Cell[581442, 13307, 252, 4, 28, "Input",ExpressionUUID->"59e787c0-4f2f-44cf-884b-56a3b4e02fb8",
 CellID->1451135],
Cell[581697, 13313, 182, 3, 32, "Output",ExpressionUUID->"de9d5351-6bb9-4fce-acfa-21dea543df46",
 CellID->144354711]
}, Open  ]],
Cell[CellGroupData[{
Cell[581916, 13321, 247, 4, 28, "Input",ExpressionUUID->"a07c657c-3af9-4c5a-b726-87c9198f0642",
 CellID->5597045],
Cell[582166, 13327, 185, 3, 32, "Output",ExpressionUUID->"98bca6f0-0cf7-4e51-a6eb-6eaf574e91f0",
 CellID->379174966]
}, Open  ]],
Cell[CellGroupData[{
Cell[582388, 13335, 252, 4, 28, "Input",ExpressionUUID->"574b6786-cb80-4d51-a554-96c16ae37f99",
 CellID->706683223],
Cell[582643, 13341, 182, 3, 32, "Output",ExpressionUUID->"c0c64592-13cd-4ecf-bb64-6ff310234a1b",
 CellID->29494336]
}, Open  ]],
Cell[CellGroupData[{
Cell[582862, 13349, 345, 8, 28, "Input",ExpressionUUID->"60eba22c-ee5d-43ac-83be-b8b0901094d9",
 CellID->448041210],
Cell[583210, 13359, 265, 6, 32, "Output",ExpressionUUID->"177b3a8e-d6f1-464b-9fce-83ddd7e69fc1",
 CellID->81407850]
}, Open  ]],
Cell[CellGroupData[{
Cell[583512, 13370, 1021, 18, 143, "Input",ExpressionUUID->"ea63bfd0-5729-4c02-81c4-7c2c046800b7",
 CellID->474160295],
Cell[584536, 13390, 740, 13, 71, "Output",ExpressionUUID->"e9780aee-6a6b-461f-93f9-b2836f20b46f",
 CellID->661458330]
}, Open  ]],
Cell[CellGroupData[{
Cell[585313, 13408, 380, 9, 48, "Input",ExpressionUUID->"9eea9510-bc7c-49ee-832d-80505aa16dbc",
 CellID->678421109],
Cell[585696, 13419, 268, 6, 32, "Output",ExpressionUUID->"bd6ae06d-ad56-4414-96c7-3fac3f55e6c4",
 CellID->148221858]
}, Open  ]],
Cell[CellGroupData[{
Cell[586001, 13430, 397, 9, 48, "Input",ExpressionUUID->"cd5f49bb-240f-4597-8edf-07bdc0e25d72",
 CellID->348040231],
Cell[586401, 13441, 467, 11, 39, "Output",ExpressionUUID->"ce137662-aa22-4adc-aa95-19cf0bb8a5d4",
 CellID->62786989]
}, Open  ]],
Cell[CellGroupData[{
Cell[586905, 13457, 403, 9, 67, "Input",ExpressionUUID->"cb1b73b9-da9e-4c8b-90b2-6b4f5941cf8c",
 CellID->564230119],
Cell[587311, 13468, 256, 5, 32, "Output",ExpressionUUID->"e42fc435-e6a7-4064-9721-195a52874372",
 CellID->203874879]
}, Open  ]],
Cell[CellGroupData[{
Cell[587604, 13478, 444, 10, 48, "Input",ExpressionUUID->"9817e52a-fb53-489f-8dc0-8f4dbf72a84b",
 CellID->28566225],
Cell[588051, 13490, 359, 8, 32, "Output",ExpressionUUID->"18bb7526-82d2-4f05-b640-8c84b8a8d544",
 CellID->122361444]
}, Open  ]],
Cell[CellGroupData[{
Cell[588447, 13503, 399, 9, 48, "Input",ExpressionUUID->"11442306-4abc-4f36-ad97-12c1869d2b5a",
 CellID->193594321],
Cell[588849, 13514, 1228, 37, 102, "Output",ExpressionUUID->"e86c8dc1-4eed-47cc-af94-349ad4bd3f9c",
 CellID->592372256]
}, Open  ]],
Cell[CellGroupData[{
Cell[590114, 13556, 230, 4, 28, "Input",ExpressionUUID->"159ee7ce-ea0c-4995-ada5-53d412a99767",
 CellID->21058937],
Cell[590347, 13562, 217, 5, 32, "Output",ExpressionUUID->"06cff7f9-bcbe-4a1e-8d53-10147c447966",
 CellID->397372947]
}, Open  ]],
Cell[CellGroupData[{
Cell[590601, 13572, 5352, 85, 942, "Input",ExpressionUUID->"348ebd45-1524-459a-a32e-dfd8cf8f996b",
 CellID->644420079],
Cell[595956, 13659, 6009, 102, 275, "Output",ExpressionUUID->"9f0df958-682f-4667-89cb-e0a4cc0dd339",
 CellID->132509580]
}, Open  ]],
Cell[601980, 13764, 5500, 88, 980, "Input",ExpressionUUID->"ca04654a-fab4-4a0a-a35e-bd01ffd3bba6",
 CellID->670798337],
Cell[CellGroupData[{
Cell[607505, 13856, 228, 4, 28, "Input",ExpressionUUID->"e24c0953-d999-4885-9637-f6269f7a9554",
 CellID->110837770],
Cell[607736, 13862, 5778, 98, 655, "Output",ExpressionUUID->"8d83613f-5fb8-44bf-aef2-d9382c225ea4",
 CellID->771918707]
}, Closed]],
Cell[CellGroupData[{
Cell[613551, 13965, 230, 4, 24, "Input",ExpressionUUID->"a9de2a8e-81eb-4a8b-8c8e-97f7a4e127a4",
 CellID->135812967],
Cell[613784, 13971, 5789, 98, 655, "Output",ExpressionUUID->"f1e2b88a-8791-4d66-83cf-bf0f5d58f7f1",
 CellID->689181662]
}, Closed]],
Cell[619588, 14072, 4889, 108, 805, "Input",ExpressionUUID->"d710b0bd-baa1-4fd0-b772-32dddd68b24f",
 CellID->244482292],
Cell[CellGroupData[{
Cell[624502, 14184, 233, 4, 28, "Input",ExpressionUUID->"2e4e7171-bfcb-4ba7-8c8a-932042c5687c",
 CellID->138029223],
Cell[624738, 14190, 112641, 2087, 677, "Output",ExpressionUUID->"5093481d-fe93-4c32-a541-d9696b7cd1a9",
 CellID->38757056]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

