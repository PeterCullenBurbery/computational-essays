(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    689150,      13971]
NotebookOptionsPosition[    561390,      11484]
NotebookOutlinePosition[    674982,      13656]
CellTagsIndexPosition[    674591,      13642]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Boolean Basics exercises in Mathematica", "Title",
 CellChangeTimes->{{3.878216198644116*^9, 3.8782162044337797`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.878216207649413*^9, 3.878216209252844*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercises", "Section",
 CellChangeTimes->{{3.878216212339527*^9, 3.8782162136568184`*^9}},
 CellID->12682709,ExpressionUUID->"57a12ffd-2d36-4846-9441-06002f34c887"],

Cell["\<\
Suppose logical values were respectively -1 for falsehood and +1 for truth, \
instead of 0 and 1. What operations \[SmallCircle] in Table 1 would then \
correspond to {a} max(x,y)? {b} min(x,y)? {c} -x? {d} x\[CenterDot]y?\
\>", "Text",
 CellChangeTimes->{{3.8782163005137405`*^9, 3.878216365262146*^9}},
 CellID->71202886,ExpressionUUID->"1918f9c3-00eb-480b-84ee-f07452b24d7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"booleanSubstitution", "=", 
  RowBox[{"Replace", "[", 
   RowBox[{"{", 
    RowBox[{"0", "->", 
     RowBox[{"-", "1"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8782163787105093`*^9, 3.878216404946874*^9}},
 CellLabel->"In[404]:=",
 CellID->44573635,ExpressionUUID->"aafb4df6-5c08-4a88-8f81-f1126bd30c70"],

Cell[BoxData[
 RowBox[{"Replace", "[", 
  RowBox[{"{", 
   RowBox[{"0", "\[Rule]", 
    RowBox[{"-", "1"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.878216405614787*^9},
 CellLabel->"Out[404]=",
 CellID->30334630,ExpressionUUID->"cdb7fc0b-397e-42c9-aecd-1061d3dffb94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"booleanSubstitution", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.8782164078568306`*^9, 3.8782164139912043`*^9}},
 CellLabel->"In[406]:=",
 CellID->19156260,ExpressionUUID->"6cf583f9-bac3-478f-88fe-321d817b0004"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{{3.878216410852773*^9, 3.878216414345712*^9}},
 CellLabel->"Out[406]=",
 CellID->402964714,ExpressionUUID->"13457e53-9807-4a91-968b-a5c746d5b4c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8782164211343346`*^9, 3.8782164590787487`*^9}},
 CellLabel->"In[410]:=",
 CellID->176968454,ExpressionUUID->"5eb4283d-6857-4d4f-bd77-865e642f2891"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878216436578271*^9, 3.8782164594244223`*^9}},
 CellLabel->"Out[410]=",
 CellID->100269150,ExpressionUUID->"3219bf17-249f-4aeb-8896-733a18edbc05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanTable", "[", 
  RowBox[{"Or", "[", 
   RowBox[{"p", ",", "q"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878216486407346*^9, 3.8782165002548933`*^9}},
 CellLabel->"In[413]:=",
 CellID->454315875,ExpressionUUID->"6c6fad27-bd57-4cce-b7da-c0deefad2e74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.8782164900542603`*^9, 3.878216500586909*^9}},
 CellLabel->"Out[413]=",
 CellID->76767793,ExpressionUUID->"b0a136c8-bca8-424b-a070-d32aa384b638"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "[", 
   RowBox[{"Or", "[", 
    RowBox[{"p", ",", "q"}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"True", "->", "1"}], ",", 
    RowBox[{"False", "->", 
     RowBox[{"-", "1"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.878216486407346*^9, 3.878216512946293*^9}},
 CellLabel->"In[414]:=",
 CellID->232337371,ExpressionUUID->"24543eb5-f8e3-4d6e-bdd8-e0a4a59e1933"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.878216513463448*^9},
 CellLabel->"Out[414]=",
 CellID->104254831,ExpressionUUID->"bb7f6464-e49b-456e-b643-9d9f5bda9c34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "[", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", 
     RowBox[{"Or", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"And", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nand", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nor", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"p", ",", "q"}], "]"}]}], "}"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"True", "->", "1"}], ",", 
    RowBox[{"False", "->", 
     RowBox[{"-", "1"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.878216486407346*^9, 3.8782165747267313`*^9}},
 CellLabel->"In[420]:=",
 CellID->632146201,ExpressionUUID->"fc47d90e-9723-4d92-a14f-268337614365"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878216530555565*^9, 3.878216575485437*^9}},
 CellLabel->"Out[420]=",
 CellID->320391991,ExpressionUUID->"15fb6738-14df-4a5f-b188-c50a557a8afe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"BooleanTable", "[", 
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", 
       RowBox[{"Or", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", 
       RowBox[{"And", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", 
       RowBox[{"Nor", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", 
       RowBox[{"Nand", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", 
       RowBox[{"Min", "[", 
        RowBox[{"p", ",", "q"}], "]"}], ",", 
       RowBox[{"Max", "[", 
        RowBox[{"p", ",", "q"}], "]"}]}], "}"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"True", "->", "1"}], ",", 
      RowBox[{"False", "->", 
       RowBox[{"-", "1"}]}]}], "}"}]}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "q", ",", 
        RowBox[{"p", "\[Or]", "q"}], ",", 
        RowBox[{"p", "\[And]", "r"}], ",", 
        RowBox[{"p", "\[Nor]", "q"}], ",", 
        RowBox[{"p", "\[Nand]", "q"}], ",", 
        RowBox[{"Min", "[", 
         RowBox[{"p", ",", "q"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"p", ",", "q"}], "]"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8782166093405952`*^9, 3.878216671795879*^9}},
 CellLabel->"In[424]:=",
 CellID->238892758,ExpressionUUID->"d70c290a-ee4d-4c35-8e13-c8fc1bdb7acb"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["p",
       HoldForm], 
      TagBox["q",
       HoldForm], 
      TagBox[
       RowBox[{"p", "||", "q"}],
       HoldForm], 
      TagBox[
       RowBox[{"p", "&&", "r"}],
       HoldForm], 
      TagBox[
       RowBox[{"p", "\[Nor]", "q"}],
       HoldForm], 
      TagBox[
       RowBox[{"p", "\[Nand]", "q"}],
       HoldForm], 
      TagBox[
       RowBox[{"Min", "[", 
        RowBox[{"p", ",", "q"}], "]"}],
       HoldForm], 
      TagBox[
       RowBox[{"Max", "[", 
        RowBox[{"p", ",", "q"}], "]"}],
       HoldForm]},
     {"1", "1", "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1"},
     {"1", "1", "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1"},
     {"1", "1", "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}]},
     {"1", "1", "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {"1", 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", "1"},
     {"1", 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], "1"},
     {"1", 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}]},
     {"1", 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", "1"},
     {
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], "1"},
     {
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", "1", "1"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], "1"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", "1", 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "1", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {$CellContext`p, $CellContext`q, 
       Or[$CellContext`p, $CellContext`q], 
       And[$CellContext`p, $CellContext`r], 
       Nor[$CellContext`p, $CellContext`q], 
       Nand[$CellContext`p, $CellContext`q], 
       Min[$CellContext`p, $CellContext`q], 
       Max[$CellContext`p, $CellContext`q]}}]]]], "Output",
 CellChangeTimes->{{3.8782166203320065`*^9, 3.8782166723173246`*^9}},
 CellLabel->"Out[424]//TableForm=",
 CellID->919608235,ExpressionUUID->"6f01b61b-834a-465f-abf0-cfe6a606d789"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"p", ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "16"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8782167185172777`*^9, 3.8782167453252993`*^9}},
 CellLabel->"In[425]:=",
 CellID->52965373,ExpressionUUID->"ba7088f1-2bfc-4327-9091-2d139ab6045d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 1, 2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 1, -2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 2, 1, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 2, -2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 2, -1, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["8", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 2, -1, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["9", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 2, -2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["10", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["11", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["11", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 2, 1, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["12", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["12", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["13", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["13", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 1, -2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["14", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["14", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2, 0, 1, 2, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["15", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["15", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {2}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8782167462959433`*^9},
 CellLabel->"Out[425]=",
 CellID->642806366,ExpressionUUID->"10bb65ab-a482-44da-99d3-5d8623c82f7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"BooleanTable", "@", 
    RowBox[{"BooleanFunction", "[", 
     RowBox[{"p", ",", "2"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "16"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8782167185172777`*^9, 3.878216772624496*^9}},
 CellLabel->"In[427]:=",
 CellID->373848653,ExpressionUUID->"a9d0dc4b-4d9d-41da-9397-794f5c3d537a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "True", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "True", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "True", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "False", ",", "True", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "False", ",", "False", ",", "False"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8782167625030465`*^9, 3.8782167742562375`*^9}},
 CellLabel->"Out[427]=",
 CellID->536009969,ExpressionUUID->"67aff0f3-d983-4589-a8a9-e2e6a81082e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782167808348885`*^9, 3.878216799002063*^9}, 
   3.8782168465675926`*^9},
 CellLabel->"In[432]:=",
 CellID->43671482,ExpressionUUID->"e0110e7e-1964-42a6-bc43-2e0149a3c8d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878216788069772*^9, 3.8782167994258585`*^9}, 
   3.878216847118369*^9},
 CellLabel->"Out[432]=",
 CellID->28253024,ExpressionUUID->"69e842dd-43b5-4606-a4ab-b4fe1d5ba320"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Max", "/@", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "->", "False"}], ",", 
    RowBox[{"1", "->", "True"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8782167808348885`*^9, 3.878216854650078*^9}},
 CellLabel->"In[433]:=",
 CellID->58886209,ExpressionUUID->"fd87f644-15bb-466e-b729-c612a0439305"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.8782168074380417`*^9, 3.878216855095395*^9}},
 CellLabel->"Out[433]=",
 CellID->27837890,ExpressionUUID->"12b6c889-72ce-4d48-ba78-1caaf67dca08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"Max", "/@", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "->", "False"}], ",", 
      RowBox[{"1", "->", "True"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BooleanTable", "@", 
     RowBox[{"BooleanFunction", "[", 
      RowBox[{"p", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "16"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782168122785892`*^9, 3.8782168129435577`*^9}, {
  3.878216862750175*^9, 3.878216878988134*^9}},
 CellLabel->"In[434]:=",
 CellID->33848682,ExpressionUUID->"c01c55ca-7b68-4243-8458-b7750864ccfe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "7", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.878216879511587*^9},
 CellLabel->"Out[434]=",
 CellID->513928740,ExpressionUUID->"4ba5ee34-1cef-4089-b768-5db88f1511f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanFunction", "[", 
  RowBox[{"7", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.87821688209638*^9, 3.878216884889145*^9}},
 CellLabel->"In[435]:=",
 CellID->83448712,ExpressionUUID->"c25cef78-8b12-4839-a595-5d1eb23d329c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["BooleanFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.6, 0.7, 0.5], 
               Opacity[0.7], 
               Arrowheads[0.028937842778793414`], 
               ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                 "]], 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                 "]], 0.030239520958083826`], 
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[{
                 GrayLevel[0], 
                 Opacity[0.7]}], 
               DiskBox[{0., 3.}, 0.1], 
               DiskBox[{1., 2.}, 0.1], 
               
               RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                0.08823530000000002}], 
               DiskBox[{2., 1.}, 0.1], 
               
               RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
             PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of variables: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.6, 0.7, 0.5], 
               Opacity[0.7], 
               Arrowheads[0.028937842778793414`], 
               ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                 "]], 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                 "]], 0.030239520958083826`], 
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[{
                 GrayLevel[0], 
                 Opacity[0.7]}], 
               DiskBox[{0., 3.}, 0.1], 
               DiskBox[{1., 2.}, 0.1], 
               
               RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                0.08823530000000002}], 
               DiskBox[{2., 1.}, 0.1], 
               
               RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
             PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of variables: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  BooleanFunction["BDD" -> {-2, 0, 2, -1, 1, 1, -1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8782168854320745`*^9},
 CellLabel->"Out[435]=",
 CellID->308300484,ExpressionUUID->"c0f1d869-e6fc-4b71-a182-fa7874a7b5ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanMinimize", "[", 
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"7", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782168897970877`*^9, 3.878216898632037*^9}},
 CellLabel->"In[437]:=",
 CellID->103575752,ExpressionUUID->"33ae229c-74bc-4884-acb9-9a1c270dfa6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", "p"}], "||", 
  RowBox[{"!", "q"}]}]], "Output",
 CellChangeTimes->{{3.8782168930861654`*^9, 3.878216899195657*^9}},
 CellLabel->"Out[437]=",
 CellID->89297360,ExpressionUUID->"c725f780-0b5c-49a5-bde4-3ab7c1624047"]
}, Open  ]],

Cell[CellGroupData[{

Cell["!p||!q", "WolframAlphaLong",
 CellChangeTimes->{{3.878216914002512*^9, 3.878216918952999*^9}},
 CellLabel->"In[438]:=",
 CellID->26889301,ExpressionUUID->"a2c7407e-abff-4300-b880-4b28c5485a92"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "!p||!q", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"MinimalForms__More"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {" !p ||  !q"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"\[Not]", "p"}], "\[Or]", 
               RowBox[{"\[Not]", "q"}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {" !p ||  !q"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["p", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["q", Italic, 14, StripOnInput -> False], "\")\""}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Truth table", "scanner" -> "Boolean", "id" -> 
     "TruthTable", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["minput", {}, {"BooleanTable[ !p ||  !q, {p, q}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "p", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "q", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   RowBox[{
                    RowBox[{"\[Not]", "p"}], "\[Or]", 
                    RowBox[{"\[Not]", "q"}]}], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Minimal forms", "scanner" -> "Boolean", "id" -> 
     "MinimalForms", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"DNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"CNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ANF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NOR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Nor]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NAND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Nand]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"AND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"OR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"BOOLE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Nand]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"BIT2\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], HoldForm], 11, SpanMaxSize -> 0, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"IMPLIES\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Implies]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}], 
       XMLElement["infos", {"count" -> "6"}, {
         XMLElement[
         "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[And] e_2 \[And] ... is the logical AND function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/And.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/AND.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[Nor] e_2 \[Nor] ... is the logical NOR function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Nor.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NOR.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> 
           "e_1 \[Nand] e_2 \[Nand] ... is the logical NAND function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Nand.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NAND.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> 
           "p implies q represents the logical implication p\
\[DoubleRightArrow]q"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Implies.html",
              "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Implies.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "Less", "input" -> "MinimalForms__Less"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "MinimalForms__Text notation"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Other forms", "scanner" -> "Boolean", "id" -> 
     "OtherForms", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"ESOP\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ITE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "OtherForms__Text notation"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {
        "text" -> "e_1 \[Xor] e_2 \[Xor] ... is the logical XOR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Xor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/XOR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Logic circuit", "scanner" -> "Boolean", "id" -> 
     "LogicCircuit", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                
                LineBox[{{1.685618083164127, 0.42140452079103197`}, {
                 1.7814180831641269`, 0.42140452079103197`}}], 
                
                LineBox[{{1.685618083164127, 0.521404520791032}, {
                 1.7814180831641269`, 0.521404520791032}}], 
                
                CircleBox[{1.4856180831641268`, 0.47140452079103196`}, {0.3, 
                 0.3}, 
                 NCache[{2 Pi - ArcSin[
                    Rational[1, 3]], 2 Pi + ArcSin[
                    Rational[1, 3]]}, {5.943348397725464, 
                  6.623022216633708}]], 
                
                CircleBox[{1.753645683164127, 0.689362520791032}, {
                 0.31830400000000003`, 
                 0.31830400000000003`}, {-1.52424, -0.7542}], 
                
                CircleBox[{1.753618083164127, 0.25340452079103193`}, {
                 0.31830400000000003`, 0.31830400000000003`}, {0.75426, 
                 1.52424}], 
                
                LineBox[{{1.985618083164127, 0.47140452079103196`}, {
                 2.085618083164127, 0.47140452079103196`}}]}, {
                
                LineBox[{{0.7428090415820634, 0.9428090415820636}, {
                 0.8056090415820635, 0.9428090415820636}}], 
                
                LineBox[{{1.0228090415820634`, 0.9428090415820636}, {
                 0.8056090415820635, 0.8428090415820636}, {0.8056090415820635,
                  1.0428090415820637`}, {1.0228090415820634`, 
                 0.9428090415820636}}], 
                
                CircleBox[{1.0628090415820635`, 0.9428090415820636}, {0.04, 
                 0.04}], 
                
                LineBox[{{1.1028090415820635`, 0.9428090415820636}, {
                 1.1428090415820635`, 0.9428090415820636}}]}, {
                
                LineBox[{{0.16, 0.9428090415820636}, {0.2, 
                 0.9428090415820636}}], 
                InsetBox[
                 FormBox[
                  TagBox["p", HoldForm], TraditionalForm], {0., 
                 0.9428090415820636}]}, {
                
                LineBox[{{0.7428090415820636, 2.220446049250313*^-16}, {
                 0.8056090415820636, 2.220446049250313*^-16}}], 
                
                LineBox[{{1.0228090415820636`, 2.220446049250313*^-16}, {
                 0.8056090415820636, -0.09999999999999978}, {
                 0.8056090415820636, 0.10000000000000023`}, {
                 1.0228090415820636`, 2.220446049250313*^-16}}], 
                
                CircleBox[{1.0628090415820637`, 2.220446049250313*^-16}, {
                 0.04, 0.04}], 
                
                LineBox[{{1.1028090415820635`, 2.220446049250313*^-16}, {
                 1.1428090415820635`, 2.220446049250313*^-16}}]}, {
                LineBox[{{0.16, 0.}, {0.2, 0.}}], 
                InsetBox[
                 FormBox[
                  TagBox["q", HoldForm], TraditionalForm], {0., 0.}]}}, {
               
               LineBox[{{{1.685618083164127, 0.42140452079103197`}, {
                1.1428090415820635`, 2.220446049250313*^-16}}, {{
                1.685618083164127, 0.521404520791032}, {1.1428090415820635`, 
                0.9428090415820636}}}], 
               
               LineBox[{{0.7428090415820634, 0.9428090415820636}, {0.2, 
                0.9428090415820636}}], {}, 
               
               LineBox[{{0.7428090415820636, 2.220446049250313*^-16}, {0.2, 
                0.}}], {}}}, AspectRatio -> 1., ImageSize -> NCache[
               Rational[550, 3], 183.33333333333334`]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Venn diagram", "scanner" -> "SetTheory", "id" -> 
     "VennDiagram", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                GrayLevel[1], 
                PolygonBox[CompressedData["
1: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
y0Uedt6w1P6b5MMVaeULndx5OC+lE+xF8uOif9ToJF/iKlrgzF+XG7CxNqlA
0IOHlrLdS+6Q/Bl770HZKhce3qDvzl/h3YpZVLJ4hiMPR4R/bW8n+fVINO/R
m+M87LYQW+pM8m3hlBr9qDF5nuMCAo4k/35Pf3jMdycPdexpirYkH199Hi66
SZaHYSz67ATJz8Xb/WmXhHjY+lIyKY/k694LY7f3jXDxR9O3Z1okf+sJbzSr
qObivfvpBuIP+jFrz5Rd91Mu1htBTiTJ77d2fgt/5k+ucw+JfyH5/tbJDJdN
FlysenJgvpjkfx+xE4edFbhYvjPETXjNEPKztql6sjlYUV7yI4rwg7XTtQ+m
FRzMfF/bqED4wjdaPUD0LgeXt8vVxBP+ME6MuJRvwsEtvJ8XigifaN4+ctR8
GQeDTqWxLAi/PDwsnE41Eu7McXfeS/iGv0fEM+c+hYKqfyfbEv65FOfnFbqP
wi2rGva4Ez462DnLF/uHjfbRg81HCT/tfuu8sjefjU/SRuv7CF/xC+nuCnRk
45IKm0fjhL++fhKJC17BRtllf56YED4zknnZwysn3PjyhkEf4Te7ssAz3Ass
9CoU/BNA+K73kcZo5DIWahrusOEnunByY09j26tp3LXYasFBwoeUZNrkd2vC
kX//HpEi/Chb06LuzmLiNkbZyQbCl85/lRvNbmXicdMH0wWEP9NjhpLDnRmY
sneHYwnh0+zbFlmGyVNoKrFCuInwa9TE23SL5kn8RitqGyd8m+vWlTw0N4Gb
RsvcZwn/fjGLcN68ZQL1NOoVfxE+Pun/+b6Z5Tg+V7ab+EL4+eXmIINbvmPY
pWXucpPwdbzy9gsziaN4WPvq3Azh7xNbIry73oygbFVPoQrhc/q5Sg/7DjqK
qAibrib8Ll3eMlLCHsbwlM6DWYTvdYZe960SG0b7lof9g4T/G764NmQqDGHb
VJBQmSmFNjOssDQtGj7zsD2/6QKFJZfXGe8xG0SF4NGrmwIplJ70uP3MYQCX
BS08+zqaQq8HbYIS3v1oltwgW5dMIaQGBfgt7sP9ShfszmdTOCf/IT9FrQeN
oDn2diGFDEWXrQvNu9B3x9kf/33/OP1LLkvKoxMdvutE/vd9ZEDYfkQ3tgP5
DTxW/Pf9JK4+Mqe7sB3NXGUXCeZTmMIQfmLf3oZ82ubv0zMp7BDV3r79Zwsu
OvdCvzaRwvt3v8YXyzZjSLmkrU8YhSG505sLIupRJO9nau5VCveLM5fP9n9C
oy2RFz1PU+hd+dBLVucjLjKmVX/eSyF77frHA0mVeCzqU9RbJQrtzNMa5UXe
oa1HkJWpEIXTOZZrGaOvcKXQYec7faT+aca/L5Tk4Fe3vna3EjaGMCVCZu8m
Ef9+4Lgsgo18+o3KaQeEgeF9677nKTb+H9Y5Rzg=
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1:eJwVl3c8Fe4XxxEhZVSioeSLphJKqA6i0ialZJSkYZedilARhQjRIKVsQoSO
vde1R7j32tx9uUnG7/7+el7v1/N8znie1/M652y1cjS6ycfDw7OXl4fn/+td
8YYY4WY6ZCsHy2aYk4Gx7Uyl0HEGGF5RW6HfSII+493/biYyYNeoyZmL6iRQ
qi7gfb7EAApb5AdPHBEWfGQnTC8z4fx2jn8rZxA+9v7WrU9nQqc9Rc46ZQCy
KuYVqvhYcOxwUO3ixX5IJeiqahiz4Ot6p+1UTh/YbdkVs/oTC55Uz670ftkL
QUCQ0qGzgLbSznBuUw+s18vjzznIBr64X/X5CV2QIWNz9upjNjRRyForZDvh
3KN/j7eVs2FuJF3jaGQ7uHj7VgjzT0OQgancT742GDioMsnWmQYzVoxA9W0C
XCKE3ez2noYsoXz5Z6+aIZplbZycMw09wUbL12k3gNmNJz7mE9Pwh2S5dnqo
BgonH1mNbpiBV3Gznv0PKmHPvIq8psEMfNCsXgoVKoN1ces/nXWZAXLvm4oP
ksVA/vPs3oa4GbCR3H6ucHke/Nhf3B9RMgN2L4cIS/VpoChUN5FLmoGDNNoK
dtt70Io9Z+K2NAM8qdf1thmag4KnZGLzeg48170JJy1iMXOV28oiZQ4MZ7B6
Bi1TscwjPviAHgeU5/pkDobn4pU7eSRNYw6oeH1+2zhfhPfLM4Mqr3FAW10v
QEi9DJt+K9W23eEAv5dhszKrEj0UlifccOSAY9+bPNGMWvy8oaj/vjMH9jm6
jLbYNaK7bYkQvxMHFH/sphhFtmCL9ov7a2050KrfyDNwvxWLEoJUvlhx/UUl
8sQbtuP2pRGZwkscsK7kuaW6pxN1BtcRLh7nwN26VuZu4W4UIF9K9lTjAMf6
Yb4CuQcXNw7V7tzMgQC7UN28/D40FZCUcODngFqs7Xv34H4U32G41WBsBhK6
y92XmQ9idku9aVnVDFisWiY1F0FEIdZ/fcSEGbjrZeB6z5OET1PbH6Q+mAGV
eZu+/KtkrE172KJkOANmKxZrYrWG8EQ/n4LDfzMwI+l2dFJ6GC/n+z1wZ02D
aWg28T57GM+37Awy/jUNRpeSCUL1Ixgy0pEv/mwazu/pp3h+GEUvuajN+aen
gUf8c3600xhe5RN/bCI2DVbsa67qR8ZR3OPL8fkmNvyjum3bITSBUsyI4JwX
bPhqvytep2kCbXo6BF7ps2H0zqngi6GT+PL0lEjsPAsuOyTd1zw7hT5f/SLG
M1ngb2veUCVIwfnif3ueW7EgU5++SCii4G4r5HkhwYIKeXknNXsq6u0OLOX7
xQTZiOzAamkaeu578oP3NhPCgrPKbiINB6N0v78VY0JCaFPS5DU6FhC/i5By
GKAqenxIZYGOKi0dMeMmDBj6ZCgnepKBPth4+wWTDrxB0sNl4Qz0NiNf2rCX
Dpa3NzcndTOQp8nz2dfbNPDzWhaTtpGJboeNrK+/p4KuhWZ05VUmnr3UreTc
QoFozcPVpGgmPlrwYPIvTYEF/4fq6VYmNihXPT65cwrS1WaHmcIsTFRztnIy
mgS7M+lSjYdZGKy7qfWz+wRohkYKPnBgcd9XIHXD23G4a2wnyoxl4ef3obeW
CsaAx3mvpkIVC30kv4oEdI2C9sHj50SpLNzyW1C+nzUCrKDguk/ibDS6Y52n
sXIEtMIVhvqV2SiW4ane+N8w1P3QCM49w8b9prw+dRpDMObt7SZ/i43WKq9L
rc+SYX3vSwmFh2wcFLr3oPk6CZZ6DoRkv2Lj52/HHY+4EEFnl31vzXs2hr1I
3FUvMghxDtqp1slslE8Q2cZS6odjYi89/LLZKPPhuKnpuT7Qfxjq8d8PNsbJ
R3vYOfVAbLLut6P5bNSukjgRFtYFnrnR9UO5bDyimx2073sHbPoeYs2fyUb7
D65juR1tYBS9vPjLFza2qTq3Pf1LgEX9IFJDDBv7Iv96rdzSApdqm+I9A9m4
ipF50TykARbHN4ZmurJxpnPP/W+kGnDZ6sfjZsHNj7eWVKdVCR6HqILNR7nx
3N9FC4krhY/5C16lCmzU69ce8hIuAgVooFzgZ+NpqWun9Cdz4I2jS1rIIAsv
77AlrvmZAo2G3jVuP1go+6Hy79mQWKipllgmHcxCnpKeXdvuzvzaYLWl18uc
y9pN2z6dEACai98LZy5fCyjsWEr2gxrpd3GcUywkqmmCb8RrUGJtn1qtybWn
F37U6vg78DXM/1O1jYXnn87F09w+wYumWv01kly9YdW9zqNfISSq8uosLwvz
T5xYe2xFGqil/C1zozHxuW3I21UjmTCxECn4qpeJsn1femJ0voNG0Nd8nSom
6sWmNeW9zYW20+tvv8pi4ukNL2MuMH5A/64vyR5xTDQ2Nr9vqfsT5msHpBaf
MrHoBiG9NrQIFPVlT8o6M5FiUZDv2/cLtpNCBwZNmTipoRmsFVYCZu83uh7W
Y2K2glp+Q3YpHC6yzdRQYiLLUAvsWsvAffv4/g5JJh5bpyG6mlEOa3rT08QX
GWhhYCCbJ1IJ59eHllFGGPiLzH50XqEKRHKE5e42MrBqv41uz6FqaN2s6x2Y
w0Cb0pSwE0Y1IOi3zP9ULAPD34wmvLlZC0MFebRMX67e8FlhoVsdlKhZuPy8
xcCTX/yVMwPq4WNraPPtMwx86hVuYxfeAOqfXIqLVBjoFn65dTyuEV5EFSzk
STFwec3XWZnPTZCuvf1z5iwdVzTnOPCnNEO8iyPv0VI61pZutT9p0gJihIT3
ioF0DCSyZoe6WmBYg1/c/DwdHa9FHjllQoDCzdnUsXV0PL50J9m7gwDNAnHt
Nb9pePW8f5aLUSscn3az4U3gskoFYW9TK+jkZBm8tqHhXwF6WPIJbp2evb3D
ZycNPyfW+JJK2yD32tXcWioV363brUnQaIfpS/3xzplUTBKUN3fLbIfQtoYk
z3tUrPzL96ZRoQP65vz9h1SpaLD/QUxbTAe0xRH+Zk5T8KprnkLAyk6IjCA3
DuVQsP+8Pd/gw06QEIL6hy4UnDBf5BmgdsKf5/klPqoUrBUPmH9k1gX66yx8
acwpvGHM6PlV2wUlSw7DNRlTCL+ln7/d3w27U85USthPodberiXRj93QrHVv
Wf2OKbS/u15vvXAPxG8yf8IZmcSkwtnredz/b2IfuONN/CRGhjc5DXX2gOIF
y+EUs0kMeG4Q/k6rFxZ3KyZoSE1i9YIvi/S+F2RSORd1CBOoYSdak8bTB9sJ
qZyKoAm0dZAyXrzWB2pNPY+qjk5gm5ctuQX/z7mU4/PjeMcovFZO5jfIJEjo
nsoZRy054l2mx28A4xP+rbbjGGbyXEWz7TfwJCgXDcqNo6NCZtTcrn74aybK
cekZQ4kin03Kfv3AyPbTiXg1hhPKGme7u/uh0/xJFuiPYcE67UrG7gE4UnTI
zHNuFAWq1BTcHw/ALGHd1aMZo/jamEfmTssATO+LqvtwYxRztUZtKrYMQgXB
pC5UahT3pUXUPLUfhOIqjrc0t94KvFFbk14wCK+py4U0Ho2gcVKRxCY+IiR7
80RMK4+gynyXU5giEeJ8950+MzSM74+OyR44SQTTk+kW+pHDuPZQ6VZheyJY
/dSZHzg2jE9itngKvyKCfbD55U2zQ0gT+aJyIJMI631XfFv6OoTJGycsX7YQ
ge7VrfjiyhDW9bpISzCIoPm8aWWp8BDm2bZ5FouSQLXPNPpTARmLzF4nhe8m
QX+mrvD+O2Q80X2m/pUBCVZvC493lyZj+7fUtTk3SaDOF/zZvpqE0lJOBYs+
JBC4EXN1vRsJP4a4zDjEkqDHTmPlQ3kSWsvnr+DPJYFkP4M3tpWI55mWOsXc
PnvitUagqw8R36oUj8WMkGCN2D2G6B4iFp0yMoqZJwF/eoxYW94gjkd29f1c
TYbM4se6YhKDSFymPbKwjQwBGWOyXXcHUDSmuOP6ITJQ6DYX91b0Y/T3yg2j
58hQZpcbskmmHzN3SG4PsiJD0fQLr0+uv9FDI8f9jAsZZp88aa5p7EPKqbnA
vQFkkHah6YYp9OGRoLCRvZFk8P9WEsL7sBdZ+l5SZxPJIBZ9w3Zzew8eUhX9
HphNhp/HYmIoO3uQ5brMiIxkqNK80u3k241vfRwjTBrI4HIxfSKjqwurKmtl
J7rIMBkfEZau1IXPtWif3pC5+5Jdkc5+nTiduYVgSeHqdanFC90dWFEYFqjK
5bEGMTlWTwfO7XqqIbNvCER4owIr7neg9hPqvLfrEPzBZ6OKKzuQ58Kt8fMF
Q5C08HTrpk/tKKLiszZqfghuFXsqJR1sR/J1fHcGhsGT6ChY39CGO2xyEu/5
DsPflJd5QZZtKOfJf5a/fBjOLf93aoLRilND7mU8/CPwzK6cPOHTitSDgntt
9EYg62Pth1dirajrNF6h4j8ChhKpWf1xBPQeiS2wLh+BM//Sz3dtJ2DBgb/H
5nhHQeHY51+Pv7fgG/5DKUwYBeeNPcd6D7Xg2XDxHQYPRyHcdfxBe2AzKh/7
KLhUMAq9a1qW2UQ14ZDw+3AJziiIViSzHRMa8Uug0YbH+8bgifr4rr/JDbju
wle2vt0YHMiefi+UVY8nWtU9rL+MQd1mQcPPOXX4S+nC8p7BMbj3kWbSmVuL
RUsSvAnS4+D1bbA3IacGyVSzluLz46AYrr16dVY1jsr8Je58Pg4Oua7Hd6VU
4ZNnrxPHfo3Dz9Vp7TMJlTgg1xDGmuae9/gm7xldgSS2tvzJnRPwUzUku+hF
Oc4yon9TLCag0zBRuMa7DK2rXmr3hE8A68aeygTbUnzo8q93VdUEDHRtCzW+
XIIBtUStwNkJMPuhcLIu4Bcq5t2fNdg5CcFJj2PzLxVhl7diytmrk5BYtrPK
77+feK4wmx35YhJS/2XEaFF+4JGz/7lvLpyEootkPkZmLlaLDgyOTkyCmrOd
SJbzd3S8k9ZPlZoC/pPmPS/3ZKFqU62Civ4U1Fy6ba7anIbjf8n3sp2noDut
i1Cu8Q0FpXcE2L/jcqswLyMuERlFF+WsaqagZfawXDbzA6bl50i+Yk0B8VBL
vnbsG7xWuluZvZECPNTfpe/sg/DOzPETIXpcNhhu5VFwwMv7D2ma2XE5NZa0
meIGecbsMYvXFJD9sfZrzauXsE5ujUZEAQV8pi6syyJFA1FfYOO/AQo4XRT0
WasXD4l/Fn3Cl1GhRv3hVT+ZL1AaKGR9ZRsVrskMHuVbSIbL9fzlZ09SQTuC
pupAzoAZyE9wtqOCuPPUAsEmG7YqtawqDaFCCWvtVu3BHHB8OLH2UDqXxR3L
HE1/QK1HVBOpkQqh04qrznUXgLjRXZMsChWmOzeub7hcBM8CZwjfVtDga7rl
VDu3D5KV77Sp20aDA2pmhSmZJeD0I19vtR4NThPEmz5OlwLdwPKjjyUN1O4n
RZZolMMnwaSctV406NwbxeT1qQBSXUhZ42saGC0/UHC1uhLmPNQlUlJpsDJr
rrBCrBqyVNjUlAoahGb8KlW9UgMBl7VTm/to4BDI8+LDp1owsmr7LMmiQepR
RcIirQ7uBL3VfChIB7JwybETWg3AOVXWIrCJDvbC9VH3njeCU05Bezp3njHw
mr7j0tkEss8PFLjr0uGkrcOehNUt4K+h8cfSmA4275UC7H62wKPv4qK3btJB
/tE1vwgrAihxzP2CXelgkfjSSVKkFUyfSg01+9OhIbAkbPJ7K9zICEbl13QY
8Y/fIWbeBkFRt7PSP9IhqCfe49HydniqmGtikEaHL93SxarcvuXWr34TngI6
eIvdUt1p2gHuVVnmbeV06PGTXmfO3wkXhW5tLGukQ/Li8vfV6Z0wMxBr0NBJ
Bwkrb76bV7rgi/qVJOYAHdaKXPRU5u8GmvXauX2jdDh2WE5dIaMbdMszV4VQ
6JAeddrxiGkPPNvrm8PHosP18APG7gK9YHzOoDqcQ4ctyyyl6jN7gZZ8ROHw
HB0yv/pNqJn1wUS0cA7vAh1WFJbPZQj+Bt9/lZbERTo0+5R5qX//DU+al23s
WaLDibHa6CqLfhgJrh6Y4vKoDNXv8ooBmLkclCzNZROVXbbjuQOwZYWmvyXX
3lBa2EPn64NguHDQo4Trjx2919V9OREWi8xjtP7QoV34NUPJjAj5niweAjfe
o15/anqyiOBqnNPkQ+Xmm5r2xkOQBC5erdtPjXHvf4M1S9CcBJ2rqVrKRDrU
6hx0DcgmAXlhjZZyNx1kB6vzaYLcuc6m0vJUMx0GVHRNdMzJ8D9X1z2m
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
z9G4PWkwtrqyPra9F/8DUzLiXQ==
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
Z9Lvi204r551QJxOgTm/9/ct3W34HweLsh4=
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
                 "]]}}, 
              GrayLevel[0], 
              Opacity[0.35], {
               CircleBox[{-0.40270181275976397`, -0.2325}, 1], 
               CircleBox[{0.40270181275976397`, -0.2325}, 1]}, {
               InsetBox[
                FormBox["q", TraditionalForm], {1.008919595408871, -0.5825}], 
               InsetBox[
                FormBox[
                "p", TraditionalForm], {-1.008919595408871, -0.5825}]}}, 
             Background -> RGBColor[1, 0.932, 0.821], 
             PlotRange -> {{-1.6, 1.6}, {-1.5, 1}}, ImageSize -> 185, 
             PlotRange -> {{-1.6, 1.6}, {-1.425, 1.658}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Boolean operator number", "scanner" -> "Boolean", "id" -> 
     "BooleanOperatorNumber", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FromDigits[Boole[BooleanTable[ !p ||  !q, {p, q}]], 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"7", 
              StyleBox["\" with variable ordering \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"p", ",", "q"}], "}"}], 
               GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Rule 63 elementary cellular automaton evolution", 
     "scanner" -> "Boolean", "id" -> "BooleanRuleECAEvolution", "position" -> 
     "800", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJzt00EKQWEUhuG/lIGpbrhloGzCQGdgcOd3aKiMlREDG7ACW1FsQpGBDUhK
WQCRLdz6+rynTp2e8Xt6k1k5raWU8t9+7te13tg1b3HsL0Z5donu4NBpL/eB
41V4+s4jhs/5eVXcY7xtbbL1CccrcbX+cW9X6x/3drX+cW9X6x/3drX+cW9X
6x/3drX+cW9X6x/3drX+cW9X6x/3drX+cW9X6x/3drX+cW9X6x/3drX+cW9X
6x/3drX+cW9X6x/3drX+cW9X6x/3drX+cW9X6x/3drX+8f90tb/APfwNNpTV
Ug==
                "], {{0, 0}, {26, 26}}, {0, 1}], {{Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 26}, {26, 26}}, {{0, 25}, {26, 25}}, {{0, 
                  24}, {26, 24}}, {{0, 23}, {26, 23}}, {{0, 22}, {26, 22}}, {{
                  0, 21}, {26, 21}}, {{0, 20}, {26, 20}}, {{0, 19}, {26, 
                  19}}, {{0, 18}, {26, 18}}, {{0, 17}, {26, 17}}, {{0, 16}, {
                  26, 16}}, {{0, 15}, {26, 15}}, {{0, 14}, {26, 14}}, {{0, 
                  13}, {26, 13}}, {{0, 12}, {26, 12}}, {{0, 11}, {26, 11}}, {{
                  0, 10}, {26, 10}}, {{0, 9}, {26, 9}}, {{0, 8}, {26, 8}}, {{
                  0, 7}, {26, 7}}, {{0, 6}, {26, 6}}, {{0, 5}, {26, 5}}, {{0, 
                  4}, {26, 4}}, {{0, 3}, {26, 3}}, {{0, 2}, {26, 2}}, {{0, 
                  1}, {26, 1}}, {{0, 0}, {26, 0}}}]}, {Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 0}, {0, 26}}, {{1, 0}, {1, 26}}, {{2, 0}, {2, 
                  26}}, {{3, 0}, {3, 26}}, {{4, 0}, {4, 26}}, {{5, 0}, {5, 
                  26}}, {{6, 0}, {6, 26}}, {{7, 0}, {7, 26}}, {{8, 0}, {8, 
                  26}}, {{9, 0}, {9, 26}}, {{10, 0}, {10, 26}}, {{11, 0}, {11,
                   26}}, {{12, 0}, {12, 26}}, {{13, 0}, {13, 26}}, {{14, 0}, {
                  14, 26}}, {{15, 0}, {15, 26}}, {{16, 0}, {16, 26}}, {{17, 
                  0}, {17, 26}}, {{18, 0}, {18, 26}}, {{19, 0}, {19, 26}}, {{
                  20, 0}, {20, 26}}, {{21, 0}, {21, 26}}, {{22, 0}, {22, 
                  26}}, {{23, 0}, {23, 26}}, {{24, 0}, {24, 26}}, {{25, 0}, {
                  25, 26}}, {{26, 0}, {26, 26}}}]}}}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Automatic, ImageSize -> NCache[{
                 Rational[583, 2], 140}, {291.5, 140}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], 
             Alignment -> {Left, Center}, ImageSize -> 550], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.66", "parsetiming" -> "0.14100000000000001", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP14031gi7g942384540hd00004i4aa69455dg45a9", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "6", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa14041gi7g942384540hd00003dha8282eg954cf37167914177805443390", "version" -> 
    "2.6", "inputstring" -> "!p||!q"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 23, 13, 28, 42.3730467`9.379664566299482}, "Line" -> 
    438, "SessionID" -> 16943083377698340012}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "!p||!q"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{497., {715.3544921875, 720.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.878216922542025*^9},
 CellID->545306633,ExpressionUUID->"25b75253-2a5b-4496-a70a-d30479094f5f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanFunction", "[", 
   RowBox[{"7", ",", "2"}], "]"}], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782169487160535`*^9, 3.8782169562375574`*^9}},
 CellLabel->"In[439]:=",
 CellID->5835309,ExpressionUUID->"8f352b84-6952-4003-b841-607a321b2e9f"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["BooleanFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{
                Hue[0.6, 0.7, 0.5], 
                Opacity[0.7], 
                Arrowheads[0.028937842778793414`], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                  "]], 0.030239520958083826`], 
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                  "]], 0.030239520958083826`], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.7]}], 
                DiskBox[{0., 3.}, 0.1], 
                DiskBox[{1., 2.}, 0.1], 
                
                RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                 0.08823530000000002}], 
                DiskBox[{2., 1.}, 0.1], 
                
                RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                 0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
              PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox[
                  "\"Number of variables: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["7", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{
                Hue[0.6, 0.7, 0.5], 
                Opacity[0.7], 
                Arrowheads[0.028937842778793414`], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                  "]], 0.030239520958083826`], 
                ArrowBox[
                 BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                  "]], 0.030239520958083826`], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                Hue[0.6, 0.2, 0.8], 
                EdgeForm[{
                  GrayLevel[0], 
                  Opacity[0.7]}], 
                DiskBox[{0., 3.}, 0.1], 
                DiskBox[{1., 2.}, 0.1], 
                
                RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                 0.08823530000000002}], 
                DiskBox[{2., 1.}, 0.1], 
                
                RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                 0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
              PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]]], 
             GridBox[{{
                RowBox[{
                  TagBox[
                  "\"Number of variables: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["2", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["7", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                  "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["3", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   BooleanFunction["BDD" -> {-2, 0, 2, -1, 1, 1, -1}],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Output",
 CellChangeTimes->{3.878216956771387*^9},
 CellLabel->"Out[439]=",
 CellID->445190097,ExpressionUUID->"7c017d46-0b5a-4a66-b79a-42171d3f31eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "@", 
   RowBox[{
    RowBox[{"BooleanFunction", "[", 
     RowBox[{"7", ",", "2"}], "]"}], "[", 
    RowBox[{"p", ",", "q"}], "]"}]}], "==", 
  RowBox[{"BooleanTable", "@", 
   RowBox[{"Nand", "[", 
    RowBox[{"p", ",", "q"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8782169487160535`*^9, 3.8782169773588085`*^9}},
 CellLabel->"In[441]:=",
 CellID->357985856,ExpressionUUID->"933523fe-85a0-4b1b-b0f7-d22c2a49b573"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.878216961388838*^9, 3.8782169776482086`*^9}},
 CellLabel->"Out[441]=",
 CellID->695915538,ExpressionUUID->"c8f8051f-861e-45e9-ba98-c0e7d9df07be"]
}, Open  ]],

Cell["\<\
I can also use SameTest with union. Since the union doesn't include nand, \
nand must be the 7th boolean function in 2 variables.\
\>", "Text",
 CellChangeTimes->{{3.8782171700313597`*^9, 3.8782171998562183`*^9}},
 CellID->4424940,ExpressionUUID->"4ee7bcdb-ec1b-4b28-ab4d-8e8cb61aa222"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"BooleanFunction", "[", 
       RowBox[{"7", ",", "2"}], "]"}], "[", 
      RowBox[{"p", ",", "q"}], "]"}], ",", 
     RowBox[{"Nand", "[", 
      RowBox[{"p", ",", "q"}], "]"}]}], "}"}], ",", 
   RowBox[{"SameTest", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"BooleanTable", "[", "#1", "]"}], "==", 
       RowBox[{"BooleanTable", "[", "#2", "]"}]}], " ", "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8782169797745*^9, 3.878217090893529*^9}},
 CellLabel->"In[445]:=",
 CellID->382077822,ExpressionUUID->"c4cef31c-afe2-48b1-98cc-a9b972190d64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["BooleanFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Hue[0.6, 0.7, 0.5], 
                 Opacity[0.7], 
                 Arrowheads[0.028937842778793414`], 
                 ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                   "]], 0.030239520958083826`], 
                 ArrowBox[
                  BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                   "]], 0.030239520958083826`], 
                 ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                 ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[{
                   GrayLevel[0], 
                   Opacity[0.7]}], 
                 DiskBox[{0., 3.}, 0.1], 
                 DiskBox[{1., 2.}, 0.1], 
                 
                 RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                  0.08823530000000002}], 
                 DiskBox[{2., 1.}, 0.1], 
                 
                 RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                  0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
               PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]]], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Number of variables: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    BooleanFunction["BDD" -> {-2, 0, 2, -1, 1, 1, -1}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "[", 
   RowBox[{"p", ",", "q"}], "]"}], "}"}]], "Output",
 CellChangeTimes->{{3.8782170289588833`*^9, 3.8782170912761793`*^9}},
 CellLabel->"Out[445]=",
 CellID->78349928,ExpressionUUID->"693e0b36-76d5-487b-b768-d51a1c21bc10"]
}, Open  ]],

Cell["The function for max would be nand \[Nand].", "Text",
 CellChangeTimes->{{3.8782176879997635`*^9, 3.8782176958517714`*^9}},
 CellID->12658353,ExpressionUUID->"a34e7b50-9507-48c7-9f45-2147564a0943"],

Cell["I will now analyze min:", "Text",
 CellChangeTimes->{{3.878217699170891*^9, 3.8782177028906016`*^9}},
 CellID->218955981,ExpressionUUID->"74adecd2-eaf9-4b55-8aef-f6df2aab9c27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"Min", "/@", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "->", "False"}], ",", 
      RowBox[{"1", "->", "True"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BooleanTable", "@", 
     RowBox[{"BooleanFunction", "[", 
      RowBox[{"p", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "16"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782168122785892`*^9, 3.8782168129435577`*^9}, {
  3.878216862750175*^9, 3.878216878988134*^9}, {3.8782172125399733`*^9, 
  3.8782172129032354`*^9}},
 CellLabel->"In[449]:=",
 CellID->169391238,ExpressionUUID->"d91a4bb3-661a-43ff-8f2d-0a50771eb48e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.878216879511587*^9, 3.8782172133231273`*^9},
 CellLabel->"Out[449]=",
 CellID->36427903,ExpressionUUID->"6d461dae-3734-4f51-af61-9803f3535da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<PeterBurbery/BooleanLogic\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8782172160788136`*^9, 3.8782172548522415`*^9}},
 CellLabel->"In[450]:=",
 CellID->393448095,ExpressionUUID->"09f62b68-7994-4b77-940b-3692908d333b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PeterBurbery/BooleanLogic\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.24.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PeterBurbery/BooleanLogic\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.24.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\Hannah\\\\AppData\\\\Roaming\\\\\
Mathematica\\\\Paclets\\\\Repository\\\\PeterBurbery__BooleanLogic-1.24.0\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Work with logical functions and boolean values\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "PeterBurbery/BooleanLogic", "Description" -> 
    "Work with logical functions and boolean values", "Creator" -> 
    "Peter Cullen Burbery", "License" -> "MIT", "PublisherID" -> 
    "PeterBurbery", "Version" -> "1.24.0", "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{"PeterBurbery`BooleanLogic`", "BooleanLogic.wl"}}, 
       "Symbols" -> {
        "PeterBurbery`BooleanLogic`AllBooleanForms", 
         "PeterBurbery`BooleanLogic`AllBooleanFormsLiteralCounts", 
         "PeterBurbery`BooleanLogic`AllMinimalBooleanForms", 
         "PeterBurbery`BooleanLogic`AllMinimalBooleanFormsLiteralCounts", 
         "PeterBurbery`BooleanLogic`BooleanCompose", 
         "PeterBurbery`BooleanLogic`BooleanStructureData", 
         "PeterBurbery`BooleanLogic`BooleanTruthInputData", 
         "PeterBurbery`BooleanLogic`FindBooleanAlternative", 
         "PeterBurbery`BooleanLogic`InverseBoole", 
         "PeterBurbery`BooleanLogic`RandomBooleanFunction", 
         "PeterBurbery`BooleanLogic`TruthTable", 
         "PeterBurbery`BooleanLogic`VennDiagram"}}, {
      "Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\Hannah\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
PeterBurbery__BooleanLogic-1.24.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8782172607347527`*^9},
 CellLabel->"Out[450]=",
 CellID->24738905,ExpressionUUID->"78bba677-312c-4d13-847a-6cee3059b2fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<PeterBurbery/BooleanLogic\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8782172966933947`*^9, 3.8782172966953835`*^9}},
 CellLabel->"In[452]:=",
 CellID->228895668,ExpressionUUID->"8c8a68eb-c730-444a-8c14-107e96ae14c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PeterBurbery/BooleanLogic\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.24.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"PeterBurbery/BooleanLogic\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.24.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\Hannah\\\\AppData\\\\Roaming\\\\\
Mathematica\\\\Paclets\\\\Repository\\\\PeterBurbery__BooleanLogic-1.24.0\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Work with logical functions and boolean values\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "PeterBurbery/BooleanLogic", "Description" -> 
    "Work with logical functions and boolean values", "Creator" -> 
    "Peter Cullen Burbery", "License" -> "MIT", "PublisherID" -> 
    "PeterBurbery", "Version" -> "1.24.0", "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{"PeterBurbery`BooleanLogic`", "BooleanLogic.wl"}}, 
       "Symbols" -> {
        "PeterBurbery`BooleanLogic`AllBooleanForms", 
         "PeterBurbery`BooleanLogic`AllBooleanFormsLiteralCounts", 
         "PeterBurbery`BooleanLogic`AllMinimalBooleanForms", 
         "PeterBurbery`BooleanLogic`AllMinimalBooleanFormsLiteralCounts", 
         "PeterBurbery`BooleanLogic`BooleanCompose", 
         "PeterBurbery`BooleanLogic`BooleanStructureData", 
         "PeterBurbery`BooleanLogic`BooleanTruthInputData", 
         "PeterBurbery`BooleanLogic`FindBooleanAlternative", 
         "PeterBurbery`BooleanLogic`InverseBoole", 
         "PeterBurbery`BooleanLogic`RandomBooleanFunction", 
         "PeterBurbery`BooleanLogic`TruthTable", 
         "PeterBurbery`BooleanLogic`VennDiagram"}}, {
      "Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\Hannah\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
PeterBurbery__BooleanLogic-1.24.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8782172972158203`*^9},
 CellLabel->"Out[452]=",
 CellID->203110317,ExpressionUUID->"e6c0604d-cdf0-4f41-be72-d348ec4a1b43"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`BooleanLogic`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.87821726287525*^9, 3.878217273590413*^9}},
 CellLabel->"In[453]:=",
 CellID->47450394,ExpressionUUID->"0bcaee5d-19ff-4d44-a488-7796674840b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanStructureData", "[", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878217277163394*^9, 3.8782172783801107`*^9}, {
  3.8782173182769375`*^9, 3.8782173549508533`*^9}},
 CellLabel->"In[455]:=",
 CellID->570930810,ExpressionUUID->"c988d0ac-c981-4fc3-a9ae-172bbc782281"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"truth-table\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"\<\"truth-vector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"input-variables\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"positive-unate-monotone\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"negative-unate\"\>", "\[Rule]", "True"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.878217346037861*^9, 3.8782173554061747`*^9}},
 CellLabel->"Out[455]=",
 CellID->74705971,ExpressionUUID->"3b28796b-1bd0-45f2-84df-e7c456adedb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanTruthInputData", "[", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782173751784687`*^9, 3.8782173840813227`*^9}},
 CellLabel->"In[456]:=",
 CellID->546670037,ExpressionUUID->"ff72ef4a-b92f-4978-b4c8-a86f315d71f2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"satisfiable\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"true-outputs-count\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"input-that-makes-output-true\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"tautology\"\>", "\[Rule]", "False"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8782173844934106`*^9},
 CellLabel->"Out[456]=",
 CellID->71495400,ExpressionUUID->"a44b9d6f-2e21-4b96-886c-849c107f39c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TruthTable", "[", 
  RowBox[{
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "[", 
   RowBox[{"p", ",", "q"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782174105634575`*^9, 3.8782174217675314`*^9}},
 CellLabel->"In[458]:=",
 CellID->727437029,ExpressionUUID->"b2520c7a-1d55-472c-a84a-6fdcc971e1b9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["p",
       HoldForm], 
      TagBox["q",
       HoldForm], 
      TagBox[
       RowBox[{
        InterpretationBox[
         RowBox[{
          TagBox["BooleanFunction",
           "SummaryHead"], "[", 
          
          DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
           "Ready"}, 
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    Hue[0.6, 0.7, 0.5], 
                    Opacity[0.7], 
                    Arrowheads[0.028937842778793414`], 
                    ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                    "]], 0.030239520958083826`], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                    "]], 0.030239520958083826`], 
                    ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                    ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.7]}], 
                    DiskBox[{0., 3.}, 0.1], 
                    DiskBox[{1., 2.}, 0.1], 
                    
                    RectangleBox[{0.9117647, -0.08823530000000002}, {
                    1.0882353, 0.08823530000000002}], 
                    DiskBox[{2., 1.}, 0.1], 
                    
                    RectangleBox[{1.9117647, -0.08823530000000002}, {
                    2.0882353, 0.08823530000000002}]}}, FrameTicks -> None, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
                    PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Number of variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[{{
                    Hue[0.6, 0.7, 0.5], 
                    Opacity[0.7], 
                    Arrowheads[0.028937842778793414`], 
                    ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                    "]], 0.030239520958083826`], 
                    ArrowBox[
                    BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                    "]], 0.030239520958083826`], 
                    ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
                    ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
                    ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[{
                    GrayLevel[0], 
                    Opacity[0.7]}], 
                    DiskBox[{0., 3.}, 0.1], 
                    DiskBox[{1., 2.}, 0.1], 
                    
                    RectangleBox[{0.9117647, -0.08823530000000002}, {
                    1.0882353, 0.08823530000000002}], 
                    DiskBox[{2., 1.}, 0.1], 
                    
                    RectangleBox[{1.9117647, -0.08823530000000002}, {
                    2.0882353, 0.08823530000000002}]}}, FrameTicks -> None, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
                    PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]]], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Number of variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]},
            "SummaryPanel"],
           DynamicModuleValues:>{}], "]"}],
         BooleanFunction["BDD" -> {-2, 0, 1, 2, 1, 1, -1}],
         Editable->False,
         SelectWithContents->True,
         Selectable->False], "[", 
        RowBox[{"p", ",", "q"}], "]"}],
       HoldForm]},
     {"True", "True", "False"},
     {"True", "False", "False"},
     {"False", "True", "False"},
     {"False", "False", "True"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {PeterBurbery`BooleanLogic`Private`p, 
       PeterBurbery`BooleanLogic`Private`q, 
       BooleanFunction["BDD" -> {-2, 0, 1, 2, 1, 1, -1}][
       PeterBurbery`BooleanLogic`Private`p, 
        PeterBurbery`BooleanLogic`Private`q]}}]]]], "Output",
 CellChangeTimes->{{3.8782174163460016`*^9, 3.8782174222440586`*^9}},
 CellLabel->"Out[458]//TableForm=",
 CellID->867643006,ExpressionUUID->"8bb6fa75-087f-43fc-9655-38f2faf2f276"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PeterBurbery`BooleanLogic`AllMinimalBooleanForms", "[", 
   RowBox[{"Or", "[", 
    RowBox[{"p", ",", "q"}], "]"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.878217431849216*^9, 3.878217475859482*^9}, {
  3.8782175211759176`*^9, 3.87821754273567*^9}},
 CellLabel->"In[463]:=",
 CellID->746744300,ExpressionUUID->"189ebb93-2738-4073-88c1-76414f9787f2"],

Cell[BoxData[
 RowBox[{"AllMinimalBooleanForms", "[", 
  RowBox[{"p", "||", "q"}], "]"}]], "Output",
 CellChangeTimes->{{3.8782174499871116`*^9, 3.8782174776718626`*^9}, {
  3.8782175334286475`*^9, 3.878217543125295*^9}},
 CellLabel->"Out[463]=",
 CellID->362540998,ExpressionUUID->"a2d96403-f89b-4e1d-9483-42a0bb636b0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", "\"\<DNF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.878217577022401*^9, 3.878217584309312*^9}},
 CellLabel->"In[465]:=",
 CellID->8991634,ExpressionUUID->"00fa6298-8453-437b-83bd-47288b5f3dc1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"!", "#1"}], "&&", 
   RowBox[{"!", "#2"}]}], "&"}]], "Output",
 CellChangeTimes->{3.87821758465402*^9},
 CellLabel->"Out[465]=",
 CellID->101911876,ExpressionUUID->"028adb8f-9d23-421d-a530-1c6ef97c7472"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanMinimize", "[", 
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{3.8782176314537954`*^9},
 CellLabel->"In[466]:=",
 CellID->41336,ExpressionUUID->"fead5f95-5d52-49b8-86a5-410f4a0c8059"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", "p"}], "&&", 
  RowBox[{"!", "q"}]}]], "Output",
 CellChangeTimes->{3.8782176321841927`*^9},
 CellLabel->"Out[466]=",
 CellID->140621864,ExpressionUUID->"a25d8fb1-55a8-4f89-b0fa-f2a94ee0d78c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["!p&&!q", "WolframAlphaLong",
 CellChangeTimes->{{3.878217636132207*^9, 3.878217641310547*^9}},
 CellLabel->"In[467]:=",
 CellID->434126332,ExpressionUUID->"272fcb09-8045-4344-b64f-e5b159cfa6a8"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "!p&&!q", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {" !p &&  !q"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"\[Not]", "p"}], "\[And]", 
               RowBox[{"\[Not]", "q"}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {" !p &&  !q"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["p", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["q", Italic, 14, StripOnInput -> False], "\")\""}, 
             "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement[
       "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[And] e_2 \[And] ... is the logical AND function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/And.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AND.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Truth table", "scanner" -> "Boolean", "id" -> 
     "TruthTable", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["minput", {}, {"BooleanTable[ !p &&  !q, {p, q}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "p", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "q", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   RowBox[{
                    RowBox[{"\[Not]", "p"}], "\[And]", 
                    RowBox[{"\[Not]", "q"}]}], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Minimal forms", "scanner" -> "Boolean", "id" -> 
     "MinimalForms", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"DNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"CNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ANF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Xor]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Xor]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NOR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Nor]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NAND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Nand]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"AND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"OR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], "\[Or]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "MinimalForms__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "MinimalForms__Text notation"}, {}]}], 
     XMLElement["infos", {"count" -> "4"}, {
       XMLElement[
       "info", {
        "text" -> "e_1 \[Xor] e_2 \[Xor] ... is the logical XOR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Xor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/XOR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Nor] e_2 \[Nor] ... is the logical NOR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Nor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> 
         "e_1 \[Nand] e_2 \[Nand] ... is the logical NAND function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Nand.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NAND.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Other forms", "scanner" -> "Boolean", "id" -> 
     "OtherForms", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"ESOP\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ITE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "OtherForms__Text notation"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Logic circuit", "scanner" -> "Boolean", "id" -> 
     "LogicCircuit", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                
                LineBox[{{1.685618083164127, 0.42140452079103197`}, {
                 1.7856180831641268`, 0.42140452079103197`}, {
                 1.7856180831641268`, 0.3714045207910319}, {1.885618083164127,
                  0.3714045207910319}}], 
                
                LineBox[{{1.685618083164127, 0.521404520791032}, {
                 1.7856180831641268`, 0.521404520791032}, {
                 1.7856180831641268`, 0.571404520791032}, {1.885618083164127, 
                 0.571404520791032}}], 
                
                CircleBox[{1.885618083164127, 0.47140452079103196`}, {0.1, 
                 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{1.7856180831641268`, 0.42140452079103197`}, {
                 1.7856180831641268`, 0.521404520791032}}], 
                
                LineBox[{{1.985618083164127, 0.47140452079103196`}, {
                 2.085618083164127, 0.47140452079103196`}}]}, {
                
                LineBox[{{0.7428090415820634, 0.9428090415820636}, {
                 0.8056090415820635, 0.9428090415820636}}], 
                
                LineBox[{{1.0228090415820634`, 0.9428090415820636}, {
                 0.8056090415820635, 0.8428090415820636}, {0.8056090415820635,
                  1.0428090415820637`}, {1.0228090415820634`, 
                 0.9428090415820636}}], 
                
                CircleBox[{1.0628090415820635`, 0.9428090415820636}, {0.04, 
                 0.04}], 
                
                LineBox[{{1.1028090415820635`, 0.9428090415820636}, {
                 1.1428090415820635`, 0.9428090415820636}}]}, {
                
                LineBox[{{0.16, 0.9428090415820636}, {0.2, 
                 0.9428090415820636}}], 
                InsetBox[
                 FormBox[
                  TagBox["p", HoldForm], TraditionalForm], {0., 
                 0.9428090415820636}]}, {
                
                LineBox[{{0.7428090415820636, 2.220446049250313*^-16}, {
                 0.8056090415820636, 2.220446049250313*^-16}}], 
                
                LineBox[{{1.0228090415820636`, 2.220446049250313*^-16}, {
                 0.8056090415820636, -0.09999999999999978}, {
                 0.8056090415820636, 0.10000000000000023`}, {
                 1.0228090415820636`, 2.220446049250313*^-16}}], 
                
                CircleBox[{1.0628090415820637`, 2.220446049250313*^-16}, {
                 0.04, 0.04}], 
                
                LineBox[{{1.1028090415820635`, 2.220446049250313*^-16}, {
                 1.1428090415820635`, 2.220446049250313*^-16}}]}, {
                LineBox[{{0.16, 0.}, {0.2, 0.}}], 
                InsetBox[
                 FormBox[
                  TagBox["q", HoldForm], TraditionalForm], {0., 0.}]}}, {
               
               LineBox[{{{1.685618083164127, 0.42140452079103197`}, {
                1.1428090415820635`, 2.220446049250313*^-16}}, {{
                1.685618083164127, 0.521404520791032}, {1.1428090415820635`, 
                0.9428090415820636}}}], 
               
               LineBox[{{0.7428090415820634, 0.9428090415820636}, {0.2, 
                0.9428090415820636}}], {}, 
               
               LineBox[{{0.7428090415820636, 2.220446049250313*^-16}, {0.2, 
                0.}}], {}}}, AspectRatio -> 1., ImageSize -> NCache[
               Rational[550, 3], 183.33333333333334`]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Venn diagram", "scanner" -> "SetTheory", "id" -> 
     "VennDiagram", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                GrayLevel[1], 
                PolygonBox[CompressedData["
1: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
y0Uedt6w1P6b5MMVaeULndx5OC+lE+xF8uOif9ToJF/iKlrgzF+XG7CxNqlA
0IOHlrLdS+6Q/Bl770HZKhce3qDvzl/h3YpZVLJ4hiMPR4R/bW8n+fVINO/R
m+M87LYQW+pM8m3hlBr9qDF5nuMCAo4k/35Pf3jMdycPdexpirYkH199Hi66
SZaHYSz67ATJz8Xb/WmXhHjY+lIyKY/k694LY7f3jXDxR9O3Z1okf+sJbzSr
qObivfvpBuIP+jFrz5Rd91Mu1htBTiTJ77d2fgt/5k+ucw+JfyH5/tbJDJdN
FlysenJgvpjkfx+xE4edFbhYvjPETXjNEPKztql6sjlYUV7yI4rwg7XTtQ+m
FRzMfF/bqED4wjdaPUD0LgeXt8vVxBP+ME6MuJRvwsEtvJ8XigifaN4+ctR8
GQeDTqWxLAi/PDwsnE41Eu7McXfeS/iGv0fEM+c+hYKqfyfbEv65FOfnFbqP
wi2rGva4Ez462DnLF/uHjfbRg81HCT/tfuu8sjefjU/SRuv7CF/xC+nuCnRk
45IKm0fjhL++fhKJC17BRtllf56YED4zknnZwysn3PjyhkEf4Te7ssAz3Ass
9CoU/BNA+K73kcZo5DIWahrusOEnunByY09j26tp3LXYasFBwoeUZNrkd2vC
kX//HpEi/Chb06LuzmLiNkbZyQbCl85/lRvNbmXicdMH0wWEP9NjhpLDnRmY
sneHYwnh0+zbFlmGyVNoKrFCuInwa9TE23SL5kn8RitqGyd8m+vWlTw0N4Gb
RsvcZwn/fjGLcN68ZQL1NOoVfxE+Pun/+b6Z5Tg+V7ab+EL4+eXmIINbvmPY
pWXucpPwdbzy9gsziaN4WPvq3Azh7xNbIry73oygbFVPoQrhc/q5Sg/7DjqK
qAibrib8Ll3eMlLCHsbwlM6DWYTvdYZe960SG0b7lof9g4T/G764NmQqDGHb
VJBQmSmFNjOssDQtGj7zsD2/6QKFJZfXGe8xG0SF4NGrmwIplJ70uP3MYQCX
BS08+zqaQq8HbYIS3v1oltwgW5dMIaQGBfgt7sP9ShfszmdTOCf/IT9FrQeN
oDn2diGFDEWXrQvNu9B3x9kf/33/OP1LLkvKoxMdvutE/vd9ZEDYfkQ3tgP5
DTxW/Pf9JK4+Mqe7sB3NXGUXCeZTmMIQfmLf3oZ82ubv0zMp7BDV3r79Zwsu
OvdCvzaRwvt3v8YXyzZjSLmkrU8YhSG505sLIupRJO9nau5VCveLM5fP9n9C
oy2RFz1PU+hd+dBLVucjLjKmVX/eSyF77frHA0mVeCzqU9RbJQrtzNMa5UXe
oa1HkJWpEIXTOZZrGaOvcKXQYec7faT+aca/L5Tk4Fe3vna3EjaGMCVCZu8m
Ef9+4Lgsgo18+o3KaQeEgeF9677nKTb+H9Y5Rzg=
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
                 "]]}}, 
              GrayLevel[0], 
              Opacity[0.35], {
               CircleBox[{-0.40270181275976397`, -0.2325}, 1], 
               CircleBox[{0.40270181275976397`, -0.2325}, 1]}, {
               InsetBox[
                FormBox["q", TraditionalForm], {1.008919595408871, -0.5825}], 
               InsetBox[
                FormBox[
                "p", TraditionalForm], {-1.008919595408871, -0.5825}]}}, 
             Background -> RGBColor[1, 0.932, 0.821], 
             PlotRange -> {{-1.6, 1.6}, {-1.5, 1}}, ImageSize -> 185, 
             PlotRange -> {{-1.6, 1.6}, {-1.425, 1.658}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Boolean operator number", "scanner" -> "Boolean", "id" -> 
     "BooleanOperatorNumber", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FromDigits[Boole[BooleanTable[ !p &&  !q, {p, q}]], 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"1", 
              StyleBox["\" with variable ordering \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"p", ",", "q"}], "}"}], 
               GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Rule 3 elementary cellular automaton evolution", 
     "scanner" -> "Boolean", "id" -> "BooleanRuleECAEvolution", "position" -> 
     "800", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJzt1b8KgWEUx/GnlMGqN7xlUG7CoGcw2I1GZVYmBjfgCtyK4iYUGdyApJQL
IH9Wg+F9+53zfpXSZzqdzvPVGk0G41IIIf1+X78f53JlU73EfXvWS5NTbHZ2
jfp8G/GPh/fnFrv36XHRv8bhurZKloefrja/mv+7z6I5e8tnn0Vz9qa5Z6/O
fuibwvtSm9+6q90/HfPtavdPx3y72v3TMd+udv90zLer3T8d8+1q90/HfLva
/dMx3279/tXmx231zcqcuK2+WZkT99E3tXlwH31Tmwf33Tc6hmfREzqG59k3
OoZn0Rk6hiv8D6q9I1zT6Riu0Dc6hiu42nvBfbjaneM+/AnhlcvO
                "], {{0, 0}, {26, 26}}, {0, 1}], {{Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 26}, {26, 26}}, {{0, 25}, {26, 25}}, {{0, 
                  24}, {26, 24}}, {{0, 23}, {26, 23}}, {{0, 22}, {26, 22}}, {{
                  0, 21}, {26, 21}}, {{0, 20}, {26, 20}}, {{0, 19}, {26, 
                  19}}, {{0, 18}, {26, 18}}, {{0, 17}, {26, 17}}, {{0, 16}, {
                  26, 16}}, {{0, 15}, {26, 15}}, {{0, 14}, {26, 14}}, {{0, 
                  13}, {26, 13}}, {{0, 12}, {26, 12}}, {{0, 11}, {26, 11}}, {{
                  0, 10}, {26, 10}}, {{0, 9}, {26, 9}}, {{0, 8}, {26, 8}}, {{
                  0, 7}, {26, 7}}, {{0, 6}, {26, 6}}, {{0, 5}, {26, 5}}, {{0, 
                  4}, {26, 4}}, {{0, 3}, {26, 3}}, {{0, 2}, {26, 2}}, {{0, 
                  1}, {26, 1}}, {{0, 0}, {26, 0}}}]}, {Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 0}, {0, 26}}, {{1, 0}, {1, 26}}, {{2, 0}, {2, 
                  26}}, {{3, 0}, {3, 26}}, {{4, 0}, {4, 26}}, {{5, 0}, {5, 
                  26}}, {{6, 0}, {6, 26}}, {{7, 0}, {7, 26}}, {{8, 0}, {8, 
                  26}}, {{9, 0}, {9, 26}}, {{10, 0}, {10, 26}}, {{11, 0}, {11,
                   26}}, {{12, 0}, {12, 26}}, {{13, 0}, {13, 26}}, {{14, 0}, {
                  14, 26}}, {{15, 0}, {15, 26}}, {{16, 0}, {16, 26}}, {{17, 
                  0}, {17, 26}}, {{18, 0}, {18, 26}}, {{19, 0}, {19, 26}}, {{
                  20, 0}, {20, 26}}, {{21, 0}, {21, 26}}, {{22, 0}, {22, 
                  26}}, {{23, 0}, {23, 26}}, {{24, 0}, {24, 26}}, {{25, 0}, {
                  25, 26}}, {{26, 0}, {26, 26}}}]}}}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Automatic, ImageSize -> NCache[{
                 Rational[583, 2], 140}, {291.5, 140}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], 
             Alignment -> {Left, Center}, ImageSize -> 550], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.721", "parsetiming" -> "0.181", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP273211ff1909624048eb0000234eii9hi94h34ce", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa273311ff1909624048eb000028giba6375f5ei6i6430556393126808734", "version" -> 
    "2.6", "inputstring" -> "!p&&!q"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 23, 13, 40, 44.5945377`9.401856535214412}, "Line" -> 
    467, "SessionID" -> 16943083377698340012}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "!p&&!q"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{497., {693.3544921875, 698.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.878217644726348*^9},
 CellID->50411125,ExpressionUUID->"74a60178-87b8-4818-93db-223530b03497"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanTable", "@", 
   RowBox[{
    RowBox[{"BooleanFunction", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "[", 
    RowBox[{"p", ",", "q"}], "]"}]}], "==", 
  RowBox[{"BooleanTable", "@", 
   RowBox[{"Nor", "[", 
    RowBox[{"p", ",", "q"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.878217729189045*^9, 3.87821773079735*^9}},
 CellLabel->"In[468]:=",
 CellID->594974906,ExpressionUUID->"4b3b91ec-6f3d-4ffd-a6a1-1c915e766b63"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8782177312016068`*^9},
 CellLabel->"Out[468]=",
 CellID->39725179,ExpressionUUID->"16bcc9e5-9b80-4484-9f32-4ca85d3bf158"]
}, Open  ]],

Cell["The function for min is nor \[Nor].", "Text",
 CellChangeTimes->{{3.8782176590956516`*^9, 3.87821766234315*^9}, {
  3.8782177079840007`*^9, 3.878217711553506*^9}},
 CellID->5938891,ExpressionUUID->"2e76df1a-e5d2-49d8-b2ef-b961442ca2b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["-x", "Section",
 CellChangeTimes->{{3.8782177608195305`*^9, 3.87821776173451*^9}},
 CellID->484606979,ExpressionUUID->"072d51ad-9ce4-4ba6-a0c4-73e6c386cc92"],

Cell["\<\
This is a single variable function that does not depend on y.\
\>", "Text",
 CellChangeTimes->{{3.8782177638916016`*^9, 3.8782177757512074`*^9}},
 CellID->252684222,ExpressionUUID->"35975573-dbb5-423e-9d32-e9c6d4d7c4f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "->", "False"}], ",", 
      RowBox[{"1", "->", "True"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BooleanTable", "@", 
     RowBox[{"BooleanFunction", "[", 
      RowBox[{"p", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "16"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782177921463175`*^9, 3.8782178143613153`*^9}},
 CellLabel->"In[470]:=",
 CellID->412694177,ExpressionUUID->"e441f42e-cec8-4e3a-8491-0417818434e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "12", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8782178034283857`*^9, 3.878217815345626*^9}},
 CellLabel->"Out[470]=",
 CellID->599981480,ExpressionUUID->"69a40163-77cd-418f-a03a-f3b961b6375b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanFunction", "[", 
  RowBox[{"12", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.878217821319821*^9, 3.8782178248732686`*^9}},
 CellLabel->"In[471]:=",
 CellID->59290753,ExpressionUUID->"b4878032-e54d-48c8-a84d-0e524c5401ba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["BooleanFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.6, 0.7, 0.5], 
               Opacity[0.7], 
               Arrowheads[0.028937842778793414`], 
               ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                 "]], 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                 "]], 0.030239520958083826`], 
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[{
                 GrayLevel[0], 
                 Opacity[0.7]}], 
               DiskBox[{0., 3.}, 0.1], 
               DiskBox[{1., 2.}, 0.1], 
               
               RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                0.08823530000000002}], 
               DiskBox[{2., 1.}, 0.1], 
               
               RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
             PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of variables: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Hue[0.6, 0.7, 0.5], 
               Opacity[0.7], 
               Arrowheads[0.028937842778793414`], 
               ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQo4HGCskPM3jr6ezw7nb/KQrNhliuCL5xwUyznI
Bue3WV5cyOCM4P/dANLACufXXVKvvaSO4HPMyzvL380C588UluUyeMIM55sY
gwCCfwWkvZYJzi+UOQ5EjHC+kCAIIPgbWaM3sEYzwPkLvnjO/+L53x7Gv3cX
BP7C+bIg4wr/wPkxG0AG/Ibz08Dgm/3CTStXMc/Osd+xLNTLhuErlN9jbz71
d8XrpZ/tq0r+8xuJL7B/YBjxqTj8E1R+jf2GmuxtV0U+2vdPDrkrFbnNPuJ1
VpfinvdQ9QfsF1nm2HqlvbU/8mbluXXPjto7PbnVqqrxGqr/jL3p623Jmxlf
2nMl/w+UkLpkX+3HcP3zp2f2x9onfr1lctNexsa8dVLqY3tFl7aL/ufv27+/
ayMeIfHAnu/Mu6LdXx7ZP0tXkuoUu2V/66C35IqDT+19ajLOrq+5Yl/GfOt2
rt8Le/VP0yd4HDtn/2jCzF08s1/ZV++ZKXp28lF7mayurS3L39jLrV8TfOvw
Lnv1/jVnrha/s5/Ha266+NAKaPh8gIcTAPT6yCQ=
                 "]], 0.030239520958083826`], 
               ArrowBox[
                BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQEf7KEMBxh/+byN3dft/9vD+EkTjT6UZP+zZ4Ty
9W406d5o+guX5yle5MzY9gfO/5UI0vAbwV/iD0II9TZ3Z8mL/YTzDdWtRBJO
fIfz08DgG5y/GKz9C5z/2KIPiD7D3aOsBAKf4PKJ3NsSuLd9gPPtX062ezn5
HZy/ZzcIvIbzLUHGPX4B54N0J3A/g/ONweAxnA8OnvwHcP45/u4pjctvw90j
nnNQLOfgNbi8ZMUuU3udS3D+ivQ3j76ePw3nT7EDOfAwnP/g5bU/Gzx2wvn/
tM508rGugPNhMQcApt6NHA==
                 "]], 0.030239520958083826`], 
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, {
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[{
                 GrayLevel[0], 
                 Opacity[0.7]}], 
               DiskBox[{0., 3.}, 0.1], 
               DiskBox[{1., 2.}, 0.1], 
               
               RectangleBox[{0.9117647, -0.08823530000000002}, {1.0882353, 
                0.08823530000000002}], 
               DiskBox[{2., 1.}, 0.1], 
               
               RectangleBox[{1.9117647, -0.08823530000000002}, {2.0882353, 
                0.08823530000000002}]}}, FrameTicks -> None, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], Background -> GrayLevel[0.93], 
             PlotRangePadding -> Scaled[0.1], FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of variables: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Function index: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Satisfiability count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of nodes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  BooleanFunction["BDD" -> {2, 0, 1, -1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8782178253214493`*^9},
 CellLabel->"Out[471]=",
 CellID->162619414,ExpressionUUID->"0f2e1b8c-2615-4f62-869e-ef572852dd60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanConvert", "[", 
   RowBox[{
    RowBox[{"BooleanFunction", "[", 
     RowBox[{"12", ",", "2"}], "]"}], ",", "\"\<CNF\>\""}], "]"}], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782178268457994`*^9, 3.878217837518945*^9}, {
  3.8782179126040373`*^9, 3.8782179254836807`*^9}},
 CellLabel->"In[478]:=",
 CellID->13314277,ExpressionUUID->"5db14e5a-9f33-4ee3-9ee6-069f9c3bb575"],

Cell[BoxData["p"], "Output",
 CellChangeTimes->{{3.8782178316423364`*^9, 3.8782178380696573`*^9}, {
  3.8782179150257654`*^9, 3.8782179257511883`*^9}},
 CellLabel->"Out[478]=",
 CellID->474065663,ExpressionUUID->"d37af7a4-3b16-4875-afd4-e3a923646693"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "->", "False"}], ",", 
       RowBox[{"1", "->", "True"}]}], "}"}]}], ")"}], "&"}], "/@", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878217948447004*^9, 3.878217979907795*^9}},
 CellLabel->"In[480]:=",
 CellID->261381049,ExpressionUUID->"d9de48b8-030f-477c-9e35-485686521551"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.878217945966689*^9, 3.878217980170474*^9},
 CellLabel->"Out[480]=",
 CellID->690270288,ExpressionUUID->"92daa3fe-12ab-4c32-ba7c-e6b08d06c6fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanTable", "[", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{"12", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878217998717139*^9, 3.8782180055312085`*^9}},
 CellLabel->"In[481]:=",
 CellID->87315022,ExpressionUUID->"b704e5d0-ce19-4736-8e2c-7e6e7c48c4fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.8782180059325557`*^9},
 CellLabel->"Out[481]=",
 CellID->411977490,ExpressionUUID->"5032a4d0-b913-4ef9-abaa-951ca8308080"]
}, Open  ]],

Cell["The function for this would be left complementation.", "Text",
 CellChangeTimes->{{3.8782180098707747`*^9, 3.878218019091434*^9}},
 CellID->153886213,ExpressionUUID->"5f8a3e43-22ae-4f87-a05f-7a264d750d92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Times", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Tuples", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "->", "False"}], ",", 
      RowBox[{"1", "->", "True"}]}], "}"}]}], "]"}], "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"BooleanTable", "@", 
     RowBox[{"BooleanFunction", "[", 
      RowBox[{"p", ",", "2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "16"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782180433838453`*^9, 3.8782180491022034`*^9}},
 CellLabel->"In[482]:=",
 CellID->134650563,ExpressionUUID->"cd2e884d-8867-4226-b34a-8a589aada3bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "9", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8782180497164135`*^9},
 CellLabel->"Out[482]=",
 CellID->102752351,ExpressionUUID->"8a2ea820-53a7-4edb-a785-06e9ae3ffb72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{"BooleanFunction", "[", 
   RowBox[{"9", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878218052122512*^9, 3.8782180653517942`*^9}},
 CellLabel->"In[484]:=",
 CellID->438677488,ExpressionUUID->"126f2fd1-2900-43fd-815b-040365db3eac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#1", "&&", "#2"}], ")"}], "||", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "#1"}], "&&", 
     RowBox[{"!", "#2"}]}], ")"}]}], "&"}]], "Output",
 CellChangeTimes->{{3.8782180586601768`*^9, 3.878218065911268*^9}},
 CellLabel->"Out[484]=",
 CellID->199397462,ExpressionUUID->"7f30d920-fb5e-401f-885c-56e46cb92eb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanTable", "[", 
  RowBox[{"BooleanConvert", "[", 
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"9", ",", "2"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8782180667452*^9, 3.8782180729704103`*^9}},
 CellLabel->"In[486]:=",
 CellID->94618960,ExpressionUUID->"06e68e0b-ba91-4894-bb07-811bd22ee4b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "False", ",", "False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.878218070085823*^9, 3.8782180733981085`*^9}},
 CellLabel->"Out[486]=",
 CellID->140301639,ExpressionUUID->"2b8d643a-ce1b-4c13-b816-cc9a221c11a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["true false false true", "WolframAlphaLong",
 CellChangeTimes->{{3.8782180800861545`*^9, 3.8782180848026533`*^9}},
 CellLabel->"In[487]:=",
 CellID->250352040,ExpressionUUID->"248ca457-84a0-4eae-8936-95074e9e9d16"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "true false false true", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    InputAssumptions -> {"{\"C\", \"false\"} -> {\"MathWorld\"}"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"MathWorld\", \"False\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"false\"", 
                PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                "Entity" -> {
                  PeterBurbery`BooleanLogic`Private`MathWorldData, "False"}]],
                Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Illustration", "scanner" -> "Data", "id" -> 
     "ImagePod:MathWorldData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "0", "async" -> 
     "https://www6b3.wolframalpha.com/api/v1/asyncPod.jsp?id=\
MSPa3004129b61ef56fde94e000039a55iifhb2h02a97794153569472399936", 
     "asyncfailed" -> "data not found"}, {
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Definition", "scanner" -> "Data", "id" -> 
     "DefinitionPod:MathWorldData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"False\"][EntityProperty[\"MathWorld\", \
\"TypesetDescription\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                Cell[
                 
                 TextData[{
                  "A statement which is rigorously not true. Regular two\
\[Hyphen]valued logic allows statements to be only true or false, but fuzzy \
logic treats \[OpenCurlyDoubleQuote]truth\[CloseCurlyDoubleQuote] as a \
continuum which can have a value between 0 and 1. The symbol ", 
                   Cell[
                    BoxData[
                    FormBox["\:22cf", TraditionalForm]], "InlineFormula"], 
                   " is sometimes used to denote \
\[OpenCurlyDoubleQuote]false,\[CloseCurlyDoubleQuote] although \
\[OpenCurlyDoubleQuote]F\[CloseCurlyDoubleQuote] is more commonly used in \
truth tables."}], LineSpacing -> {1, 3}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              BaseStyle -> {AutoMultiplicationSymbol -> False}, 
              DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemStyle -> {"Columns" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}, 
                "Rows" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "https://mathworld.wolfram.com/False.html", "text" -> 
           "More information"}, {}]}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Related terms", "scanner" -> "Data", "id" -> 
     "RelatedTermsPod:MathWorldData", "position" -> "400", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"False\"][EntityProperty[\"MathWorld\", \
\"RelatedEntries\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"alethic\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "Alethic"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Booleans\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "Booleans"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"fuzzy logic\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "FuzzyLogic"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"logic\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "Logic"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"true\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "True"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"truth table\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "TruthTable"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"undecidable\"", 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
                  "Entity" -> {
                    PeterBurbery`BooleanLogic`Private`MathWorldData, 
                    "Undecidable"}]], Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Related Wolfram Language symbol", "scanner" -> "Data", 
     "id" -> "RelatedFunctionsPod:MathWorldData", "position" -> "500", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"False\"][EntityProperty[\"MathWorld\", \
\"RelatedWolframLanguageSymbols\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox[
               StyleBox[
               "\"False\"", {
                FontSize -> -1 + Inherited, FontFamily -> "Roboto"}, 
                StripOnInput -> False], 
               PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
               "Entity" -> {WolframLanguageData, "False"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Subject classifications", "scanner" -> "Data", "id" -> 
     "SubjectPod:MathWorldData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "MathWorld"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox["\"general logic\"", 
              PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
              "EntityClass" -> {
                PeterBurbery`BooleanLogic`Private`MathWorldData, 
                 "Foundations of Mathematics:Logic:General Logic"}]], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "MSC 2010"}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"MathWorld\", \"False\"][EntityProperty[\"MathWorld\", \"MSC\
\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox["\"03Bxx\"", 
              PeterBurbery`BooleanLogic`Private`TagBoxWrapper[
              "EntityClass" -> {
                PeterBurbery`BooleanLogic`Private`MathWorldData, "03Bxx"}]], 
             Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> 
         "SubjectPod:MathWorldData__Show details"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "false", "template" -> 
        "Assuming \"false\" is referring to a mathematical \
definition${separator}Use as ${desc} instead", "count" -> "2", "pulldown" -> 
        "false", "default" -> 
        "{\"C\", \"false\"} -> {\"MathWorld\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "{\"C\", \"false\"} -> {\"MathWorld\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"false\"} -> {\"Word\"}"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "false", "score" -> "0.23809523809523808", "level" -> "low"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "6", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.538", "parsetiming" -> "0.063", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP3003129b61ef56fde94e00000edi154d824e2gh5", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> "", 
    "version" -> "2.6", "inputstring" -> "false"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 23, 13, 48, 22.4812082`9.104394576820582}, "Line" -> 
    488, "SessionID" -> 16943083377698340012}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6}, Typeset`failedpods$$ = {2}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "true false false true"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{496., {283.3544921875, 288.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8782180898726435`*^9},
 CellID->131271967,ExpressionUUID->"663eeb69-942c-45ad-b62c-6d76702d48d4"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BooleanConvert", "[", 
   RowBox[{"BooleanFunction", "[", 
    RowBox[{"9", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.878218122346204*^9, 3.878218123279685*^9}},
 CellLabel->"In[488]:=",
 CellID->313050747,ExpressionUUID->"c88196b2-0078-4160-9df2-df7bdf71ce8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "&&", "q"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "p"}], "&&", 
    RowBox[{"!", "q"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.878218123785514*^9},
 CellLabel->"Out[488]=",
 CellID->284033718,ExpressionUUID->"095d6b19-4d1f-43ab-8821-4807c534d16e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(p&&q)||(!p&&!q)", "WolframAlphaLong",
 CellChangeTimes->{{3.8782181258733025`*^9, 3.8782181557889605`*^9}},
 CellLabel->"In[490]:=",
 CellID->906983279,ExpressionUUID->"1cba680a-051a-4269-9ab3-736e2bf67eaa"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "(p&&q)||(!p&&!q)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"MinimalForms__More"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"(p && q) || ( !p &&  !q)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               RowBox[{"(", 
                 RowBox[{"p", "\[And]", "q"}], ")"}], "\[Or]", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"\[Not]", "p"}], "\[And]", 
                   RowBox[{"\[Not]", "q"}]}], ")"}]}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"(p && q) || ( !p &&  !q)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"\"(\"", 
              StyleBox["p", Italic, 14, StripOnInput -> False], 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], 
              StyleBox["q", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"O\"", 14, StripOnInput -> False], 
                  StyleBox["\"R \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["p", Italic, 14, StripOnInput -> False], "\")\"", 
              TemplateBox[{"\" \"", 
                TemplateBox[{
                  StyleBox["\"A\"", 14, StripOnInput -> False], 
                  StyleBox["\"ND \"", 11, StripOnInput -> False]}, 
                 "RowDefault"], "\" \""}, "RowDefault"], "\"(\"", 
              TemplateBox[{
                StyleBox["\"N\"", 14, StripOnInput -> False], 
                StyleBox["\"OT \"", 11, StripOnInput -> False]}, 
               "RowDefault"], 
              StyleBox["q", Italic, 14, StripOnInput -> False], "\")\"", 
              "\")\""}, "RowDefault"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement[
       "info", {
        "text" -> "e_1 \[And] e_2 \[And] ... is the logical AND function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/And.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AND.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement[
       "info", {
        "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Truth table", "scanner" -> "Boolean", "id" -> 
     "TruthTable", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement[
       "minput", {}, {"BooleanTable[(p && q) || ( !p &&  !q), {p, q}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "p", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                  "q", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 TagBox[
                  PaneBox[
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"p", "\[And]", "q"}], ")"}], "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", "p"}], "\[And]", 
                    RowBox[{"\[Not]", "q"}]}], ")"}]}], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Center}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False]}, {
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"F\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[249, 256], 
                    Rational[237, 256]}], StripOnInput -> False], 
                 ItemBox["\"T\"", Background -> RGBColor[{
                    Rational[255, 256], 
                    Rational[15, 16], 
                    Rational[225, 256]}], StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Center, Baseline}, {1, 2} -> {
                    Center, Baseline}, {1, 3} -> {Center, Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {{None}}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Minimal forms", "scanner" -> "Boolean", "id" -> 
     "MinimalForms", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"DNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"CNF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[And]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ANF\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Xor]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NOR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Nor]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Nor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Nor]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"NAND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Nand]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Nand]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Nand]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"AND\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], "\[And]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"OR\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[Or]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], "\[Or]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], "\[Or]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"BOOLE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Equivalent]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 11, 
                  SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"BIT2\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TagBox[
                   RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Xor]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], HoldForm], 11, SpanMaxSize -> 0, StripOnInput -> 
                  False]}, {
                 TagBox[
                  PaneBox[
                  "\"IMPLIES\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[Implies]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Implies]", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["q", Italic, 14, StripOnInput -> False], 
                    "\[Implies]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}]}], ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> 
                  False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}], 
       XMLElement["infos", {"count" -> "8"}, {
         XMLElement[
         "info", {
          "text" -> "e_1 \[And] e_2 \[And] ... is the logical AND function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/And.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/AND.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {"text" -> "\[Not]expr is the logical NOT function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Not.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NOT.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[Or] e_2 \[Or] ... is the logical OR function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Or.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/OR.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[Xor] e_2 \[Xor] ... is the logical XOR function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Xor.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/XOR.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> "e_1 \[Nor] e_2 \[Nor] ... is the logical NOR function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Nor.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NOR.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> 
           "e_1 \[Nand] e_2 \[Nand] ... is the logical NAND function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Nand.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NAND.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> 
           "e_1 \[Equivalent]e_2 \[Equivalent]... represents the logical \
equivalence e_1 \[DoubleLeftRightArrow]e_2 \[DoubleLeftRightArrow]..."}, {
           XMLElement[
           "link", {
            "url" -> 
             "http://reference.wolfram.com/language/ref/Equivalent.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Equivalent.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {
          "text" -> 
           "p implies q represents the logical implication p\
\[DoubleRightArrow]q"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Implies.html",
              "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Implies.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "Less", "input" -> "MinimalForms__Less"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "MinimalForms__Text notation"}, {}]}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Other forms", "scanner" -> "Boolean", "id" -> 
     "OtherForms", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"ESOP\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}], "\[Xor]", 
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}, {
                 TagBox[
                  PaneBox[
                  "\"ITE\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  PeterBurbery`BooleanLogic`Private`TagBoxWrapper["Label"]], 
                 StyleBox[
                  RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox["p", Italic, 14, StripOnInput -> False], 
                    "\[And]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}], ")"}],
                     "\[Or]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Not]", 
                    StyleBox["p", Italic, 14, StripOnInput -> False]}], 
                    "\[And]", 
                    RowBox[{"\[Not]", 
                    StyleBox["q", Italic, 14, StripOnInput -> False]}]}], 
                    ")"}]}], 11, SpanMaxSize -> 0, StripOnInput -> False]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Text notation", "input" -> 
         "OtherForms__Text notation"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Logic circuit", "scanner" -> "Boolean", "id" -> 
     "LogicCircuit", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                
                LineBox[{{2.358408596267325, 1.2292042981336626`}, {
                 2.4542085962673252`, 1.2292042981336626`}}], 
                
                LineBox[{{2.358408596267325, 1.3292042981336627`}, {
                 2.4542085962673252`, 1.3292042981336627`}}], 
                
                CircleBox[{2.1584085962673254`, 1.2792042981336627`}, {0.3, 
                 0.3}, 
                 NCache[{2 Pi - ArcSin[
                    Rational[1, 3]], 2 Pi + ArcSin[
                    Rational[1, 3]]}, {5.943348397725464, 
                  6.623022216633708}]], 
                
                CircleBox[{2.4264361962673253`, 1.4971622981336628`}, {
                 0.31830400000000003`, 
                 0.31830400000000003`}, {-1.52424, -0.7542}], 
                
                CircleBox[{2.426408596267325, 1.0612042981336627`}, {
                 0.31830400000000003`, 0.31830400000000003`}, {0.75426, 
                 1.52424}], 
                
                LineBox[{{2.6584085962673254`, 1.2792042981336627`}, {
                 2.7584085962673255`, 1.2792042981336627`}}]}, {
                
                LineBox[{{1.5056057308448836`, 2.0820071635561046`}, {
                 1.6056057308448834`, 2.0820071635561046`}, {
                 1.6056057308448834`, 2.0320071635561043`}, {
                 1.7056057308448835`, 2.0320071635561043`}}], 
                
                LineBox[{{1.5056057308448836`, 2.1820071635561042`}, {
                 1.6056057308448834`, 2.1820071635561042`}, {
                 1.6056057308448834`, 2.2320071635561045`}, {
                 1.7056057308448835`, 2.2320071635561045`}}], 
                
                CircleBox[{1.7056057308448835`, 2.1320071635561044`}, {0.1, 
                 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{1.6056057308448834`, 2.0820071635561046`}, {
                 1.6056057308448834`, 2.1820071635561042`}}], 
                
                LineBox[{{1.8056057308448836`, 2.1320071635561044`}, {
                 1.9056057308448835`, 2.1320071635561044`}}]}, {
                
                LineBox[{{1.012802865422442, 2.5584085962673253`}, {
                 1.052802865422442, 2.5584085962673253`}}], 
                InsetBox[
                 FormBox[
                  TagBox["p", HoldForm], TraditionalForm], {0.852802865422442,
                  2.5584085962673253`}]}, {
                
                LineBox[{{1.012802865422442, 1.7056057308448835`}, {
                 1.052802865422442, 1.7056057308448835`}}], 
                InsetBox[
                 FormBox[
                  TagBox["q", HoldForm], TraditionalForm], {0.852802865422442,
                  1.7056057308448835`}]}, {
                
                LineBox[{{1.5056057308448836`, 0.3764014327112209}, {
                 1.6056057308448834`, 0.3764014327112209}, {
                 1.6056057308448834`, 0.3264014327112209}, {
                 1.7056057308448835`, 0.3264014327112209}}], 
                
                LineBox[{{1.5056057308448836`, 0.4764014327112209}, {
                 1.6056057308448834`, 0.4764014327112209}, {
                 1.6056057308448834`, 0.5264014327112209}, {
                 1.7056057308448835`, 0.5264014327112209}}], 
                
                CircleBox[{1.7056057308448835`, 0.4264014327112209}, {0.1, 
                 0.1}, 
                 
                 NCache[{Rational[3, 2] Pi, Rational[5, 2] Pi}, {
                  4.71238898038469, 7.853981633974483}]], 
                
                LineBox[{{1.6056057308448834`, 0.3764014327112209}, {
                 1.6056057308448834`, 0.4764014327112209}}], 
                
                LineBox[{{1.8056057308448836`, 0.4264014327112209}, {
                 1.9056057308448835`, 0.4264014327112209}}]}, {
                
                LineBox[{{0.652802865422442, 0.852802865422442}, {
                 0.715602865422442, 0.852802865422442}}], 
                
                LineBox[{{0.932802865422442, 0.852802865422442}, {
                 0.715602865422442, 0.752802865422442}, {0.715602865422442, 
                 0.952802865422442}, {0.932802865422442, 0.852802865422442}}], 
                
                CircleBox[{0.972802865422442, 0.852802865422442}, {0.04, 
                 0.04}], 
                
                LineBox[{{1.012802865422442, 0.852802865422442}, {
                 1.052802865422442, 0.852802865422442}}]}, {
                
                LineBox[{{0.16, 0.852802865422442}, {0.2, 
                 0.852802865422442}}], 
                InsetBox[
                 FormBox[
                  TagBox["p", HoldForm], TraditionalForm], {0., 
                 0.852802865422442}]}, {
                LineBox[{{0.652802865422442, 0.}, {0.715602865422442, 0.}}], 
                
                LineBox[{{0.932802865422442, 0.}, {0.715602865422442, -0.1}, {
                 0.715602865422442, 0.1}, {0.932802865422442, 0.}}], 
                CircleBox[{0.972802865422442, 0.}, {0.04, 0.04}], 
                LineBox[{{1.012802865422442, 0.}, {1.052802865422442, 0.}}]}, {
                LineBox[{{0.16, 0.}, {0.2, 0.}}], 
                InsetBox[
                 FormBox[
                  TagBox["q", HoldForm], TraditionalForm], {0., 0.}]}}, {
               
               LineBox[{{{2.358408596267325, 1.2292042981336626`}, {
                1.9056057308448835`, 0.4264014327112209}}, {{
                2.358408596267325, 1.3292042981336627`}, {1.9056057308448835`,
                 2.1320071635561044`}}}], 
               
               LineBox[{{{1.5056057308448836`, 2.0820071635561046`}, {
                1.052802865422442, 1.7056057308448835`}}, {{
                1.5056057308448836`, 2.1820071635561042`}, {1.052802865422442,
                 2.5584085962673253`}}}], {}, {}, 
               
               LineBox[{{{1.5056057308448836`, 0.3764014327112209}, {
                1.052802865422442, 0.}}, {{1.5056057308448836`, 
                0.4764014327112209}, {1.052802865422442, 
                0.852802865422442}}}], 
               
               LineBox[{{0.652802865422442, 0.852802865422442}, {0.2, 
                0.852802865422442}}], {}, 
               LineBox[{{0.652802865422442, 0.}, {0.2, 0.}}], {}}}, 
             AspectRatio -> 1., ImageSize -> NCache[
               Rational[550, 3], 183.33333333333334`]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Venn diagram", "scanner" -> "SetTheory", "id" -> 
     "VennDiagram", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{
                GrayLevel[1], 
                PolygonBox[CompressedData["
1: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
y0Uedt6w1P6b5MMVaeULndx5OC+lE+xF8uOif9ToJF/iKlrgzF+XG7CxNqlA
0IOHlrLdS+6Q/Bl770HZKhce3qDvzl/h3YpZVLJ4hiMPR4R/bW8n+fVINO/R
m+M87LYQW+pM8m3hlBr9qDF5nuMCAo4k/35Pf3jMdycPdexpirYkH199Hi66
SZaHYSz67ATJz8Xb/WmXhHjY+lIyKY/k694LY7f3jXDxR9O3Z1okf+sJbzSr
qObivfvpBuIP+jFrz5Rd91Mu1htBTiTJ77d2fgt/5k+ucw+JfyH5/tbJDJdN
FlysenJgvpjkfx+xE4edFbhYvjPETXjNEPKztql6sjlYUV7yI4rwg7XTtQ+m
FRzMfF/bqED4wjdaPUD0LgeXt8vVxBP+ME6MuJRvwsEtvJ8XigifaN4+ctR8
GQeDTqWxLAi/PDwsnE41Eu7McXfeS/iGv0fEM+c+hYKqfyfbEv65FOfnFbqP
wi2rGva4Ez462DnLF/uHjfbRg81HCT/tfuu8sjefjU/SRuv7CF/xC+nuCnRk
45IKm0fjhL++fhKJC17BRtllf56YED4zknnZwysn3PjyhkEf4Te7ssAz3Ass
9CoU/BNA+K73kcZo5DIWahrusOEnunByY09j26tp3LXYasFBwoeUZNrkd2vC
kX//HpEi/Chb06LuzmLiNkbZyQbCl85/lRvNbmXicdMH0wWEP9NjhpLDnRmY
sneHYwnh0+zbFlmGyVNoKrFCuInwa9TE23SL5kn8RitqGyd8m+vWlTw0N4Gb
RsvcZwn/fjGLcN68ZQL1NOoVfxE+Pun/+b6Z5Tg+V7ab+EL4+eXmIINbvmPY
pWXucpPwdbzy9gsziaN4WPvq3Azh7xNbIry73oygbFVPoQrhc/q5Sg/7DjqK
qAibrib8Ll3eMlLCHsbwlM6DWYTvdYZe960SG0b7lof9g4T/G764NmQqDGHb
VJBQmSmFNjOssDQtGj7zsD2/6QKFJZfXGe8xG0SF4NGrmwIplJ70uP3MYQCX
BS08+zqaQq8HbYIS3v1oltwgW5dMIaQGBfgt7sP9ShfszmdTOCf/IT9FrQeN
oDn2diGFDEWXrQvNu9B3x9kf/33/OP1LLkvKoxMdvutE/vd9ZEDYfkQ3tgP5
DTxW/Pf9JK4+Mqe7sB3NXGUXCeZTmMIQfmLf3oZ82ubv0zMp7BDV3r79Zwsu
OvdCvzaRwvt3v8YXyzZjSLmkrU8YhSG505sLIupRJO9nau5VCveLM5fP9n9C
oy2RFz1PU+hd+dBLVucjLjKmVX/eSyF77frHA0mVeCzqU9RbJQrtzNMa5UXe
oa1HkJWpEIXTOZZrGaOvcKXQYec7faT+aca/L5Tk4Fe3vna3EjaGMCVCZu8m
Ef9+4Lgsgo18+o3KaQeEgeF9677nKTb+H9Y5Rzg=
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
stiA5vzCH99yXoD/AwcLkBU=
                 "]]}, {
                RGBColor[1, 0.932, 0.821], 
                PolygonBox[CompressedData["
1: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
FJoJeLYpDtLxf3CgJR4=
                 "]]}}, 
              GrayLevel[0], 
              Opacity[0.35], {
               CircleBox[{-0.40270181275976397`, -0.2325}, 1], 
               CircleBox[{0.40270181275976397`, -0.2325}, 1]}, {
               InsetBox[
                FormBox["q", TraditionalForm], {1.008919595408871, -0.5825}], 
               InsetBox[
                FormBox[
                "p", TraditionalForm], {-1.008919595408871, -0.5825}]}}, 
             Background -> RGBColor[1, 0.932, 0.821], 
             PlotRange -> {{-1.6, 1.6}, {-1.5, 1}}, ImageSize -> 185, 
             PlotRange -> {{-1.6, 1.6}, {-1.425, 1.658}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Boolean operator number", "scanner" -> "Boolean", "id" -> 
     "BooleanOperatorNumber", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "FromDigits[Boole[BooleanTable[(p && q) || ( !p &&  !q), {p, q}]], \
2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"9", 
              StyleBox["\" with variable ordering \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"{", 
                 RowBox[{"p", ",", "q"}], "}"}], 
               GrayLevel[0.6], StripOnInput -> False]}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Rule 195 elementary cellular automaton evolution", 
     "scanner" -> "Boolean", "id" -> "BooleanRuleECAEvolution", "position" -> 
     "800", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJztmDEKAjEURBcEC1tZ1AULwUtYSAoLe0tLwVqw0sILeAKvIriXEBQLLyAi
CB5AEW0thN1kJn8EQR5LmEwm32E7k9loWkmSJPt+378/n7vrP+an1fDmxtvG
Jl0f3S/+vFRru/rVHbqLQZaeXbu3bzWXeTAu/Vz6Wfb1737RdEp/sfkMxdH8
DzUfWPwvKp+hnmfnaH6W7X+oPFvLlfwPm2e0c0fLG8v6aP0B7XzRuDX/0f7f
rXFr/rPfF3Zuzf9Y98XCrflfdn8Qj3teofUHPW8zV6H6g9bHPHe0vGl9zSuE
+YZ239n1W+Ps/YRdvzXOft/Z9Vvj7OfCrt8aL7v/qF+J++w/6lfiPvuP5pW4
z3miXIn77G9o+xXHzJvmlTjCfEPTLx4HR3vvIR4HfwGKVEY1
                "], {{0, 0}, {26, 26}}, {0, 1}], {{Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 26}, {26, 26}}, {{0, 25}, {26, 25}}, {{0, 
                  24}, {26, 24}}, {{0, 23}, {26, 23}}, {{0, 22}, {26, 22}}, {{
                  0, 21}, {26, 21}}, {{0, 20}, {26, 20}}, {{0, 19}, {26, 
                  19}}, {{0, 18}, {26, 18}}, {{0, 17}, {26, 17}}, {{0, 16}, {
                  26, 16}}, {{0, 15}, {26, 15}}, {{0, 14}, {26, 14}}, {{0, 
                  13}, {26, 13}}, {{0, 12}, {26, 12}}, {{0, 11}, {26, 11}}, {{
                  0, 10}, {26, 10}}, {{0, 9}, {26, 9}}, {{0, 8}, {26, 8}}, {{
                  0, 7}, {26, 7}}, {{0, 6}, {26, 6}}, {{0, 5}, {26, 5}}, {{0, 
                  4}, {26, 4}}, {{0, 3}, {26, 3}}, {{0, 2}, {26, 2}}, {{0, 
                  1}, {26, 1}}, {{0, 0}, {26, 0}}}]}, {Antialiasing -> False, 
                 GrayLevel[
                  NCache[-1 + GoldenRatio, 0.6180339887498949]], 
                 
                 LineBox[{{{0, 0}, {0, 26}}, {{1, 0}, {1, 26}}, {{2, 0}, {2, 
                  26}}, {{3, 0}, {3, 26}}, {{4, 0}, {4, 26}}, {{5, 0}, {5, 
                  26}}, {{6, 0}, {6, 26}}, {{7, 0}, {7, 26}}, {{8, 0}, {8, 
                  26}}, {{9, 0}, {9, 26}}, {{10, 0}, {10, 26}}, {{11, 0}, {11,
                   26}}, {{12, 0}, {12, 26}}, {{13, 0}, {13, 26}}, {{14, 0}, {
                  14, 26}}, {{15, 0}, {15, 26}}, {{16, 0}, {16, 26}}, {{17, 
                  0}, {17, 26}}, {{18, 0}, {18, 26}}, {{19, 0}, {19, 26}}, {{
                  20, 0}, {20, 26}}, {{21, 0}, {21, 26}}, {{22, 0}, {22, 
                  26}}, {{23, 0}, {23, 26}}, {{24, 0}, {24, 26}}, {{25, 0}, {
                  25, 26}}, {{26, 0}, {26, 26}}}]}}}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, Frame -> 
              False, FrameLabel -> {None, None}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Automatic, ImageSize -> NCache[{
                 Rational[583, 2], 140}, {291.5, 140}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}], 
             Alignment -> {Left, Center}, ImageSize -> 550], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "Math", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.79", "parsetiming" -> "0.289", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP28081h4f351fe320g44400001d9fb9be2h10801f", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa28091h4f351fe320g444000068c91091444g79171494138648170584556", "version" -> 
    "2.6", "inputstring" -> "(p&&q)||(!p&&!q)"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2022, 11, 23, 13, 49, 17.7888243`9.002722188408459}, "Line" -> 
    490, "SessionID" -> 16943083377698340012}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "(p&&q)||(!p&&!q)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{497., {716.3544921875, 721.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8782181580192804`*^9},
 CellID->418691379,ExpressionUUID->"ed342879-1fdf-4787-986d-85214fa99147"]
}, Open  ]],

Cell["I think the answer if iff or \[Congruent] or equivalence for x\
\[CenterDot]y.", "Text",
 CellChangeTimes->{{3.878218193457957*^9, 3.878218212440482*^9}},
 CellID->385850912,ExpressionUUID->"d8beee52-a025-452d-9682-407de37a9b10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.878218343183282*^9, 3.878218348548808*^9}},
 CellLabel->"In[491]:=",
 CellID->217054677,ExpressionUUID->"c57b3b06-e943-4e13-8667-75236c906fef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8782183490341663`*^9},
 CellLabel->"Out[491]=",
 CellID->142590552,ExpressionUUID->"5f13586e-15f8-4891-82a5-a44c9264d24d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "/@", 
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8782183505288973`*^9, 3.878218351826662*^9}},
 CellLabel->"In[492]:=",
 CellID->93735106,ExpressionUUID->"cf3362f5-fe5b-4828-9d96-418c75a3c441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.878218352266122*^9},
 CellLabel->"Out[492]=",
 CellID->391093950,ExpressionUUID->"af0c9ae5-7d40-4e68-9f4b-d37341c11131"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{"Xor", "[", 
    RowBox[{"p", ",", "q"}], "]"}], ",", "\"\<ANF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.878218652659933*^9, 3.878218662629961*^9}},
 CellLabel->"In[496]:=",
 CellID->70905225,ExpressionUUID->"1fad3d6f-7436-4a0e-b31c-fe515cb1c288"],

Cell[BoxData[
 RowBox[{"p", "\[Xor]", "q"}]], "Output",
 CellChangeTimes->{3.878218662964902*^9},
 CellLabel->"Out[496]=",
 CellID->164940497,ExpressionUUID->"8ed6c493-48a0-493d-8b46-7ad8dbe043a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "4" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "5" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "6" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "1" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "2" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "3" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", " (" <> "Shift+" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> 
  "13.2 for Microsoft Windows (64-bit) (November 18, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 244, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 244, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[827, 27, 249, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1079, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1079, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1248, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1380, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1513, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1667, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1909, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 672841, 13599},
 {"Your Essay Title", 673028, 13603},
 {"AuthorName", 673209, 13607},
 {"Abstract", 673368, 13611},
 {"TemplateCell", 673550, 13615},
 {"SectionHeader", 673733, 13619},
 {"ExampleTopicSentence", 673909, 13623},
 {"ExampleCodeText", 674084, 13627},
 {"ExampleInput", 674254, 13631},
 {"ExampleOutput", 674420, 13635}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 244, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[827, 27, 249, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1079, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1248, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1380, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1513, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1667, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1909, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2166, 69, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2264, 72, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]],
Cell[CellGroupData[{
Cell[2396, 78, 170, 2, 67, "Section",ExpressionUUID->"57a12ffd-2d36-4846-9441-06002f34c887",
 CellID->12682709],
Cell[2569, 82, 388, 6, 81, "Text",ExpressionUUID->"1918f9c3-00eb-480b-84ee-f07452b24d7b",
 CellID->71202886],
Cell[CellGroupData[{
Cell[2982, 92, 339, 8, 28, "Input",ExpressionUUID->"aafb4df6-5c08-4a88-8f81-f1126bd30c70",
 CellID->44573635],
Cell[3324, 102, 275, 7, 32, "Output",ExpressionUUID->"cdb7fc0b-397e-42c9-aecd-1061d3dffb94",
 CellID->30334630]
}, Open  ]],
Cell[CellGroupData[{
Cell[3636, 114, 241, 4, 28, "Input",ExpressionUUID->"6cf583f9-bac3-478f-88fe-321d817b0004",
 CellID->19156260],
Cell[3880, 120, 211, 4, 32, "Output",ExpressionUUID->"13457e53-9807-4a91-968b-a5c746d5b4c0",
 CellID->402964714]
}, Open  ]],
Cell[CellGroupData[{
Cell[4128, 129, 371, 10, 28, "Input",ExpressionUUID->"5eb4283d-6857-4d4f-bd77-865e642f2891",
 CellID->176968454],
Cell[4502, 141, 3597, 133, 128, "Output",ExpressionUUID->"3219bf17-249f-4aeb-8896-733a18edbc05",
 CellID->100269150]
}, Open  ]],
Cell[CellGroupData[{
Cell[8136, 279, 286, 6, 28, "Input",ExpressionUUID->"6c6fad27-bd57-4cce-b7da-c0deefad2e74",
 CellID->454315875],
Cell[8425, 287, 273, 5, 32, "Output",ExpressionUUID->"b0a136c8-bca8-424b-a070-d32aa384b638",
 CellID->76767793]
}, Open  ]],
Cell[CellGroupData[{
Cell[8735, 297, 437, 12, 28, "Input",ExpressionUUID->"24543eb5-f8e3-4d6e-bdd8-e0a4a59e1933",
 CellID->232337371],
Cell[9175, 311, 254, 6, 32, "Output",ExpressionUUID->"bb7f6464-e49b-456e-b643-9d9f5bda9c34",
 CellID->104254831]
}, Open  ]],
Cell[CellGroupData[{
Cell[9466, 322, 853, 24, 48, "Input",ExpressionUUID->"fc47d90e-9723-4d92-a14f-268337614365",
 CellID->632146201],
Cell[10322, 348, 3467, 101, 166, "Output",ExpressionUUID->"15fb6738-14df-4a5f-b188-c50a557a8afe",
 CellID->320391991]
}, Open  ]],
Cell[CellGroupData[{
Cell[13826, 454, 1427, 39, 105, "Input",ExpressionUUID->"d70c290a-ee4d-4c35-8e13-c8fc1bdb7acb",
 CellID->238892758],
Cell[15256, 495, 3787, 131, 321, "Output",ExpressionUUID->"6f01b61b-834a-465f-abf0-cfe6a606d789",
 CellID->919608235]
}, Open  ]],
Cell[CellGroupData[{
Cell[19080, 631, 368, 9, 28, "Input",ExpressionUUID->"ba7088f1-2bfc-4327-9091-2d139ab6045d",
 CellID->52965373],
Cell[19451, 642, 162533, 3302, 907, "Output",ExpressionUUID->"10bb65ab-a482-44da-99d3-5d8623c82f7a",
 CellID->642806366]
}, Open  ]],
Cell[CellGroupData[{
Cell[182021, 3949, 404, 10, 28, "Input",ExpressionUUID->"a9d0dc4b-4d9d-41da-9397-794f5c3d537a",
 CellID->373848653],
Cell[182428, 3961, 1714, 38, 166, "Output",ExpressionUUID->"67aff0f3-d983-4589-a8a9-e2e6a81082e5",
 CellID->536009969]
}, Open  ]],
Cell[CellGroupData[{
Cell[184179, 4004, 347, 9, 28, "Input",ExpressionUUID->"e0110e7e-1964-42a6-bc43-2e0149a3c8d0",
 CellID->43671482],
Cell[184529, 4015, 566, 18, 32, "Output",ExpressionUUID->"69e842dd-43b5-4606-a4ab-b4fe1d5ba320",
 CellID->28253024]
}, Open  ]],
Cell[CellGroupData[{
Cell[185132, 4038, 505, 15, 28, "Input",ExpressionUUID->"fd87f644-15bb-466e-b729-c612a0439305",
 CellID->58886209],
Cell[185640, 4055, 273, 5, 32, "Output",ExpressionUUID->"12b6c889-72ce-4d48-ba78-1caaf67dca08",
 CellID->27837890]
}, Open  ]],
Cell[CellGroupData[{
Cell[185950, 4065, 858, 25, 48, "Input",ExpressionUUID->"c01c55ca-7b68-4243-8458-b7750864ccfe",
 CellID->33848682],
Cell[186811, 4092, 215, 5, 32, "Output",ExpressionUUID->"4ba5ee34-1cef-4089-b768-5db88f1511f5",
 CellID->513928740]
}, Open  ]],
Cell[CellGroupData[{
Cell[187063, 4102, 255, 5, 28, "Input",ExpressionUUID->"c25cef78-8b12-4839-a595-5d1eb23d329c",
 CellID->83448712],
Cell[187321, 4109, 9893, 204, 64, "Output",ExpressionUUID->"c0f1d869-e6fc-4b71-a182-fa7874a7b5ff",
 CellID->308300484]
}, Open  ]],
Cell[CellGroupData[{
Cell[197251, 4318, 355, 8, 28, "Input",ExpressionUUID->"33ae229c-74bc-4884-acb9-9a1c270dfa6d",
 CellID->103575752],
Cell[197609, 4328, 254, 6, 32, "Output",ExpressionUUID->"c725f780-0b5c-49a5-bde4-3ab7c1624047",
 CellID->89297360]
}, Open  ]],
Cell[CellGroupData[{
Cell[197900, 4339, 199, 3, 41, "WolframAlphaLong",ExpressionUUID->"a2c7407e-abff-4300-b880-4b28c5485a92",
 CellID->26889301],
Cell[198102, 4344, 88194, 1625, 1446, "Print",ExpressionUUID->"25b75253-2a5b-4496-a70a-d30479094f5f",
 CellID->545306633]
}, Closed]],
Cell[CellGroupData[{
Cell[286333, 5974, 311, 7, 24, "Input",ExpressionUUID->"8f352b84-6952-4003-b841-607a321b2e9f",
 CellID->5835309],
Cell[286647, 5983, 10180, 210, 64, "Output",ExpressionUUID->"7c017d46-0b5a-4a66-b79a-42171d3f31eb",
 CellID->445190097]
}, Open  ]],
Cell[CellGroupData[{
Cell[296864, 6198, 469, 12, 48, "Input",ExpressionUUID->"933523fe-85a0-4b1b-b0f7-d22c2a49b573",
 CellID->357985856],
Cell[297336, 6212, 199, 3, 32, "Output",ExpressionUUID->"c8f8051f-861e-45e9-ba98-c0e7d9df07be",
 CellID->695915538]
}, Open  ]],
Cell[297550, 6218, 296, 5, 58, "Text",ExpressionUUID->"4ee7bcdb-ec1b-4b28-ab4d-8e8cb61aa222",
 CellID->4424940],
Cell[CellGroupData[{
Cell[297871, 6227, 691, 20, 48, "Input",ExpressionUUID->"c4cef31c-afe2-48b1-98cc-a9b972190d64",
 CellID->382077822],
Cell[298565, 6249, 10427, 213, 64, "Output",ExpressionUUID->"693e0b36-76d5-487b-b768-d51a1c21bc10",
 CellID->78349928]
}, Open  ]],
Cell[309007, 6465, 203, 2, 35, "Text",ExpressionUUID->"a34e7b50-9507-48c7-9f45-2147564a0943",
 CellID->12658353],
Cell[309213, 6469, 182, 2, 35, "Text",ExpressionUUID->"74adecd2-eaf9-4b55-8aef-f6df2aab9c27",
 CellID->218955981],
Cell[CellGroupData[{
Cell[309420, 6475, 912, 26, 48, "Input",ExpressionUUID->"d91a4bb3-661a-43ff-8f2d-0a50771eb48e",
 CellID->169391238],
Cell[310335, 6503, 238, 5, 32, "Output",ExpressionUUID->"6d461dae-3734-4f51-af61-9803f3535da9",
 CellID->36427903]
}, Open  ]],
Cell[CellGroupData[{
Cell[310610, 6513, 271, 5, 28, "Input",ExpressionUUID->"09f62b68-7994-4b77-940b-3692908d333b",
 CellID->393448095],
Cell[310884, 6520, 23433, 412, 64, "Output",ExpressionUUID->"78bba677-312c-4d13-847a-6cee3059b2fb",
 CellID->24738905]
}, Open  ]],
Cell[CellGroupData[{
Cell[334354, 6937, 271, 5, 28, "Input",ExpressionUUID->"8c8a68eb-c730-444a-8c14-107e96ae14c6",
 CellID->228895668],
Cell[334628, 6944, 23434, 412, 64, "Output",ExpressionUUID->"e6c0604d-cdf0-4f41-be72-d348ec4a1b43",
 CellID->203110317]
}, Open  ]],
Cell[358077, 7359, 255, 4, 28, "Input",ExpressionUUID->"0bcaee5d-19ff-4d44-a488-7796674840b9",
 CellID->47450394],
Cell[CellGroupData[{
Cell[358357, 7367, 360, 7, 28, "Input",ExpressionUUID->"c988d0ac-c981-4fc3-a9ae-172bbc782281",
 CellID->570930810],
Cell[358720, 7376, 732, 15, 71, "Output",ExpressionUUID->"3b28796b-1bd0-45f2-84df-e7c456adedb3",
 CellID->74705971]
}, Open  ]],
Cell[CellGroupData[{
Cell[359489, 7396, 310, 6, 28, "Input",ExpressionUUID->"ff72ef4a-b92f-4978-b4c8-a86f315d71f2",
 CellID->546670037],
Cell[359802, 7404, 581, 13, 71, "Output",ExpressionUUID->"a44b9d6f-2e21-4b96-886c-849c107f39c3",
 CellID->71495400]
}, Open  ]],
Cell[CellGroupData[{
Cell[360420, 7422, 353, 8, 28, "Input",ExpressionUUID->"b2520c7a-1d55-472c-a84a-6fdcc971e1b9",
 CellID->727437029],
Cell[360776, 7432, 12163, 252, 147, "Output",ExpressionUUID->"8bb6fa75-087f-43fc-9655-38f2faf2f276",
 CellID->867643006]
}, Open  ]],
Cell[CellGroupData[{
Cell[372976, 7689, 390, 8, 28, "Input",ExpressionUUID->"189ebb93-2738-4073-88c1-76414f9787f2",
 CellID->746744300],
Cell[373369, 7699, 321, 6, 32, "Output",ExpressionUUID->"a2d96403-f89b-4e1d-9483-42a0bb636b0a",
 CellID->362540998]
}, Open  ]],
Cell[CellGroupData[{
Cell[373727, 7710, 332, 7, 28, "Input",ExpressionUUID->"00fa6298-8453-437b-83bd-47288b5f3dc1",
 CellID->8991634],
Cell[374062, 7719, 250, 7, 32, "Output",ExpressionUUID->"028adb8f-9d23-421d-a530-1c6ef97c7472",
 CellID->101911876]
}, Open  ]],
Cell[CellGroupData[{
Cell[374349, 7731, 327, 8, 28, "Input",ExpressionUUID->"fead5f95-5d52-49b8-86a5-410f4a0c8059",
 CellID->41336],
Cell[374679, 7741, 231, 6, 32, "Output",ExpressionUUID->"a25d8fb1-55a8-4f89-b0fa-f2a94ee0d78c",
 CellID->140621864]
}, Open  ]],
Cell[CellGroupData[{
Cell[374947, 7752, 200, 3, 41, "WolframAlphaLong",ExpressionUUID->"272fcb09-8045-4344-b64f-e5b159cfa6a8",
 CellID->434126332],
Cell[375150, 7757, 58513, 1106, 1402, "Print",ExpressionUUID->"74a60178-87b8-4818-93db-223530b03497",
 CellID->50411125]
}, Closed]],
Cell[CellGroupData[{
Cell[433700, 8868, 463, 12, 44, "Input",ExpressionUUID->"4b3b91ec-6f3d-4ffd-a6a1-1c915e766b63",
 CellID->594974906],
Cell[434166, 8882, 174, 3, 32, "Output",ExpressionUUID->"16bcc9e5-9b80-4484-9f32-4ca85d3bf158",
 CellID->39725179]
}, Open  ]],
Cell[434355, 8888, 242, 3, 35, "Text",ExpressionUUID->"2e76df1a-e5d2-49d8-b2ef-b961442ca2b9",
 CellID->5938891]
}, Open  ]],
Cell[CellGroupData[{
Cell[434634, 8896, 163, 2, 67, "Section",ExpressionUUID->"072d51ad-9ce4-4ba6-a0c4-73e6c386cc92",
 CellID->484606979],
Cell[434800, 8900, 230, 4, 35, "Text",ExpressionUUID->"35975573-dbb5-423e-9d32-e9c6d4d7c4f8",
 CellID->252684222],
Cell[CellGroupData[{
Cell[435055, 8908, 913, 28, 67, "Input",ExpressionUUID->"e441f42e-cec8-4e3a-8491-0417818434e2",
 CellID->412694177],
Cell[435971, 8938, 242, 5, 32, "Output",ExpressionUUID->"69a40163-77cd-418f-a03a-f3b961b6375b",
 CellID->599981480]
}, Open  ]],
Cell[CellGroupData[{
Cell[436250, 8948, 259, 5, 28, "Input",ExpressionUUID->"b4878032-e54d-48c8-a84d-0e524c5401ba",
 CellID->59290753],
Cell[436512, 8955, 9884, 204, 64, "Output",ExpressionUUID->"0f2e1b8c-2615-4f62-869e-ef572852dd60",
 CellID->162619414]
}, Open  ]],
Cell[CellGroupData[{
Cell[446433, 9164, 443, 10, 28, "Input",ExpressionUUID->"5db14e5a-9f33-4ee3-9ee6-069f9c3bb575",
 CellID->13314277],
Cell[446879, 9176, 251, 4, 32, "Output",ExpressionUUID->"d37af7a4-3b16-4875-afd4-e3a923646693",
 CellID->474065663]
}, Open  ]],
Cell[CellGroupData[{
Cell[447167, 9185, 637, 20, 28, "Input",ExpressionUUID->"d9de48b8-030f-477c-9e35-485686521551",
 CellID->261381049],
Cell[447807, 9207, 271, 5, 32, "Output",ExpressionUUID->"92daa3fe-12ab-4c32-ba7c-e6b08d06c6fa",
 CellID->690270288]
}, Open  ]],
Cell[CellGroupData[{
Cell[448115, 9217, 299, 6, 28, "Input",ExpressionUUID->"b704e5d0-ce19-4736-8e2c-7e6e7c48c4fd",
 CellID->87315022],
Cell[448417, 9225, 251, 5, 32, "Output",ExpressionUUID->"5032a4d0-b913-4ef9-abaa-951ca8308080",
 CellID->411977490]
}, Open  ]],
Cell[448683, 9233, 211, 2, 35, "Text",ExpressionUUID->"5f8a3e43-22ae-4f87-a05f-7a264d750d92",
 CellID->153886213],
Cell[CellGroupData[{
Cell[448919, 9239, 1021, 31, 67, "Input",ExpressionUUID->"cd2e884d-8867-4226-b34a-8a589aada3bd",
 CellID->134650563],
Cell[449943, 9272, 217, 5, 32, "Output",ExpressionUUID->"8a2ea820-53a7-4edb-a785-06e9ae3ffb72",
 CellID->102752351]
}, Open  ]],
Cell[CellGroupData[{
Cell[450197, 9282, 301, 6, 28, "Input",ExpressionUUID->"126f2fd1-2900-43fd-815b-040365db3eac",
 CellID->438677488],
Cell[450501, 9290, 383, 11, 32, "Output",ExpressionUUID->"7f30d920-fb5e-401f-885c-56e46cb92eb1",
 CellID->199397462]
}, Open  ]],
Cell[CellGroupData[{
Cell[450921, 9306, 339, 7, 28, "Input",ExpressionUUID->"06e68e0b-ba91-4894-bb07-811bd22ee4b7",
 CellID->94618960],
Cell[451263, 9315, 275, 5, 32, "Output",ExpressionUUID->"2b8d643a-ce1b-4c13-b816-cc9a221c11a6",
 CellID->140301639]
}, Open  ]],
Cell[CellGroupData[{
Cell[451575, 9325, 219, 3, 41, "WolframAlphaLong",ExpressionUUID->"248ca457-84a0-4eae-8936-95074e9e9d16",
 CellID->250352040],
Cell[451797, 9330, 22412, 453, 582, "Print",ExpressionUUID->"663eeb69-942c-45ad-b62c-6d76702d48d4",
 CellID->131271967]
}, Closed]],
Cell[CellGroupData[{
Cell[474246, 9788, 352, 8, 24, "Input",ExpressionUUID->"c88196b2-0078-4160-9df2-df7bdf71ce8a",
 CellID->313050747],
Cell[474601, 9798, 329, 10, 32, "Output",ExpressionUUID->"095d6b19-4d1f-43ab-8821-4807c534d16e",
 CellID->284033718]
}, Open  ]],
Cell[CellGroupData[{
Cell[474967, 9813, 214, 3, 41, "WolframAlphaLong",ExpressionUUID->"1cba680a-051a-4269-9ab3-736e2bf67eaa",
 CellID->906983279],
Cell[475184, 9818, 83852, 1584, 1448, "Print",ExpressionUUID->"ed342879-1fdf-4787-986d-85214fa99147",
 CellID->418691379]
}, Open  ]],
Cell[559051, 11405, 235, 3, 35, "Text",ExpressionUUID->"d8beee52-a025-452d-9682-407de37a9b10",
 CellID->385850912],
Cell[CellGroupData[{
Cell[559311, 11412, 318, 8, 28, "Input",ExpressionUUID->"c57b3b06-e943-4e13-8667-75236c906fef",
 CellID->217054677],
Cell[559632, 11422, 517, 17, 32, "Output",ExpressionUUID->"5f13586e-15f8-4891-82a5-a44c9264d24d",
 CellID->142590552]
}, Open  ]],
Cell[CellGroupData[{
Cell[560186, 11444, 349, 9, 28, "Input",ExpressionUUID->"cf3362f5-fe5b-4828-9d96-418c75a3c441",
 CellID->93735106],
Cell[560538, 11455, 254, 6, 32, "Output",ExpressionUUID->"af0c9ae5-7d40-4e68-9f4b-d37341c11131",
 CellID->391093950]
}, Open  ]],
Cell[CellGroupData[{
Cell[560829, 11466, 321, 7, 28, "Input",ExpressionUUID->"1fad3d6f-7436-4a0e-b31c-fe515cb1c288",
 CellID->70905225],
Cell[561153, 11475, 197, 4, 32, "Output",ExpressionUUID->"8ed6c493-48a0-493d-8b46-7ad8dbe043a7",
 CellID->164940497]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

