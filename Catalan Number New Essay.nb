(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    947267,      21193]
NotebookOptionsPosition[    815798,      18627]
NotebookOutlinePosition[    929483,      20802]
CellTagsIndexPosition[    929092,      20788]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Catalan Numbers", "Title",
 CellChangeTimes->{{3.8736460885151243`*^9, 3.873646092480855*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.873646097625995*^9, 3.8736460994500127`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section",
 CellID->213864243,ExpressionUUID->"c3762676-6711-4cce-b808-78d56c1acc38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{
  "ResourceObject", "[", "\"\<PeterBurbery/RecreationalMathematics\>\"", 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8736461518182015`*^9, 3.8736461679677663`*^9}},
 CellLabel->"In[3]:=",
 CellID->10987584,ExpressionUUID->"9df7651f-058a-4e24-8683-5e5dbe371a66"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/RecreationalMathematics\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.9.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/RecreationalMathematics\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.9.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\peter\\\\AppData\\\\Roaming\\\\Mathematica\
\\\\Paclets\\\\Repository\\\\PeterBurbery__RecreationalMathematics-1.9.0\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"This paclet is for recreational mathematics and math \
puzzles\"", Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "PeterBurbery/RecreationalMathematics", "Description" -> 
    "This paclet is for recreational mathematics and math puzzles", "Creator" -> 
    "Peter Cullen Burbery", "License" -> "MIT", "PublisherID" -> 
    "PeterBurbery", "Version" -> "1.9.0", "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{
         "PeterBurbery`RecreationalMathematics`", 
          "RecreationalMathematics.wl"}}, 
       "Symbols" -> {
        "PeterBurbery`RecreationalMathematics`AllBalancedGroupingSymbols", 
         "PeterBurbery`RecreationalMathematics`BalancedTernary", 
         "PeterBurbery`RecreationalMathematics`CatalanUnrank", 
         "PeterBurbery`RecreationalMathematics`Derangements", 
         "PeterBurbery`RecreationalMathematics`DyckPaths", 
         "PeterBurbery`RecreationalMathematics`EulerLinePoints", 
         "PeterBurbery`RecreationalMathematics`FivePointConic", 
         "PeterBurbery`RecreationalMathematics`IntegralNumberQ", 
         "PeterBurbery`RecreationalMathematics`NinePointCubic", 
         "PeterBurbery`RecreationalMathematics`NinePointQuadric"}}, {
      "Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\peter\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
PeterBurbery__RecreationalMathematics-1.9.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.873646156747054*^9, 3.873646172862246*^9}},
 CellLabel->"Out[3]=",
 CellID->429386898,ExpressionUUID->"876887c7-e705-4427-b2c2-ef564ebf8623"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`RecreationalMathematics`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8736461765145464`*^9, 3.8736461849864206`*^9}},
 CellLabel->"In[4]:=",
 CellID->86770463,ExpressionUUID->"a5e89e5b-828e-47a0-be63-b18de37a555f"],

Cell["Make a table of the Catalan numbers:", "Text",
 CellChangeTimes->{{3.873646197196628*^9, 3.873646202921117*^9}},
 CellID->701788317,ExpressionUUID->"dc4a099a-2f87-4ea0-bc0c-fab62ae9e92f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"CatalanNumber", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "16"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8736462040497675`*^9, 3.87364622389604*^9}},
 CellLabel->"In[6]:=",
 CellID->364752486,ExpressionUUID->"f3a7b652-4129-4b1d-870a-4d043b367c96"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "2"},
    {"3", "5"},
    {"4", "14"},
    {"5", "42"},
    {"6", "132"},
    {"7", "429"},
    {"8", "1430"},
    {"9", "4862"},
    {"10", "16796"},
    {"11", "58786"},
    {"12", "208012"},
    {"13", "742900"},
    {"14", "2674440"},
    {"15", "9694845"},
    {"16", "35357670"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.873646218117608*^9, 3.87364622425505*^9}},
 CellLabel->"Out[6]//TableForm=",
 CellID->646710630,ExpressionUUID->"4a2cf045-a4eb-4148-9ee0-06db304d8f3f"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "n"], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", "+", "1"}]], 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"2", "n"}]},
        {"n"}
       }], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f8615cb2-1821-431f-92ef-fb12d726d1eb"],
 "."
}], "Text",
 CellChangeTimes->{{3.873646234283412*^9, 3.8736462513890657`*^9}},
 CellID->121300404,ExpressionUUID->"c4d004ea-dfe8-4568-b61b-6a3f95b0cbe9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", "+", "1"}]], 
     RowBox[{"Binomial", "[", 
      RowBox[{
       RowBox[{"2", "n"}], ",", "n"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "16"}], "}"}]}], "]"}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.873646278084548*^9, 3.873646300895399*^9}},
 CellLabel->"In[10]:=",
 CellID->40043227,ExpressionUUID->"fa44f7a9-dec5-4788-a11a-03bde872371c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"2"},
    {"5"},
    {"14"},
    {"42"},
    {"132"},
    {"429"},
    {"1430"},
    {"4862"},
    {"16796"},
    {"58786"},
    {"208012"},
    {"742900"},
    {"2674440"},
    {"9694845"},
    {"35357670"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.873646292678749*^9, 3.8736463011136694`*^9}},
 CellLabel->"Out[10]=",
 CellID->454250692,ExpressionUUID->"84942265-b114-42f8-88b0-36c1c6aac3ad"]
}, Open  ]],

Cell[TextData[{
 "How many ways can 3 sets of parentheses be arranged? ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Answer", ":", 
    SubscriptBox["C", "3"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a705ec1e-dc39-48ae-aeac-b35791a52160"],
 "."
}], "Text",
 CellChangeTimes->{{3.873646311184053*^9, 3.873646333731228*^9}},
 CellID->80498616,ExpressionUUID->"6cf4f102-5031-4095-ad06-9ac61bc9d69c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CatalanNumber", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.8736463345284185`*^9, 3.873646335881874*^9}},
 CellLabel->"In[11]:=",
 CellID->971899202,ExpressionUUID->"b5ed9aa4-8a50-4597-b7e3-252fac8edfe6"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8736463361812143`*^9},
 CellLabel->"Out[11]=",
 CellID->673112679,ExpressionUUID->"deffa82f-9bd7-46fe-aacc-95e8974f5a09"]
}, Open  ]],

Cell["There are 5 ways:", "Text",
 CellChangeTimes->{{3.873646337305497*^9, 3.87364634044512*^9}},
 CellID->141851056,ExpressionUUID->"a8d786fe-74f1-4939-903f-e5f26ae4165d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllBalancedGroupingSymbols", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<(\>\"", ",", "\"\<)\>\""}], "}"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8736463422122374`*^9, 3.873646353150647*^9}},
 CellLabel->"In[12]:=",
 CellID->351083846,ExpressionUUID->"f4419592-8ff0-4233-ab95-f9bede777838"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"((()))\"\>", ",", "\<\"(()())\"\>", ",", "\<\"(())()\"\>", 
   ",", "\<\"()(())\"\>", ",", "\<\"()()()\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.873646354006646*^9},
 CellLabel->"Out[12]=",
 CellID->298545679,ExpressionUUID->"7a7b3177-5b92-4908-8c56-8c6a9a1c6564"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"AllBalancedGroupingSymbols", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<(\>\"", ",", "\"\<)\>\""}], "}"}], ",", "3"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8736463568333817`*^9, 3.873646358517888*^9}},
 CellLabel->"In[13]:=",
 CellID->798453488,ExpressionUUID->"4a09fa59-eb1b-443a-ae61-9c955c6e51e4"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8736463588001165`*^9},
 CellLabel->"Out[13]=",
 CellID->171757679,ExpressionUUID->"147e7a6a-80f3-4188-aab1-2daeed588df2"]
}, Open  ]],

Cell["There are also Dyck paths:", "Text",
 CellChangeTimes->{{3.8736463680195584`*^9, 3.873646373255268*^9}},
 CellID->278285093,ExpressionUUID->"1caaeb06-098f-4e21-97ab-c24d6ce5bf7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DyckPaths", "[", "3", "]"}], "//", "Multicolumn"}]], "Input",
 CellChangeTimes->{{3.8736464445363045`*^9, 3.8736464518966227`*^9}},
 CellLabel->"In[56]:=",
 CellID->343652282,ExpressionUUID->"badc398b-6ab5-4470-8b34-24faa5552f41"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 2.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 2.}, {6., 
          1.}, {7., 0.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 7.}, {0., 3.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{{}, {}}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.873646447336161*^9, 3.873646452299425*^9}},
 CellLabel->"Out[56]=",
 CellID->468274823,ExpressionUUID->"9c5d0350-96ed-4ddd-b503-c80031e8f2e2"]
}, Open  ]],

Cell[TextData[{
 "How many n are there such that 1000\[LessEqual]n\[LessEqual]100,000 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "n"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f1add5ab-cefe-44d8-8a29-16a099a6ddbe"],
 " is odd?"
}], "Text",
 CellChangeTimes->{{3.8736465418317747`*^9, 3.873646582468933*^9}},
 CellID->277249267,ExpressionUUID->"ab800473-62e9-40aa-aeab-9a96af5b7c44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", 
       RowBox[{"CatalanNumber", "[", "#", "]"}], "]"}], "&"}], "]"}], "[", 
    RowBox[{"Range", "[", 
     RowBox[{"1000", ",", "100000"}], "]"}], "]"}], "//", 
   "AbsoluteTiming"}]}]], "Input",
 CellChangeTimes->{{3.8736465722842064`*^9, 3.873646599343662*^9}, {
  3.8736466588237696`*^9, 3.8736466639048996`*^9}},
 CellLabel->"In[60]:=",
 CellID->175593186,ExpressionUUID->"f228f031-c9e7-488a-a2c3-b43dbdea9ced"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"58.5495936`", ",", 
   RowBox[{"{", 
    RowBox[{
    "1023", ",", "2047", ",", "4095", ",", "8191", ",", "16383", ",", "32767",
      ",", "65535"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.873646653598963*^9, 3.8736467228833447`*^9},
 CellLabel->"Out[60]=",
 CellID->146199546,ExpressionUUID->"cf351d89-d45f-4ad0-9b63-8954b2b4b7e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"%60", "[", 
   RowBox[{"[", 
    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.873646778903664*^9, 3.873646801514086*^9}},
 CellLabel->"In[64]:=",
 CellID->814990613,ExpressionUUID->"946b97cc-9c45-4980-b09b-e65cef2b65b9"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.87364680191426*^9},
 CellLabel->"Out[64]=",
 CellID->187498752,ExpressionUUID->"e694079a-b121-4b9a-bc16-9ae888f39d32"]
}, Open  ]],

Cell["\<\
There are 7 numbers with odd Catalan numbers from 1000 to 100000.\
\>", "Text",
 CellChangeTimes->{{3.8736468038861322`*^9, 3.8736468182451363`*^9}},
 CellID->595977607,ExpressionUUID->"414aa3a7-0e9f-4f82-8b5d-fc6f42f193c9"],

Cell["What is the generating function for the Catalan numbers?", "Text",
 CellChangeTimes->{{3.873646606801096*^9, 3.87364663462875*^9}},
 CellID->39428534,ExpressionUUID->"6c54aeb1-e1eb-4e93-9a45-8e5468de4293"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindGeneratingFunction", "[", 
   RowBox[{
    RowBox[{"CatalanNumber", "[", 
     RowBox[{"Range", "[", "8", "]"}], "]"}], ",", "n"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8736466362177362`*^9, 3.873646645403942*^9}, {
  3.873646828489747*^9, 3.873646830741227*^9}},
 CellLabel->"In[65]:=",
 CellID->445395971,ExpressionUUID->"d184fb5e-1e1f-4bd6-b318-ca20dc359073"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["2", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"4", " ", "n"}]}]], "+", "1"}], ")"}], " ", "n"}]], "-", 
   FractionBox["1", "n"]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8736466564811687`*^9, 3.873646831360676*^9},
 CellLabel->"Out[65]//TraditionalForm=",
 CellID->872766,ExpressionUUID->"d33a089c-fcb8-45d3-979c-96207b981073"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Together", "[", 
   RowBox[{"FindGeneratingFunction", "[", 
    RowBox[{
     RowBox[{"CatalanNumber", "[", 
      RowBox[{"Range", "[", "8", "]"}], "]"}], ",", "n"}], "]"}], "]"}], "//",
   "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.873646851139872*^9, 3.8736468912011805`*^9}},
 CellLabel->"In[71]:=",
 CellID->905303168,ExpressionUUID->"8610fe91-432f-4709-959d-898ea9994c9d"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"1", "-", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", " ", "n"}]}]]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"4", " ", "n"}]}]], "+", "1"}], ")"}], " ", "n"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.873646851698253*^9, 3.8736468914850287`*^9}},
 CellLabel->"Out[71]//TraditionalForm=",
 CellID->145983245,ExpressionUUID->"0bb2fb0e-89bc-422b-b21a-e2cbfc80ab81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"FindGeneratingFunction", "[", 
    RowBox[{
     RowBox[{"CatalanNumber", "[", 
      RowBox[{"Range", "[", "8", "]"}], "]"}], ",", "n"}], "]"}], "]"}], "//",
   "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.873646879504348*^9, 3.8736468864190564`*^9}},
 CellLabel->"In[70]:=",
 CellID->820337583,ExpressionUUID->"1aa3041b-cd08-483b-a6f4-c9de455a4c12"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    FractionBox["2", 
     RowBox[{
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"4", " ", "n"}]}]], "+", "1"}]], "-", "1"}], "n"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.8736468816404867`*^9, 3.873646886797453*^9}},
 CellLabel->"Out[70]//TraditionalForm=",
 CellID->160407143,ExpressionUUID->"443b6d64-9e27-45c2-b0bc-7bba2f74a26e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"FindGeneratingFunction", "[", 
   RowBox[{
    RowBox[{"CatalanNumber", "[", 
     RowBox[{"Range", "[", "8", "]"}], "]"}], ",", "n"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8736468989527473`*^9},
 CellLabel->"In[72]:=",
 CellID->82287220,ExpressionUUID->"877c0858-2d63-4f7a-8ffc-4220e59733c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "n"]}], "+", 
  FractionBox["2", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        RowBox[{"4", " ", "n"}]}]]}], ")"}], " ", "n"}]]}]], "Output",
 CellChangeTimes->{3.873646899436015*^9},
 CellLabel->"Out[72]=",
 CellID->352127684,ExpressionUUID->"5c9f95a1-10c8-422a-8626-72816dee4ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "0"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"CatalanNumber", "[", "n", "]"}], 
   SuperscriptBox["x", "n"]}]}]], "Input",
 CellChangeTimes->{{3.8736469217885947`*^9, 3.873646933311054*^9}},
 CellLabel->"In[74]:=",
 CellID->852257796,ExpressionUUID->"ead86a82-616f-495f-ad1b-1ba965a93ce0"],

Cell[BoxData[
 FractionBox["2", 
  RowBox[{"1", "+", 
   SqrtBox[
    RowBox[{"1", "-", 
     RowBox[{"4", " ", "x"}]}]]}]]], "Output",
 CellChangeTimes->{3.873646933633082*^9},
 CellLabel->"Out[74]=",
 CellID->213140601,ExpressionUUID->"3bd4f1e5-042e-465e-ad39-42327c8430a7"]
}, Open  ]],

Cell["Restricted random walks with the Catalan numbers:", "Text",
 CellChangeTimes->{{3.873646670990888*^9, 3.8736466800751657`*^9}},
 CellID->148449908,ExpressionUUID->"b079cecb-f8cd-43aa-9c9f-b94cc4122725"],

Cell["\<\
A man walks n blocks north and n blocks west of his residence. Every day he \
has 2n blocks to walk. How many routes are possible if he never crosses the \
diagonal line from home to office?\
\>", "Text",
 CellChangeTimes->{{3.8736467127824755`*^9, 3.873646738906004*^9}},
 CellID->415344586,ExpressionUUID->"2e7a74bf-5156-45e3-9dc5-13799baec164"],

Cell["Visualize the walks:", "Text",
 CellChangeTimes->{{3.873646755613103*^9, 3.8736467587455406`*^9}},
 CellID->567952762,ExpressionUUID->"3481f068-e8b0-4715-9b12-23eb7931e276"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DiagonalWalkPlot", "[", 
   RowBox[{"5", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "//", "Multicolumn"}]], "Input",
 CellChangeTimes->{{3.873646697234519*^9, 3.8736467055627995`*^9}, {
  3.873646744168002*^9, 3.8736467455937715`*^9}},
 CellLabel->"In[63]:=",
 CellID->11225660,ExpressionUUID->"d4237b1d-164b-4d1b-982a-de02d773caed"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {0., -4.}, {
          0., -5.}, {1., -5.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {0., -4.}, {
          1., -4.}, {1., -5.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {1., -5.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {0., -4.}, {
          1., -4.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          4., -1.}, {5., -1.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {5., -1.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {0., -4.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {0., -4.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          1., -4.}, {1., -5.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {1., -5.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {2., -5.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 
          0.}, {5., -1.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {3., -3.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {
          4., -1.}, {5., -1.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {5., -1.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {0., -3.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {1., -3.}, {
          1., -4.}, {2., -4.}, {3., -4.}, {4., -4.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {0., -2.}, {1., -2.}, {2., -2.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {0., -1.}, {1., -1.}, {1., -2.}, {1., -3.}, {
          2., -3.}, {3., -3.}, {3., -4.}, {3., -5.}, {4., -5.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {
          4., -1.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {3., 0.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {2., 0.}, {2., -1.}, {3., -1.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {4., -4.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {3., -1.}, {
          4., -1.}, {4., -2.}, {5., -2.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., 0.}, {1., -1.}, {2., -1.}, {2., -2.}, {
          3., -2.}, {4., -2.}, {4., -3.}, {5., -3.}, {5., -4.}, {5., -5.}}]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
         LineBox[{{0., 0.}, {1., -1.}, {2., -2.}, {3., -3.}, {4., -4.}, {
          5., -5.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 5.}, {-5., 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{{}, {}}], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.873646727185672*^9, 3.8736467491837463`*^9}},
 CellLabel->"Out[63]=",
 CellID->371412868,ExpressionUUID->"4ee5fb41-f4bd-44c6-91a6-61b9d44fa397"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"DiagonalWalkPlot", "[", 
   RowBox[{"5", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87364670702398*^9, 3.8736467083186665`*^9}},
 CellLabel->"In[62]:=",
 CellID->488895337,ExpressionUUID->"dfda508c-ec48-465e-bf5b-83542f04332f"],

Cell[BoxData["84"], "Output",
 CellChangeTimes->{3.873646730561096*^9},
 CellLabel->"Out[62]=",
 CellID->61529692,ExpressionUUID->"6ea5e5d4-165f-4cb0-8ea7-c375a20fe3bb"]
}, Open  ]],

Cell["There are 84 ways for the man to walk home.", "Text",
 CellChangeTimes->{{3.873646763811865*^9, 3.873646770724882*^9}},
 CellID->182420856,ExpressionUUID->"06e02760-cc0d-4ebd-9edd-9403f2fd26dd"],

Cell[CellGroupData[{

Cell["Asymptotics", "Subsection",
 CellChangeTimes->{{3.8736472209193645`*^9, 3.8736472226130896`*^9}},
 CellID->439073556,ExpressionUUID->"535c1aca-2eb8-490a-b5c0-d13573777158"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Asymptotic", "[", 
  RowBox[{
   RowBox[{"CatalanNumber", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}], ",", 
   RowBox[{"SeriesTermGoal", "->", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873647051555027*^9, 3.8736470729860044`*^9}},
 CellLabel->"In[80]:=",
 CellID->263293724,ExpressionUUID->"083eb3fd-fcc5-448e-8b82-c3db2b0e9282"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["4", "n"], 
  RowBox[{
   SuperscriptBox["n", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox["\[Pi]"]}]]], "Output",
 CellChangeTimes->{{3.8736470657919655`*^9, 3.873647073348389*^9}},
 CellLabel->"Out[80]=",
 CellID->23656532,ExpressionUUID->"17450087-be12-4431-8aec-ffa4f66312ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Asymptotic", "[", 
  RowBox[{
   RowBox[{"CatalanNumber", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}], ",", 
   RowBox[{"SeriesTermGoal", "->", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873647051555027*^9, 3.8736470811035805`*^9}},
 CellLabel->"In[81]:=",
 CellID->135896902,ExpressionUUID->"7d95f847-df0d-4d15-9fb6-f69268fb3d64"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["4", "n"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1155", 
      RowBox[{"1024", " ", 
       SuperscriptBox["n", 
        RowBox[{"9", "/", "2"}]], " ", 
       SqrtBox["\[Pi]"]}]]}], "+", 
    FractionBox["145", 
     RowBox[{"128", " ", 
      SuperscriptBox["n", 
       RowBox[{"7", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["9", 
     RowBox[{"8", " ", 
      SuperscriptBox["n", 
       RowBox[{"5", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["n", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8736470814935565`*^9},
 CellLabel->"Out[81]=",
 CellID->58120146,ExpressionUUID->"26f2d440-4510-4437-82e4-fd7f7443d33b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Asymptotic", "[", 
  RowBox[{
   RowBox[{"CatalanNumber", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}], ",", 
   RowBox[{"SeriesTermGoal", "->", "19"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873647051555027*^9, 3.8736470811035805`*^9}, {
  3.873647281908473*^9, 3.8736472846644726`*^9}},
 CellLabel->"In[109]:=",
 CellID->38633199,ExpressionUUID->"937eb03c-c299-4891-b8f8-132bdeaa618e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["4", "n"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["105666176941167049515", 
      RowBox[{"73786976294838206464", " ", 
       SuperscriptBox["n", 
        RowBox[{"37", "/", "2"}]], " ", 
       SqrtBox["\[Pi]"]}]]}], "+", 
    FractionBox["9898775194885242435", 
     RowBox[{"9223372036854775808", " ", 
      SuperscriptBox["n", 
       RowBox[{"35", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["77871582933450075", 
     RowBox[{"72057594037927936", " ", 
      SuperscriptBox["n", 
       RowBox[{"33", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["10265348737564125", 
     RowBox[{"9007199254740992", " ", 
      SuperscriptBox["n", 
       RowBox[{"31", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["640669821436755", 
     RowBox[{"562949953421312", " ", 
      SuperscriptBox["n", 
       RowBox[{"29", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["79183820728095", 
     RowBox[{"70368744177664", " ", 
      SuperscriptBox["n", 
       RowBox[{"27", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["2475570313125", 
     RowBox[{"2199023255552", " ", 
      SuperscriptBox["n", 
       RowBox[{"25", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["310496335695", 
     RowBox[{"274877906944", " ", 
      SuperscriptBox["n", 
       RowBox[{"23", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["19402289907", 
     RowBox[{"17179869184", " ", 
      SuperscriptBox["n", 
       RowBox[{"21", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["2421696563", 
     RowBox[{"2147483648", " ", 
      SuperscriptBox["n", 
       RowBox[{"19", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["37844235", 
     RowBox[{"33554432", " ", 
      SuperscriptBox["n", 
       RowBox[{"17", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["4735445", 
     RowBox[{"4194304", " ", 
      SuperscriptBox["n", 
       RowBox[{"15", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["295911", 
     RowBox[{"262144", " ", 
      SuperscriptBox["n", 
       RowBox[{"13", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["36939", 
     RowBox[{"32768", " ", 
      SuperscriptBox["n", 
       RowBox[{"11", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["1155", 
     RowBox[{"1024", " ", 
      SuperscriptBox["n", 
       RowBox[{"9", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["145", 
     RowBox[{"128", " ", 
      SuperscriptBox["n", 
       RowBox[{"7", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "-", 
    FractionBox["9", 
     RowBox[{"8", " ", 
      SuperscriptBox["n", 
       RowBox[{"5", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]], "+", 
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["n", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox["\[Pi]"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8736476368908463`*^9},
 CellLabel->"Out[109]=",
 CellID->202494878,ExpressionUUID->"d5b5ce00-ce1e-4c2d-badc-3f0b248c57f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%109", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[110]:=",
 CellID->60122964,ExpressionUUID->"5d507735-2b50-4bc1-9876-7601df4d980a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"37", "/", "2"}]], " ", 
    SqrtBox["\[Pi]"]}]], 
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "33"}], "+", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "105666176941167049515"}], "+", 
     RowBox[{"79190201559081939480", " ", "n"}], "-", 
     RowBox[{"79740500923852876800", " ", 
      SuperscriptBox["n", "2"]}], "+", 
     RowBox[{"84093736858125312000", " ", 
      SuperscriptBox["n", "3"]}], "-", 
     RowBox[{"83973874835358351360", " ", 
      SuperscriptBox["n", "4"]}], "+", 
     RowBox[{"83030254003782942720", " ", 
      SuperscriptBox["n", "5"]}], "-", 
     RowBox[{"83066355732971520000", " ", 
      SuperscriptBox["n", "6"]}], "+", 
     RowBox[{"83348225458616401920", " ", 
      SuperscriptBox["n", "7"]}], "-", 
     RowBox[{"83332200618075881472", " ", 
      SuperscriptBox["n", "8"]}], "+", 
     RowBox[{"83208860311364829184", " ", 
      SuperscriptBox["n", "9"]}], "-", 
     RowBox[{"83220352853574942720", " ", 
      SuperscriptBox["n", "10"]}], "+", 
     RowBox[{"83306829443099525120", " ", 
      SuperscriptBox["n", "11"]}], "-", 
     RowBox[{"83291541833426927616", " ", 
      SuperscriptBox["n", "12"]}], "+", 
     RowBox[{"83179233317719375872", " ", 
      SuperscriptBox["n", "13"]}], "-", 
     RowBox[{"83226521113806766080", " ", 
      SuperscriptBox["n", "14"]}], "+", 
     RowBox[{"83586809083996405760", " ", 
      SuperscriptBox["n", "15"]}], "-", 
     RowBox[{"83010348331692982272", " ", 
      SuperscriptBox["n", "16"]}], "+", 
     RowBox[{"73786976294838206464", " ", 
      SuperscriptBox["n", "17"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8736476451789923`*^9},
 CellLabel->"Out[110]=",
 CellID->940038239,ExpressionUUID->"b799b4a2-1233-447c-8e51-2b7015e65380"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recursion", "Subsection",
 CellChangeTimes->{{3.8736472250974336`*^9, 3.8736472280109463`*^9}},
 CellID->120149218,ExpressionUUID->"32e71692-1e58-41f1-9f81-b165c7db3f30"],

Cell["Recursion formula for Catalan numbers:", "Text",
 CellChangeTimes->{{3.8736472030701895`*^9, 3.873647215352*^9}},
 CellID->202130146,ExpressionUUID->"5d183997-1e30-40d1-abcf-0596f8ebf06f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"c", "[", "0", "]"}], "==", "1"}], "&&", 
    RowBox[{
     RowBox[{"c", "[", 
      RowBox[{"n", "+", "1"}], "]"}], "==", 
     RowBox[{
      FractionBox[
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}], ")"}]}], 
       RowBox[{"n", "+", "2"}]], 
      RowBox[{"c", "[", "n", "]"}]}]}]}], ",", 
   RowBox[{"c", "[", "n", "]"}], ",", " ", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8736471265421944`*^9, 3.8736471444487658`*^9}},
 CellLabel->"In[82]:=",
 CellID->131200110,ExpressionUUID->"f038deb7-8736-449e-bd5b-64e1143f1f79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "[", "n", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["4", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]], " ", 
      RowBox[{"Pochhammer", "[", 
       RowBox[{
        FractionBox["3", "2"], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
     RowBox[{"Pochhammer", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.873647144944225*^9},
 CellLabel->"Out[82]=",
 CellID->20509873,ExpressionUUID->"19d1ef25-f625-41df-9f84-c789df032164"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "[", "n", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["4", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]], " ", 
       RowBox[{"Pochhammer", "[", 
        RowBox[{
         FractionBox["3", "2"], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
      RowBox[{"Pochhammer", "[", 
       RowBox[{"3", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]}], "]"}]]}], "}"}], "}"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[83]:=",
 CellID->7919831,ExpressionUUID->"36d1d7f6-7a5d-4261-89e0-ab60211772fe"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   RowBox[{"Pochhammer", "[", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
  RowBox[{"Pochhammer", "[", 
   RowBox[{"3", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]}], "]"}]]], "Output",
 CellChangeTimes->{3.8736471660781994`*^9},
 CellLabel->"Out[83]=",
 CellID->336984078,ExpressionUUID->"7e2eb79d-6d13-4bf2-9bd4-c201c6f3c213"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox["4", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], " ", 
    RowBox[{"Pochhammer", "[", 
     RowBox[{
      FractionBox["3", "2"], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
   RowBox[{"Pochhammer", "[", 
    RowBox[{"3", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[84]:=",
 CellID->494351087,ExpressionUUID->"83535271-3369-4918-b7eb-1a7671599f67"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", "n"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], "+", "n"}], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.873647168239441*^9},
 CellLabel->"Out[84]=",
 CellID->165594942,ExpressionUUID->"e4b538af-515b-426e-b974-25bf4193d780"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], "-", 
   RowBox[{"CatalanNumber", "[", "n", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873647178051902*^9, 3.8736471839755573`*^9}},
 NumberMarks->False,
 CellLabel->"In[85]:=",
 CellID->31614758,ExpressionUUID->"0b581507-198c-477a-87e2-b64b793a0fe0"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.873647184274003*^9},
 CellLabel->"Out[85]=",
 CellID->22900354,ExpressionUUID->"2f075468-eb69-47d5-b9a8-9c3d5208b492"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", "0", "]"}], "==", "1"}], "&&", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"n", "+", "1"}], "]"}], "==", 
      RowBox[{
       FractionBox[
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "n"}], "+", "1"}], ")"}]}], 
        RowBox[{"n", "+", "2"}]], 
       RowBox[{"c", "[", "n", "]"}]}]}]}], ",", 
    RowBox[{"c", "[", "n", "]"}], ",", " ", "n"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->"In[88]:=",
 CellID->307598322,ExpressionUUID->"b91cfce6-643c-4f25-ac18-4f262ee25591"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]], " ", 
   RowBox[{"Pochhammer", "[", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
  RowBox[{"Pochhammer", "[", 
   RowBox[{"3", ",", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]}], "]"}]]], "Output",
 CellChangeTimes->{3.8736473088737373`*^9},
 CellLabel->"Out[88]=",
 CellID->78564515,ExpressionUUID->"b943fc14-06af-4079-a7a0-364baec68626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZTransform", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", "n", ",", "z"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[103]:=",
 CellID->220810998,ExpressionUUID->"1519eafb-abd0-42f6-9f14-ea9496d5c7da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox["4", "z"]}]]}], ")"}], " ", "z"}]], "Output",
 CellChangeTimes->{3.8736474258213797`*^9},
 CellLabel->"Out[103]=",
 CellID->118622444,ExpressionUUID->"5ea9dc41-cea9-4d56-a575-b88a223599ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseZTransform", "[", 
  RowBox[{
   RowBox[{"ZTransform", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["4", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]], " ", 
       RowBox[{"Pochhammer", "[", 
        RowBox[{
         FractionBox["3", "2"], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
      RowBox[{"Pochhammer", "[", 
       RowBox[{"3", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", "n", ",", "z"}], 
    "]"}], ",", "z", ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.8736474703066244`*^9, 3.8736474924561577`*^9}},
 CellLabel->"In[107]:=",
 CellID->853316718,ExpressionUUID->"7f55c95d-90e3-4414-8752-777f5abc48ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "+", "n"}]]}], " ", 
  SuperscriptBox["2", 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}]], " ", 
  RowBox[{"Binomial", "[", 
   RowBox[{
    FractionBox["1", "2"], ",", 
    RowBox[{"1", "+", "n"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.8736474758114433`*^9, 3.8736474928658557`*^9}},
 CellLabel->"Out[107]=",
 CellID->260249900,ExpressionUUID->"05d3d7e5-7782-46c8-b5e9-f57fe3125a45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneratingFunction", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", "n", ",", "x"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[102]:=",
 CellID->102095237,ExpressionUUID->"d6ae28bb-ee23-4a6a-9151-54497bc973dc"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{"4", " ", "x"}]}]]}], 
   RowBox[{"2", " ", "x"}]]}]], "Output",
 CellChangeTimes->{3.8736474215973797`*^9},
 CellLabel->"Out[102]=",
 CellID->30601008,ExpressionUUID->"c59f3a36-b1f4-43e5-a288-3576efcd826b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[100]:=",
 CellID->7509609,ExpressionUUID->"dbe2f341-7eda-4ca5-9cf5-48001fa17c82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "5", ",", "14", ",", "42", ",", "132", ",", "429", ",", 
   "1430", ",", "4862", ",", "16796", ",", "58786", ",", "208012", ",", 
   "742900", ",", "2674440", ",", "9694845", ",", "35357670", ",", 
   "129644790", ",", "477638700", ",", "1767263190", ",", "6564120420"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.873647405865316*^9},
 CellLabel->"Out[100]=",
 CellID->873472762,ExpressionUUID->"a9fca785-5736-4a39-9922-7978d75b9626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionExpand", "[", 
  FractionBox[
   RowBox[{
    SuperscriptBox["4", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]], " ", 
    RowBox[{"Pochhammer", "[", 
     RowBox[{
      FractionBox["3", "2"], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
   RowBox[{"Pochhammer", "[", 
    RowBox[{"3", ",", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[99]:=",
 CellID->545699083,ExpressionUUID->"4bacb30f-54a9-4f31-bfaa-0f51e75094bd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", "n"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], "+", "n"}], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"2", "+", "n"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.873647400790201*^9},
 CellLabel->"Out[99]=",
 CellID->178407802,ExpressionUUID->"4f57698d-2cca-424e-abc8-f1beba087869"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionRange", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", 
   RowBox[{"{", "}"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{3.873647386383662*^9},
 NumberMarks->False,
 CellLabel->"In[97]:=",
 CellID->263675682,ExpressionUUID->"5be3a53d-d0c5-460c-87c5-88fefd7eee75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{{3.8736473747812614`*^9, 3.873647387011418*^9}},
 CellLabel->"Out[97]=",
 CellID->75148755,ExpressionUUID->"8c31055c-71f6-4195-84ce-507f42120a1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionDomain", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.873647345677884*^9, 3.873647368052533*^9}},
 NumberMarks->False,
 CellLabel->"In[94]:=",
 CellID->98504792,ExpressionUUID->"697cac91-756e-402c-9917-317c493aac06"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", "n"}], "\[NotElement]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"Pochhammer", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"n", ">", 
     RowBox[{"-", "2"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Pochhammer", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{"n", ">", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"n", "\[NotElement]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", "n"}], "\[NotElement]", 
     TemplateBox[{},
      "Integers"]}], "&&", 
    RowBox[{
     RowBox[{"Pochhammer", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}], "\[NotEqual]", "0"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.873647341753173*^9, 3.873647368435275*^9}},
 CellLabel->"Out[94]=",
 CellID->455435786,ExpressionUUID->"ded5a59f-ee77-4b04-923c-051a46348880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["4", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]], " ", 
     RowBox[{"Pochhammer", "[", 
      RowBox[{
       FractionBox["3", "2"], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]}], "]"}]}], 
    RowBox[{"Pochhammer", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}]}], "]"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[89]:=",
 CellID->74071328,ExpressionUUID->"d1199330-d282-4979-a3a2-149fb13514c6"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{2., 2.}, {2., 0}}, {{3., 5.}, {
           3., 0}}, {{4., 14.}, {4., 0}}, {{5., 42.}, {5., 0}}, {{6., 132.}, {
           6., 0}}, {{7., 429.}, {7., 0}}, {{8., 1430.}, {8., 0}}, {{9., 
           4862.}, {9., 0}}, {{10., 16796.}, {10., 0}}, {{11., 58786.}, {
           11., 0}}, {{12., 208012.}, {12., 0}}, {{13., 742900.}, {
           13., 0}}, {{14., 2.67444*^6}, {14., 0}}, {{15., 9.694845*^6}, {
           15., 0}}, {{16., 3.535767*^7}, {16., 0}}, {{17., 1.2964479*^8}, {
           17., 0}}, {{18., 4.776387*^8}, {18., 0}}, {{19., 1.76726319*^9}, {
           19., 0}}, {{20., 6.56412042*^9}, {20., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$430745#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FFpBgdUmgNKi0BpASitgybuCqUlIHRDApQv
A6EvVEH5ChA6YhqUrwSh/22C8lUgdPoFKF8NTDtseQPla4DphBRORwhfC8x/
sVrNEdldLekuUL4eiL/gfG0SlG8A4hvI32mA8g1B/BuPX8yD8o1AfB2Dij1Q
vjGQ3/B1UugtKN8EyHco4yj54QgA8ugqfg==
       "]], {}},
     Annotation[#, "Charting`Private`Tag$430745#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {0, 3.24111954*^8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8736473113134003`*^9},
 CellLabel->"Out[89]=",
 CellID->41733039,ExpressionUUID->"4ebfd4da-6849-4ae6-a14c-e856c212ab0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CatalanNumber", "[", 
  RowBox[{"7", "/", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.873647625733656*^9, 3.8736476282102566`*^9}},
 CellLabel->"In[108]:=",
 CellID->108176140,ExpressionUUID->"174475fe-bba3-433f-96ed-28e2a18ceb22"],

Cell[BoxData[
 FractionBox["8192", 
  RowBox[{"315", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8736476285849953`*^9},
 CellLabel->"Out[108]=",
 CellID->449325123,ExpressionUUID->"e0a6e5e2-047f-4740-8496-0f8f097c5501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CatalanNumber", "[", "n", "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.873647672364915*^9, 3.8736476764952383`*^9}},
 CellLabel->"In[111]:=",
 CellID->508540506,ExpressionUUID->"6ea0fdc5-3d20-4a53-9a40-71a115067a9f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{"n"},
   "CatalanNumber"], TraditionalForm]], "Output",
 CellChangeTimes->{3.8736476767795115`*^9},
 CellLabel->"Out[111]//TraditionalForm=",
 CellID->28223778,ExpressionUUID->"dc310616-ce2a-424f-89bb-3a5c9a92ef92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   RowBox[{"CatalanNumber", "[", "n", "]"}]]}]], "Input",
 CellChangeTimes->{{3.873647685420633*^9, 3.8736477130746584`*^9}},
 CellLabel->"In[112]:=",
 CellID->560823884,ExpressionUUID->"e9cf8ae5-ca9f-4098-a828-8510e0a1408a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "27"], " ", 
  RowBox[{"(", 
   RowBox[{"27", "+", 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Pi]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8736477135998325`*^9},
 CellLabel->"Out[112]=",
 CellID->3650833,ExpressionUUID->"f3f798b0-a236-4aa7-a93a-25beb50ed1e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], 
   RowBox[{"m", "-", "1"}]], 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["4", "n"]], 
   RowBox[{"CatalanNumber", "[", "n", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.873647685420633*^9, 3.873647751659604*^9}},
 CellLabel->"In[115]:=",
 CellID->96668104,ExpressionUUID->"c8a2dd8b-284e-40b5-89cc-87cd14502a87"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["2", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "m"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", " ", "m"}]], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Binomial", "[", 
      RowBox[{
       RowBox[{"2", " ", "m"}], ",", "m"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8736477276400127`*^9, 3.873647752089468*^9}},
 CellLabel->"Out[115]=",
 CellID->557233601,ExpressionUUID->"f5aee693-5ffe-4562-a8e7-9bba6e41d901"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CatalanNumber", "[", 
  RowBox[{"CenteredInterval", "[", 
   RowBox[{
    RowBox[{"7", "/", "2"}], ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8736477636500635`*^9, 3.873647782128174*^9}},
 CellLabel->"In[117]:=",
 CellID->351982919,ExpressionUUID->"5c15faae-8983-4d0b-b893-555b01772352"],

Cell[BoxData[
 TemplateBox[<|"Interpretation" -> InterpretationBox["interpretation", 
     CenteredInterval[{{320941867, -10, 560642549, -8}, 30}]], "Center" -> 
   "313419.7919921875`3.", "Radius" -> "2.19000995703125`3.*^6", "Type" -> 
   "Real"|>,
  "CenteredInterval"]], "Output",
 CellChangeTimes->{{3.8736477732511635`*^9, 3.8736477824300346`*^9}},
 CellLabel->"Out[117]=",
 CellID->858819288,ExpressionUUID->"db998887-b15a-4162-8c69-da8d032994bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"CatalanNumber", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "\[ImaginaryI]"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.873647804640848*^9, 3.8736478188236713`*^9}},
 CellLabel->"In[119]:=",
 CellID->262155219,ExpressionUUID->"ff4cf4a2-95f8-4d3b-b184-ed6fcf73c357"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
H5auy/bDgtuw/bDgSmw/LPhbth8WvDfbDwtewfbDgpew/bDgcmw/LHgV2w8L
7sf2w4J/ZPthwTXZflhaT8T2w4JPZ/thwUew/bA4OrH9sFQ+bD8suDPbDwse
zPbDgtux/bC4zggWrwC8E4tXQO8NFq8AXIXFKwD3Y/EKwJ+xeAW0boXFKwAv
ZPEKwCeweAXgu1i8AvAXLF4BeDWLVwCezOIVgG9n8QrABRavAFydxSsA38bi
FYAnsngF4E9YvAJwMxavALyVff14BeA6LF4B+GgWrwD8OItXQHEIWLwCcGcW
r4DqncUrAF/P4hWAj2TxCsDPsngFON8AFk8GfKBcfL14MuC+LJ4MeBiLJ0P7
0Vk8GfAmLJ4M+D0WTwY8mcWTAY9l8WTo/Dvrx5MBL2TxZMA9WDwZcEUWTwZ8
5KT68WRoPYJu/Xgy4JYsngy4G4snA57fvH48GfCFLJ4M+GQWTwa8I4snAx7F
4snQejcWT4b6BSyeDLgniycD3oPFk6H9giyeDI4bWDwZ8M0sngx4XxZPhuKE
sXhf4Iks3he4E4v3Redh8b7AFVi8L/BOLN4XeAGL9wV+lMX7An/J4n2BKyXX
j/cFXsrifYHvZPG+aF05i/cFbsXifYE/YfG+wINZvC/wPBbvi8ZDLN4X3ReL
9wXuy+J9gR9g8b7AVeLrx/sCb8TifYE3y6kf74viGLF4X7T+gsX7Ar/D4n2B
j2TxvnB0YPG+wF+zeF/4vYx4jIKMeIyCjHiMgox4jIKMeIyCjHiMgox4jIKM
eIyCjHiMgox4jIKMeIyCjHiMgox4jIKMeIyCjHiMgox4jIKMeIyCjHiMgox4
jIKMeIyCjHiMgox4jIKMeIyCjHiMgox4jIKMeIyCjHiMgox4jIKMeIwC4jGa
1pZnrveJ2mOst4Vf7HDV4jhhc215ZhI3bWOqN7BZqmBQWy/fiL85ePW19ugc
YUMtf0fcz6iNvurjbOFQ7c9V3vi7sOwFjm1dnwomteVcSXxRe6fmph6+lB/w
273eWG3XTaX8gF/63Lfx0Rs5wpLan1OIv3cd8VgoKxKQD3B3pZd3VQ+UUP5x
vGG+ZbhRo2LKP3jJsd1dVul+F+Rq//m/ofQfbS5efJ5H94W/G6biOb9PwGu6
L/Ddx6q/5J/7JhjX5r+ceILypabl/hGCQa2HpcQ1L328cKplJJUD+IMjwRec
m2dROYCP2/LB8lZkCZUDeGRi3oUVpnLaKAfwz9W7j3ncl9PGzzj29z3n+rWq
mO5rfB0XZrL7Ar/B7gu8ht0X+GzxvpB/cB2Wf/BCln/wPDH/qA/wLWvmreo5
pYLqEXyYeF+oR/CEZUNrDN9/p/udVnc+IZH5CT5d9BP5Af/EvAJ3YV6BBzCv
wE+LXuE82+uuI8Sz5wv8tfh84TzgTfpGXM5UzBbO17Z7v71x/GRknJ495CS9
v8CfaFwrGWBjLpyt+5n+rsZX40psltSvA2993GrsF9MKqkccT+38tuvdlXDi
qM+FSqteaTyNpfrF73++GJsWsy+aOI4fR/xVNrowifwH9+p2fuudHRHE8f5Z
rdgs4tCWaLou+P24r9MexCbS+VFvB9tnBOZ0yqT6BXe3bjHu6T+viNM+qcnl
lmZJXoJt7Xm/U3p1lT9Htm2R1kOCT26smWq6O5rep+Ah2jPU9WKl+6J9dlr7
X75umEz5Bz8+OT3KZGkG5R+80RCLyqWpueQhjnOXyDur35b2oYFra79fYa6c
I+3nEXnxto/9RzTMEU7U5v8XtXtHNys3eentTP0W8LWPnrXWmO1B/Rbw4dsO
7a7a/oaeI1zHxnhc/jC351Se4ErDLWpu9vokLKj9+2I6j914OU3blHAqZ/Aq
//gzLStiqZzBg1TatliilUTlDB7XcFjNKucMKmdc1/nx2k3r3qZTfwbpFT2v
nS4oK6DyR/qGFm2OB3copH4O0q/KMbjQRU1qr2he/X1gVZJdOZU/0k89bbb/
TWExlT/4/NvrvGY2K6LnHc/3ctaO4e/OzDU/eN+xiJ53/D5CbMfQrtF1Vbe1
bDUplzjSv9i/r/FYlXyqd/APKxQv9rrrRPUO7to7uq3d7odU7/TeOJDetJua
P/VXwS//NdVdS4igekd+hw0Ir+w0q4E2+rFI3yHs+XUj1wh6jyD9ptiulQu3
JNN7BFxrUtVN924x5A/Oo2z4u+PGvjHkD3jrs/vt1nVMpvQ4T/U1J0ctxTjy
CuktVXobupWnklfg98KXnzxeKO23B985Un1axnhp/zC4u9ajNHeThtrwBNfl
+1CQvrR3mvXT19X0XPP0qFfw5a5p22y2VVO9gtdYd+g1RreUPMGx5M///isk
H8B/LGv5dFuC5AN4w54tQvbucKTnGvzXUvnln8+8I45++qG3Xs01ZviQD0j/
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
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1: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
YBKMZld/MqvG05k1ns6o8fT/A+IqMYw=
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
+XaLxH2hdb8W5UwrErdzepF4nXA6wYtLKfhqyzQkXlxzuXHwueDMwbWDFwb3
Do4dfDBwg3MH3w5OWAt5c/C4LpNHB38OXOFoZU4ZGs4VXD74ZnD79pRTB9+L
foJLBreslbw7uGJ7ybGDs5X5c/C+Vpe/B++ru1wyeFDw/Sjn22rJsWtsO+Ff
wdPKPDm4UplvBz8s8+3wZ74dfnCCt0X+zJ/DnzlwmROHhpsFD45wcAQz+F1w
xTIXEFwy946yMseOdJkLiN1185EOTh38ufVMCw8oc8fQO4gLvKzMj0Nn3hya
+QpXDm4Y2MKdg5+3gRhtan54ZHCxMg8O3Uns4FXBr8p8TbCBq4mb+UVfwivb
UBzhfWX+HXqzWsm361gruXrUTR+3M/8K2tvOftpKm+hjeFmZ+4ZezI8rUvi6
9kMXMQI7uGHbi+UO+jM/b7tayW/rbn2sZ93sY+Izd29b23+4/MZ1tZW08L3A
EQ5Y5vGhdxOLrsbBzYNLRj9mHmezWsmrww44KNzxT6yV3LjMlUP3rJXcu31q
JfeuR63k3u1rP8HhOki7e+lnvMDXyvw4dJ9ayRUbKDZwvQ6plRy+/WolD6+X
OPYxXebS9a2V/Lze1g3H6fRayf/bv1by7Y6oldy4zJVDw5fK3LujaiX37uha
yb3Dz35wovnpv5P0Zz5c5sehT6mV3LgB4gVPDA7YTtp+eK3k4Z0kjqeYLvMC
j6yV/Lx+tZL/d4z4nmmbyQfPZZR4wOM6S+wGma63YYPE8WzTZV5d5sTAH7q5
VnLsztMOODhDxQtOy8XiAt/mglrJtxtmX51jHZl7d759MNRyM8cuc+4usizw
u8L2HFYr7+HAHc7MpeIKLyxz4q40T+bbjRCzkfpPFhv8jA+4YFeL3Rj91MHd
X35nQN9gHw+3bvBjzsDfOl5bLhHfay1rsPmut19HmH+Q+UiXuZvH2r6brRtc
xtoHlMv7XeY3oe8UX/htt4rpOP1gfLv+zDe6u1byje4RU97gMjcKfb9lw216
WbzgONxnf9xhubRhvGWNNN8EsefN8CHbep/pqPtVy71I2+8Qd97+HrHN8MUy
TxD9lDjybviYeD2hP/PnnhCzZ80PXs/ppw64WZkPiJ5k/S8bB17wteClXaHt
D4r985Y1znyku0ZbHhX3F0yX31ZftR64KpmbhobjMtQ8Y8UGHsk0cZxq/vGG
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
/P6XffbGCD/W/Ys9d65j5gvW3SLt0e0aUhlrN6Q992vHSc8i1U29jJf5tovw
hdo8q0j7Lv+LpJGaPY79jv9bwjtpy4bU37yz0o+8n/LO+0G4tzMd6zrvKOwL
TSJ9Y99la6FfLdJZZIqa/ytyju5Xwn2IZfL2OsG+4731+iK9B9N/U9Wvgk+R
zhO8Fz/sPkvbioaEFW98V4kZ6bvYXt6dGxpSP/L+90uR+hj3NPt2SjX9rxLc
U+3HP3W3akhu3ug4Cy0SW84+/9hfxPHeyrvbzqZhj/uv/YVt2POXY2OodlLv
rkV6451n3r+1mXMF5U+vJv2vZfI/Uv41HBx4r37DPsX9cFVcivSGvsD5W9jP
vHu/aT/i5tzFu3cjyxnnmCANfczbOePhR92MAd7PlzAN5yzenMGccylv2ZwZ
ztVNXy/VkM5wpOM8xjs0b6mcrZaw/GGGg8nSDel8xntw/r8nvCVyfuP9m7dv
+gT3VN28eed+wD1NbHkTpV94r8S9+H+h1NMbN+eusbrBk/MYb8D5f6bg5n96
8DbNGYvz1SYNya42DencyFs1Z62LdYM5501s5u14nYZU9uYN6X+tNDY9Z8gm
Ys4Zj3dzeAWss6uY5m7d+SzJW3s+nzYVf97x4SQwj37WzZszZ9vmtpFzIO/K
nME4A7awLXNMw/s183FV+4KwFkX5rs0ZkfPh3kV6++P9rptu0nAmbaWdnAdX
s64TbSPh2LSGbeTcurpt4d2T8BUsp7V5Scf7ONhwtsS9vOdQ0nDOHFOktZ51
g35a0/7l7Yy3xt20mfdR3itpb1v7dG3T86aKtDXNPdpG+Zxv17a9vH9RDmWz
/s1yPZzgGkj6HkW6M+B+AM0dAvczfGfzTcv37GOhNyiSf33dfOtynuZczTXr
Z0X6P+OckTnzct7lrPqIbs6xnG3b635M9xa6Ob9yLuX/fbHfc07gTARPK599
cHMW6m8a9kS+I/me5AzwpOVw9ptlOHv66g1pP+nUkPZ29nv2/VuLxEVjrx2l
Zl+Gs9ZR95W62d/hqnXS/YDu8e6xcMXucw/doij33i1N86Vu0rCmsZexjsGb
Ys/Dvh+K9L+68MOhIg1r4/vafI1jdR/7F07UdpbzgXse/cu+Bk/pZeuFwzTN
NWdH3QsNxx54JoRPdc2kHM4/PxdpD+vsmKJevpvIC0eKNZ99Y2fdcHlYR1hD
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
yqYNqewWlt9SN2X+PzLaXvk=
           "]], 
          Polygon3DBox[{{1322, 431, 920, 1366}, {1328, 1042, 928, 1316}, {
           1312, 463, 929, 1321}, {1325, 920, 1000, 1326}, {1317, 929, 1042, 
           1329}, {1333, 461, 1220, 1334}, {1324, 921, 433, 1311}, {1331, 
           1206, 463, 1314}, {1320, 928, 461, 1319}, {1335, 433, 1206, 
           1336}, {1338, 1220, 431, 1337}, {1327, 1000, 921, 1315}}]},
         Annotation[#, "Charting`Private`Tag$481318#1"]& ]]}, {}, 
      {GrayLevel[0.82], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNUTtuwkAUfLZ3xTmokxNgIiBECRBBAJELpEHaIhwgdeQTuOUMoeIEUFKZ
Q6C0HIAZvSkonmZ2PO/r9tdm+Z2b2SOiQHSjWYZ4IgazA+KCD1O8j+AzYAK2
gKfM7AHYwbsE1sH5H/Re9Nw+cAe8Sh/hnYOPo9dogtehRv5fOObSX+GpwN+U
V0nP1Jez1apvwp34Nvis9PwG34e5/H6WpxFnX/pr6T/cSTOXqknekYc1h9Hr
vuhWSfWv8tCfNIdJ2yp3gpw9+LtuwFvQswKugZ+6T1LuQD2etff6braj5j9r
TvK9bkietDv7LqLvttR/Ke9yG/X6iK7PgTfLskH5
          "]], 
         Polygon3DBox[{{1341, 1281, 1001, 1342}, {1348, 1157, 462, 1349}, {
          1355, 1207, 1003, 1356}, {1346, 1025, 1157, 1347}, {1356, 1003, 
          1222, 1357}, {1342, 1001, 1221, 1343}, {1344, 1221, 1025, 1345}, {
          1363, 432, 1127, 1364}, {1358, 1222, 1083, 1359}, {1365, 1127, 1082,
           1323}, {1339, 1082, 1281, 1340}, {1351, 1159, 1026, 1352}, {1353, 
          1026, 1207, 1354}, {1362, 1147, 432, 1363}, {1349, 462, 1159, 
          1350}, {1360, 1083, 1147, 1361}}]}]}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jdOHFAUBdAPDDmDsYlGlITZANi9jTtoCB0FOYeZIQdj2ACGDUBtmVBb
gg0QNgASoSM00AFn5OLo3eJL96e6nrG20ZQQwi9uIyEk8z/zT1oItfJXupll
hyMueKLQ4ig/GGCTPU644o2a1BBa6CTObw4444F8PY18p17vM33ytdlGvzzA
IEMMM8IoY4wzwSRTTDNDjDgJZpljngUWWWKZFVZZ42dyLzpfWJdvzHZ65W80
kMe9fZ+yzxYxOmimmlfnvuSYXTbop5UmCnh0f+ccsk2CLr7wV8ed3s/ylRml
Rq6mikoqKOcTHynjA6WUUExR8o0oIJ88cskhmywyySAdNUF1cITQFPn/H94B
jP84+Q==
       "]], 
      Line3DBox[{1366, 1322, 1337, 1338, 1332, 1334, 1333, 1319, 1320, 1316, 
       1328, 1313, 1329, 1317, 1321, 1312, 1314, 1331, 1330, 1336, 1335, 1311,
        1324, 1315, 1327, 1318, 1326, 1325, 1366}], 
      Line3DBox[{1361, 1360, 1359, 1358, 1357, 1356, 1355, 1354, 1353, 1352, 
       1351, 1350, 1349, 1348, 1347, 1346, 1345, 1344, 1343, 1342, 1341, 1340,
        1339, 1323, 1365, 1364, 1363, 1362, 1361}]}},
    VertexNormals->CompressedData["
1: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
Udh9IEHHv2EcDkeVB4/zBqLmmRFyr4PBG67/7nWO68zsTaPf4S2x/6rv/u2F
bi+p6+Re526pePhufjGK/VDbqzTaCctZWCjkXvdjnj/icnINLhh/9fwx3Aof
Ou16yb1OdOmxJbnX2U1Us/o3NIGxtVkoudedsXh8nNzrgpOKh7b0NMBR49ZG
cq/bE/l06ZJvN75zOcmRIVoL6l9MWMi97iZfuBO51wmrj11v2FoFa/gwh9zr
ROMKDMi9jl9NeqNpdjl4Uo41Pz1ChZ3vmy6Te52X637p6rhSuP6imI/c65K4
nlJ+GY3iOUpPME93MXBbx0mSe51C1Csrcq9bmHVmnlIqgu3L426Re13SvLU7
ude5Od2Z3pNZACaHipnIvU7DvWt2ryAV7/kyq7gIfYJQvdeD5F53atBamtzr
XlOC8zmK8kDr25u15F63w2OGnfQpfJEHs57xPwSDZ8xnSJ/Ca/PuIelTcrnp
EoaXfOBYQc2/PiV9f9sy0qfsKHF6wX0mFpybXP/1KZ2Hfz4jfcob5d/ZAoPv
wNR2/0/Sp/gKzr4kfcqHzJgelS8IKb2yoqRP6W6OUyF9yvRSlIKHQCXUnzX+
16eYCJ0VFHnUjCZZvTfabBpAnH8dlfQpm9TKUkmfopYS4WFn1AImgQcUSJ9y
xq5cJU66E1/T9gR3WneCRnnFatpvKpyxDLAjfUrGNPuEwPk+0Eh7IE/6lIKC
MQ/Sp+SFKD49yjUEqQlm20mfkr6VrYb0KZ7KAkvRO0bgNvODXtKnPHNzDSB9
iv7aRcOsmRGYzIo2J31K780zLlShCvRs29Psc3YEZE7JHGEXmoAVW+sWSJ/i
WRNBk0ofgi7/DDPSp4zKFN4gfUqElOfsmvABsKBrF5E+xU80xrLiRDnGaxY4
iTL3gmKyU5czGw3SaOuzSZ9iO/GQd+RgFzwQ6ygmfUrZm4y81gsUvD+vX/OB
rR1E0286jU3SgN30kSHpU4bEkva2XmuBoP7H1qRPWZZ9TEPIswOVaf4rj59o
AiMr+QLSp7Dw19lrXO7BKZ2S+7GsjVBZbLSB9Ck3jBpmSZ9yK9PF+oBgHUSI
u7WQPkVCxfoc6VPWW6n+Wh5VDXPF0fdIn/IzZ+8F0qcYqOIZ7XuV8CKyy5D0
KTqH1BucdUcx4gDuN/Mqh9hPx7VIn9If58lJ+pQHZ2OTZGpLoSFymzvpUyqq
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
kw==
     "],
    VertexTextureCoordinates->CompressedData["
1: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
j6h5J81T6Ll2z0F7btZzlsblG8dt3K9xosYVug/tvqXr3K6LOo923G0/rdeW
/GJ+Mb+YX8zvuLzq5uE2b7N5fs0Lax5R806ap9Bz7Z6D9tys5yyNyzeO27hf
40SNK3Qf2n1L17ldF3Ue7bjbflqvLfnF/GJ+Mb/j8uSbV9083OZtNs+veWHN
I2reSfMUeq7dc9Cem/WcpXH5xnEb92ucqHGF7kO7b+k6t+uizqMdd9tP67Ul
v5hfzO+43z00T7551c3Dbd5m8/yaF9Y8ouadNE+h59o9B+25Wc9ZGpdvHLdx
v8aJGlfoPrT7lq5zuy7qPNpxt/20Xlvyi/kd9zuW/u6hefLNq24ebvM2m+fX
vLDmETXvpHkKPdfuOWjPzXrO0rh847iN+zVO1LhC96Hdt3Sd23VR59GOu+2n
9dqS33G/S+rvWPq7h+bJN6+6ebjN22yeX/PCmkfUvJPmKfRcu+egPTfrOUvj
8o3jNu7XOFHjCt2Hdt/SdW7XRZ1HO+62n9Zry1W/de0+J65+YrTxqNHnps9/
erTmxYNnzdy5duBtD6z9yrQlzw784/kfWTf1kecGPvD3f/Trt027e7jupHVn
PbNo6/0D+3zs8/HaG27/4IyZT73uPril++Ndr/3836aBPY/rPA+etWzequUb
Hhj4jOevPnjp3IcH9rzY82LP23bALT3PXo+u+ZuF0zcPz4M9D/Y82P2x+2P3
x9oBew6svbDn2++Wv/3VnbO3DM+HfT72+djnY5/f6w/42B/ev2De88P12PV4
ytff/A/3LfvL3aXfQU7y3HMPmbF6wY6hfvi9JJ5sr5baTTnu//kvD+PK5N9h
12kn7Vc2Dt39r9s2zFn82FBvfMPGN+z+wzg2eX/s/tjfKfv/xj/82CPvPOzv
Ft4xeDKeY+N5+5fP8f3wBW/98ocXL//OcL3vi31f7Pt2vGh+T8eP5vt0PGn+
j3r/P25cUbrO+9l+NK6faU+sPbH2xObHjlfua77s+KXeeIG1v+u1P1bvej7U
84G1P9beHQ99nvbu+Nhxuu2KW3bc0r7Y+1hu/op67dt8FvXat/ktbW/12rft
77m9z+pd3/qO967HzY9Rr/3Va+/my7T9mz9TH82jqZfmC3l+7Y21b+c784P2
VW/91/Zxvfex7aVe+6j3Pna+bL5J+3XzT9S3dN/Oz32ezqfmO/fvfNn8iM63
6vscLbWP+3k+7HkOPvWY92+/7IXh/tj9Oz8P8/Dk/IzHlZ2n+3fDPmPyeXn2
vOXme3c873tfz52/fE/vJ9bfm7/Y8VS958PaF3s+7HPaD/veNR/TdZ6n40/z
7zr+qNe/sO/v/Vc/7IMm/TQfy3P6f8xb3//m+6j39+3vfV/tu7TnkG+RdaHS
e+a96f5F+2of7PsP+8TJ799803rsONr5v/Ob67yP2sH71Hy5ji/aRz0+fcXz
jy2Y9+Too8ec/CfzZmwYnX3OVa9etui7A8++cvp5M3c+OPrUtx/94twLNg71
+PwdBxw5f+VTA7/t5B17nLZ41WjVihO23jJ3Yvh77PrWP/TZXVdNn795NH/x
rb99wfanB/Yc5TXnPHzAkoVbRmd99s5Lt1+2dvThiy7f8uTUZ4fSdZ94da/9
H5nz3MCH/vSGDy2de8/w/1NXXfSGuzasGJ5/1kkrli9e/o2hHqufuX7RMSeu
Xj3wu960/NoZM781sOfx91j9uW874wtbb1k31F90/9P3bHhy/VCvVK/0/57/
9MNu+rcNT04Mz1fWXp5XvfbGnh/zi/nCnt/ne3712h97fszvWS9dfMYF2zcP
1/NZb+p9/4U33Xzi6gWbXufL/3v/sHrvm/ZQrz2w+r6v6r0v2HrG9e6v//q8
Yf04+Tz6s/t3fenzcH24ni/tqR67X+evof0m2fdZ9elrX/7msuuGcuo+vzl1
/sodA/t+Q/+Y/HvjLDbu+f6u93ztl54Ht32x9xWf9dUzb5s+/9sDf+B3nn18
2pJHBvZ+Yp+vfbH27fduafzU/t5nn2e+MB53X62dfA7/2sPnYfst84DxRP+z
LvLcfPte2P3563jW/Zzvp7/7fp5PexqP1Osf7Q8db9Rj9+NTPZ9YffdbrXc/
8xu23tGep71w6Kk7Zz/xuvHM52H340U91h5DP5qs7/9rj47PWL3nU4/1nz4v
th6wfvLeek+sH/jXfu3/XR91HGjc3//rr95z38f7iPv7r86H2Pql44XxzH4f
T+x7ycf/bOudw/exHsb2m9j+Ertfx4v+nqLjgnbQH+rH5yjNa9pfe2Hto3/4
/uqt77DxRvvqz/qv72N88n56H/QP7aNe+2D3c732an/QX9wXD7+3n2yf4Xe3
k+x5rQfc3/fRv/v+DuuvyXqf5/3Qf7wP2Hjl+7ieb++T74e7n2q8Anse87H9
h793XoZXfWH/h2+b9uWh3Xw+v8ZDn3fCMdd/5s3/s3v/+M5Jbjzo2Cv3OHfL
1M2jM+44Yc/3HvbM6O2rrxod8qGJ0ZeuOfh9e+7z9Oj4Ny554xFH/2w/+uA7
bn9l4VOja2ft9bEbfzQxum2y/rJXZ1+94we7P++fD9514SnbnxutXTrrmr0/
ufv3WcP5w84PXrFx2+5409wbrt181NqJ0frJ67sf3jnt7EN+47jd++FP/XDP
OV/73Y2j5yefZ8+lO4/aNH3j6KBd+37mu/uvH91737ozn9hr42jB5fsedOvi
9aPPX73rlV8+aOPoVybrj/zSm55bsmti9JHJ+m+cvscvvfK/E6Mrb33XtK/M
2z1/H/vqnA98/7hnRr+3a+v8846eGH3notv/5fC37p7/DnvgqUsunLdudOGW
ba9e8vGftddPvv72Y49fN9q29I/vXn3AxNCeNy3c/7rHz9w0Om7y896z9+xT
z1uxafSWyb8/85Tj3nDSjE3D3//aqqP/+uotm17XHr/o+j5fn6fP+wv9xHfb
r+9P27PvR333fez71/avn7Zn27vvf9+fvt99X/o+9/3q+9f39f8BDhU/lA==

     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-2., 2.}, {-2., 2.}, {0., 2.583209293977839}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.873647819981276*^9},
 CellLabel->"Out[119]=",
 CellID->31704268,ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvXd4XNd1rz0XAEm5y9e2RAKDwaD3RlW3a7klsXOd68SOk9zEjmzZKpTY
JPbeSRAE0XuZjhkMMAAGGPTeQYBVzZJcZEuyHctF7iXJfdb3++1zppGg/M+H
53k3MWfm9PXutfY5B8MvfH3X49/a+vVdTzzydfNfP/31HY8/8cgz5r/a/jQm
xf4PgyHmnw2G//E7syEOv4vBsHbzfw2G/18nXFC/xt6pv1bT1qk2dsoQ8TMb
MU+Z+jWuR3+9F3yUM3xOzfbQX5jNjOZVwMXz9+WIj1zUPpIS8REubiniI+Xh
pUxFfGQx4iMV4Y/06EviRxYiPlKpfeRO/SNj+rbMR3ykSjsynPxS8GXk+9ru
xD6M5lhwd2O1lrtkCU6bu3Wecn3D3x8xj0QuZ415Hoo4JoYY7VC/qn/mzpu3
TTuO6zlPoz7fq/ry77zpSAxoi79TX3RkAFwzRPw0RswzqC3eor/eatACgBtV
xK3jeptv+XzUOUsLHyL1ER+bDV9UnyuKWC3niVH7HHtP5Oa0RMxr1XbhodXV
Vcvx48fVq3do075ouCWu1x0zRP9wFcF1PBT5RuQutKlf1+1oamp6devWrfLo
o4+SnoMHDxru0nYvGEw80vfctInaotZ/cXh4mLMEZz9WWVl557Zt22L4whD7
sNvtDq39g9FL/Z6+1MiN0s7JOi7lrSeeeCK4QVyLHlZx3Fi+R8x34Uc7Ltxn
RrXl5v2s0zaU+zm1Z8+e4IbyuHJD14WXWl5SUnJt586dXOP7w0c7dHT1uOa5
HwtOa4pYU7X69Q5uFBcVXBN/55nkKrgV67V95Jr4FveNH1P7eKe2Cup0LXgi
9dXycE2ttdrKW08kd5Svg/MGj2fRT3/6U4O2x+v5mWBwcY+Dx/N94eP5anBP
dTsHDRF2Rh7joJ16vEbuORepH2Mebq6Ve87JcdqauPKxffv2qY3R4yYU9fx5
r7b0Iv3svqofHB6khwzRUXlh7WOhwlAXiMcgeCqCMcXfg/HGz8eoGWJDp4U/
vRGrKXn7/X23ttTgUf/M4uIiP6b2LYZ7Hxvec24K54la/tm1d0Nti3Z+7gge
zChF8MOVch59FVw0X6oDGrmKU9ou3M7fu6MDR3ultTw2oSPTE7HIE9pWR8o7
v3v3bvW5+PC8oeVFnP/QUeiOWN5RbU9vNpfLj5xHX3TQo8hFR+195KIPaXt/
O1Vj1pj9ptWorV23xhHxRazmwK3nkadfhd76NebdpE3jJoTWsX6No9QVsY69
4Vi8eVf42TRtdkY9J6seYP0auxe5yN1rh5+SIjM8L6dztYYN0SdXTeuMWN7T
4U1cS5dsbXaGXehI3BHe62B3YfBGLHLH22xivjYvp4Xyz4boXVZnIHJ5W7VN
vFkH/s55CsOLVLOqwFxjrzsiFvmktuK1clnoqGuFQSxf83MRy40LHo7g7nsi
Fv24trVrmaGS7xqhpe8BlxZa0/q1z0vwAEWuMU+bnfnQbNB/7tdmD0oU3Mmg
RDcFrnpVEN6KUBevSXTHLacRP8HFMmrdEVuTqy3mIf01q2vDfbdGRMi1j/Ct
GG6JvlE8BOZg7RATPuCcgxvA39v/wgo3h4/eWuJ9TJuFu6lqKv68S5sWlYLe
ZjUqOopu3a/QIfpEeB2cpl5pySc28tAZXH9hHfnhXVlL0E+GF8kDFLma4EFT
u/iXVpN7664Ew9bwmfCJCSWI9+jL0LtDtcvOv7COLDXtjptF5rYHDzt3UV9d
VD56b/hoBoshg+MvrC5D26W3KVhjowq8T4fXG0pW713jUEauV9ul9WY0Dxu0
mjlyG1K1t7nItTqD9dF7pV59KnrL1J6+b42tta+9FSxDWRdWRWyFWX/7Np3B
30WfSrVGvdiNymy2iDVqeWEdl1xuCI961HE3ae8xlHjMIrstw99ry41KeXeG
j3Go841cl35uyyPXkaDt0u0E/5I2S1QmfH/06VUH0RqxGr0bPWbQi2j+bAzv
yi2CfyW82aHl/c81DlvkwPMz4UMdlDlYVodyF39uWrZan7b9UfUwlxG5eC12
3rHm5hq0oURos/5ZW0VUJtaifcPNcnJ5oV1si1if1sfdkpmDZyE2vBehrKKv
Niqrvjd81EIlfcwaR7I1YtUf187MmnJ/XZs3Kp9+IBwRoSCLXN5H1t6VoKmP
hBcZSo7amDk6oCIHPA/euolB5Qxa7xLLsxPKQB9aY5cjR3JaFl2/llfcRK3w
iE5qH1pjryMX+Rfy5JPhRYZy2F3hvQ6VVpFDXi0nbrg5BjmKDO3VU9oyopLW
3eG9D1WVkZeBtDz4ztvlQb4ZuZv6KoJDrshVRBWakatYIweG9NGHEzzJ3G01
r354gkaqVxujp6nD0xCxjqzwEV9LmTvCR4azq5jaEj7iobykreaWYXt9xJre
Lv29Kzx7ZLg9Ed7J0Jr0cU9UXRS5Gj3F3U6c90YfcxVGN61Gnb746B1XiaEu
YjXJt+4NT7M6vofDmxhKKtpmr+M6gpk3WDwaaiOWqyWrKKkiL0EdDW9+aNFa
GN0yeAiGjTpCkavQctU7OO/NknFaVMTr64tKKnrYBrtMtQsxaxyumoh16rv/
dheeuL5Qf3bTelXIG8PTQrVP5DruCofyWkbqxU3w8ppapL6aqKRjDH8utMvV
Eav54Nq7ouYvDR+aUP5M1KZFlYpVEct7/9tvdln00Y5cZFQii1zk+27dxJBq
2v2B6MyhBV10PVcZsTytgL+tU/rNgsirhIYkbVpU8qiIWOQ7tUVGBi275OCZ
UOdVjcLM4X0NpQx9QSvaW+zhWeiqkdaH1bR3Rg53I5MS3wyeCe5OdfjkhDKK
vsaoPKrdeDFc0g5s8NZD8NaCunKvp8PbaaVdZorq4jhZP3ZRqSd5jWOnXTbV
7xdtWNZXrMWOdt2ZG/QQX2y+9eyHXNNKjOg0pK8uKinrq9PuPcWm6IuPvGXD
1Ydu82hj9dvGsPa56MSUssZRLota66P6Wg0Raw1e1FU/eWvvqDLRHl58aJUR
fXbw86HjeyFq1ewXvnPTqoPHWP1kv/0OayPP6MSlGbHh5tFs5Ehzja1ovGkr
Hta3wsxXmbcegOBWGNzRm6B2UpcyskYxrHUBSMsQ6rp+6Gdr1KZ9wxBxh2Gt
A6RdS3zHWl0GVx2pgH5ZI9Tjqmnp2rQoB/TUXx657m1Rm3XOoN3Zue1maVH3
tjeNgnkomANd+sGITLnp4WmhcxexdYNrb93nDBHnLnhd36DdoVA/2vm57bW6
ta7F6lsXTJSq/tAqreiSeGN467xrb51ZP3YPR2wdt7Y8+HEtMa55IZwHxR+9
JZFXgKNKCtXzr9fWwhun/xhcflx4E1tv2kS92+Nbr+qb+LD+e+gmkxa0a3d7
+n3eqDyfEX001ee0+z7q9lHw1lHwX0ZcjOp6VESFfmLDW+1cc6vXc+uOGcKX
Qs7pW6wFzG37kCFtwVG1hH48gx2pisW7whvQc9MG/Ch8SIJLfwmnRx2C0fDi
Q3WFtvhbqnh91Ma7BzfHzmuqvWOtfYhUXF9Z8D6meqWNPKILee16hbqME7zh
HVrrdu31D8L7dMv9rpuuzgY7jhFtTVH1iX4jIapg1bLpuuCR/Jx+rqYi1v49
7ZzdrhLSR2XBLkSVFP+gLZVnnPv1kEGrFx7m1Jhj6j2LvkauibH2Fqe+R3Va
sZKy0SipGxMleWOC4X2cpkXh+il9Js7MTd6hLzTmIe24GiKuG6kr+qqcyok+
RMExyJ3hAx+8ocxVjUXsupYP1+46v6zt9536/kXsW6iDU/u0Xu1TgWRuMsmH
Uwvli8V/Lf9y75fk4fv/XbZ9bKdse3CP1P1tu9R+3iM1f90pNZ/1SfWne6Tq
k36p/ERAKj8+KBUfHZbyD4/KxQfH5eL9k1J277RcuGcWzEjpPdNyHpTcOynn
7h2Xs/ePytkHhuXMg4Ny+sEBOfXhfjn5Eb+c+GiPHP9Ytxz/eJfsuK9Wnrj/
nHzrgaPytQd3yZfueUT+4f6vyWeLviAfz/uk3Jt5n2QnZ0nCXZvi1OZveFU/
VTzyx/TTGTrcemBFXfbICU/jYYsI9djPGMLdS/BIaxnstmngi9qJeFhfezBw
VFRoT3m8Uz6eWiz/ft+X5bH7vyGHPn5EDn34pJz9aI1c+LBVKh7slMYHxqX1
nqUYaSleMbxDmosvSRPZfEkaNy9Lg2JJ6kHd5kWp3bxoiJGazQuGd0n15gWp
2jwvlYo5qQDlm2flomJGysCFzdNSunka85zfPGXYICWbcT7A2c0TckYxLqfB
qc1j+MxJtOvkxOZROQ6ObR5RHN08gveObB42vFsObx6SQ+CgzoH7/bLvI17Z
+79csudTFvmne3fI3933Vflw7ielOGtz7K3naYcemqHzpNefUYW31v9tuPnA
8/dQJ6Gft6inPfTO8AXtvN3uTvHfauctKH/w3Knsr0XWO+Sh9CL55gNfkqce
eFgOfnS3nPtYiZQ92CD1D3SJ6/5FcRVdxUFxFl3BHI6iy2LXsRWtxoi1eBXH
0VK8Im1F5JK0gpaiS5iluXgZ7zUVL0tj8ZKioXhR6ot5XuuKF9DP1BbPSw2o
Lp7HtKriOdhaWTwrFaC8eEZxsXhayoqnY+RC8RRmKcUpPQ9KNk9glnPFE9iD
s8XjcqZ4TE4rRuUUOKkYkRPgeDFP67HiYUTpUZzKI+CwYhCneBCnlwzIAbAf
7NsciJG9mwOGO2TP5n7ZVuiRp+5vlf97zxH5x/u3y+fv/Vd5IOcTUpBZrJ31
dcGByY7Is62PmKPGPVqJ+s61rharkonzRlxrOKmd5Oe0s7jmvUP16IshLvLM
stvTNuwO+XRakTx+3z/KsY/tkrKPnpeGB23ivm9SOguugesx4i24FiMdBVcx
h6fgqrgLyRUcrvbCKzHiKryMU+IsvCyOwlWc/VWc+RWc+RWxFq3EiAXnOU7a
CnnWlxUtRRC8uWgJczUVLUqjTkPRgtSDuqL5GKktmjO8X2qK5qS6aBZnnczg
vM/gvE9LeRGZkougrHgKp31SShUTch6U4GSfA2eL6fGZ4lFsAU/6aZzoU+Bk
8XAMzvow4uJ48RDOusZRcKR4UA4rBuQQOFg8gEUcKA5gEfuLA7KvuB+nvZ8n
PUZ2b+4z3Cm7NvvlGfA02Lm5V3bc0y3bP+qQrZ9skC9sflTuy/6E3P3BjcGR
+ZQuWVD7TeEYCA0JtauFcZEP9LA60vN41DUg7ZEVw3Wtj7j5EnUwglRtpd25
i/uiHoXBWAjGQfGmJAj+JdmFzvnUAwek4YEG6bhvQPogsj8PcdCbdx1HoSfv
unQDX9418eUjMrrYdOYzPLz5V6Uj/wqCheHhKbgcI+6CyzC8vWBVXDrOwhWE
ygo+YC+8hONnQ2xYC5fFotNWuCStikVpAc2KBWkCjUVkHsEyj2CZQ7DMMVhm
0ZnXFM0gWGakCsFBKkEFAgSBglVdLJrELpYVTcgFUFo0LucVY1ICzhUhIReN
IlaKRtCvny4allPgpGJIToDjRYNyjCA4jioGECwDDJQYREoAsXQQ8XEA8bFf
0YdY6ZO9YE+xX3aDXcV+bMkzxb04Uk8X98hOsGNzD6Zt39yNg7St2CeP3tsk
X75vt3wk5/OSm16M927fe0TcWbkpcmIjLywFnxyJutSnP5t29dZuI3StIia8
qNBFdu2RAFWQRSYLVUUF42g7YujYh5+Uuo+UiufBDhlCBh/MeVYGFDdiJMCm
P/c65ujLvS5+Dexqb+41TOvJvYYgu4ogY1Lx5V1FiOUxs3TmXUGEXVZ05COz
ePJXceLd+atgRdqBq4BcEidwFCwzxtDGia1gSazAoliMkbaCRcMmaS1YkJaC
eYTZPEJsHiE2J42gQTEr9aCucEZqFdNSA6oLp6QKVCompQKUF07IRcW4lIEL
iKlScL5oFJtQgjYWMTaCGEPRV4QRAUJsCGf8FALrJILqhGIAQcbe5hjaODmK
10eLAnIEHC5CtjlU1I/JB4v65UBRnx5gfiQhRNU6xFgvYqwXMdaLCOthfGFJ
O4u7IdiOYnRIiC3G19biLnkKPFncKd8qapMvFR2Uv7nnG7I56+PyoQ/cfXMn
xVgLPkgaedVIf0Ap6lKvHlIqQ/2lJylDwaiKF+0xnLiHIjqmV0MBtU4+n7pZ
DqHyKL1/v1jvaxS/OoKjWc/i5I9kPQtuyLDOEMm+IYPZDKiB7OsMNzT9Odew
pL6ca+JXXJVekssQ68m9glzUnXtFfIrL0gU68wiizJu3iuPekbciHh13/iUk
v/xLCHZXPoItf1nhyF8Su2JRbMCaj0Cz5C9gxW35Cwi2eUVLwZw0F8xhxU0F
s3ivsWBWGgpmpF4xLXUFrFBrC6YM75WagkkE3CQCbhLBNiGVBeNSAcrBxcIx
BBsZlQugFJwvHJGSwhFUPYXDODpnC4fkDDhdOCinFANyEpwoZJwdLwww2ALY
Bi3Q+hWHEV2HivrwgYNoTYg2v+wH+4p6ZS/YA3YX9cguRbc8A54u8iHYfAg1
nwq17QixbQixreAp8GSxV7aAJ4o75HHw8L018r+Ln5Ki9IckN/OeYNhZ9LzI
/uU90WGneq2C6GmqSzqmhd2lt+nJIp5Hixz+a/dg4yI7s3A+fJdsKfqcnLt/
q8x9uldmHpiUqZwrMpX+rEyCCZLxrIwrbuBYjWWiUxvNvIGDOZJ5A1yXYTBE
sq7hA4NZ7NwGsq4hKq9JIJuR148WUZl9FVxBVF5BVJLLjEq075DunMviy1lF
VK4iKlelU7EiXsUl6chlGe3Ju4TluPOWpV3HlbckzrwlvOfIW0Sc2vMQk3kL
CmvevFhI/jwCc05a85FEW/JnEeXN+TPSBBoRi435qKgb8qex1fX5U1KXP4mg
nOSAq2ACS6wumJAqhGFlwZiiApQXYAAMygqQSy8UMJeWFgzLeVBSMCTnFIMI
y0GE5QDCckCF5KnCAMIygLAMMCr70WcdK+yXo4o+OQIOK/wITD/C0o+g7EVQ
9qqg3IdA3Av2IBB3AwQl0myRj2m2qEt2gh1FXUyzRZ1Y9LYir2wFT4Enizpw
njvkiSKPPA4eK3bLo+Crm2vk0/n/LpnJm+UDH/zgq3qvxBDRn4CLeg5IfzQx
6rKwdhNP/yOY2z78EXGLOfLqrv4wTzAsp8L5dR22/W+k9L4nxXN/lYzC17k0
dnWzqc/GyEzqsziJ06nPynTaszKVdoPEyGTaDUyewMuJ9Bsynn6dIGTTr2Nx
oxnXZSTjmmKYZDIyhzKRdgfx63oZyLwiAdBPsq5IH8lGaefPvoyN6s1elR4N
zNedvYJpvuwV6cohjM5OtOsRrcuI1mXxKJbEDdpz0UO6chexGc7cRXHkLijs
wJbL8Z41j+MAS94cmJU20Jo3Iy0kfxrROo1onUakTklj3pQ0gHqEaZ1iQmpB
Tf64VOePc+yYP2bYKJX5o1IByvNH5CIpGEG4DiNahxGrQ4hVMoh4HUSsDshZ
RUDOgNPgFDhZ0I947Ue89iNc++RYAcC/RwuRj48U+g3pKlYPF/bKIXCwsEcO
gP1gH9hb2C17FD7Eqw/x6kO4dunB2olgJV6Eq1cP1g4EaweC1YNg9SBY3QhW
tzwGHi1qRx5vl28WueSr+c3yhcJdcm/WX0lmRkGwUw3m8WAdGPUAQGE4kYcu
3uuRq/3x0tpX1h7UJTCEa0A9PtfL/4EzZfdtka77K2WooEsWU67JQtJzMbJg
RojOm2+g85gzPytzyc/KbPINxQxJuSHTKdcRvojNKTaTqawRJ9OuI3avEZzF
8TQm8jG8Hk0nV2VEwQHHcAbLxKGMKzKouCwDGYjTQOZl5ML+zMtgVfp0/Fkr
0qtgjPagfZd0Z10SX9Yy4ndZukAn8OaQJekAHsWiuHN4gaI9Z4EVQM6COHPm
xaFjz51D8JJZsebOogLInUE/2JY7g9idRuySKWkGTXmTiNtJxC2ZkHpQlzcu
tXnj6GXzxtBZVSNUq0AlQrUiD+QPI3SHEbrDUpY/JBdAqWJQzisGpAScyw/I
2Xx0p2fy+3EMT+f3I3IRtQXM6yfQxsnxAj8iV+NoQS8it4Ajk8MFPYjaHkRt
N0e+aJMRud2IXB8i14eo7ZLdYJeiU54BTxd6ZSfYgSjdXtgh28BWXhJRuBG5
btmCf58obEfktiNyXYhcFyLXKd8sdMojRQ75Bvhy0Tn5ZPG/SXpq/i3RG/EH
EaFbSvrD51F3CY9o0Tuj9bu3e6b0/ugO9lpkB3vmvq9KQ/E+GcXWr6SuyiUT
O9hl041YWTKxJ11MugGuI6oVCOqkG5h7DpPnMGnOrDpktHfIjPk6ghtBnXxN
MUUgxGTKVYQ3+tgJNuOprAPGUq8isK/IKBhRsA4YTmMvO5R+WQYV7GUHMlCX
BjJWUEFkrGCD+jIuiT9TozdzGeGcyetq3QzlrCVFF+jMYth60aKezV4EC+IB
7ux5RHP2PGZxZc8hmjUcObNiz5nFLLacGRhkzZlGMGu05U5JK2jJnZTmXFYF
TbkT+Exj7oQ05I5LvWJM6kBt3iiimSOh6rwRHJOqvGGpBBV5Q1IOLioGEc+D
iOfBGCnNG0A/cj4vICUEoXwO8XsWnMnvw9gpv49jp/w+OZnvRzCTXoRzL8dO
KoaPIoaPgMMFjOFDaDFwKvDJAbAf7CvowsCpsIsDJ4TvbrAL4fsMQChz4FTY
YbhLdiAAtgNe3duK8H0K4fsk2AJUKBe65DGE76PgW4UOhLJDHgHfKLTL18HD
hTb52v318rG8r0hqaq66ybrHfTTigc/QtZniNSoI7YEtw6RqN9z8XPLyrl27
QiOoe7XZI0dP+qWDOPlm9sel6r4nxH9vpczm9MfIZRNCbtXECzYrpqvgGsHn
L5muMc7RLJmuxcoif1tgM4+318scPjiXdE1mdWYUWNa0+SrWM2VGfZx8RSY1
ENrJV3CAx1OugMsypjOayqgeSUXHPJzKK8NDaatgRQbBAElnhxxI53XD/vRL
CO5lhT8Dgd2bscxLBBlLCPEl6c5kQPvQvlu6MhekU8ebtSAdWfPiUcyJG7ST
7FlE+Kw4s9EvO7JnMMKyZ8+ILXtaBbc1Z0osoC1nUlpBi2JCmkFTzrg0Ksak
IWcsBtE9angn4ntEakFN7rBUgyrFkFSCitxBKQcX8wZipEzF9AXEcyk4n9ev
KAHn8hDTZ/P6DHfLmTy/nCaI61P5vYjvXjkBjit65Bg4mt+N2Ab493C+D9Ht
U7F9EKn2ANhf0In47pS9YE+BV3aDXQUM6mcKOmDf0wUehLdHD243gtstWwva
5akCBrcrBtHtwnF5AjGtxbZDj207YtuO2LYhtm2Ibav8O/haoUX+T8Eeyb3L
yM40eIc+8pZ2UbjnDtUYemyPq/adkaO2yDvLNz95WXDbsmOdHNv8D9Jyzy4Z
KWiR6+nzcs20iveumhBnV0zsQi+bLoMrxMD4R4SusLlkuhKLqL/CqEezyGaB
zbyJ5cQcZpmDJrMKTJ5hM52E5U6xmTSjmTBfxjEbN6/KePKqjOmMkpQVGQHD
JHVFhhSXZBAMpC4j4hHVgbRlxFJ/OgI9fUnhB72KRekB3SRjQXwZCzHSlTFv
+BACfV68ijnpAB7gzpxFsM8i2GfEBZyKaXEAezaZQrRPiTV7UiyKCWkDraAl
m1VyM9r10pQ9hogfRbSPItpHpT5nROpyhmOkNmcYx6QmZ0iqQVXOoFTmoMeu
yB3ADpTnDsjF3ICUgQuKfikF53P7pAQg0oGf0e6HsWfyehHtvXJK0SMnwQlw
PK8b0d6NaO9GtPsQ6T5GOjry/C6cx4P5nXIA7M/vxPbuQ2gnIti9CPYOBHsH
gt2DUPdogV7glh2KdtkOthW4EOwuBLtLnixwyhbwRIFDHgePIbofBd8qsMk3
wSPgG4jwryPCHwb/XmCRz6f9E/tWs+pfw6EeehKieI2CRPtLTYN2u/+2D5FH
lDfBgWDwBu0a4R4nF+79N2kr2CvL+V3yrOlSrNwwXYqR66aVWET+ior8FbCK
4GfFgJYd/2osAn+Vgb/KwF9ld083luDGEj68pD68yDcWaM483qUCl2Uu8bLM
KlapAJppNlMmduGTSatgRSbAODHz8v6YGQXKqPkSlj+SfEmGSQr79qEUduKD
KcuaAam8TBFAi/4+dVH60jT8aRgc9qYt8J5D2gIMmFf40udowBwCqDNjTrwZ
s4oO4MmYgQFkWtqBSzElTuDInIoRe9YkVmzLmhRr1oRYsnh/sC1rHHVLa9aY
tIDmbDIKARD82SPSkM37gvXZjPo6RHwtqEHUV2cj6qtyBgzvgQADUpETkHJF
v1wEZeBCTp+Uklw/DPDDAL+cU7BQOZvLQuVMbg8U6GH4845zHguVEwz/PJ8c
A0fzEPZHEPapMKALAnSq8D+Y74UCXijglX35HbIX7AG78z2yK5/h70b4k3Yo
0K6Hv0sPfyfC34nwdyD8HQh/O8LfLo+BRxHyWvhbEf5W+QZC/uvg4YI2jC4b
Je8D6eURoR/1lM7msA6hCkZ7zsCgPTO09rW5ougYj7rSUXbPv4n/nlOymtsl
z5sWAWPkObTrEPNLYBlhr5PIq/3XE9GbXktkeF1LvIT4V+DVFdpxmc0qmxU2
l9Q7l+DJsoaBKWCF8Y9mIRHNPJs5NrNsZhJZlExjydOJKzKlwIIm1YImsLLx
JAWDP2kZw7fRpGUYsCwjYFixJEMkeUkGwUAKWZSAYkH6QR9JXRB/KqryXjY9
aXOs5tPmxJc2q+hKn5XO9BlW82jXSUf6tHhIxrS4M6akPYM3vVwZk4hPZ8ak
OBQTYs+cEFvmuFiBJXNM2kjWKMJ/FOE/Ks1ZI9KUxZBvzGLIN2QPIfiHpA7U
MuRrsgewuursAanKDkiloh/h349ZynP6MIa+iJAvy/Ej/P0If4R+Ti/Cvxfh
38vQl3M5PQj+HoY+74PkdmMTT+V2y8lcn5wgCPvjeV0I/y6Ef6ccAYcVXjkE
DuYx9jsw7360SYh/D+Lfg/h3I/7diP92eQY8DXbmu2QH2A625Ttlq8IhT4En
8+167NsQ+8SK+Lci/i2Ifwvi34L4b1Ox/5Xcp94Kdvv4CT0wpgWvGmRGXtwL
Vjl6+AfCPf9ad0RuX9TESjkGwyP3npcr2bx++W0TguFFNi+YFuKgA2qB50wc
zT0LO55NXIQFijiIsEgRFpUIS3KVmJZUIlhCKZS4RBGWKMISRVhmIlhmHsBv
i8qfhcRlhL/CQAeW6cAyHUAzzWaKzaT68AQ+OK7gOsa40NGkJQgwkrQEFmWY
mBcR/IsyqFiQgeQFCSjmpV8xh+CfEz9JnUPso6fvSeU9ku7UGfHpdKVNS2ca
75F40b5fOtKmEPtT4k6fVLQDV/qEOAli3pExLnZgyxgTK7BkjCL2RxH7I9IK
WjIZ782Zw6ipmrKGEPlD0pA1qKgHdVkDUgtqsgJSrehH8PerwK/M7pMKUJ7t
l4ugTNErF0ApAz+HQV6Cdp0W+DndcoYg0E/n+vDeKbR3IPi7EPxdchwcy+1U
gX8UgX4EIPBR+uSxdj+Y1yEH8jyyH+zLc8tesCePcd/OuEeJn+/CMOJphPtO
hPoOsB2hvg1sRbg/BRj2W/Jt8gR4PN8qj4FH8y3yLfBN8Eh+m3wjv1W+ltso
920sskSEfMTf+28I/vVP8C8Royoe7UsjDH1v0+3rNxBp1A7DTaVN5eZ/lfF7
SuQ7KCdfNs3EyEumGdSkL5lmYUCYFxVzsZBhjjLMUQa48WzifBwkmGc2mKcE
aK4mwpcrifDlMptVNiuJfL5oBcZcIqZFdZEH2izRnUU2C2zm2cwplWbxwVmo
NKPCfJpvTLGZVO9O4N1xDUrAN0axVGQB04KM6AyDoSQyL4NgwEzmJAD6SfKs
9AE/SZmV3hQcgJ4UHoDulGnxgS6SOiWdwJuKsqYjjf28Jw3xnzYh7Tqu9HE4
MC6O9DGxK0bhwCgcGIEDI9KWwduorWjfDweGYMCQNIHGzEEwIA2gXhGQOlCb
2Q8H+lX8V2f1SRWozPIj/v2If9Y0F9G+R4//HilVdMt5UALOkRwfHPDBAcS/
oktO5bBvO5nTyaftEPvHwbFcrxwFR3LZ0R/OZUd/KNcjB8EBgqDfD/bltUOC
dtmtcMku8EyeU54GO/McsgNsB9vy7LI1jwbYYIANBlhhgBUGWGCARTegDQa0
wYBWZcC/5O4O/fGKekhV+1Oa6Gs0+7VQ1x5xvu1dHv2Ppte4PBMr1ff+s7gK
npYbeS5M+45pKlZeYfOyaYqRPwUhXjJNI+KDzDAHzDDs0TzPl88lzsYi7Gdj
EPb47XrirOr2Z8EcQp+3mtGi72dzORG2rPK3lcR51j+J87KswYEAbVlks8Bm
nqLMsZllM6OUmU5cQNgrDIz9BRX784h7YOS0MSOnjeH1qAav+KDdIMN4PWSa
UwyCAUg8kDQrgSReZ+w3z2IY3WeeEb9iWnqTp6UHdCumxAe6UhD7KZOI/0nE
/4R0AE/qRIy4U8cRf+2p4+JKG1M400bFAezAlj4iVsWwWEBb+pC0gpaMQfb/
aN8vTRkD0qgISAOoz+hH7Per2K/N7JMaUJ3pR+z7tdjP6gU9Ug4ugrIs9vcX
svg4jxb7PkUJOJfN/v4sMvkGxH8XYr9TcQqczPHKCXA8hxdqjuV08AGQnA7E
vwfR72HsxyD43cgBB3LbZT/YB/bmumQP2J3rlF0AoR+D2HdgDTsR7TvAdrAt
z4bot8qTYEueBWt4Au079ehvQ/S3yjfzWhH5LYj8FvlM8qfUI9z6w8L3hYem
oes3etxrXxUU9fdyL+mXNXldUh/APmzQnt+OivtDeZ8VT9E2ea7QglffM41j
l79rGgcTQWKhA07rK6YJA32YAJPEQDEmlRhTECJELMSYYnGE355PnKIY0xSD
t7BvJE6DGcgxo8YJM8wMMxRjhmLMUIwZXiWCNqsaBioCqS4pn5aNs3BEwXEC
31ikRQts5tnMsZllMwPn6MkcHFHQEyOnTRjn4IhCeYL0NYpf42QEE0ewimEw
ZMTCBxN5Q37ANCMBnf4kbGVf0jTOnD9pSnp1esxT0m2eFB9JnpSu5AnpBN4U
HLuOlHFDgnhSxsQN2hWj4kodFSdwpI6IXTEstrRhsaYNiUUxKG2gNW1AWtIH
pFkRkCbQmN4vDYBq1Gf0SR2ozfBLDYAavNGa2cuHdDN7pAKUZ3YrLoKyLB/t
8OHt0iyYkdWlKAHnsrvgRmeMnMnu5OOa2V45BU5mU4yOGJjRga7hWI4HXnjk
CDic45ZDinY5CDQxXBDDpYvh1MVwoDDKdRg+IE/n2mUn2JFrgxg2iGFVYjyV
Z4EcFsjRBjXa5HHwGIR4FHwrrwVytMi/5Rxm5L71la98Rf0BRfAOUuSfM+3T
rNgZLm5CfxGmfXxD5F9aR96PUslEfbOaJlpwtuADfcHRwVRYoTg5nP8p6bhn
i8znX5AfpAzEyqumkTj5vmmUPvGZs++aRsEYNBozUKYx5pbxGDg0ToUm4mDN
BNMJBXsxcUJe0DDQHwr2XOIkmIJDCmo0RXumaM8U7eED11fh1hUNAz2aZoU1
jS5wBcKtGKflks6y+sCyEm3JOCOLGmq0MUOLZmjRDC2aoUUzyqIZmTIqlEWz
yqJZGET4iTG0cdBoBgJpDBsx+5B6cxAvB7FtA2rVgUTa04+96TNp+NGl9IKe
JDIBkyZg0oR0mXFgOs20x5s8Jh3AkzyqcIN24EoZEadiWBzAnjIEk4bEljoo
VmBJHZA2khaASQFpAc1p/dIEGkl6H0zqk/p0v9QBWMSnazJoT3VGj1SBSkW3
VIDyDNhzMdNnuEvKMrvgURcs0jif1QmLOuWcwitnwRlwGpzK6oBGxCMnwHFw
jMCdo+AI3DkMDuW4kGNyXIZ4OZDjkv05TtkH9uY4oJIDKtmhkh0m2eGRDR7Z
4JFVtoNtuRbZCp7KbYNHbbpHrfCoFR61wKMWeNQMj5rl00mflS984QvMJA+E
C6rQ3+HtjVIo+F2h6kf726vbfkHPTVdQ1Z+5BP+c1xDxnGowAdnu+6rMFZ+U
1zJ51e2HpsEY+QGbV01D6yDRMCUajoE/wyzLRtiMMhmNMheNquwzCsaCcHw+
hskv4uWLiWPwSIF8lAjbnk+cYD6a4PhkguOTCXo0SY8o2lWIdiUMLeLkVUTq
qnEKEimQi9gss1kyQsdF4xSCZQHvziumZU4xBY2mqBH1nMGkaQ3s/JRxmhpN
K42moZBCJSO8MWrkHCNYwLAGL9fi7Q0ymDAlAwTTA6CfYGv7EpmP/arT6EWO
7gHdJt5K8CWNQ7aupDHpBN6kUfGaR6UDeMwj4ibJIzBpWFzJOMbO5CF83JEy
CJEGxZYyIFZgSQlApABEgkSp/dICmlP7YmARrzY1pvmlAdST9F541Cu16T1S
A6oV3VIFKtNZfFVk+LAn5RldchFQorLMTrkASsH5TN5QKMn04jPnIM1ZnTPg
dJYHInnkZJaHD1Bku/kARbYbIrXLUXAkG/IcznZhDw5lO6GRExI5IZEDEjkg
kV32gN05NtkFnsmxoVDLsRreB48s8MiiO9SmOZTbKlsULfI4eCy3WR4F3wJf
zy2Vr3zhi+qJ7weiKzN1G+JtBNLuTqz9lVPaH4htOGYI//2q4mjup6Sz8Al5
Ob8JO/56Uv86ec0UiIEvAfoSwFn/gWkA0igMzEFw6PumQeozyBQ0pBLRMPRR
GOjQcBwcGkaGeAkTXzKNKL5NEnkx5sVE5LEXEkepzRi1GWMZN8bxzRi1Gac2
40w84yzexqkLqsVVI6RaYXPJOKFKtgloMkl4V8MIrRaMk7HwBL/NGXkvYBZv
z2hwRM83pthMqncn8M64hhKE00bxekSDT2egXS9DCZPwQ2OAYMUBbke/kY9K
9uGlH/Qax6WHJI5LN3oHH3qKLnYqnehPNooX+9+RNKzwEPMwLBmSduBKHoIg
g+JIHhC7IiA2YKUeKf3SBlpBS0ofFPFDEb80gUaS1gtHemMgSY/hHVKX1iO1
ad1SA6rTfFJF0n1QpEsqAPTgWD6jEztWlgE9MrxSqnM+swOCoBw7l9mBY3E2
0yNnwOlMWnEqi984ezLLLSey2uV4VjuHMlkuWHo02wVDnBDEqemR7ZADYH+2
XfYBTQ8b9cA8u+DF+6GIFYZYZCfYkdMm28E28FROKxxphSMtyo8n4MTjyo8m
+NEkj3xO+2JlhrPuR9SXB2vfpmH4pvYWL2c9pGNYxzb4FUaR4kR8kcRa9+60
P9C7Izi8D7nzcHKeOIu/Kov5x+XHqZ2x8qMknIU3kvjA/hsmv7wewWsmPw7e
a6Y+tD809YF+ovTic/+v4vWrpkAQKkb3vg/vvqehNBtgmTfIMm+QZd4gyzwK
+FLiENxSqFJvmGlpWNV5w2CEGGjaCE0boWkjNG2Upo2qGm8UjBFeRaaRl42Q
cZXNipH15SWE9rIGR0jGcTo3TufQzLOZM3KUNwsVZhTjhNqN44hM4eUUJk/q
TKjFjBt5P3oM741iGhkBw3g9nIBZh9gMJnD+gYRxCej0g74Ezu9PGEPM9xrH
YN6odOv4sMddoFMxLN5E9ksdJmYgT9KQuJMGpR24iHlAnMBhDogd2Mz9Yk3u
jxFLMk9WW3KftCb7YR6rt+aUXsO7pSmlF+b1KBpSu6Ue1IHaVJ/UkLQuqNcF
9bqkMq0LiSm901As5eleuQjKdC6kd8C6Djmv8EgJOAeo3dlMN9RzQ712OQVO
QrkTWS5o56J0wClHwRFwOMshhwC1OwjdDoD92TaoZ5O92VbZA3aDXVDtGfA0
NNsJNO1aoV2rbM1pgXot0K5ZtuQ0yxPg8ZwmeQw8+rmz1OFcWLlb/lh/d4R1
G7QCLPSFKerVGta93Rep6F+TQGGDKStU2JUXfE6GC7fL97Ib8OonSb5Y+XGS
D4H346RuKKhj6omFhGheN/UgsZl68YHXTL0UEeIp1sE9v0ppftBHDBSvPw6+
9avrFf0gAOUUzGwBVocDcC8RzUuJEPDbbF5k80LiIJb2AjR8XgOvnkMbB+WG
wDCsU9C8YZo3wiHWCO9fIlCvGBW8SKHaVbxeQTADPrxlHGVlOMqR1Sh0WMQ7
CzrzCoo7R11njfzL5hk4Ma0zlQCUxJPqvQlMG9cZA6Nq5hHOPJzAjw1hhqGE
UajHdQ+gXQ/xRiGeRh/wg94E7EJPAh/7604YgXvD4gNdiiHpBF7se0fiUIx4
TINwx43erB24kgLiBI6kfrEDW1KfWM3ELxbQBlrN/hhpSe41/E9pTu6RJpIC
7VK6pQHUp/ikjkC52tQuqAftUjuliqR1Qj2vVIBycFGBzFaWzsx2Id0jpQDa
sSbMYL13LsMtZzPa5QyAdkh4mS4kqpOZLjmR6ZTj4BiBaUfBkSw7zLPDPLsc
zLLJAbA/i9ZZdesssM4iu7J5Re6Z7DbDe+Tp7FbZATTrWnTrmuXJHFrXBOua
YF2jPPaZC9ThlxkZGcFnsaO+sSJKN5UKY0PfunA73f7ClwfpXy7zsOGWoVSc
uIv+RS7lH5Y3U9zy0yRvDJrOGPmPpM446NepzOsEXRomdHg/MvmYA32ItddN
PtAN8YL0qPFYD+vLHpUAe6GewsCRGc759+Al9fODPqhH+pn10Lyc2E/zAjQv
gOEYf3shcYCpboAZbpBDsEFmuCF6NsRL5UNqCDYkVxGPVzRQUxqHmd94H3wF
8XpJMcJ/KRonL2HSEiYtajDVjTDVoZlLoKKziPkZDZaXaJHn8HoKM0wS/D6h
3hunKGPwmlcyRmQkQWOYk4fYDKqZBzBtIGEYrg3Ds2F4NqySHLemN34YqpEh
yIYd8CUwn3UlDEonMQ6KF3QYB8STOCDuxIC0A1divzhNOGYOEx8Lt+Og2oA1
CZ6xXmlL6jW8F6r1SIuiW5pBU3K3NCb7pEHRBde64FqX1IKalE7lWXUqQqEq
leOpylSoltoh5QCaAY+UAXiG7S9Nd2NDz6e7pSS9HZ61hzw7k+GS0+BUhlNO
ghMZzhiY5kBHcSwTnmXa5Qg4nGmDZzbdMys8s8q+LIvsBZpnbagrodh7IVqr
0mxndgtUa5Ft2c2yFTwFnsxu0jVrlMcfuqgUKMrM501Q3bKob2bZpYmz1lBL
KwnX35y7ghfG9at6NJNVY8RVPRTQOf9L/AXflFdzqnA63kxyx6Dx0CkPnVJN
B/MabxL8JMkLoUJQLNV0Mrl1Mq91sarsUsnNB6tC0K5u1pXdKsP1QCyFgXb1
qGKyB/QSdfGQmfAVBMYriQoDc5yfpvXFwrQ+VpX9Kr31gwBsCxg4fgvQuYDK
cQEwAO8UvE/Fv3O9hpfXEJJXEZoAtSWby2xWjYO8iIg3VuDkJZ1l45AqL4d4
+WOIzjGPzuOduQQF3p1NgKMzbKYTWOVOQYtJBd+doBzjCZR+DBNHdUY4eZjN
kHpvEIsb0Alwcn8C/2i3Dy/98Kk3XqMnnvePutHeLT687lIMSCfwJgxIR0JA
PMaAuI390g5cxj441ydO4MCxtANbYq9YTaRHLKCNoEppBS2gOYmXL5rMPl7y
MHdJA6hP7pQ6UKvwwjqvVCs6pApUpvDeaUWqB7m3PNUjF1OpnFsuKNqlFJwH
JWlIZefSXdjjs+kuOZPuhHFOGhcD5RwGE6RzyPEMuxwDR8GRDJtmXKZVDoID
YH+mBdZZdOvaZA/YndUqu8AzWS1QrkVXrlm2K+WaoBxphHaN8sRHKpRu//bh
LcG7rvroLfJLgYLKaV9Jo/5002AIf5m4lqPW/O6M4EV1prbgH4AmvU0ROfrg
12SlYK/8MoPZ+edmJw7Pz5Oc8rMgZhyen5ld+OibSS7QThAeP01qp6FuVXq6
5ScmD8Ey0KIQxa/r4KcHdEDRIF4s/nW0vLriBZ2KHyoo7w9MXUrTLuAjqhD1
qTtnPtBNDLxa2a2r+x2SSJ1fSWRCfQUh9nIYiutnivSzOGU2fQFx+AJiUofu
9tHdPuVuH5ztD8K8yfr3OsL6GriqgTLVGKC71H0V01bh9YoGC9QB5s0BujvA
oSFHrAuQez5Bweo0YZDuskqewcRpDV605BuT6o0JTBzX4DUZvjGawH5iBBOH
dYbg3WDCgCpNsa5AAh++78fEPgIx/aAX9MQH6C4aX3wA2aErPgBxA+KN75cO
ktAvnoQ+cYP2BD/k9YsTOIy9Ylf0QF6UKtZEHnhLYjfchbfqBLWo+qYZNU8T
aAQNqIPqzbzMWGfmya41e+Fuh9SAalCVzEipTKGzFSimylPd8FajLLVdLoDS
VHrrQlWaxug7l+aEt056y+fp0h2GJDmV7pCT6XaIa4e4Nohrg7g2Je6RDCvk
tUJeC+S1QF6Im9km+8DezFbZA3ZnUtwWTdysZtkJdoDtWU2yDWzNaoS4DfLk
fdXKscc/USZ/lfwJ9RSEniiDJaQarT2jaap9HcW6z+gZj1+x95lg0tQy4tp/
bXibLynVvlpvQ7AiDV122Z1RLIHir8rrhSU4Ir80W9nYcKh+YbYBO2y249ij
pcEO/PpmkkPeNDvDJDnx8Z8mOWkyD/J/mFygHa94UesnSe00uZ2JlgODN0xu
4AnCISWy9GumDlXHdgBvEFazXt5j6FQXbzpBF9Sl4lr7Xbz+bqIP6irobTcz
bQ+F7aGwPRS2R13F6YWoCpVpe9Vwshf4ISwT9LO0+wY1vm5Ec43NVTZXjPwT
qivIRpfBqs6KkY9xrtDhS2yW8XodbA1AVo0FksDEPp8QoK8BVeQGoKtCFbkB
+spvRprExAnFAHQlARmDXGP4d5QfG8HH3gVhAxBWYxAM4CMBgt/74V8//u3D
a388l98bz56nB252A59GDMTtMyRC3T6o2wd1+8QT7xc3aAeu+F5xJpAecQB7
QrfYiLFbrMBi9ElbIumCu10wt0uacXaaQGMS8cJdr9QndUgdMXfAXXhrpq/V
sDYW7rqlEsBbPgyb0o4jcDGlXcoULrjrgrsuOZ/qlBIAcWPkbJrDkCxn0hxy
Os0upwC9PZlukxPgeLpVjoGjcPZIhkUOg0MZ9LYN3rbB21Z426p72wJvW2RX
Jr1t1r1tgrdN8LYR3jbC2wZ5qrBOOfvEp8/LN3OOSOHdRvXVbdqfkKkb1JHD
v8H9+/eHCt6nIz1W1Wvwa/m0vKnl49t+D6F2N27DLddJz2R/VKYKvyVvZF9A
N/2WuQ1H85fmNmAhylwLIvEXZiusDfMzsxVTfwa3oTDcfhNu/5QkEYr9H2jX
w1cnsq8TyuogYf8oyRULfdGNvkGRXze1qwzshrYheCXWowagHtABa1lRoeVN
di/rZC+TbaIXdMJWOv2dxC5mXKr8MoLpZQTVSxqskvnkw7eRI17UeUHRA3l7
6C4fE6XBz+rcIEbafd3YS3976a+f/vrVZSA/6IO7vC61SrFX8OsG2NsHecMs
gUWSwA8uJPC65Twy2hzsAqpgpuozeD2D6dP4l0yp9yYT+lkz92Pbx6HbGMGb
o2CEUL9hWLlBhvDWoM4AFAxgWf0knuvti+d6/ZjeC3ri/aps9jP1+jlOhaed
wAtXOzb1ige4QTuJ74HDPeKMR2foiGeqtcf7oLBPrAlMtRYjj7jSF6eiBTQn
YvjThDP0TmlE39uA89cAc+uTPDDYI7XE7IHBbqkGVWaMsyqTKW1FcruUJ7sU
F4GSN8UppQDyIvGmOng5CNKehbBnwOk0WwzstaELOplGd626uxY5Co6k0902
uNsmB8GBjFbZD/ZltMDfFvjbAn+b4W8z/G2SZ8DTmY2yA2zPbIC7DbK1sEbz
9q/PypasOvls0qdCf4qk3RnfEHWF1BD9PXFBd3eEa97g12kG/yuaNf8LjuS3
qZHthZ+XG4U75bfpdZj2a3NTnPzK3ByDpiUOGrcgon5pbgGtIX5hbsVHf2Fu
Y03dFovGEguDLRjjKsXfTLJCXWLTUIn7P5JsaqxrA3YdRww8dhiYiB0QmbAA
esPkZONiEnapUa8LtMNkBUe9bhbSborsYRHtYe5N9IAOeKyIodQxcNmrCmcv
6ITKCuZhPqr6EmLt2zovKhiHL9Dz5xN96tkZH+iGyIo4mNxNkZm6r6FsvKrB
uynGHlbNvXS4lw73MgH38gYmC/Ml1J2LOgsJfuZeP3Ovn9r6Va3sh64KVSv7
6SznnMDE8XiNsXh0D6NsRuJ5A2oY04Z0BsGA8jGg3uvH6z4dP3TsjWcf1BPP
62/deO2DiqQLdMZzF7yb2Hd1bOqBtj3QthvadotrE4+JcxOHrQ74ao/vEpuO
NaFLLAmd0gZajcQLb73wlp1sE1oMddHxNoB6hRviuiGuW2pANUZcVcTcLpVm
PjtbYebt9/JkJ6x1SpnOhRQHzHXIeVCSapdz4GwqdD2TasPY9nSqFeJaoa1V
TqRZoK1F17YN2rbJYXAovRXakhao2wJ1oW1Gs+wFezKaUHA26do2Km13Qtkd
mfWyDVDZLX97Sp6Eso9mnZPCu5J2hKvkqK/y064jBS8nBce06kf7fz9u+5/a
mMOz3PScJc5X/j/IHzaXyG/N9Tq8K/Ibc0McjG2gto00Fs1b5kZq28RyuZmS
NjPxtqj02wpTFQbqyvZNvH4TSRoYlL28QmVhwUyPf5JkAdYIeGf3x8rjH8Hj
H5nssFTBK1UOZmCHugHqAE6oSpl/aHJx6Ouiq+2qYG6X7ye6oSqH12gpKv39
Dvz9Dtx9RYMFs2q8tNXLqtnLqrmTl6c6WSt3cmSLTP2skePqZ1H+3dBQuZb6
XkNZeBXTyBWjj5Z209JuWtpNS3toaQ/LZMb+EsrKRZ0FMJ/Qq8rkHqrKAfgs
Js6gBiXTCb28KMV7TpN4OQGnxjUwpIVmG2BqL0TVGAZDih6oSt0G4rnKAF73
gz4dv3qvF+27IGs3VNXwgS7QSaCld5MPqvqgqg+q8m5/O9p3QdcuyNolDkWn
2IENWIElHqrGe6GrV1oTqGiLkYo2Gz3SBBoTiVsagFIVp6oW1BDUW9VJVLQq
iYpWYohVAcoVDujqgKoOuZBMVe1Q1S4lKVD0XIrNYJazKTbIatVUTbXISaBU
VbTJMXA0rRW6tkLXFujaIgfBgfRm2Q80VZt0VRtlF3gmo0GeBjuhKFV97OHt
suXvjstTmXWgVr6Y9vfBv/iKGNCGvj5Ry6J6To2+tRLx/72s9ayApuodD6Ox
RNbAJTkPyEjBP8tPc4/L78w1cfK75JpYyFobB1drlbF1cFWhkm39OlhbT2vp
M9yFtQo15oXJvzA3GZhgm0AzpG02cLjbzKZF+duCbNsCaZmR2TLPtoI2YqDJ
bRzrWuithdqy2n4DMr9hsileV9gNHOva1VjXDhxBmGsdVNepnl9wQd0QtNdF
e9uZZpGRX6HMLyd6KKyHwnp466YDNecLcPoFJIbndZ4jxk5ay4L7BnLHdWMX
MbBE7oqFsl3UlRXhZdi7Goba+qgtDV9G9bgEFjEQBCyMu2lsN43lE/yzeGMm
gumEbpVfWX5O4vUEfBpXzo3H8xnCMbwe1RlhpTqMye+Att3QVmMABAjU60dG
7AP+eJ/S1scUy78G60Z69IEuAhc7gRd0AM8mdF3uTZ0GI6TthLKdUNarcGz0
QlkvlPVCWa9YNnVA2w5o2yGtCo+0JHikWeGGtm5pBA3GdqlPbJc6UIvTU4tT
VQOqFU5I65RKXgupUGMqZSwow0jrQrJdSpPZtZ9P5iisJNkGaa1Q1ipnUixy
OoVXTyGtIR7atskJcDy1Fcq2asqmtchhcAgcTGvWlW2SfWBveqPsAbuh6S7w
TEY9lK2XneDxr+2ULV88KtsyamUrdH0io0IKPpQccaMm6qspdV1L9PHnTTdl
+DtLZPWFqabbjFFLsh6QucKvyptZJ7BHf0iuXCe/T67ESf99chVcDREnv02u
xpH4rbkaypIaxa/NNUrbWmpbyzxbZ2BbD1mDNDDpNtDZBpbHjSrXNoIm+VkS
H797M6mJqjbz2lQLBW2hoDT3xzD3xzAXqAzLIfQbyMFvmCxQ1KIe3bOyHIa+
r5mC2JhibfTUrhS1y6uJxEFQGyc6VG3sAE64SlxMti5o+Qoi5RVEzMs6Lync
HOW6mWs9LIY96gkjD+iQ543MGs8ZO5h10dwweplrvZSWdfZVFIBXIfMVDeba
Tj7k0KXuv3ZBWo3lBNi9lMA/o1lEDbkIgxcUXXC3C+oSnxrT+ngTiAl+GhOn
8KEp9cZkPC+cT0C9cQ1eSI5nlzCK1yOwjgzHYz1D8fySoEG8HCAQMAD6VdLs
U0nTj9e9oEfRCXk7IW8nxCVeyOuFvF7Iyz/t8WziJQM3zGwHrk0dqj5mN+fY
2CF2YNOxbvLAYBzFtk0efkHBJjcEdksLaAZNCe3SCBoSeEWy3ugyvFvqjJAX
Z4nUgGr0w1WgkiQ54K9dysFFUJaE835BXTopNVvlPChJtsq5ZIucTWa8QF+k
6tMpbXIKnExphbytmrypLXIUaPI2Q14klYNpTYY75UBaI/xthLsNcLdBdoNd
6fW6u3Wat/94QLbDW+VuRo18LeubTLVFYXejvt9T/98Hzqj2bf9jw8j/l1r/
3+Ru0dhV9Bm5UvCI/CmzRP6YUiZ/SCmjzikXY+H0RZya3yeXy+9TFNorA1Nx
OahQ/Da5gorT/N8kV4Iqxa9p/q/NVSylqzHjr6D8WxqGGNVS9lpITuoIM3Sd
Kq7rIbuCGTqpgZ438LZSIz1vwpz/kdQEmuG6gs9TwPwfJTGP/wjmv6Gg86+j
5SMVFtit8UOFVV3GsjIb47y/mmij3fYYiG2Pg9Xs17+DiHlF52WFSz04qLXt
8FphoNztlBuuP290U2m3qqE9UFqBV9eNHnrdwetVHUzGXvrsZe3sVT574TJA
Nbmc4I2FzxB+MYEJfQEDwnkNdUuokybzIZIZTJwGUxr0GM0Em3E2Y/F8ZHUU
7o2AYZ0hMMi3BzZx2B6Alv3QkfQBv9KyF+0Hoa9XuhUd4gNdoBN4QQfwKDzQ
1wN9PdCXuMW50Q19PcANhd3Q1y3WjTgyFjZtG3mPoHVju7Rsapdm0BSP0qcx
nr1oQ4JL6hOcUFej1uiAuuh7q3FOPgR77bDXLhWgHNXWRYLhE+yVC+jKNXUt
UgLOkeQ26NsmZ8BpcCq5VVM3pUWOA6iLvT2a2mz4gBxJbZJDikbY26i5m9Yg
+8DetHr4Ww9/4W56nWz5531gr+xIr5Xt6TVwt0a2pFfIJ5PuUX8hrv3/dtF/
Gqv/9xOnVPsX/7tQvqe+U+HucAK+Fmmuf/Pn5duFj8uf00sQJH9KLY2TP6aW
xsDi0nUQ+ALO7R+SL8DbshC/g9zrYO3FGBhbjhI6uTwGTYWqpiugq8JAZyt5
6apKFdJVoBqCVqtCupo5uYZNraqma+XnSQrlah2vWNUzJzeo8rkBNELRRnX3
V2ubYKvCQGWbVWJuBi2EV6zo8usqi79magVt8LVNjX7bKK2Fvlrpq1VlYyuw
BWEJbWcJbedVZweffnKwhOb9q29D4m8jS7+Y6FLSulQx7ZIXkCae13lO0c6U
3I63b6AUvIGSkFwH1xQeltQeWsyb15ch+arOClGjwUsJ0HwZv3Ik3AGVNRbA
vPrAfIKXNnvVSNgLmb2QWYGSOp5ZcRI16iSGmBPxXlVSe6l0BwroUUwcAcOK
DijdAaUBfBwAAZVG+zdx5X147Vd4YLUHTvMOTTfad8NpD5z2wGmPeOFrxybi
htNuOO2G06QdTrfDaRwUx0be0bdDXRuw6lg2shNs2+gyvA9au6C1C1oTpzSB
xninNIB6kuCQOlBLjHapAdWgKpHDpspEm+H9UoFTWY567CIoAxdQt5WC80TJ
3Qa5Iba5Vc4QSH06uQVyt8hJcCKFQ7tjaD8ItZuU2IchtRI7tUEOgP2pFLte
EzutTnaDp758QEm9E1LvgNRK7PRq+XrmNhr3xehiOvSnv7rXx8Pj3LWetdD/
axMOd3cYbrpurKn8mPw54xymoY2F1Wj+lHYO7/4xHak5TYF30aJJPQ+7U8+z
3E49D7dJKYlBcwEz/S7lAkRXGGj7BYydk8uo/EXM9Ovki6BcfqVB4ZnXf4UO
4C1FJeFNp0o6XwUTfoE+4BdJ1TA9SA18x5D8Z0m1TNC16sGPOphP6lWSrqfu
DRwuNzIvN6rs3ATBFaoGb8aiX4P+r5lIi/wwibTC9VaW4a3qUY82ZGmQ2Abn
2yi+BZO/r8TX+C77g+8kWnlx2sZhs53OOzhsdtB0lu0vIpO8oHDCdGcsNHcy
S/Oi+A1Yfx2qk2vGdtbe7agxr+DlZRhPVsEKwUDxUoJbGe5Rg2YPBHcDDwT3
cNDsodweyu3B3s3ijRmdaUg6jVHnVLyHerP3mMDLcZ0xMBpPP0fiPRwtcwVD
kHIQDIAA699+Nn2b+LfvfgjaC3p0uoEPybYLdDLXejeyF+uAvx7ghpRuCNoO
XBuRc50bXarSdsFpDRuwAstGJ5VG07qRfWfLRqc0b3RI00YHNq9xE/+kvmGT
A07D53i7ojYBPoPqBA6Aq4y8U1FptMJnq5Sjs46B0bwWWoYK7AJOaCnGZ+dB
ibq6cg49/l1wugVOt8hpM31uhs/NcgIcT2mC0U1yNKVRjoDDKQ1yCGg+18Pn
etmXWid7wZ6gy/+6S55Jq5GdachXO9JZhm6Hzp80PTgVkaOjvqlF/+8ztW98
XvvhC/2/fj5muOkPw/zFlPjRGPmv7NNx8p9Zp3Hu/px5GpwJQrfPxMmfMs7G
yJ/S0fwx/Sw+9ce0s/jtnEYavP+DalJLKHMJXT6PTf8tJP8tJP9tcqkyupSp
u5SpG5r/WlGGV2ihsyrd34Llb8HwtyA3a+5yulyhbkJVwmeNnyuq+ExXUpV6
pqsaSmu8mVRNtWuYz1VTyzF2HcfYdbS6XgldDxqIyucNTOCNVBvNa7A87PcP
dX6gaGHt3cJhdmKLfB+JXkG/v8fmu4ltHFnzZvcriRZghdaMoZcSbUzlNt45
NtqgtR1KazyvcFBth6rAHcAJu53qKraTFbiTFbgTM1+F81fAZZ1VkoAkt8Lm
UgIz3TIGlEs6iwq3ul/cru4Xt8Nw4lZja7e68eSWGQxGp+M5bSrezZqc1e4E
Jo7rjHHyKCavg+ZuWK4xBHcHNzGTDmzivfcAhO0HfRoxkJ2b1IuXPaAbLvsg
atdGFjOdGzkq8eJ1B/Bs5A670a6D60647lA4gUMJbFfv2fCeFdMsOm3qvVa0
75KWux3SfLcd0tshvV0aQQPZZJf6TRTeJrWgJp6yVydYUZdUJViV8JVGi1SA
cpy4i+i1y8AFUGripdXzaI2QvgXKt8hZcCaJwjfLKXDS3AThm+R4cqMcA0eT
G+QI0ISvl4PgANifUqcLj1Hz3x+WJzCS3pVao4R/Oq0a0lfLjrQqeTLrqBRv
Mn5kjYL8KU127fsob/uQhv4fjXM4HnTeEHzO31/0OfnVfU/Lf+WeJOvkv3JO
xsh/qiYbzZ+zTyGVZ51iV5B1Wv4UBsk9E80fM06jF8hAz/CH9DNwXvUHf0B/
8HvFOaT3czHyu9RzHHWnnAMlQdAHpLDy/w1e/gZ9w2+SzxtUl8A+AM2vki+w
I2DF/5a5DFyE9xq/MF9U42zm/F8g3/+cJFXA+QoW8ZV8yrqKvlfDE6gP6TV+
oqiF+rX0v47C1+mdwBsaKqs3UH02pkaW7Y0s25sQIK+amkBziO8j438f+n8P
fFfRqh4Z0do2WK8wMKVbqL5FlfEWYIX97A5eNHIU8AJ6gud1njPa2APYVQ9g
h/0K1QPYsT/X8PoaeoarOlcUTg7H0awmONkDMOVdwjB0WUHDlhJcHJC71IDc
BfsVakDuUiW8C+ZrTHM4O8VmMt6lLqy5IL5CXVhzqVG5C/a7YD6AykNgcJOL
8ruU/C7Ir9G3yUn5XUp+J+R3SjfE9YEuJXrnRl6u8ELgDuDRcSuZ2zdyn10Q
1wkcOnZg24giybqRT/5Z8LINtOq03E2nm+9mH9u00Qb3NRpAPajbhCKrdhOV
r4m3SjWoirdAf4tUJlD9NikHF0GZkcpfwBlNklKc4fM44yXgHM7+WeSFM+A0
6sFT4KS5UU6A4+YGOUag/dHkeuhfD/3roX8d1K+D+rWyD2z/2xPy+MPbZDe0
35VaLc8ATf0qpf7/Tvmr0BMheuEe9Z09uv8Hwsk+6D7fVk976PI/dKv8sUr+
X9+7U/5f/jGcsf/OPxYj/513DHXRf+UdQ29Ajmvkaf/+Z+5xzPyfuSdQHuSc
QMeQcwKL+XP2CXBS/pR9Eu/+KeskS/6sk/LHzFOEJT/a9WhPyx+CZJyW3yvQ
afyePcfv0s6wn8Bvv009y8vt6Cx+E8Gvkzm0+HVyyTr0CefVBblS9AlADRB+
ab7ADqEsRvUNfBb0InqEi+gMynUq1OX2CjaV6qnuSlCFXkHjJ0ksIX6CHiNO
9RI/DsNOopZVQR27Bl7lfx1dxeumenQPpIFdRIMq9BtAI3oGBeuDJj6Q0sQn
y5r5LHcz1sx+4jsRvKJ6i5cTW9k/oHD4trGNvQK6ixeMFl6Rs/KKHDuJZ5Ga
bqCD0GGHYFPPnthUp3BVdRlXjNDicgLrh1WMUVc0VLnv4IDeoQb0DnQFGgsK
pxrQM6fOoceYJRjszoDpePYlU6qdxOsJMB7vVAN6J8bgY3g9CkbAMIHeQ2AQ
xfUg/h0AAYUDvYGDlT83wY+XvaAHdMN230b2cF3K9k4o7AUdOh7g3mhjZ8DH
DVww2Knj4GT7RpsqBmzoDmzoDGzoDAi719a7rYjolrut6A6s0qTTCBo2WtEZ
8DN1aHPQH1ikRqeavUF8m1SCigT0Bgmt6A1a2RuAFrkAVG+Q2CwlQPUGyA1n
wGmc/VNJjXJS0YAeoUHvEerlqJm9QZ0cBofAweRaOQB2fu6kPPbIFtmTUiO7
U6r13qBKngY7UytlS+ppKbw7ccdtqv4ntY5gr36lLeL/lQ32FaEnt+PftkP4
G/n1/dvl/xUexiu0MWiOoFcoPBIr/11wBBP/O/+o/JcGDjla9Ad5R2PRHMPr
/0Sn8ecQx+VP6DBQKOQcx1n7E7qJP4ZBr4D+Ik71FH8Igzoik5N/n3kSncMp
jfRT6BrST/HSX/pp+W1aJGdYQaSi7/hNylmOHlLOgnOEfQQ6DfYXJeglgPm8
4pfm8+p51FL1BGopuKD4uaJM3VUvU7fqtP7jzaRy1XeUs6KoUBcGKkCl4idJ
lew2qlhOVLGnqI5DT1HDx19qWT/UsXOoU/fS69E5BGlg59DAzqGRnUOjely8
CT2ETmITrwc08xog+4xXEGsv67xEVFb6trGVPUVbLHoK3it4HvnqOQ0DLwBa
eDPdAqGuo+O4pnNVYUM/AXOuJNCcywk29BU29BNB7Kq/YHeyjNdLCk5bTLBz
+GCHUvPoN+YwWJ6N15hRONBfONTQwW54J/oLO/oLh2JcYUd/YUd/YUd/4ZAR
yD+8CYsc2sT7lYMoywd0Apzcv8murgDa0F3Y0F3YpAddQfdGZncf2g3oMGzo
LqzoLjQ6gAe4ldjtG9F3ujYyzzthvAPYCT5gA1ZgUVjQW1hUb8HxfcvdFvQW
FvQUGo13872Gu3n/rB6v6wjmqQU1G9ukelObVG1ib9EqFaA8HuflYkKLwRzu
LIzNch6UGJvkXGKTnCXoKM6A00gbp4DqLJBZjoNj5jp0FnVyBBw218ohwM7i
mc+eVjl+HzqJvWB3SpXsAlpnUYnOokL+Kf3LwUddtL+4WnfzTTY1etjy//F1
F2BSnef/xvdaiFV+NdZ38eDuDosTCMSVBAsEdxbW3d3ZxROSxl3baBtrG3f3
BAnu/v7v73POLAtN/72u+3TOzAoQ9sPznnNmxkPDewLWhboc/Ncub/FfGTzw
kBniXRFzUWND7AjCrOYt3XN9J7n9Axbx5+V6JjZxZ3omBrszPRKD7KY7rdi7
gG0SM4eIOdUtuak7qc2JriLmRJcUd7xLqtLBRLYsPrp4qBzzYszoxOaot0ln
3dExHTk6yJnDHTLQw+tQe6aUQ+0yTY5Md/DSrIYOtM2SHG2z+fHYj6772+Q0
tK+1ytXqg83eVnlo0SpfQ0a+5osCnTYolBJFRoVsKLanlxRTCSyU2sU2pdqU
SYcy6VBu5/HLqSKQLmyttNN7lVQFF17fNa+y0wXV/OLQAy+8vrFqUaNWdKwV
HWuNjjrYqEMMS0cc6u1C13WIsQ4xKHqdwFgvMHSW8WP+JfvIi2/1YbQOVH7A
/vsNbdQZ/Y126m8jbUIP/Ri8Ha2Dl2+x/1aU15tRm7Tu2Kx1x2a5sdmOPGzG
jEBbkGOLHXnYYkcetkDHFtjQfdpeAB1boMPrRXrBHns+covmjC12Lc4W3PB6
VvP7MxFbWOY/DQpP0ZN+T9Dj1mbg2Awcm4FjM3AIhIfCdd70QX7mH+Bn9377
mb+P7W+BYxNwbAIO4uf7brrL2ogdG7FjI3Yofc6WcC3kNvOxm/j53xi20ezQ
lRrr+Zh1fvVh/BnWcXcX8NgIHRuhw6uajI7wDa6CyiPUevhYDx/rXUnkOlcc
tc4VUWFUvStQ2JEfXYcfdfiBHTFrfTtqXSZltKjBjhqXRqksclMww7ODoWJE
nv1kx7eqdGtodasKt6qV7Ch3K2h56zK3uFWR6xbSQuf/vFcIvajxq7Jpogic
87PVh++Hd8ncf50OtFctuNDD45wBxHtj+4t7/BceMcJjots/cIFzfdZc4Fzv
NfwZu15r3Bkrnj9dbZGkVwKSWJpTeiaASM8EhpMeutUDcU52lzgnuye5E15a
t3RL0kajzfFuye54V0t7XVMYT7qkaEjpnOKOWqkKUzrZJo1VSsc00yXdHQrU
HnQgJtgdbJfBT+rBdpnuwKWNy3L7Nbvsb5vFLNJGB1T3tc42XvaqVjlNgUVH
THa3ygMWlY8t+bpYqEC22KbQnjVeSEX4QiJnewvblNhypYRKIcbS0Ywye05q
Obx4/WBphfN98wqdltSxZJRBFStI40i1ngVTI1Nq+Zf1S/5Gfcnfri9ivD7n
b9znGMP/2+GMOrtkvh5Y6nHF6+PoejuioXOiH/Gv3YdedpXQek0k64MuNl3e
o3f93rE2AgtFbdRQoh+kNxm7/2NtUsJlkx3U2IQtlh3U2KShRCK9CjSv8MA/
Iy25op/1l1nbv+RlY4nWUS+w/7zfc5GbdUhjsw5pwMSzfs+wCHianorYpEMa
m+xCg02o4vUYPRqhX8EjJsHDSPAQPRi+0VYxYvN+frzvo3vDJew9bC9Alg3I
sgFVvLaG6bE7w/TYHexv8dtMm+yxjfbYBvbX+62jenuszh5by36tXw1V22NV
Yev1qpPh6+FlvSunsoh1rpSgJdgVR9YHxaBLPbrUoUudy6e86LUul3Jial02
ZcVIlhqXQenNq10amSwsjJMpzldlTY8SF9+ywq0hyRLXqtytpBWtykyW6e1m
Bq4ICryzmYwIHKEMvP3IOWsa7+3P/auF/ueLmFxyVhhBZcL8n3+oxBfmq3MO
ePYa7dywpc71XaUuZBMHMn3i8KbPav7EzvRZ7c70Pttp1Wt1Uzbi6BQUneoV
jzeCiC3W9IiHmh6i6ESPRLCxBE53DTonuiXizdmOdUvSmqhrEo8dxaCjXc52
BITgprPGoCOdUqSPO9xJY5C2F8ggdyhQhzR3sEOaTqW01yrrQPt0d6Cd0vWM
2jZFnwzKBKBMt68ti6t9bXUod1+bLLfXygaibAab1tk6q9IqB4iopcrltmja
1TJPCOXrKQFaN+1gBbWDVRMFaUFUJIaK7MKIIiqGoJKgYNtKolIcsnRhRPMy
rYvKBFC5zqs0rwAhr2+tShiqlEVVmm+q7NVhqgGpBoq8vmiu47VfNK+18yq1
QKTW2nmVtZpw1tp5lToU8vrIqsehejFUr2fkwdL7fu9Z6+3o6nqdX2HzdpQm
pLei1oPQBhWk+WaDCNLFWP/izjesjdbrURttabTRFNqIQhsRyJJCm0yhTQi0
UZlCm3RodZOdPd0EQRtpEwptwiCh8myEvs8zLCmepqf8nozQJz/B9mIQ2ghC
G0GIQOYRepg54iF6MHyDDNoA4vfzc38f3Uv3qLD1GLQeg/Q7viuM3+zWMP1m
7+TOO2iLPbBZD2wK0/O9NnLnBlrvt84+oJ5tNP6sR5/1yONVQ9Wh6xBoHf6s
c5VUQeUqfJ0rC69HoHpXQsWRda6ICqkgci38rHV5UeKn1uVEi58a+KlxmZQR
Uy1+gvGnKuj/XCr/ZsX3tddLcqv7FroE1PH0KXerKQ51VtFKWsrf1NjmvXTJ
4K+dQZnrIbPo12cY0+T35wpjNnlv8nxh4DqIs6dQe49y+4fMudi5/itYAPVb
gSr9VnKr78om4obRpe8q1kN9uHW6D/Cc7h3HxNI7TsdfgeZUr4Zwpadt1sCK
bXpoADreI94d764SFAuh7gw+x7pp3DnaNZGSlBTpksRPwhGp0tnrsJWCJSnM
LZ1StCoCmEMdvQ4qA+VAB9ZVB9pr3pEo+wNdympqnzZ722byl2tPm0zKQo9A
2W63apWts7GtcjTG5AiPXDuakocgSleB7BAoOzTfbG9RoCVSocgo0qZY66Tm
xVSCGJae+1dqL6VRSmXWd1Z5kK6yKLeLncupIpD8qNQsU6XjrlUio9rIqKYa
yKgxMmqauk9iam09tBYmLFsP1QmLOs0s9VoH1WsZpHPB7/BP5jsM5W/TW/Sm
tV4HW/Vz9G/Q+JdXkI62rteMopPEr3Hnq/RK5AYVjA5acv2D3Zf9XtLdL2rz
QuQGs2EDLnj9nfXB3yI2mA0bzIYN2OD1FD1pjz3B9o/YsB4b1uOC1yP0MD1E
D1rr4GEdOKwDh3XgsA4c6sFhHTgwHNwdpmNOd7G71e9OuiNMg9yWMAm6Oawe
H9Q6hFiHEHpsvT55nX1yPXfW0Vq/2jBNhjWh9UF/hoh6V0WVVEHlii9WRqXh
da6EiiPgIWKtK1TiIbLW5VFuVI3LoexoBtWs6Gq+XCb/STNiqlw6pfEvSHIH
74Vn1kBDIuvsBNbc8eTxUObiaFXLUreSbmu7IHBllH9c9ZwTLD4P8///M0jk
/9KgT6zbP+w2NBi4FAMGLsOAAcu4NWD5RQixnN1+y40JSOi3QgubfisRwtLC
Rmqc7rOSH7VTfVbSKpDwOmnFuZO94jRo9IrTBi5O9FytBU3P1bQGLNboCEqP
NTDRI15WiBDEcEe7NdTUHemaqJO2XZLcYb9DXZKaukOdk5ktZMXBjlobHcCH
Ax289ndgWbS/PUzsa2cbTSD7Lk13e5k49rbVBLKnLQsjiAj6jdsNFLtbqyy3
S7VS2e4X1VLlwEKOJgxNHFJiR0P5IkLnibexNtrG8PFziwKbLwrtWRJFzBjU
vMjmi2J7zn8xlQTSkqdUB1NK7YrpMnCwbMlTbhNGOVVAhdeXtk76srnOHX/B
36cv+Hv1ud9nVrXkqOZTP+Gv3idooj5W0Tp9/BHbCyCkltaiiNf70bqi9L1o
rZveZSZ5l3n7Hb+3o/TT8VZUvc7c1GvYWGeWrMMRyyxZJ0v0wGvc+aqK1AOv
RMqXf0auB5P1QGIFo8l6aaJVwAvc9zw9Z60Dk3Vgsl6WrNdxlHV6pj/3PQUa
T1rroGQdkKwDEn2PR8P1fR8BiofpofB1dgC23g7A1gNJPZDUAQmF1QFJHZBo
mXh3WL3GDMG5lTvvpDv8ttDmsDrNGTr6vZHdDX7r9VnrDJp6TKijtVYdjtSZ
I7oUrzq0DkfqcET3VbBtiSV1roxK+diSsLWuOHytK7JqsaTWFUTUYEmNy42U
I9Uum2CEqlwmZURXAkmlS23vIbJ6eI5L4i9FIoB4kJS5NbSawTYOQFa1LAGS
Eje+5aAXz84Y57yHxO0eInP/e8ZoWOs0EuTcS6T7jnA7ht7a1LnBiyFj0GLW
K4OWMFQMXCJLlvDAgKXc6g8tZ/pDy+n+y1ip9Ftueix3p/quUPzpaHuhMXKy
cb0Vw8gJ24AJePSK8wFZrdO5GkKO4ciF7miPNe5odxVvHVHdWPsc6aa1z+Gu
CZSIH1r7HOqitc8hWdI5yR1UnVSyxotOwHKgI7Ds75Ciw6+Asq99o9qlub1i
Ze+lbPZcmq61Sdt0t7ttBpR47WojY3a1zuTzd7XKhJKshnbCys6W2cGeKTvM
lO2sZ7bjyTYvTRz5QXraRb48wRBqXihCCu38bhF0BCoWIcUipMQIKaFSZYSI
FZHytVeQZo5y+VFuL/5TgR9en8dU6rhJZVPw0LNHhMfHfh/JlI9iauwkTo3Z
8YFZ8n50rdDQhPJuVC1YrFU6DBu1VmLU2ZGSOsTw+ndUnY7A1vHH8i8mlTf8
XqfXVCQ/Wa9G6ifrlch60KgHDa+XI2XQS/qAFyPrTY161PB6jon97/S3iHqp
US816k2NetSoRwyvJ+hxeiy83tSoMzXqUKMONepMDf3aHmD/fn4s76N7FT+q
94TxO/pr2Fpd88XuXX5b6c4w/ZbvCNOx7i3sb/bbFMqnbAzVp2wIXevW0zp+
+FV9qD6lju1FwLHW1fJYjV81VVGlfUxFqL5sOftlVEolYbXBrjisNijScyO8
xnMjopoZpBo7ql1OZBV2VLmsqEqXSXIjrZ1nRtzYTJcSU+6SKYm/FQkUz9+Y
NZixukWJi6NVtKD1Gtc9IvKKc9cmDW+cMcdzY7Ztm55/dVewvU/rue/L7Z+X
+a/nSD3ad7hzY2c7N3RB0O+cG7JAx1WHLEQVS+dqBi+ElsGLoGXQIs0qi6Bl
4GJDhuFkANycGbBUB2D7LwUZv36MNaf7Yc+pfsubupN9GWZO9FkBJH00vpwA
l+Oq1ypNIb1Y+BzToHKsp5Y7x3qsRhSvIz1WM390Z5FzuFu82OgaTwleXRIM
E6YQI+VA50RKAhG/jjqcsr8jpOwzTfa1T3F7rVQUSXV7LIMkTad9DRJLgLTJ
kCK6jOWX1hnokYkeuoxlZ6ssm0Sy8SMQmGzXZpuJsq1FLnTk+eXr1G8+3/5H
RPkRTazmhfChikSIntHyHcPJt+dUYoqUaL1SKjtKZUeZXSdShhvl1udWhR14
rbADrxVUaX1iVWkNY65gCYB4fRBdLUOqtYQRLu8xOr/rxdd6J6pWkOha97fA
5U2//+juf8uXf2nzRpQGl9eR5zUVqZ/iVyP1k/0Ka/d/etl5nDo70lEHIpYd
6aiz4611KFKHInUoAlB/i9AU9Cy7z/g9TU9F6FOejNCXeYL9x5n9Hwtfa5Cs
NUjWAslaIFlrkOi+B/j5vJ/uC5eW9+oH956wWjvSWgsjtRDitTWs1o606jd7
B/tb/DbrUzaF6lM2htbCSC2MeK0L1afUs70YSGphpBZGvGqomqqoMrRWitSa
IrUoUosita5EdxeH1kiRsBpXSAXh1S6f8iKqXC6ZIpGVviIVLoNs6hid6VKj
y31FylwSJSKIKcK/P54ixShS7Ca3GhW4SOy8JYydgvEVmeVNH796Qbj/2tH6
8AZO/uJNJNPPp+SuXgPcp0Ougojhc3/j3LC5ODFsnjwZOo/mK3kydP4lEDPf
oFmALJZBY/gInkGW9rztwIVyx50ZuEgroYGL+eM8PXCxOz3Arz8cne6/RIdK
+i+hpdbJ/iB0st9Sne7ptwyELC2K+i4TRxqFjvdZgUSWRpreKyTRSm1W6bBJ
z1UUp3TYpEecnngmlbqvdocb0krqULc1uoy1W7wvVLw72DVeMCUwz3RO0BoJ
nfarTioJk+DpEmRKomRrbwfPpz1Wg098+d0AxWKpbZrbZaXDU7r7xcown3Yq
jNrRKlMHYnVFzPaWWZQNStRC5djqKMdWR7moZAXpSWp5un5NS6kfmhfgkSq0
88yFGmuKNMcU24KomEqwyC9Gk86XMaX2uixlQOT1WUyZPCo3j8rNpE/8Pjar
Po7RaaaP8Okj1k0fxlTZiaAqiVQlkaTVuyj1LkP4O17yqEavZAhSb/r9h/5t
YP07qtaOv9aCktfrKlI/p69F6gfw1chaWKqFJEsqrTWVahFJrTWV1trFbGvd
8xDzXITu+3uEpoC/sf+s3zMRtbowRaPXU6wcnqQnIvSdHg+XCI+hzqP0CNPB
w1YtMtXiUg0q1eiqVv1G7uPH/l66x6rGpRpbF9XYEZYaXPK6k+6wx7aE6XKh
zaE1sOS1MZQvtyFUn7Ke3XVU71cXqk9ZG6pPqWW/hqqpSp9SaXdXsFtOZVSq
u0vMJGRyRaHVuFTtCsKqcKnK5YXLpUqXQ+ZSZIXLpPnTF7m48WkuLaocl8pc
CiVHl+JSqUuMKXEJFC+X+JsTR0uap7luYdFLz04257xjizfSBE33Vz3nXa4W
eA2kcG+aGcHmnBdWWdutl/t06BTnRszmR8uNmMNm+Bwml+G3C6PbGWSGzjWQ
uDVknrQxh2TQoAXuzCAJxJa5ZqDgOQ08p4Hn9ADBc2oA88+pAYvlCeqc7K+W
mC6i50S/JbQUXZa6432h57iYOd5nGf9tjvVZDi5qhXW0l7g52mulQOm10h0B
moZ6aCg6DDYXgkucOwQyDXVb7Q52WwMsXeXNga5rKN4d6GKxauqs9da+TgmU
qILMGdZLHZN1sTzI7OkQACbF7W6vk0q726XySbsuTaU0xX2/tNVEJGB2qtaa
iCBGr9rWKkPIYEwmuihdx7utZRa0aGX1c4tsDTw5DNc/tsihXGRRedii8rEl
384xF+gAbaFmnEJbKRVhi2UrJV0381VMMboozUJfxJTYcdpSaLFs6CnTIZcy
PR9O3HwMNxADK14fGjcfROv5vu9HV1ClChIyur7mXSb1dxr1dlSVHW+psovf
qhHG69+WfqL+FVVjF79VI0wNwtSYMLrv1cgahLGCdBS3Bgv+wf7L9JLfi1Yt
xNRADD9yz0XoJ/HvEPI3qwZharSI0mc/ze5T9CQ9oRDkcXqMSeHR8GqdY67m
D/phdh+iB+kBul/xg3tfWJWNPvrN3MP+X/3u5gf7rjA9rXlrmA5W3cn+HX5b
aHOoHtsUWq0llK402oAG62mdXz3V6eG1oTp0XstuDVXb51WxbYkw1fjiVU5l
VBpS7UqomIpCqlxhaJUroPywSpdHueEAE17hsiMqXFaEh8uqSSkuPbIMYMpc
apSAKfWAiS5xidECptjF0xpazV+fhV1m7W7A5b/em8Z7K6igWzxfAm8v2Piw
rRhq5IteY21vwJf8jp3dO0MmODdqZtAfnYudhSojZjG6jNCh3BGz2R0+m91h
s0Fl2Bxtbhc3tpnLA0Pm8t8aeSBnnjvjxcrJFDo9aD4tABxNQ9peYACdCjRg
Ie4IopP9F7GG6q8x6DgIHQceq+8SoaO12DEMOtZHLXNHe8PQ0d7L+XtyFHqO
9Gqc6FnpDvdcaeSwDjtkm+7C52C3OFrtDgTqutrt7wo++7vYRqe593VOCHDD
V9jbSSeb9nZMcntUB51s2tMhWaML8qCN26Xa0aUpnjhtU7FGpbmdbVmK7Wwj
eADH7VCtBM/2Vjpjva1lBmUGkjRZdt1cFmUDjaU5JkebXD1PR9f4foc836HO
tw0V2LqqwM4MFeKN11cxhXp+XpGtr4rAptj63BI8n8WUiJpSO0BTSmVIY+kA
Tbleaq5cLzWn89fvM6KLm/f83rUqdRZZTyN4m6n+Lb83oyp1WLdKM0yVeKni
B/8NKHo9UlVbr9Gr9Ar3vRJZLV30g/cP7nrZy47Q6Gf1RfZfiKhGF6/n6O8R
1Vpa6eFn2X3G72l6ip7Uw0+E6ys+zr/zj9Gj4aLjEbbipQpequClCl5UJbxU
wkul8aLf0T3s/9Xv7rBKHdqVOlvR5k6/O3hoS6g+ZXOo6N0UWgkvXhtovT22
LlRH1+vZr/NbS7VUE8ofT3VoVVAriKkCmCpw8SqnMioFlRIqpqKQSoCpBJhK
l6/CKlwuGTDh5W7hLUvd8qvXuIyIMpdOaZGlAFPqUig5qsQHptglUHx0EcAU
udUxha5bSHN7HQx/fDnnvXh8Xm7+7wO6DRe++bZoUZbW+LRQfqeO7uWBI93R
0VODfo8w0zFj5HRYGTlDI0rsDJqpNNnEzmzSII/Gm9u06pqtjxs2W/IoLanM
oKFzbK11uzvjpRkHiBBn8FyahzrzJA7bC0yhU4EGLnAnTaOTAxZo6Fmoi1Zg
6MSARfizCH2on67oPd5vMf/VjvVbDD1LrKPWUne0D6PQUZuCkMgdYQqyei13
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
dFp93I3cNfZGPTCGO8fcpHQkaMxNuutmjVY3a9KaKtFsc4sGKgEXOy2A2Qjb
zNDnDZ+JY37DWAaeNtBOD53lTsEZ8V9LWxyDtlPQdnLIbDk2eI4cw7UTapCa
qzFqLo4NnKcjRwPnu2MD/Ppj3NH+C/Rc7P4eZ0dU30Xw1Xcxmz46GC7SDvW2
dCas11K9RkOvpdLMLDvQQ2mg2s/2IiBbQSvdvm6BVrm9qqtg29tF1wDs6RJH
q6FstdvdeXWwNNNB6k5yzCyTYR0SQOCXDoluZ/tASW4Hnu24NClYmOnynrbJ
4sxtU22YrXCMMeFnadYq1f1kpeFYGoqlmWI/tEgXYlrhfc849Z2XreKy7LUc
sigbwCydntcpta8wzSyLybWlXK7mqDyNT7qc6DM0+4yx6lP6JKZAghVqfCq0
0/KF0EXRqkh86SjU+9HFsHW2d6O15nsnWi9i8TakvaWiSsCrxGfsP1GlJlgp
elkmmO57nf3X6FW779VIWfFKZBmElcGXJcHK+PN8iWXIi/SC3/P0XESZzoOV
2VOhyhDM6xl6mp6SVU+aVU8wUDxOj4WX2tl5HS17hP2H6SF6MLxUhLG5P0yP
3QcB99I9YSVKl/lomLybu+6irV7B6FXKN78DNLbQZr9NtDG0VKfASvVaDuyu
86unupBS+CqFr1LjS/NoNftVfpVUQeVURqUhfKkSPiwUwUoBrBS+SuGr1K2e
kuAW3bLE5XI7J6TEZVNWaInLDCt2GZQWXuRSlfiKKISvQpdICZEFxtf4FvbK
bJ5cF8kT6RV4OeNzFm/ek5Sa6vR8nZ/eOm/KOaq19BdtX2gveIJ9ht5kr7ff
HxtgO+cw1Hnvs9dw9Mr2/ugvF4POO622vntX9+XIsQB12XUQNOE6bk24Nli3
muqWNtcF2U3dCvQbGLyOjxpnm+ul37gbcNDSEnDsDcbihaah5rub5KCyxaXm
vlFT7eYtYGhpshup4S/2Vpv49GVGTHdnGpoBijN0NGv4DEAcNlOXCgyDRQWP
J4eyDD055DYdyELFE4PVHBRUmvSOD7pdG1A8NlAz37EB89xRa74Kdkf6s9o8
0m8hf5WO9F2Ig4usQ33UYhBc7A5aS4KlINNbTx372g+G+8FwPxjuU92Xa4rr
voKvs6/bCoNwb1e1yu2x4gzB3Z3jgiWgVpKsLHd1soRfR10P9UuHeLeToc5q
n+B2tNdwt6OdjsMLwu3qUl0Hta1tMgvGNrpc++fWKe4nhX0/tkrV+JYm8NL5
Efoe/75vkWF9Z4Ff80zAy7Sj5ll28CqLshtCPhMvxw5e5VAu6gXKs4NXebZ6
zIe9QAXiryDoEvgrcB9FF0BfoEIELMQ/VYR9RXbsqkj4FdvsVgx+lmY3m/X+
A4L/iSoGv2LGt2IdR5cjb0SWYF8J9lmir8ToK4G+EthTpaKv1Ogrhb4S2Cu1
nqfnIkpFX6mGtxL+Yz3L489w/9P0VLgqgb4S4CsBPr7DY+H6Do8yzjxCD3P3
Q7r7wTBdQPEAVNzvdx/dG6bfwj1hxYKv2OArBj6vrfLwztASg68E+EpAz2sT
bQwtEXxs1ofqW67jvnqqg6a1IdxdG1LCH28Nu9VU5VdJFVROZVQaon9WSthK
vRLUK0G9EpcwMcnNmzXP5TUrcbmU08xXL6TYZYaiXmiRSwtThchX6KkXUYB6
BaiX71Y0j3fdIsIaXcN4znuUeU+euvBNH5k0X7rAjDe50YoyqOkE/xHNcpKv
p/fJ/+t17S46i1vDlPc7T96W/vc6e06vw6XutSFDnJt0tXCZeDWOTbyqiW5d
pFvodJkuarrs6ia6dZFuXQJv1yDPeCE47lrBJgnHXc9mrEEn5MaoG/VFx9yo
Cc82N9mspwnvZok5Eu5GTg1kuIm0kbe6M7FnOz3iVpE2Ypo0g7nTw71ODWd9
e2rYDKbyU8NmupNqaKBZCKduQ7jbTLrjg2djm42AxwHvmBp4u2LMG6gzAkdZ
2R4ZoHSp1pH+83V9Aivbw/38+ipdFnqILUtV1DvYxxPvgMQ70EsXRBxg+tuv
emqNu6+HVrU+em4v09/ebisY9LppVbunm+fd7i4a/nZ30aG1Xbi3q7PSobVf
Ogm/XzqucTu9dClCh3jm6h3t4ynB2t5OJYJdottmJbmf26pk1Et2P7WBP9DT
EXro+9GjD/lS3Q8t02zSS/P5+87vW/j7tnkG6Cnx93VzvYKZ+PtKxWQZe9mo
8EVMNtTlNCoX9HIhT+Vp3NMxNsn3MX0Uo2e6fRSdr+eT5dtStQDrvN6LLtRT
ynRNxDvw97alRe9b0Xoy7ZvsvxlVhHZi8d9RRbJOdLwBfa9HFuOcJeuK9Wo8
7P7T7x9WiXuZhdZLEaLnxQiJ+gKoPU/PRciCv0cUSzs98Cwf+Aw9Ha4Pfipc
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
WBvbnn9u+b9f7WZQd7f/mpFQc5MZdzM23TxW2d5YoJs6FlimjmmqW010i91b
7OGpY7WrgoL9B6Z6D3DnzZYeYNvE/6pjAns36evdqM0N+rTrdes6e+TascJU
BTUJbK8eG1DVplD9gq7QZoptxtkUKjJttJ0Eo5MmKH3zSZfJykkTfUUDTdJj
l02yQRRRJ6jJykzV3eOnCFavcRpNx12przTuKndGjb3aa4ywPT1G4+np0dfK
WHdqtI5nngLaCwD2BnfSutGdULGaTU+MuAlZR+iinuMMpceHKx3APDbsFl1h
g7ZHlSctM+eQ6Xp5UmbRI4NnuMNge5h5FGrdIXF7aKBG0oMDb6PZSDvbE7e/
rt45wPb/TNv9qq8n7j7W5/v6zDdt9/ZWaNtrodtjLcLbRW63lui7e9hmSdBv
8HYJ3C4F20DL3M6uykPXwO28gpmzs05jb++0Ut6irW+u5tAOce5n5tCf26+G
XGqndfuP7bRu/7FdvPvhUov7vm/Luh11tTLHXcQFXNn7rdj9pmWS5k/NpF9h
7lfNLZ16bp5i5qb47qZibqrMTdPRR53UFryf0Mcxulb742hd0vhRdIboBV7N
px9EZ2r4zNTwmWWr8yzQtWx1nqUnw2cL3Wy7yiYbc7MxV+Vo8NTZ79dh+DV6
1e8VFZmDuTmYm6PLa7T+f4ndF+mFCFH5fESOzM3R1JnDF/kboD5Lz9DT9BQ9
GZ4NuDmAm6Mlub7Io+w+EpaNt9nmbba8zZa32eZtNt5mY60lb3U84q+h2Xib
g7deW0Nz7FSz/g25g/0ttNlLy3J9n43sbgC59SE55m2OeZuDtzl4m4O3OXib
Y97mBEXibQ7e5uJtLt7mupJW3tuxZA5NcSXsF1MReeDmAG4O4OYCbi7g5gJu
LuDmAm4u4OYCbq5Lo9S/5LgUPnZexBwZNsQfGRu/Hrp/ucuHbCrOsdbzNy1w
36Rz1NXVfjrBUtfowwOTqF0JGPX/n0QvOQtv4Bv4hwX++2jko0N6uE8nD3bu
VpsZp3nbMbrl3HQLbaaP+YtzM8bosRmjdStQsB7TZnRT3YK9aaPZ3Kpbt46W
0GMCEE8drQzi0QbxGPGrtHejvsoNdvP6MTLYHOa+a/XANdpcrc1V9gvUSHtF
QwGBJ2u+vXycJ7DNrwGBkVaz7EQdL504UZcL6VDAhMvtxDjejrf07cZPsUOh
hi3CXqmhdSwj7emxV7FB2QulLLaqa71GXedOjroumM31mDpSxwBOxN7gjsfe
qLSuH6HB9vjwm90xa6pibkXZC5H1VnfEmuY1ZLo7PGQG0+tgXVF+CGUPDQqE
svgaLFwxlVn2AmSd4/b3vx1Xbzdb9/XVWaF9fecxs/bRcl+w7gkErLtVT0ba
3T0X6dkoPRa7XQpXf7E8V3d203SLrMGQqrX+dmDd3tmvE2v9bZ201gdW97Pq
oBhpf2rP5sf2q3VBT7vV7od2a8DU6/u2awKoftcmgZW8JthvWumayK9bJkGp
xYd81SJJikrWL1DVk1Sr/c810n7WXM8H/jQmVZjCqNfHVrr7SEWnw2i6MZoh
RjPsKGcGZSKpfH1HtL6tzVtRWWI0yxjNgtEsCLXEqOx9nd3XkJWC9IY4Gn1f
icyG0WwY1X0vR0qzl9h/kV6I8Ho+Qo89x/YSLM1mfM12zyr0fIaepqfCs9A0
C031sY+HC8vH2H+UHgnLgtMsaZolTbOkaZZpmoWmWUhqSdMs0zQLTbOQNNva
Gpptmmabptlomo2kljTNtoOc2WiajabZWJqNpNlImq0zONl66yx2a/yqqYoq
m2WDabYrbeUNrRkj+a9Y0iwn6C84qqObXmctzcHSHCzNwdIcLM3B0hyXgZ/p
lEaepdluXFR/ydey0fB6zuLdnylXBzU6S9MI1N7ngepdpGjrbz0sRCf47mrf
3pE78tdHWPM7xPv8lkHnX5rYtY175/IBzs00o2aNYQ1+m+E1G7hmj1Z6YPbo
wH1zRiu9fsAcu+/20Q33XajtRfpg7r9tNLuzdGumNjO0mS5Ip2lzq3ZvGS3c
xOnNdJMlQfUBN9hjAUGvHdPgp2bGq9nVQYcrA9kYe4VtpyDpZGWHBwzRSZpl
JzW4edlEG1WbnOfmGcTEyHFT4HHcFToZNPZKaQmTV7lTY1Dz1BidWDqFmidH
+426FihHXcdv/cTI693xQAE0R9zYxB0boSvPj+LlUbw8OmyqjnkOuyVYVmLj
EF1xeRgqDymmUQoWkvydPchAenDgLJtED6gBajZKqjkm5b5+twcblfjYdy7N
Q8t5bg/D6J7eakEwWOoJNj6Xbhez6K4ei4KFZbCk5Je3s7s56Vu5o+sy7tvB
HLq9i6WBs/NyvsU2yNzWSa3EypXm5U8dVmFlB7NST6z5oV0crfa6dA1MXrqG
4eu7tvFY6fWtap3gvlGtFD94X7cUn1+1TBSa7kvj88vmSTZ/Jpmen3vJzRTN
nyk6+JkK/R8jqNT8yO/DaJWOmel24DNds2e6Fvzi8x34fFtF6Wqjt6Iy7MxQ
BmXiZqadGcoM+i1uZsKm1+v0muGZCZsUmQmcWcCZBZxZBqc8e4n9F+kFFZGl
GTSLJf9zEVm4mYWbWbiZhZkqEzczcTMTNzNxMxM1sygTNzPdo2GZuKlfzsNh
mZJTF0Q9yJ0P+N2vu++zu+9l9x6/v4Zy992hOvJxF4Ru9buT7qAtoVla+OtN
cTexu1GFZEFnFnRmQScP14foH4s6dtdSbYh+fzVsL4HOLOjMgs4s6Gxg05Vi
XgkVNxPURWz/iJ3Z2JmNndnYmY2d2diZjZ3Z2JmNndnYmY2d2diZjZ3ZblXo
atc5zC7p9tkUl4F3FQ6weYXvl6bAwEU+L/r32f/81b9P4nRf2Rf9RKA/o/7P
C7w9Mf/7dfWfG9vb7Z8eGyz5wGOuwJsnsebbZlTg1gI9umCUNqP/oFsX6lHw
mjcK2OZqc7senaPNbH3abdrMGhVkbopNL5tTR4HnqLN4ah7V7lRT8qye5+LJ
7nV+14728LzoLJ4BQK+gKTTZ2J881kZPW/eP89b+E+3Q6kQ7+zXxMuhUE31H
J0zSqfQJk+DzcsWHnh4/WYROCQqFzyvcKetKLyg9aV2Nn1e7Exh6gsnzxKhr
3XHrOgC9rgHRY2qEulGOIqi6GTuHa61/ZNhUUeoOD9VJJ22bsJ0GpTRYR1TB
VOeOBs2gmUor+IGz4EiW7rc8T/fh6b5+6na3V6aiKXL20TVJZzHVcdXdaHqh
L6mn6S891GIsBdSdgHoBkC5xOwDV6rrUbe+qc03bu+iJOkJ1m+q83DD9uZOe
uQinmPOTB6r7UbVf5X6w4hpQ/f5SFRhAv2N7gfu27RoT9RvliarTSa202P8K
XT1Stdj/skWicZpopH5uGafJ4lSHXj+JSaYUNLX0ygu6VOlDgBWqH0SnGahp
AlUn8t/lzneR9h0vvYKmDse+FZVupP7HS6Jm2CVFGWiagaaWLinS3a+y+2pk
BqBmAGqmLqLURU8vY+xL3PWi3wuRwvD5SL2rw3MRmYCaCaiZgJrBIJoBqBmA
mgGoGYCaAagZmkPF+2PsPhqWgacZ5mmGPM3QJKrv/wCP3E/3eekScr0O4T2h
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
V48Sx8KY0Xi0ONbHTrZTeJePkcZYbMHvxHEsDU9fNp4m+J2l+NR4NSngMP6O
mxwMvzpRdmLMFe64pRNlx43hUTB8bNQ1elXZkdcSCsde545YulIWgzXvMgsf
Hn6jr/ChYTc3MYWbIO8tnr5DNAgfGKzjvAcGTXf7rRkQjMP7Bs5kM2CW6MXf
Pf1mB4tdvb8p8O5WBu9cg3eX6qXrX3/ppRNiwOt2KkN3odvhwRvstndfHPRb
wWsj7zZL9C51P6vOapn7SXVa7n7spAO84KsXeeywAn792q9031urgvF3VRP3
7aVxZm+c529bz16m369a680CvgTfLxl21Rfi9/OWugAMf319dVzi0+Z6HtUn
7H8Sk4C6idZHMYl2mCFJ066eTPU+JL8fnYy6ug7h3ehknejSabS3o1Jg1wrS
2a4UO9uVgrupuGvpbFcqv5nX2X0tMhV3vV6hf0amasqV1C+zi7uoq1L1zqe6
+/mIVNhNhd1U2E0Vu6nGbirspsJuKuymil29K/bj7D4WnuIepUfCVKqNufqU
h8JSQdfrgbBUvSBRqr0rRyrqUmgq6qairj7l7lAdaLmLfY/dNDvhJbHvYH8L
bfbbFJIGu2mwmwa7aWI3zdhNg9002E0zdtPslTnS3MqbFrmEq5e5SvitoHIq
o1IqaSaii9n+AXfTcDcdd9NxNx1303E3HXfTcTcdd9NxNx1303E33SX9Odn1
DW9jp69+7ZoB76Vhg7p6BwsaH3rQIGyvVO1fwmUSB/7nPafpV17/bEIPt3+R
vFotWdZoFF0jpUzJBG0SJWJiLDYmjWAeTdZu8vAm597i05KGB+tDhFvScD7D
EiuJw3k0Qd8jfoSx2rSxpqu0WakHVujWcvsCy0Z4g+5S03GJHlg8QjgtivUn
21gRGmx+NtU4i56xXrfr7jmxYu+cgdb0FJ7QSdPoVpuhb7Ep/Fw6A4NssNwU
99cG1BwVUNMOKNgwq0H28tHuDHKemTRGYsLmadj8nbF5asIEuswLLk9ak5By
kjvB6HqC0fXE2MnuuMZXvORXg5h4eaU7Zl2FmFczsTK8Hh15DV/1CHQeib02
wCZcqhvOsjnsJtBUN+MmI+xB8AwxPA+owbf6TXP7B3t47gPPfQPVTLd3gJqF
nuo2Rlc1W5DaCLu77xxfUV27tavPXP6ApOgvivFV7eypo7o4yrzaQzPsdhjd
3n2RKYql3RYHi1BM/rnLEg9Q+qnzUgP0R+UDqjdA+IFZ9oeOHqDfWyvddyCK
n3zMt+30pk/fXrrKfWPpgAKc6hWPGGa/Uq29vmytkfaLVnL185ZrRCmQxrvP
WsTLUDafaPNxjN756SMkRVD8tGRoYoOhSRiaZIYm2cmvJEHq3jZX34pKlqHJ
ZmgyhibjZ4qSoSn8zXyd3dciU/DT6xX6J/2DBOjLkWL4pcgUTa8p9oSoFAhN
gdAUCE3Rc6FS7P3WUiA0BUJT3FP0ZLg+74lwvQrx4+HJGJqMocnuERWWjKAq
BUNTNLmm2OSagqBe96nQFAxNwdAUDE0RoWzuCk3h376tOHon3eG3hTarkFT8
TMXPVPxMxc9UO0ybGvR/AJoKoKkAmuqKByS49Ikr3fxZc93q65a4KnCspAoq
pzIqpZJmafJTL+xS9JdU/EzDzzT8TMPPNPxMw055nMX2QvxMw880ZtY0Ny9q
WuC4qs/nOVcIXO9x6D/vXFPo+U/O1Id5T19qeB+Rs+9TNJRV/oyBgtFgixV7
kjFZQqUIsdQRYJGm3bThPJA+/LdshnFfxjC7dTEPDOPR1GF8cIo2ydok6b5E
24jRBG3itVkjX1cPt7F2uMiUmEFGps2b3Ld8uLGpmXOEqFo6QmRKTK9F9thC
83MB+/NHeKPnPEE5NzYoVGZq4hSboEm30SyaGXs+mOLyXCxvYv9GumHk2TnT
mzF1FHYU7rgr2b2CpowCSeVheXqSGisqgXKcO2VYjncnAfPkeHWZYXlCBbAc
q3QxFlzqsinmy2PK0xIhR12ljS4qODLyGqPycKy6LlhO8jdeUh4arm70QsqD
SHlw6M3uwNCpjJVDpupcFlLuR0mvab6S003JvRozYVIT5iwdSEXJPf1uMyF3
a9yESL2NLUju6qPmWh6Q83Cxl945RlPmDtVDr8ykbVNNmh6T3Ra5bd0WCUk9
qeDnrksMyp+66FICmORDPSSXuR+8gqWknhzf0TPyO4WR37ZfaUZq9f9Nu4CR
EvNrjLwIH+PclxhpYeQXqtVq93krnQxDST7mM6z8tIXXJ6r5Gvdx83ig1CgK
lDZmJiCkpbNZZuV70PledCJK6vDAO2bl21j5dlQSSibZqKn7/sP+v72C9LJI
yXzPN2DzdXot0utVeoX+GZlsh1Q1tr7M/ktettBPNiqToTIZKpOhMllUJvNv
5rPsPkNP01P0pApPAsskqEyCyiSoTIJKCkvStJlk02YSUCZbD4Qla9pMtmkz
GSmTkTIZKZORMtmmzWRRmRwUAZUpUJkCk15baLMKSYHKFKhMgcoUqEwByhRX
0ynRZU5c4RZP9878LJ4+HypX2P/njIyDylSoTIXKVKhMhUoRW8r2j0iZypxJ
f0nBylSsTMXKVKxMZc5MxcpUpEzFyVScTGXOTMXKVDcmutfDZ50MrODtwlDf
yQ7/PWY2XMD/a+fy8/uxVL+hTwOIgk7jXpo26fIxQ6hlDGM3U+5lDWNFnq3d
HG2yh/6eW0Mv1i02WUP54MyhPJChTbp204Y2adAzuEFPWZg4DDitINNT3q0Z
Lj294vStVw3X0cyVwzVuei0f4c+b3Ld0uDdvilGPTq+FIzRuBnnz5oWi0581
RzQ2U6ezYoP+/Gtzps8m3TzyLJnXjzx3WX7NSG/IxMszV8DnmSk69noaLk9P
Gt3A5amJdJkax6/o5ARdzXoCMk/ApTVuYrC85FOPI+bxsWoySqoppuXR0Vfw
qUdHX8mnAqY7wnx5ZKRixoRLPvXwiOvcIet6L1/Mg8N0zerBYTfp4lKJOURN
dfuNSz09ADD5/H2DpvlcTodLNcMbLPvrcoE9sPn7BjZ3i82+s22w3KUw8xdL
Zs51O3FzZ695xiZQ9hSeHpwBPLd31wt7buu2UGhaP3dbjJqLfTVNziaQqWfv
/9hpqYdmR10+8H3H5U2EJX8U37Zf4b5R7VaqYHOyqfsaMb9uu8p9ZcUFQyWb
L1rHsQpvxTr9s5Y6ePppy9WejS3k5sfNNWN+HLMGHeOtD2PiNULq2azvs/s+
VL6nohPgMcF4TNAlpzqE+hZmvqmiErExUWf6Exkb/8Xuv2DyDXo9MgkWVSI0
JkJjEjQmGY1JunBKrxj1Ene+6PdCRBIuJuFiEi4mwWKSVuHi9xl2n6anIvT5
T4aL7ifCE3ExERdF96N23yPsPxKWCI2676GwRLt2KgkYk3DRCobFJH6L94Ym
AWMSMHrdHaovfZc9tpX9O0HzDr8thufmEOm9KSQZG5Nd/riVbsn0ed4Rxz9A
43JX2TmBKTKFRXiKy4VETZGF/eOhMQUaU6AxBRpToDEFGHX1fjI0aiAGRv62
FcJjAeVRLuVQNmVRJmVQOi0Om9PwukaNluA6Pmknl67zbLz07Az5a5fZNzt7
JPOcFfe/burv9q8aJg7lSYbmu0yzKnOYPAwULBcvkIuyLZf7cocq25OGeUOB
LH8oH1IwFHMKhvAZ+doUDGmqWzCVN4RHc3Vfju7LHqJvkzVUpgYSyWI1XbfS
hvJ3xqXyQEqjkilJDfNHVIDl68Szu2ZYgFgt54fbcdHhPq/DA9OpTabDG0+m
S86fTP/sTaXzaK6fjaS/No7SdJpGt9ItsWddvVHHMG4YyUrFo3WkT+pId+Yq
gtXTjKGnGUNPs2Y/haunJmkdf2riGFQ/iaknGUPVCcZQz9QJTJrjL5OlTKHH
x9HYSe4Yph7zTT06ZopZeoVeWZgp9MgodZV1GFMPM4Uejr3GHYq9NliiBv3G
PD04XN3gNexGd4Ap9MDQm8zU/UPU1GADFUqZQPcNutVI3at8TvcM0Bn/PQNm
8ovf03+mUIXS2/xmQymTKJ4GC1P+3vzS+3YohdNeeg7Ajl7zjNF5ApXluWjd
3kPvpAqmbpsX9/3cbZENoIvdT6qLlu8/dtHK/cfOSyQqlnp9j6nfd1RauX/X
QU8L+LbDcmPVaG23Ithz9etL2XxluH4Jql+2WeW+UK1x9fPWOhz6eas495ml
w6HYyvf7xIRdja1eHzGFfqhitKr/wLZGa3Q8rMbb6jyeb/EO++CKrQnImqBX
okvQiaUEO7GUAKleb0Ql6GXoNMy+FpmAqgmoKun+yfZ3uJoIq14v0YsqIhFY
E4E1EVgTgTURWBNxNVHvBar36ng6IgFYE2DV6wl6nB4LTzBYE/R2EfqlPMyd
D4V5PRiWoIv59V5o9wPufaFe99I9ofol/TVUj93N/l1+W+lOU/aOUKG+BWXz
Jyx3K29Z4J+4+YvLmLLU1XaKZ+JMsuqpDm3XUi2tuW6xTaBlnRJgNRlWk2E1
CVaTYDUZVpN9VpON1WRjNRlWk2E1GVaTYTUZVpNhNRlWk13Gn5NdOg1s1rnh
yqlGS/PAO3wG+a+O2cZ381deXkQC2+j5Z5/e89fnj07u4T6d17+J6BR6w0xO
YZU3TGAGaiI4mwpObhUaqYVDnCuytFckLosFZ/HgS5wrGQxepYOb6Bb3lQzC
1tJBF+kW9xUP4oOLBtnnDeYrWfqmhfrgAn1avu3nDRbJEllp5rVvls1uliUN
M4eIZHsgfYhINpY1SA/V1wiA7KGs4wVDJWsCu/FDfZBptc3AccP+vyK30cCL
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
XbbNkXd3veoOTfoL7vZ8iomL9SjDelQd1mMM68iIWE26tOUkPc6Q3sKT9G+R
b1rdmPRBbXVL/mk7d0v+QXt3S25x/nZHM+JCzjtpzu0jLpXxmnO05LXgvLa0
i6oB5zWG8+r8ri7Or2UjIJ2cVwnnSLKd8x7qyg04v0TO/2E4f9rG+aO9PNrx
8+D8vIyNA3Retv3BBym63XN19gF7P87ZiwAd/6/0SMuT1ri4nAN1EnTOa78x
6dT8BQ6Eox3/o+uLph1/yQnN+VWf2vRXjOmvsht3COr42wLVYbrEwSEXTmak
68dcrqMrP8pxF5p+q4fph5k2qeoQ0zpVUD/QmvMbgTo9R1++v2W66I5evCXV
o+97kT1MHDDcHZeBl7ireYbaCeFhu2RHLN2D7TB46kOZasiL7qGTb5+Dpfdl
ohmncBuj0OBuiOQU+/WRWWodE5Gl1iJrIrjD6nA2xqvCsvAPXmdFKB6yPJSb
l4VkqqXIEmRxMBBeFMwfvDAoE6SjqQ8iwvOaZuLZhfTADJCuMyuARyEz/PlO
p4N2qA7TM2SAnNVsim8GSJc4OKedkz1/w/pESSZQz1TjkXG0f6xPJirJGJ9M
eK4zyjsTnmeK6yMQYzpEz4LnWWjFsziVJcvRVP3YJAui6wxFvke+Q75C4Sp9
NUOVvZyhvmrMbjwbpmfD9GyYjjTKhunZMD0bpueoT5CPkY+QD5EPkPcb5qj3
kHeR/zTIUi18QuW8pTnFyRmErmGVhzXgTfVd7Jpdl6Rp4Im1dUma67HuoM7O
k87X1SavkQXJW8vFOlmwQ17PxQZpjjfCyY3BjKwFo7HeJDc3Y+OmIIbebQri
Ivhu3gKKG4OoeBCcXR9EJNcFkW1b5EFr+aC1pHpNsMjNMZVgQTvYDjdHVfjK
l8krWoptSyQOEdvpEhuULwh1iR3KmYhsxeeazEFmh1lic5+Z4Y5+ug+fjkwz
scSejEyKME14pE1rZGy0bsJHISMtrZFhFLt5Ha2R7yH2dy3dWlPqL1sbqdvo
5vuztu7m+yPTfNsHT1xSd7RJ3clI3dkmdbyqpdRovmsoNY6lKHV1gZb6Wh5i
k7qKUqdpqa8mIx5S9xCpL1tSv9DTU2o23k/UkRqN93m31FbjDaWN1DJ48rBT
Wm8vDfV9dqjruYfErROYaLx57tKMip+xj4qj7T7d/XnH/4S6Xl2oaXRfnsPk
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
fdUcZHYY3/SsML5f0I/0VTNCuW16CD9IOy2kL+zXmRKMX83kIF4LYVJQX9jf
V/uPPycE8iHjsWyAAtBXjWX8+6oxyGhklF9fNZLx7atGIMN9+kL/vupXxrsv
KkBfVIC+qAD9UAH6SQXo5/BGBeinvoxLkAOFd/okq2+g/9eN+6ECJKACJKAC
JKACJFxXAT5BPkY+Qj5EPkDeadhXhTby5/xIMx3Hml9D1R33euBv/942czla
wf8GFyLkE/LUg9o6sRWJd9J4jvpQ+TP3MA4BnoPyWIfyqvpPk7/Q4P+JPhve
47d97S+ID9tNnMI90D97J3KHFXh5lpRfOXu7unLudnVZcpsXb8Djc7eDY65e
PHcb6D53KxdYvcDVC+duvUmdl8XZW/Eiz/91qzonuY3/Wv/itnN/Yv3P2xi2
a1jiaP8M1s/crnMa+eN23vcHC8y5U3eo8zp8jpN3sPU7eac6f8Lk9zvVhd9Z
xy4cRzG5cIzF5MLRu9WFI/foHL5HXTzM39LFQw3w7/viwQbqIorHxf0m+xqp
S3uZxuoSCsel3Y3V5V2NUVNQN+5Ql3egjmxHtnnrbEVQN66gblzdhGxE/diA
+rEeWeeHcrrWz5GkrqFsXMNRw7VVKB8rkf+Ps7uAjuM8H7etIzu2JVtmjmNm
ZorDbIsZ7XADbaBpm7QppE3bNE0acMCUxMzMzMxsy2JmJtuypOd/P+/MrlaO
2993vpxzj6QVWFbk99pnZncGM2owo/YYYUbtEezAjLpDdIAamNH9f5jR8y4z
etmTgm3G6t71Ziy3zViCGYtoIW7Mt834wTEp0Kxh9qRgm3HXpFCHGXX/Jsyo
ZVKoVTM+1klhvDGjhkmhxp4U7mDGHTWjwaTQ8DDEbddJwXGU+RXXo8zWiQTq
jzK7nvOl/smrVS5n59JzoTc4We5zOinotSuaScUz9SfMta5aUX/livKnpum8
4K3zwpMuF654wp4XGjmfIaVoWOd/uc8iwz7SfCgwWn1wc1z+clPYDNyIuHsX
k+Q/qMck8szj7/MmR9yNhpsec44yx5yjnWpkauOjXd1IZ4xIHxfTwI3UsdMl
xcq4obcljZ5usTFaLUkYxYIeP0oX9PiRM5BjhtzQRszAjhlyna5pw2dgxwzj
xgy3zrgxQy5prJIX6YI2ZIacp3MaZhg3Bttu0EkNNAwcBo/pwDFdjpIFR4wc
ooP9+Dsd6BfDj2x/3xjZR3v7RONGtOzGjl2a8WNnb7ViR69o2W6KUTfc+YcQ
zdDQQw/Tb+4RbaFhw2HQeCDaaUY3NSPatLprNGZEy0qtSzRmRGNGtCyjpZ2i
72FGDGbEGDNijBkx8sUjz8ubL70qX018HjOm22ZgCX1P39E3uDGTvqav2s3A
jBmYMQMzZmDGDGPGi92ecZw70R4YHFcCNTg0MKOx41Rbjqel2mz8l1MjPu9g
Yy/3DWvUgJqSloYAFqhSvZdfzXJfXcaSX6arrLXV9f5WuebJT/ymta3wlKoK
D0esohW6jFdW8O+Kmyoqmum/s4pmbCrZlFc0Y83WN8sqmt4npbybe18VTfU1
KSnXD9YtY3g5VVgVa+XNpIh4yWcUlzflzy4u4zY7XudfX1lTbi3V10qb6oeV
8A6AKS720H+bxR78cy3y0Pt2hR7kKSUFnlJagE+l+c35d1ea15xaSGmuVVmO
l0KTDYZlWS31BNqZLamVlGW0kvJ0rbWUp1GqAlKeovvVypPbSHlSW6lIpATm
r8p4xrHKuPZuv5PKG+2lMhZEEMOEGFVXOsrNy3QJORDjFmLcQoxbiHGLKeM2
U8btM12k+jTBRTVcVJ+ADri4Axc1R+lwN6k5BBuMGLVwUbuf4KIOLurgom53
dxcuetRzsYU296ynYgOt62WPF65c0HLIWAoZS/pbXCywufhxcP2OpdkuXPxs
vBgldZ+Psqj4FCo+GWNRYY8XNUrFX5SK8XKH8eLOhzYVZrywqKh+z96pZB+L
uO04FuFy1NpxnoN7P7r04fpThIXaD0q667wzjnOrOy5y1ODSGc+4XM3OwcXT
z1lXom5prk/qGDFKG3BRf43S+nM6BsjhoCj54vmXHCen3QwNKU+HOU550Mgc
jGgmBT+XAifC7aMREe7KBL+bFhSR9s6lKKCIAgktWkcLtvdJBmDghMmWQpUY
x3qZOlbvWysTydqY6ZKkjVYyEkdPxwjdqBGN7/bBHSD0/v21EdPhweoKXR6u
nwwQLLJOHuj8UIuHs0Omw8N0eJgup+mUNmg6REyXE9rA6RABDQNj5MgA/U4P
D1DjDA+kOrjL/n46SO3rGy17aU9f/dvu7hPNt7kLK3b2ttrRm/UeIPjQbTCx
rWc0QqiqW3rqD8YQQRu7W23orl8GJLiLt+6BaIywMkbQqvstI1ZoXaJkeRfb
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
T04zt08lJxsGspgkMj0lN4PSm0uexpKfl0opXpKX3FLyk1j2E1tJAUt+IUt+
IUt+4Q26ztJ/ra0UXSWW++LLxHJffLG9lLDcl7Lcl56lMyz7LPdlp4jlvpzR
oJylvuIoS/4RYrmvZLmvOkgs91Us9zdZ7m/uZclnqb/FUn97J8s9S301S/2d
rbSFJZ/lvoalvpalvpaxoG6dy+4gs9T3rh8LltxrLBhk7Q5yLPWMBXXf2ku9
vSvILPV37Qqq+Qf93V7q/+rYFWQ/ze1Dl6X+d/b5Lt6b7HJo+a4TF73uuKTJ
FJdLmthL/V3XCbzlctnX+rHgMblpHx2wlnpiLKia+oQkBvjK/ogw+d3L1mNI
582YIcdCQ6XoualmNKhgNKh4mtefmmov99ZSX65LvVnudSRgsdeHKOlS/7hz
LHDX9Z7FTZ/GYCaDhleEdb9rxW9kTwNhZhhgDNe5IGdyuNkbFKGrvb3i60rv
aeaADG1CJGs9jY9kpdeiJJVSNLPej7PWe/7psuhzB2lMlMRro6Mkjm5QrDYq
igU/Stf6KLeWrPVRcsWOtV4u0cURkSz2kXKBzmvDIuUcnaUzQyNZ7FnRTw3V
FZ3lXk4McVnsB0ew1rN0Hx6kK7pzsR9oFnt32TcgnO9tb/9wFnur3bSrX7js
1PqGs9rz89iuG13p28nWPuGyResdXr/S0wZNV3pap/UIZ6UPlzVa93BW+nBZ
RStpRbdwWd5Nf9rL7g9362at9LSYFnUJl4VkVnqz2ofLbP4mbz//svw56AWZ
1yGclT6clZ7byaz07SNY6SNY6SNY6SPslT6SlT6SlT6SVT5S/tU2THq17fZl
w11A+stnrjzScJFvcAm/QQ1NuPtcnWaFfz2kh1zJ1Tu8LORNzOKdZJeosVrb
i7envXjfYJ2/Ye7Cx1aZ++Cs2ddNzXX9Zqmt1JuvcNNlZ7pmV+pKfZGPuljR
XC5U6FtsG8n5Ct57rkIf0XOuvLmcdelMuT6Q6Ywu+afNRh+weqaseWN9rYmc
LtUvcqaUDywx8U3plrsTvH22xNO8PFeiX79Y/6Ri/UtcKAaKIpM+3qGIb/my
eZjRlSIPuVLoIVcLPUm9KFSxrhcwYEDAjQJd5uMK9LhCPBwkUCIlUXKe7ipL
YQsVTABplA4NGTkwocFCZlYzycrky2ZneLj9VnLSPSUnrbnkoEJOSgvJTfaS
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
0uu7masiv29fGVkNec825B16yzIk/g1vWfkLhxldZderLHgv+0jNSw/LnRce
kTvP03SKeVTuYMidSFJHMKQ69DGpxpBqJo7qAHvi8H1cbvsQE8etaTQVQ6Y+
eZcjzzCIPPusnnsAQm5ahLjp4DFNz0QAI1X3GDwqnvSzjnfoiVoaEuLYh1Va
/2gpM3QE3c1Hgc1HvjlKnj8lRPnQ+965U0LRQzP7rh4M03FDhciEkYxJJicd
E3WvV+rEsHo+KHmCfkDSeF3/E2HD0EFx2tgw+AhTOsJYXa+PCYMOq6tjQqEj
VC5ro0KhI1Qu0oVRcHF+ZKhbW5UDOELkjN1pOjU8BD5CoCNEjtOxYcHQEQwd
wXKYDg216DigDQ6CjiB32TdYjwDtHRQke2i3NpCbdw3Ui2/sHBgEHUGyXesf
BB36M9zKtgl0BMlm2tTXaiNt6MOnru8TpGf67h0ka2lNL6vVtKpnkKykFT2C
kEO/1LLuQW73y9LuQcgRJIu1brDRLUgW3B8k87WuQfLHUPuoBkPTvM5BMrez
TUenIOgIsujooHQEw0YwbATDRrB8SUrHS92edJx5yTFuOC5nbHZXudBx4t67
q5QLxzmXrMPpbi3uPn9rAzJ8Huwt87nfiQVKgWxTDrZW6tLr4AAIYICbN1bo
er0BEdZb6QOKK1iv1+pmjeFgNU6sKm9N+t6V6sQKXm0sy3nHMrulevPSMrNp
3UiWlOm5vxeXtqZWsqhU32Lrzka/5CLQWFTSWuNL8hZfbSFvLyx21lgWFbe6
TxbruWSXFOnXLWSzTDfLzWnCV2DFSlpltzpfv701+S0hYm1+S1mXp3nJetpA
G2kTbc71ki20FS620XbamQMjMLGb9sDEXtpH++lAFozQIcg4nMloQscg4gSd
pFN0OgNC6DxdSG8mF+kyXYGJq3QdKmIpLoVRBDISISM5GT4SeZngIcnxnpJy
AzpiW0jqdS9Ju0pXWkr65VaSfqm1ZFxoLZnn20jmubaSxeiRDRnZp9pLzgmC
jJyj8AEZeZCRf6iTFBzsLIX7oQMyivZCxx7YgIwSyCiFjFLIKNsKG5BRsdlm
AzJuMnbcgozbkFGtZGg2GTXLe1lkLLHJWGiRUcvoUfvDQKl1kjHEkFEDGTUz
h1lkfDlCau8m45N7P4mi1uWSoNZ1mydZZPx2stRCRvpbz8nmNyLcHMcofnpt
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
wOOOPWIoHtXeT0g1eFRP1Zx48Ht6+7lnLD0as33OCGIpMtVd6eB+1M2nveXm
U7pryod8pYoho9Kk16qrMLulKuyjG3Zm6tAnctQ/fcM+yNHkLkSCHIgYQzAg
/+FghQRGrHLNDisg4X1QopCYsihzsr4vY7K+L31yCJSEqCSSqk3U96WwZfjF
leQJIUgSIomUoI0PwRH9GBThb3ADS2LHBZuuj+XbuTY2mE+9OiYYS4LlMl3C
EOMInR+t7J0bpYdtzo4MApIgING9PafYtrAgGaGQBMoxOkpOSIYFAEmAHKD9
2hAmNJXkPiQJsBwZ7G87or7sZOuBI/6WI7SNtuLJFq1/AI4EyKb++rEb+wXw
x6sj6+3W0do+AbKmjzrijyMBslLrFSAraHlP/vhlPQPcugBJgCwhwwgtfCBA
FtD8bgHyN/8Yw8i3DGTzugbIXK1LgMyhWZ0DYCQARgLkW6pnJBBGAmEkUKZ0
HHre5bBGg31TzaxjF7rvaoxNyL8cY4j13Au3ztanNbhs6diGltx1Tg/nNYb+
wT94Y0SFgjC/Qi8kapCgH+zmleuiPbdcF/I55W1kNs0yWHxvAPkOPL61Ug7K
2vK7MRM2vta4/SutVGsrX5bqJX2+KG3rLv8p1ev6fM6Nn5eYeOuzEt7xb/Pq
vyHkUyt+BdneJ58W6XvNplBt4VV9zfSZVtCGePfn5gpJ/+HNL7T8NvKlSf+O
X+W34VO/5u2ZeaAEKN/Sd/S9Xip1Vq5eWmN2Lv7QXEyZhyc/0I96Cbv5Oa3c
5siCbOihxfCyhJZlMcfAyQpaRatpTSbk0HrakNFCNtJm2pLeXLbRDtqZBjWw
shdS9tF+OpjCzEJHUjzkWLKHHKeTsHKazibBDF2AlUuwcoWuQst1ioWXuLhm
En+DYj0k4ZqnJF5tLolXWkjSJS9JvthSki+0kpRzrSX1DJ1uI2mn2kraybaS
fhxi4CXzCMQchhh4yT4IM/CSCy+5eztL3h6YgZcCeCncQfBSBC/FW5hTlJeN
ygvBSwW8VK6FGHi5uQpi4OU2vFQzm9z5GS/96nmZZ/My+y5evh5uPUjX5VmA
esrxOnips69ld+x3gfLJGy8YTpSVY7+Gk98/KnV/mCh1H0ySuvfpd9DymwdF
3qN3p4jcg5c6eKm7i5c65eV5aJlh8VLr4CXiMcNLDfNJTcjjUqO8BNrEOOeT
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
TT5y66n/Covfz2AxT0m3H6xVfzYTN+vMt43MlVqLHtF0zdcxpbEUPBJkRpV8
7aEg1UanFyONpY0eTZmiD1zKQp6sB4MMN0BD+r70yUpH2uQgqLFKoWR4SaJE
U6DhBmqQZoLulLOkCTRdp2vjApEm0B1mAvWaeWMD5RJdHBuANQFIEyDn6dzo
ADlLZ0b7I40/0vjLSTox0h9paIQf2PjJUTpCh4f7QY2fHKQDw/xkvzbUT7Xx
1b1fQ31lD+0eYrVriP6Mdw72RaIdg33BxmobbaUtAzXDjTve+LoNQBtftPGV
9bSun6+s1fr6oo2vrKZVfXxlpSUO3vjKcjLakGqzuKetDS3o7ifz6fMnI8zE
/eUjYfJDNz+08ZO5NKern8ym77v4oY2ffNvZX77phDT0Ndp8hTaftfORYR36
mSseWSepauJ6chKt6I033tAni1s7wRqNscG5x5zS4BqrEyxs7n1q8xbOa6y+
8Vkf7t9zf77MBRD6mP5GNh7uKge/Z3/mzT+Vtpc/lrZXL9i2kT/w9u/tPqD3
S1CBfquBx29MHeQ3JR3lvZIO8mtef5fe4fZ3ini9qCNf692iTvx6v1PUUd4G
mre4/e2iTu7c0JmbeVXeKuwov6K3Cjs1YqM3/6qwk/yqgJsLOshbBR0bydsF
nfgm387no/L5Avl6Lex32DaWd3n73Tz+8Lz2mrv8Jq+92zvy21z0MrWV93n5
Af2e/pDTTj5Emj/Sn+gv9FF2W/kr/S0LlVDm7/RP+oQ+pX/T55mMPvRlBhrR
TPoGeb5LbyWzaDbNpXn0Y1ormZ+GRLQoFYWQZ1mKl6yglSktZHUyCtF62kCb
khhzUGdrYnPZTjtRZ3cCAtH+eA85SIfoCOoci0MgOoU4Z9DmHF1AnIt0+Trj
zTUEutZMrl9FoMsIdLG5xF1An/NeEn+2pSScaSWJp1pLIvIkIU/ysbaScqSd
pCJP2iEEOoA+yJOxD4H2dJKs3eiDPDk7ukgu8uQjTwHyFG5GH+QpRp4S5ClF
njLkKV+DPshTiTxVK3oYeW4v62ntGTNH7l0eDqzy/GjJU2PLc/bv3rLy/Qjn
uPIH7iV//LS5fobr5b7lk3p4BHjkI8D5C/0JcP6o8Eyy4ZlUD4/rOGPgAZxf
KjwPW/C8pvA84oRHXgA4xhlhnBHgkejHRIBHIh4XseGpC7XhCbLx8Se/J6TW
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
3glvLGDvHu+GxewDtuxYV3zGvuQi/+1RjgxHu+DHo52xjm06wpHhSCdsPyre
iNcR+451RBxLYEfYCcJxkvdPPtIVKYkE4jCBSPDFxUME4hCBOEQgDhKIg48i
izjkEoeC+MdRzFFBAmI/geCoUL1XBuK2AII43CUOAoi/7yIQxOG/dspnnfp9
R8uogJ+UAwrNowJxWE8c1hGHNcRhNXH4kTisUkaFB4H4SgBBHL4gDJ8LIDTy
qPAxcVimU0YFvQzEEsKwmCgsYu8ShYUmBQgFBzEqzLXIQMwhBrPZLPa6VQHC
1haIWDcQ9hYgJrQAYZfmBXsrIBx/mhcckgzt28og3obn7KC8d0KmwCGdHd1T
XHiJ/+B+pwH/EQ4o0QLxOiaHODDxL4cd/xTZ7cSA34QSeHgrFtjwi9J9q5UW
WGkB4/rfxCQHpCy0QLyjjBLwIevNZtSxWkYKPFFtEi85rTKZUMkqjEaUi7j+
lzHJAYPRkxCIy9dIFOgFBXrkszyWq9UjRyv2zGRz60MLdLRAiwyWzm6ptbRA
i5tqtwUaXGNXAzW0QIPL7FKgWlig5h/wQoAa50X+alrAm8/6qz26EgM1KZA7
w5L91DjNTo1kI9SkQI0kdmKEuLLD8eFqjz44NlxNBtQ4opQ4VE0KNEhgh4Zo
cJDFD9aQAg0OsP2D2EANLdDQAo1swQDFAradHmxjK+xh0gKw0hyCrX21tIA+
sI29dbRARwt0tEBPC/R0QI8f2dznAu8rY4F0fhB5n0IH98W92+w46iN78KhM
RpuXLHnI78xWXOj+sNPWNl9XTzd7PAKKVnL938j4hL1+M7Siui1sK7S1P3GZ
rv2ZK3vtNv6X19Vuh66Gq3rNTi79O3lz9S5xc9Vutgd6UeUe8bLTvWKzj5uK
/eIFseX7icB+6VfWDvqy/R5iuw+6Uil+pCvh/XXFez2GQVu8l+2Btmg328V2
sh3QFIpoRSGtKPwJ6oKtjE4UbIKqgD7kr+OTftqQTxvyOUzkc5DIpw35HCTy
v4FfHoeIPA4ReZ9z/ecQkbsMw3M5QOS+zxZjRM57jC7k0IXst+CfPQ+BWW9C
lfUG1Fmzoc18HbqMGTBkTIcxPRamW5NhTouBNW08bDejYL8xFuP2xmD64leV
v74PMOHn8QhPcSHkkgkhF/UIvaBB6PkAhJ3zQ9jZYQhPHYyIlAGIONMPo8/0
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
723kyuRMgFyXAAUToGACFEgjqUxACkkmSwODMXXCBOywctQlQMUEqJgANaJJ
1CdqJkCN7czAto8ssPCfcrzV/62emz9i219s/kir+X/1SkCvC9aN1Cag54Wz
e+n/ww9NYJefQ91T8Weo+DMd5AhV30no91PHyHFyAppTJ+l5Sv3kaeH6M3qv
0PVnYXX8HCwFx85zVX8e1p3kyAVyEdYdF7mqv8SF/GXK/jKs2y9Bc+gSbNrI
wYscDsSDdesF8WbjA+ehEbScE3AoaDmrlwurZnaimZ1oPgXL5hOwaD5OL7MF
LUfp5U5+7IC6uZ0cJAdIMyyaGvh1daSGf6aKlNPtkXT9HO3buebN5ucbYV/N
lX9zFkknKfz6RBJPYvh96P/mrVA1b4Kymf5vpv+b6P8m+r+JE0DjQsgavodJ
A1f/9XNhXDcTxvu/gEntNJjWfg6zmkkwr54ARfU4qKrGQF0xEpbl4bAqHQ7r
kiBoivxhU+gD230esNvrCvt8J9jn2cFhlwaOuRZwzFHAKUsG5wwjOKcPhUva
R3BJeQ+uye/ALelv8Ex8Bb4JQxCcMBjh8YMxOn4QxpPJcQMxlXxJ5sbT/Ql0
f0J/LE2k+5Po/uR+2JTSF9tT6X6SkNYHKWxABslO74+d6XR/+iAUZAxBSQbd
n/EyqjJeQW36a6hPfx2N7E5L2t/QRu93pL2Jo2lv4SS9f5bev0DvX6Hzr3cd
7k3vvf0j7q/Qvf0jvC+t+un9eHo/zki36td5X1r167y/ld7f8syqX7h/rc77
q3Tel1b9Ou8vpvcX0fk/0PkLyHw6/3tnrffn6bz/lfC+q9b7s9y03p+h8/60
Lve7P3W/8P7ELvfT9+O6vE9GkZHiKqQR0nL/qfqF+Kl9/naIR5f6e5vf/Rnz
SyeHugn9SxcteqH7SqjSzay7EJtE4p6Y8HZiC5zYAnbAy5EtcGQLHEULxH6Q
pwN78YunA34mPwmkGNgzBgyBhB0ekYcedmyBhx3/9ff56T0PW9xzZwvIHQkb
3Ca33G30cdPDhv+gGx5sgTtbQK66a/Rxxd1a71+47M4UuFvhIrngJmAKyDly
lpxxtcBpcoqcdBGocYIcJ8fIUdLpwhQ4MwXkMGl3UuIQaXNkBkirowKtDkwB
aWESmu3laCKNdkyBnUhAva05q1ZnY479pFagYQpItbW5PqqszfX+jkorM1QI
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
l6yHvJgr/iKu+AuXwHTfDzDZ8x2M87+GUR7Nn/sFhmZPwScZE/Fx2hh8lDIS
HyeF4dOEYAyLC4BhjA+Mozxgut0Zsq32MN+igXyTJRQblFCuN4NqrTHUa4ZC
vepDWKx8D5Yr3obVitdgu3wInJcPgufygfAnw5cPQMQKmn8lzU/7T6X9v1zT
D1+t64vvN/TF4s19sIrm30Dzb43sg6iovoiL7oek6P5IixmIrJjB2Bk7BHvi
uNKP50qf5q9O5Eo/6Q20JP0NbUl/R0fSWziaxJV+0js4S+tfpPWv0fq3aP37
qU9vMfNb1xvGep3tqbN+PK0fR+vH0voxXdZXcaVP629/xvqbaP2NtP4GWn8d
rb/mWevT+Etd/wfre+qsTxvP8tJZn6b+gkzzfsb6PrQ+meDz/2J9rfHFWZ7S
cv+p8iXdP7vc1/+fnC8t9MWXCtMHOoqSBNL0gZLpJf4IklxPu/fFb8Fc5JNf
aHaBZPkQW308CRH3/3pMsf8oBD+8Cw0ekgfDxTHb+3zsi3s0+91QWj7USuI2
uRVqpY+boZb6uBFqqTcE10Np+DALiavkCrlMLoWpcVEQqsIFcp6cI2dDxaUh
zvDxZZwO5QJ/uECBk+QEOT5cjmMhtDzpJEdIR4g5OoJpedJODgWLg7VtQWIH
/2CgGVoDZThAWgJkaA4QO/hN/uK0zUZ/rvL9TFGvo86Xnie1PgKu4mu8TfQM
UO1lgipS6UnPe9DzpIy+L6PvS92MUeJKXOh6UkTfF9D3++j7vfT9Hnt6nq7f
Tdfn0fW76PqddH0uXZ9jaYhsC3qers+g69Pp+jQ5PU/fLwsKlC4lEWlrTc8b
8gVgRM8b0fNGiKHrow2NESl53gSbhxrBQneP4h5L/G6bDxZP9ReXhuir1f2r
2i/qdVfKKdJzbwvdi02f515PWiEPhn/sVUnxI3WKH0XFj+pSPPU+mnofHUdi
+NPPxfyY7WQrod7HU+8T5mTr9D4QE76qxPgF5zB+GV85S4GJS/gqotYnL+Sr
6geygMyn8Sd/D71dmPTdX5j43R+Y8O3vGP/tbxg37xeMnfczRs97gpHf/ojw
7x5i+PcPELLgHoJ/uI3gRTcRtOQ6ApbR+Cto/FU0/joafyONv5XG30Hjx5yE
Z8IJuKccg2taJ5wzO+CY3Q67XYdgI9b7hQehKmmltYX1GyHnel/Rvd4vpdW5
3q/c273Po6rKJhkkhc8nQFUeA2VZJOeFrTQ+1/tFa2FesBJme5dCtmchTHd/
D5O8b2C0cw4MsmdgaOYUfJo2CR+njMVHSTR+Qhg+iQvG0Bh/DIvyhuF2dxhv
dYLpJjvINmpgtt4C8nUKKNbIoFxtBNXKT6Fe/j7Uy96FxbK/w3Lpy7BdMhjO
SwbBaymNT4YvpfGX9cfY5TT+iv6YtqofZq7uh6/X9sUCGn8pjb+Gxt9E42+P
7ItoGj8+qj+SowcgPXoQsmOGIC/2JeyLewUl8VznJ3CdT+M30fattH170pvo
pPGP0/hnaHyxr3M1ufe+jvYtwto70/eyfZLYzjei7U10tjfX2j6ato/qYftt
Xban6TfR9Btp+g00/Tqafg1Nv4qmX/ms7d10tnfX2d5DZ3tK9ythe68etvfW
2n76s7b30dp+YpftyTif3rYfyc8jyAgfYXp9SfViO8dbt6UjLfVDvF4Qqhen
7HhKW/i93h0sIbleMr6r9rR+8TFAeF67wA9w6bnADxTn7gQ6im8ouT+I7id/
Bknexx/BYmX/e7C4MtxvIXR/iJ3ELyG2+Jn8JBguNnWeDBfXgHgcygDoeBRq
o4+HYRo680GYBvfDrHFPx90wul8QTv+H0/23wi350r4Zbokb5LoE9U+ukisS
alwml8LV+rgYrhJn84SzAOFKnCNnw5UMQJiS3+V0mAKnyEkJOU6Q4+RYKANA
OkPNcSTUXB8dw8355YeH0//kUIgZ2sjBYBlaBUH0P2kJMkVzENfxTYGmQv8B
pmjQUe9P/QuYgf2k1lfo31fSvw/17039C7yMUeFpzAQYo4yUulP9TECxwNUI
RS5GKCQFzkbY52SEPY7UvwP1zwzkMQO7bA2x08YQuRpD5FhT/0xAFhOQqab+
lQZIUxggycIM88PDpE2eGCsVEkwN+GowpP4Ndfo3QpShESKZgB0GxljxsSGG
DfyX9Oav57xBuGnOnDldd5MZpBW/tHOjg//jS88d0uvxfy/26oSISPepP1Ol
x78978qj3Z1QmvojOOqm1IbRbMNoLv1Hd7WBS/8x0U/bMJZL//FLjmHi3K4u
VGLinH2YyC5MYhc+YxM+ZxOmsAlT2YTpbML077kK+46vz3nkG/IVP5/L5+f+
helz/sC02b9j6uzfyC/4fNbP+GzWE0ya9RgTZj/E2Dn3MWruPUR8dRfh39zG
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
b8AE5A8Yh3xqP3/QaORL2h9B7Q9DAbVfMGwwCmTtF1L7hWPJBOp+EnU/lbqn
9hXUvnJOHyipfSW1r5S1X7yMrOiFklU9UbKGUPslsvZLN5Ot3VC6nVD7pbu6
oozaL6P2yywItV92gAjtHyZHqf1jf6Oc67Vyzv/lp8jpDiin8sup/HJrQuWX
2xK7tiin8sup/HIqv9yZuLREuVsLlFP55VR+OZVf7kXtezdBmQ/V70vtk2Lq
vtif6wCiCOA6IIDqD2yIQlJA1ecLgqn+EGqfqs8JqV8F2aH11Gh+2j6Tts8g
6eG0fnhdpEXQ/BF18J18E0TS/JG18YV8juIyQKIWPpIP0VR/dE28I2/JG4ka
eE1ekZfkRTS1T55Fm+JptLj484QfjfA42gSPyEPyINoY98m9KGpfwgh3yG1y
i9yMNMKNSENcJ6kR9H6EAa5GGPDvdSXcQE0Ll8MNkBKmj0vkYqg+LghC9JFM
koL1qiAxWI+yTwjSQ7wK/qVxgXpqnXA+QA+x/ipiGIJoga8uogQ+uogUeOsi
wksX4QJPXYR5EHddhLrpIdRVDyEueggWOOshyIk46iHQgdjpIYAt8Lch1vrw
syJsge8ZA3hZNsCO9dOxnbgebgWvo4bwOmIIT7bAgy3wYAvc2QK3PYQtcGUL
XLaRLcZw3mQCC7PqqFXDRHRAPkvh9ycVKodANr+4WPRzlzxP6WNmxTWmit1X
hfnFWxT4d1RX9EpNRN9XjzDs2iWMNxyCySbzMY3Wn9LqmGT9iSPDMHbRJYzc
cxPDHe5jcMQtdPHbj8G30mj7dAy/nkHbZ2I0bT/2krB9LsYn5mFifD4mnaft
o2n7SAWmhdP2IbR9EId7/zLM9KXtvWh5d+JKnGl4B2JHrCk0Gn/uaZqexp93
nLMtjb+Qxl9M4y+l8Zfv45C/l0O+OYf8nRzyt3PIrzD+Js7GNP5OGn8Xjb9b
Nr7FUkqUxj9A4x+k8Q/Jxj86k7an8Y9PURnfUhxmP8kLjWY0Q7OZddFylgna
zdbBv7R+X1p/yHwNjFmkjinL1DFnpTqWrlM9b7Bjuzr2mWviGK1/ltZ3+i/r
n65s/Xoq659rggzZ+oWn2krXlMtpFRyi9ffR+rtp/Z29+c3R+mtp/eW0/gJa
fzatP3U4MG4UMHICMHQ6MGAuFD0X4hOr/YHD/kcO+x857H9q6ELTO9L09rS8
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
USSS3o8g4bHqCKPzQ2M0EBrNCT5KA8FRGvwegiI11LQQGKFOOMJz6A8I04C/
IJReJ74hTINvsAbT6EPtewfKUP3eVL+3nzq8BL7q8PQh3sRLHR6exIO4a8Dd
lbhows1ZEyeODsCKFQtgc7oDXGyrwcW6GpyttOF8VhtOp3XgZKkDR6rf8bgu
HKh+MSjaH9CHnQXZYwDbXQY4u7VmhfblE+5/HkUjvUMre9/w1wX9ijdwxSO/
Ku+/qfxpM0+LLXT+sJ/OnyKc30M4P5jOj8fgE8kY4BeNcUFvJddPp+tnRNDz
YXRjhesDiJ/sek963v3XWG/Gsd7Mjo7nWD/vHOFYP59j/YKT1NhxleuXHgGW
HwJWcqxfTd+vpe/X7+F0y7F+M8f6rRzrt9H3O+j7XfS9OX2/h77fS9/vo+/3
y74/VOH7+Xz5mtH1c/gSpu9PTpd9P4kv4wny9ZuxnNRk3zvT9270vQd9702d
Lh/rjXpTW9D59dByphHaz6qG7nR+v7kaGErvj12ojql0/vxVVbFifVVs2qKO
3XT+of+L88XhFeK4VJXz6+LlWTr/LJ1/pgnShfNPtpHOmSo+0lF6/gd76aJd
dNQ2emsdfbaMzp9H58+g8ycPBUbzix02AWUDp0PRZy4+tt5P33vS8270vAtx
pOuF723pemt6/iw5zZH+pOT77MZH6PtDyGl6gL7fh9yWFvT9HuS1MUde253I
o+/z229FfgeV7ws6bUBB53UokH1f+O9KFHZdjqJuS1FE3xf1WISingvoevq+
jxm/pjlQ9J1VyfdToRw4GcpBE8kEyffF9H0xfV88bCSKhw9H8YihZDBKRg5E
yWiV70snqnxfNo3M7Icy+r5M+H4+XS/5XlznquT7tfT9eiJdv+lZ6fpNd9X1
G3GNTIz14q6nn2N9F9WzcNJY31m1MbcY68+Scx1VY70tsaPzHdqpxnrnSmO9
O/Gk773oex/63pe+92smu76pcD1N30R4nsoPaSwu51D1oObLOc6XUfWlVH1J
ZMMqKKbl20MZ3QCKGE73tHxhLG1/nrYXxNH2JJeWz6XhcxLqIDuRtieZtHxG
kqAW0pNrIY38uEDbX6iJb+TrxRr4Qj4LLlXHJ0FKdXxMMcWHy6Z4f9kE78jb
y8Z4Q16TV4IrRnhJXlwxxHPyjDy9YoAn5PEVfTwiD6/o4cEVvSq4f0VPrTXu
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
XrwvWxon9sYsiafyqXplgthCX5FYT60hipLqojC5LgoucLSn5/MuCmojl57P
SaHvSdZl+p5k0PPp9HwaHf9DcI2+J99S6XvyJZW+v07fX6fvb9D3N4zx4aYx
3t80wjvy9pYh3pDXtwzw6pbw/Mvb+mrd8OK2Pp7f1sMz8vS2Lp7coe//X8rO
Ajyqa3v7c5EYlJYqpQUiEFyTEPcQJGg8wS24S3CCBxJI8OBW3N1dige3Qiml
tMUd4ut7t5w550wm6f/r86zeS0j3zOy91u9995pz9rlcgm4grl+2oWuXrekq
i3QruoJIT7eky4hLiIvpFnThMliPOHsJrEecBvNPQQNOXLCk44ijsPxHEIfB
/UOIA+D+fsQ+cH8PmL8bsQvc34HYDu5vQ2w9aUVbTljRpuNWtBHs3wDurwfz
1yHWHLGi1YfB+EOIg1a0CrESzF+x34qWI5btA+P3WtGSPVa0eI9VEVq02wrT
vxDoX7CTBz562g72s7TtVjR/G7C7jRF/3lYrEH/uFiuau9mK5oD8czaB+HM2
MiGYswF/BPVns1iHH89ea2koS7PX4I+rEQD/bIA/dVlZGjQshvr0b08pCyvR
HIB/DsA/F4Z/LuA/F+CftwCRVozmzcP/Av5zZyFSMfx0vGqSNc1JtOFPkJ2Z
8BVVq1CGgb+8mQs2Jfi/N9/OX2kC/igJ/vAq0yjCYzmFhe6g5gOPUdBC+P3+
8RSZ9pTarwaDViFWoB7h7zuaAL+T7OF0lj2cuOmaHg78fR8Avx/8/YAJEvjM
3wP6wwD9EYD+yOEAfrzw9wnw9+Pg7yfA308E9CcD+lN6on67A/pxAH4X1HAn
1d+ntkYdx8C2MejLPs58QH8BoL8Y0F8G6K8A9FcB+msA/XWNYdMA/c2A/lZY
6O2A/s7AXNodkE17/bPILSyMKkTaA/w/UtXYL6heGyvyhN8PAPgbdyhOoV2L
U5uexcSdtoOL470XpwkM/AnYlU38gt9NtwHg36EB//lUgH+mCfhnMPBXF+Cf
BPCPA5BGu4o2NINbN1/hdyODiFo24n75c0AEP5XmSbUEAH8ZYL8YsF+ImA/Y
A/p2swF7Bv0Z9MEuGdCfRh8dEgH9yfSp8kT6VGU8fcJ/+6nGGEB/FKA/gj7X
GUYZgH5GvSGUCehnugwA8AF9V0DfDdCHx8/y6E5ZgH6WV1fK9u5M2T4dKRvQ
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
SZFPaXYbk3qOEPW8CCq+tJXeyK/5LyOPVNpvouLHfVk9Z9NppuKeTMUzoOKf
oeIfUc8fUM/voeLvNCr+im7DzN+Fmb8HM3/f4V96YP83/W73F/2Bmn5k95A6
N42jn8Mqkn3kj1QtuiQ5xYojexvJulbObhw4WFPX41DXE1HXUzR1nWxa1w70
JBF1PakGvRmPuh7jRO+H1KcPfdzpY1fUdRsf+hzuRxktGtBzvxb0l1s0P143
t9okXtN5qOm8WmOh4gXV9EB9TXuhpr17yAaAmZoOaiNquoGmphtjcZpo+oq8
ASCV3NgAaCCe99omSJh5VtPczAdIFWdm3l+o+GBZ00zFR/qoKj7eS9T0FNZT
RCS5a1QcMdtUxRFLUdPLUdMrUdO/oKbXoKbXoqbXo6Y3VldVfLtU8V0aFd9n
ouKH7dgFKUf4RStKTct6Tl/2Ax1K+ZamtvnOoPneQdsBFC37osqFtPzLRVFX
pfOVbvl6luQ/0IJCp1pTm3klqB1KtsNslC5KtitKthtse3S8BVW3K6HciCef
mKz/XlPWbTVRt6bfAMwwqduo7yJRt/2ojecGig09QKEj9h5tdeSGuN56h/Kt
qLZu+V15zhVrUULzOzQvSrPpVhw3YkVB+qtt1Gkc9wEz+nsK9XpG6u85uO7z
rkx/P9Jl1OsV1OvVOu+gv6jXGq81+vucfqsI/YXr/t2e6e9j1Osj1Ovv9Kfd
fZobMJN+CqtEdhE/UdUo8c0lO3O1IWo2lNUsO3avn6jZ0f9Vs8mo2WRZs9NQ
s1Mq07OJqNlxdej9KNTsYNRsb9RsZy/6GIuaDfOnjyHB9K93KP1ZP5bXa14N
Ua+EeqU6o4nqjkStol6dUa8umnp1Zw071Kunab3Khh2r10BtvQKmwYBpw0ip
v6GiXkNaiGcvKw27Fg01m2/5jSSv1yCN65b6y+qV6y9z3YhhvkJ/meseixjH
XDdikqxXrr/uev3l11O4mNFfxCrU62rU69paJvqLet1WReO4K0ntrShr1UR/
ZZ3eWfUjHZrxHaV1/dFMefohxI1Nxmuc2GE28liDL/OVZ7l6xSlgMHbPc0tQ
6zkoz1koz5k21CnVmrrMsKYqDlbKRfmGL9SyN363J8uyuihL083ydE1ZhpZq
wMsywrY/tfHaSLHhB6nV6D0pbf76/IVepzlPhO1fx8vSpWJ1SmiSXqgVNied
u5AFe4LVUjwYwKQTM+mXB+nMVaXTQyudn+gS7HC6E0oR0nm99ltI5xu6Vf01
pPMVpPMFpPM5SvEppPMflOITKZ1/0J+2D+ix7W/0l+0d2umxnsqGOpJt+M9U
OUp8daeUJHtUeRtZkgNkSbKjKVJRkgtRkr/kK8myoiSTUJJTUZKTq9CzCSjJ
hDr0bgRKciBKspc7feiIkozxoU+hAfQ2uBE98Qynf+pB+lCOVAvlCDvMy7Ee
K8fhohzroxxdUY5uSjkqvTBNOfqhHP1RjgEdRTkGSTtsWo5NUI4hLdVyZM9L
bI7FaImFCFU2wQ30m2BuhwOFHe4tpXOALEdTO6yVzsmeqh3m0ummSqe2D1aQ
dK7TSifKcSvKcTvKcaej3gobZdOBl+Kd5WXpENYlLe576uz6TRHzJbhCZLTS
CeYKJsTnC6UELyolWCfUmhqNtqKIFBtqjdJrl2pDUeOtqE4dfj8Mb4bJG4V0
33vJ0qspSk95EhH7X/ZySdrS+5KVXgRKbwC19d5MsRGHqVXC7oT2H4tppNbY
Exelt5LfE+NaqSpNCblodKq83BDrZb/pv5yqUD+AyzcP6pcr1S+Lzkr1u2Ci
ftek+t2E+t2u9grq95LuOb6g3+BWH8Ct/g63+tD+L5Tbn1C+h/TY7gHK7R49
Qcn9bXuTTjvtoh9Dq1CF8PLkGFma6qDsPNtZUjAru67sEMJi/BBCVnajhhdc
dsfzlV1F+kuW3euxdentcGd6N8CV3vfwoA8dUHZRKLtWAfQqsAn96RZJr2tj
h4kdKMGtkuJWnVFyLvEouSGi5NwHSPVDyXmh5Lx7otxMd6Cs5NrLkoMCBsdK
t4qSaxwu1Q+L0xSL0qypxq02VN2q6Q60S6B0q5qS427VT/acEKMUt+qtVz+t
W+Xq56rpOSEWOouSM6d+61FyG1Fym6qr6rcTbnUXSm6Pqn5vt9jRmdQfaXGv
76izu+wVFdVuIA1rRNqyRFfuzZUPXbdh5cd+l3+N9HMtG3KPs6Sm4+EyUVcR
k62pVm3rh6qa6b4JEl/iGGqJklIe9sL6Qkzspikl5czULJCivkdJ2Q2mtr5b
KTbqCLWcuLN/XMmy4n2sUEpKe99wglLzM5qdUsvITBPHvIlkykVSuXKgXNkw
kZkooww6D+W6+J/K9RJlxJQLpWSPUrL7G8r1GKX0CGX0O8roN5TRXZTRLfrH
9gb9a3uVztXbRT+0qkrlw2ypUuQ3XMXYU9gbyCewK+XUf5CZcppcSDklVqQn
k1BO42uKchqGcuqPcurmQe/bedGHCJRTy0B67t+U/qgfTZ9qjVBLyWgkUUqu
KCW3QZpSUowkSskXpeRnuvFDKTUw08xRNn5G5cKiNMeCtMCCtEIphQWr3+K0
lRs/biQDpZFE9PXP377lRtJHGklZSlrlYkaSKxdiNkppLkppPmIBSmmRs2ok
uXIh1tQWyrVBlpGpcu12pDsLy9OhyWUorf1PcgNX9KjMPf7PJpH4LLuNX0uI
TomNrcHEHtZqVorCUktQqynWVKO+hXIZveh/6B+UJGuntqgd0w3aVE3thMna
ibIfSu38t1NszDFqOWVHyyENmov3sdjcLZodlJqeHrLTWC9blXpRnB6W6ACW
51Cg4vRYveTRSS49OZCebEhPFp1HzVx0/Yx6+UjpGum5Aem5JaXnriI9Ds9R
L08hPXq3J6TnNyk9rGau01PbK4jL9LjSafq+VTUqF2aHuvmW6sSIJ1kHoW5a
dJWHIfYVdTMSdcOeecQfZzrBtG7K8Lq5xuvGVlc3b1jdDHWmt31d6V0c6qYt
6ibclz42D6J/fVvQ786x+WvG6PbM1IxPD7Vm/FEzAXLzFdROSg9qpqGZmmmK
mmmmdXuNRM2w5yxxt9fAxO0pzU9ZMwP8hfQM9RPSwxolo32E9HC3h5jiKaUH
MQM1k4p6mYWY42pSL4hl9YT0rDQjPZuZ9FSjt2sc6czUnymtM1xc/dJmXBxL
8+0izZU2H9/wfC0SWacyP1UrRcGjrKiaq7FCxH5LfwezrJA6okJM90qJskJW
1KwqKyScoh1GUFv/HRTb9jC1TNrmN3boUPGs4Xnmbr0zXpg9PnBBwa1DTPpR
Zsgw2SeUquBKkgUlyaQLbhl0qf5nSkdlXHH6YFSSm1JJ7qAy7qEyfnOEklR8
Rr/DlD20V5VEmLL79JfdXVTGbW7K/rG9xivjme0lem57AXGWOjaNop9DHahi
hKgOt7aWFKipDnYoUD9tdSQUVh3lNNVRVVTHmLr0ZogLve3jRu+6oDpae9P7
MD9616QBPfEKpcd1keH1Rsl9ULx+H+TRX2PKlMow3Qe111QGM2XRGlMWqjdl
zUOkkjSSShIsW4gNZEsiSG/K+gTIfZCsjHjECGnKxvpolASRiMqYhpiOykhx
1yiJrIyFqIzFqIqlMGXLURkr62mUBJWxoSY9ml+JDo0tR2mtf9Z8MZcgU4ox
ebeasyzjlBubxNU0lkw2UpTk+658KTbGA/lfy8vz9A/akJVQT4xqejDLZPE7
vBLCS/nzSoipOJraBeyi2A4HqcWMrfI6npmF3mk1yHMMbfR/LURBuxfRiMJp
pP+vEIVzMFLn3YQoXHb5BFH4SFfrfaDrdd5DFN7SLaT/HY0o3K8oROGh3T9I
/SdyPwJRsM0vCsxIMVF4ZnsRqX+OXtj+Si9tT1GXJjH0U2hFlMB3/DIaVgIB
KIHmXS2M52KxEhhhWgLYp2xDCeyXJXBelsC9aZoSGIcSGF2P3gxGCfR2o7ed
POhdDEog1J9eBTekP93D6UXd3mb2JEr691H3JFwUkP7+mvQPkkaKi8J/pX8T
8XBVoygES1FAdEDqdw6SRipQigKiv7/akeNGylcjCt4aUfAUoqCkvyIK8+rL
/YiLFAWk/wqk/ioIw+o6lD6lIh0abkvDAn5QTJKW/IaDImt1Gwxxu42FrUFj
kr75tpRy7bvYjxu71tpEl7eTmx4rPUmb6F/6IdHDqLXjROzTdlNMlwPUYuYW
eUF9srkbcdgb/Y29iXiveNru+5aOYN6O+bPkJtXxeCmOR8N250+c7dfqvkeC
v6ObSPDbNZDgVV/Tvcqv6H6lF9hsg+32gu2PsOH+k+8SHiK57yO57yG5byO5
byK5FbZf5mx/Aba/tD1Dr2xP0mvb45QWOEpN8mhrcpVJ3gxJHt1DHDjBDn8b
McyCJrInP/5fknxKJXoysSo9V5J8kAu96Ykk7+BJ76KQ5C396XlAY3roGskf
x/V/3inkcz1tVdfTCK6nMVxPE5OdgsJ25npCkeARmgRvh+jI2B6k6XExtgeY
cT2IMTLBJyAmyQRnbE+Wroez3U1lu9H1OPEET59QmRa3LUed636rcTQpBvVb
12MiR5WLqrj3l8cEdDCod7cpuawckc4zTuays8hlU4M/0TSXf0AuV0mEvO2h
mO77HoYtPyALaIq52zdslYLqUCeG9ni9pRMA9CnvXOQvAO2RrfMmDNBXnD4i
fwWgb9Z6JwANf3IXO93fsNO9j53u78jhh8jhRwD0nwD0YwD6L+x0n9j9hvy9
g/y9hfy9gfy9ivxNR/5eRP6eR/6eRf6eRv6eQByjN7ZHaIVfAs9jh4jvRR63
sSR/5HFTbR4PZCfaqnmcNl6fxycKzONa9GZUPXo9EHncHXnc3pPeRrI8DqB/
/ZrSfeeY/6M/Kci5x5rkMAO0dO7aHOb+ROZwtPQnSg53DRKAVvwJA/RAfz2g
tf5kosafJEl/kmoK6Pr0dlZdOjPckdIiy1Pn2t/JSwb0O9YzIht1lwXJZ7Pr
OqIyQ13UDNXeyD1Bk6ERX/pS5PetqE3VZGofvJdieu1Jj9xwTN4ePq6gOwB4
hnaqG067XP/mtoGT1S0TtiEDWSnIym0DyHqjNstKkLX6G2Tla2SlQtbnyMqn
9Acjq91fyMpHyMqHoOoDZOU9ZOVtZOVNZOV1ZOUVZOVlZCUj6zlJ1lOcrG9s
j9Jb28OIA7TXcwaVbVWJZ2dNZCc7p82/g8jOqB7iQIo+/z/ZOdWO/tBk5+uR
yM4B9el1nDu9aYvsDPehd80D6Yl3C3pUD3bATWsdNO1M3x6qdQiAdQg0Yx0a
wTo0LsQ6tFD2kw3NW4c4E+vAyDrI3wxZfYR14GT10pOVZSbI+irJiQ72qURp
rWxNeyd+7E/n1axTOoPKrbbGb8K5SRCZ6Coy0dTgjtNlog8ysSW1rZZK7Rvu
p+h+u47G7D4rqTyq0OvJQ6v60z6nx3TRuGdD9kku3pBcZLp+txp0vQqyz/El
PaiocPEf6Dq4aP9Yz0Xs2xgXn+q4eEly8VfORUXbGRff2h6kd7b76b3tXjpV
f47IwvAfjFnox7KwiwVFarJwGMtC7Jenj7UxycLvjVl4PUlm4WRk4YRq9IJl
4QhkYX9kYVdkYWsvehPmS6+bBNGfnq3omTM03APa7glt9+ojuajV9oIyMEbN
wCbIwBBkYFNNBrZootd2xsXWJtreLVC/bzNyUdm3+Uou+ghtn4xI9DJy8el4
JzrTryqlNbczaXZzL5ouEkx3uYXEn64DJ5POTSSd6X2WgqaWEbPrVKaoUh48
6drVmEPtGx+g6EE7UrrdfirPXYtXWhPKLRBK0rFSoPBqPhx1V7BDuiZ3SDeB
uttA3R2g7p4GdYoAK6gTIgwTaaeYyDvcRD6FidSi7iVQ98qIuhNG1L0D6t7Z
7kOy7aEPtjvpRr2F9GMrR5FwUdb8RDOWcCEs4bqLu7XZOTzD4i1oQiEJd8Ek
4f5mCZdQm14PR8L1Q8J1dqfXMUi4Vn70MjiYHrph9+SCxPIC6ryRbD69JOrw
M38kW4AU4SCIcAOIcHAbM6gLU0W4mRkR5k2CYIm6BqJJoIhwr0C5SwpQUTfM
T6ButBZ13hx1T0e70Jle1SktxMF0t8PW1XBDZJPuigFbVXSNHSyZYe6qwGp9
3FiRYR2mVZMZ9gMyrOYC6tDkEEUN3ZbS9fe/5SHbA0yviTdeORdR3YOOVn+A
jHpPt+S2hOFLZNRLZNQLZNQzZJTEl9bWYWvyt+3dAm3dK9i619LWvYGtewt8
vbM9hGzaj2zai9hFH+12ILbRZedZPLPsw8sYM8u3vUlmDcifWaunlOaZdQCZ
dTJfZjmqmTXMiV73rU+vOiGzopFZ2LI8DWhE910i6ZM725b01mRVQQJqklUK
vsztvUMbqVuT1sESXw00+ApUtyYDtW0nPx2+3o50p4Mdq1FaI/OZdFdkje6L
b/mMbd05ZDKTPNRMUv4TloRjtJn0pTtFlmlF7WsvpQ5Nj1DUiC1xQ0p9I89k
72N6fbXxWq7Imq60t8qvyB4wqQoyiIufyqRHYJIQP2m/wKS/7czZr0saJv2K
7DmF7DmB7FGZ9B5M+gAmfQSTPtlup092W+iz3Sa6V2c+lTFmkbw7gj0Hu7MF
RbAs6i1Ok4j/zyz6CVlUnu4lKllUnV6MRRbFO9GrPsiijh70ChsGlkVPfEPo
N+coymDn1PiYbG4DFSYhg4KRQQ0hgI1MNrecScigZsig5mYEkDGJNy4Zkxro
mdTHPJPeDvGk4+1rUlqwA3Wu/INi8nWZ80Bkia7jUkHPJW3meKlJZTzgZLRJ
2kSxtKm7kjo0O0qRYza1HO/mojz8S3cJoLjgoTNPG+/yDrTDcS894LDRO3UF
Nk8Am79tf0Oq3EGqCK/0DLB5Dti8AGxectj8KveQJ5Eux3Wwec9hs5vD5hNg
8xnpkmG3EbGO/qyFlGlZGSnzI9WQKcMuq+cpI+/JVVJm/EgrSv7PlLGnR5Mc
6R+ZMq+GImV6u9Kr9kiZcG963SyAHns1p3tO0WZgU4iEab1SM0hYc0hYixAN
bBS3rpEw7tYRPSRsFLc+2J/D5n63+pQWWJE6OxpTRDFCPEX+FGunfHPJ104+
x1l3rahMEW8BF1MjNFKXJW4U/WMYdai3hjq0OkyR4zb4JcXFKk8INXNFWjt+
WYx3BTvaXXkbMuNfjYt+pJGhe8iM28iMm8iMa8iMK8gMxdyc5eYmP0gOSpDs
5iD5yEGyFdmxGZmxgTKRHVl2q+md4xKeIXZhIkOcNDdehGszZKjMkDHIkAkF
ZMg0JUMqiwwZgwwZggzpiQxphwwJ86GXIUH0yLMFMiTWvJNWQGLsMJhmhwRJ
S4CkFbIjTGaHWZAESZAEcpCkt3Gi4+G1Kc7xhyJmtmP/qMVs/IJOLp3uBBKZ
ED4iIUwv+hf3IVt0mCITIqZsJHV02kjtIw5Q5KR1FdQMM7lEKsZ4bPDeGmuw
/n9KIXkgheSOUUiegw4vQIeXoMMrSQdmRcT6H8PaH8HaMzoc4FbkI88BhQ6b
EYwO65EDaynL/hfKtl9JHxwX0Q8tqyAPylJ1lgcx4kJ9JQ/a9xJ37w/leWBJ
SQXkwUWZB7/JPPiX5cHoOvRqsDO96uFKL9t60MtQX3oW3ID+8GhFf7i0FQbX
LB2QA41NxMRIByUHGsm9fENJh+B8dHiE3DvUojZ1dvhekqAYOTk5LXNzc2NV
zxb3mVhM06+kftYvP2eEXH5f1WywjbuyuxmuW35Xiv0pmjq6bKH2MXspInGt
rVhqZflZrimX87D7RvkXwH95n0DJ38eS39UIglL2l7DsF6T7PIMlVwThKJb9
sFzyfVjuPVjuXYjtXBCYf8iwR9nbsyVfjViFZV9BOfbL6KNjmmbpS1C9GHEs
v3KPBl/6/gUv/UEs/SmTpf+TLf34GvRiFJZ+kDO97I6lb+NJL1v50r+B2PO4
s+u72XXYHVX/UKgoKP4hRF/20dKBKmUPB3qoSW1Kc3M0LrWDgwMFBQWlxMbG
8oc0m7EGssx1l2+J8zsEGvJ/wT5MrvPEyjUp6qv61PrnWOrkup3at939sPW8
7WJHHW7u0hPWPWf2hJZWH02PK6Rjba8bkf5SI/gq0o/xtRVI3y9LGmuLkv6M
ks7gSN+ItV2HWGMsaba2OfZLKNd+EWIBfY81tg37ybjG7LTuRh31azwEa8xO
6maYX1DAGt/ga+zA1/ipdo27udHLWKxxSz/6x78h/e6Kfa1n+/z+kJV0E5R0
CEq6aav8gs+uNuR7Vol1lPSZxk6UVt9RfqFMvr6+R8PDwxNGjx7NpvW9WD7d
FxGydHU7TrmkAWJJlVsx2a+wUYaaLGm7Ch2os/tOatdxZ3rbFbtFZ65lQUvK
vySeU6MvPSx/Ekt4iZP5tdwksjLNT+Z9ksw7ZZluxTJuApU3YAlFmbJlzLZf
jmVciiVczJcxz34+Yi5936KqWM7IElQ3Wixnw47iFg3jcg7Bco7QL+d27XIm
seWsQPf5clYRyzmyDr0ciOXsiuWMwXK2wDbArzHdrx9BL71Rsg1Rpo1Qpo1R
pk1QpiEo06amZapX5/RgVzrkV4/iykvlLc4ATI0bN142ZMgQBcKGz+qaGfd7
P6k/Y1TWrmOgeQUeItYxYpod1rG0C7W37USdPfdQuy7bjnbcdEicHBZi7st+
47FfU6u3oz/KH5aIPYW1O461O4p1Y4g9aILYHXLtUIb2rAzXY+3WYN1+4YjN
NpbhQqxbGuU5zCNymIOYRXEhAVjDn6ka1rAO1pAd/czXsOv/dQ1/VNdwigM9
Zms4Dms4oi69HOBCL7u40YtosYZ/+Tah31yi6AO76VxXhnL9mmH9mjc3Kuvv
wT60x70OTa1ibzBZNIqIiGDSxQstWwWk0sVm/18+AE13u6RctyBVOrUdn8Fi
3RrPqlCHor5xpg4OXaiL935q131LSt/Ld8WRTMEFfXfNe9gjq7agx+X3amqN
rdV+rJVwQSoyt4ha42ul1NoqrNMKrJOotTxWaw7zsU5zEbOJKs4kqpRCPdia
hbI1K2lcs+AO4oLwdnLNBmPNEgpZs0tYs5vKmk1ka1aTXgzHmvV3oRedsWaR
XvSiuT899m5K95yjKYPdVtgE6xWSH5tnPN0orUYVefoFUzq2PGwZlKv3xQM9
THq+cn10Wx25Pg3MS94g7fp8V486Voqjrr4HqG3vjSl9b9wWJ94EFPp9bG9H
P3pSfjvWRGtTdmJNthtriPGPSZm2hpiU5aKG8iBlrIbIXq0hqpiKdZlBVDmZ
r02F0HJUla1NlCU/NrjAtRmrX5tDWJvTfG1+5mvzYEpF+outTQLWZhjWpi/W
pqM7vYjA2mCf+8irGd11itEx8FFgAzrk6kqdy5YRJWNBHh4evGQ6dOjAJpPN
PZsiIWSqbhn7l/LRU/x3lB2HXJeGYl1Mb84YoFmXyB/qUqfK3amr32Fq2399
/xEf34qjR7wL/RYy2rYO/fHzGs6zz3ayRuyxFkaerZVrwWzFcl2NkJkaocrT
iaokEVWdSuMah8g1+YJqszVpbUEN2Jp00azJYP2arDFZk8tYk1vTbOWaVKWn
Y9ma1KMXferTiw5Yk3BvehESSH/IneUZNx9Kq17DoCxCjRo1lMJgk6qwS5xU
LiZc12SUj4zR+X65CI3EIphezt9fis6UMk4UWaYOda7ai+ICj1LbwWuDFgS7
VuZ/7V/oF3BR9jXpUbnlHE6Z9gxOG+TEa+G0DJPOJn4hJhyFwMVEM/GOmPjK
bOKnEVVPJKoxmSbxBShPVfgCWJF7a0v+yK2WXZQTVYrToP/jAvyuLMCYWvQi
HgvQGwvQHguArf2zxkH0EFu6I1Vb8W0sTBqfcGR+fhopDyvSunCZ+joXLkrE
0Ni8ZPQTs95/GKYusmxt6lKjN8UFH6U2w37xWxTrU0UPMmWPJvbbrvwrgqhK
VelxuUWYaJU4ykQrxCGe5SbEcRTEoSqY6GpTMdlTiGpOIqo1gVY2iKLycsJr
yQkPKmDCWZN2oTLhUzHhyd/TGUx4Oib8tpzwJ8qED8WE98SEYz/LJvxpwwb0
u1sobWnQlmUpm2QFL2KS5ZEFuhaXTG3dd31ykpuY5z7fnRqK80mO+hmTXAtF
0fgwtRm1Qt5B7WbuZCK1d17FkR6US8W0qvBgOUzm4OGogYcyrchhqjWRqPZ4
ojrjaENQDKa3gnF63WLF9LJHyLXr+R/Tm6SZ3qlsetllCdXo6WhM7xAnetED
09sG0xvqQ/8EBdN91/ANz4KH8tmUB2Tr+kPycifdLkPOZlPxB9Ov63srs1mh
JkWXq01d6/anuGYHqXXCMkMN/ncVC/wWwuvn7+mm7bj/IAASs0qyjgBUC4lZ
ewKfPaqXQOQ0hg4FtqPyrTCLEaWoppzFQDmL9dz/R+7e/yMf3yLkYPc/S/7x
S1C0iyWNbfIVpUWUoWv9qtKLwZgwbOxftPag59jYP/FvRPdcIloOqL/JoJmx
fF0V+dgE3UW8ctKaiT8o/RHl2sZemkmLgczFOQ2krqF7H3acvl7esmiuB2/L
J82z/Ld0oeKQ/48KlqlWFxNVbwyR82gil5GYsDZUDhNWmU1YpBW5YsLqNSxK
3/4sunZz586llStX0tGjR+natWv04sWLIvThwwdDKXry5Andvn2b/3jZsmWU
mppK3bt3p2YVrWlo/W/pdtu69AJbrectfemxbwgmMdJvntNJPoffmwGl/JnO
u8kJbG4elD01E9jari7F1R9MXSN3pXeev0neoGZ06poJ/J63JN1tv6Z7tYYW
UJ+J+vqsyzJsLDJMTBrVH07kOoyu+XXB5Nli8r6ksvWLyvYr7d+/n00Rn6aS
/N+WdPHiRUpMTIS9LM33LmxSmNe64xQlskoSTLfb/04lndE1yRlpoc6I9gKu
HkaqVac2Dtiaug+lrrE7jnZfuV3edmRs0moa9t8Yu3Rn68RJi1N4nZHzKMzC
CD4L5BZP5D6Ervl3pLJNyytfS1B6erpxGr7k/7agly9f0vr166l9+/bUqcK3
9BDW5mbdGP5f/KhSx2hZTM7K5qsoZ6CVSiLl2y32a93EDMSNdqhJbR2dqZtX
PHVtu23ZgH3H5G0lZcz1KTsY5Cb5kHNrfdHUyV80Yv3FpyaPwUSeA+mQZzjZ
VC5JHTt2/I5/2GL0999/E2hAMx3qnH3t3E3zIfPtK+Xn1F0gJZ4vYAjVw0Pp
0MRpVrpjFVfq5jOcunTamBJ/7pyhLv+7H5Rrqc02dVKq+xWa2+SG2nAfTOk1
29BiR19q/m0ZKm5fmkPh8ePHhu/5hyzKE7txye8OXq/SRiSy3ILptmXy4+nk
WX68MPOl3VUu41iHatSpmht18x9BXeLW95/47JG8J+JLcz0rP+XjTa/jJT+S
mqivnPvRHsdWNLWSi9JG5efAN2rU6Cr7b1q1alVGfqqkpKQ9BvmP9lPpNjXf
qAlrlEn5qcLVT6U9KLWL/FTDHCrB1XlQt6BR1LnXmqB1nuXkBfAlzHVwlE/1
MLtrL0qv1pG2V21GcT9XVEqNn2gfGxvL30URfmV90Zfsne/atYt/oB/kx7p7
9+4T3ceSfSjdNkHcvqW/FkF+rAg1exU5Z+vbWXys1iMrVqSutT2pW8PR1Knf
Uqcj8Q3ktdAWBTU4NOtwFHsZ1jhjLyo+hAV7EcV5sQevUXBwMNMd5fOEhIQ8
NPd5lFfjyfa1fum0nydKfB7T2uoofhw3opIDxdX1ou5NxlCnQYvq8x9bmusF
sMH5i8nZV56xzC8TkhtiZnj4iQasIpTyYYwwyKM1+SeQTXuduxU3tOmVUX6C
aPFWTbuFHcSPWydUs6PuTj7UrflY6hif5qpOj/L1jvKOdZsZcW17MT/5pujY
sWNs2r9Vp32DbtrLqyljNJHSpivo5jMh33SMGF77Nthft5fTPrqaA/Wojzfd
KoE6jpwrLtYrWpp5C0UZ5ZkM/NYO9vP79+8bSst3t2XLFpJTLd6drZq1WsMm
36D2lCOph4ZY9b/Q2tZ24scdJtasRD3d/ahb+OSLvWaslm9QOfSF/6mU/IjK
mrPEPXz4cCkpDfI9stiqvE17dXGMnki+R/aWjZtH+R7byDdj0u+XP265wMmR
enniPUYmHu2/cI259ygGt2bi/5uy0l27duWej73BkydPcoP34MEDQxH5xpm3
YX/HfgfclACKMGj+4T8S/Wi9nRF3/et5KT9MW/GuTdO4tfzxKY9q1NvHn+Ji
py4bvmW3/DCKL+J/EjAuloB/7ZGT/spgkI8wKs4+HwNIgnyPpY1vtLL6powE
lNnF0tnYnZdvVKaAKQOUhKnlW5v6+AdQXNuklIQjB829Uf6qst9iagO+UGfN
iCr5wu3V/0KbkuKFiz4c0rgRxXVM6p/yMF1e3aq/y4q/qug36KX5C/0va84T
NUgMKjsahQ4COUXTRzYPobiuSUG7algU/JJN9J+I54GmS2K0tfIlO4mX1N4F
xv46Si7SjLaRFNd9mt9eD+NLKhmmvmSI+Audpsm78XU+Ur5kZ/MrGilzYH63
WIrrnVTas9tV5SXZvJl9SZ3syE+p6/v8T7xkF/NrGSE/0f6xvSmuvzhKQ/OS
xozgLyk24kWVmeKfyNyZA/IlxZvNt28Pk+t2cdZwihs81fQljfrPX7KZnBIt
5c3dxC1fUjjxfOIaKueq/sOtFwdNma99SaUHbPqS+dBt7oZZ+ardzS9nK5kA
S2ulHxw2c6n2VXVlzl+1ubqcRhLLl9TViXzJHupLavdirZQ3uf+oQfnHtaCX
FPs5PS/lHWa6w8TkS/ZSxzFe2tdSGQJaaPJ6uqN7+eu1VP/C6GMs5Rxpi0S+
Xm/zayluyOelZm74fHzjr/A/NsL/2FuWg4v1NsJfeT9T2E/5ceN8yFB1Nozw
EuOx/+h/7JPI8fqq66E13+KeaW50jNWhHVnHKH49jBiUjSFH7qd+LG3hTipo
5DB1fowo4h33/7HUFRMhRh5gfoInqCOztc43sjLB/GXFyOwN/Y+9MznyQP3s
KtIqzo43GlV1ZLF10YOFO9j/sTf3P5YZ/xMbk0HqPCvrxv4rub3TgY+PLPmm
4wd3hP9jH0OMLNz+YPPznCAGYL9obuR8mBCD81kWDk9kaDEFbYpnGqOOa9x9
83GlCOhAIAblOSfeRLwYVPnuRJng0QUNGqWmm7HUi+jTzWAYln9u2aCj1EGN
npUPKkS5uK6e8Q9f2v8J1Aw3P6kj1SGVrZZuSG0Ns7cjsCCwK1vDWofAfn2Y
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
gdQi2vkH52/5/g==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"1c5c85ea-abde-4c8b-8b63-b69487ae9372"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"Flat", ",", "OneIdentity"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[120]:=",
 CellID->62921541,ExpressionUUID->"ea1a6b0e-ba97-4f40-803d-4499d9eeccc1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e", ":", 
   RowBox[{"CirclePlus", "[", 
    RowBox[{"___", ",", "_List", ",", "___"}], "]"}]}], ":=", 
  RowBox[{"Distribute", "[", 
   RowBox[{
    RowBox[{"Unevaluated", "[", "e", "]"}], ",", "List"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->189486743,ExpressionUUID->"0840d252-d419-4588-b079-4acf3aeee742"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parenthesizedlist", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], "//.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "x__", "]"}], ":>", 
      RowBox[{"ReplaceList", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"u_", ",", "v_"}], "]"}], ":>", 
         RowBox[{"CirclePlus", "[", 
          RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], "}"}]}], "//", 
   "Flatten"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->37988007,ExpressionUUID->"e35c29ee-f653-44a6-9c33-463fc36489c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"c", "\[CirclePlus]", "d"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"a", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", "d"}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "\[CirclePlus]", "b"}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"c", "\[CirclePlus]", "d"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"b", "\[CirclePlus]", "c"}], ")"}]}], ")"}], "\[CirclePlus]", 
    "d"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "\[CirclePlus]", "b"}], ")"}], "\[CirclePlus]", "c"}], 
     ")"}], "\[CirclePlus]", "d"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8736478446797175`*^9},
 CellLabel->"Out[122]=",
 CellID->531586125,ExpressionUUID->"ff19ea54-0593-45cf-a001-dd8e5a404be4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParenthesizedExpressions", "[", "n_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"f", ",", 
       RowBox[{"{", 
        RowBox[{"Flat", ",", "OneIdentity"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ":", 
       RowBox[{"CirclePlus", "[", 
        RowBox[{"___", ",", "_List", ",", "___"}], "]"}]}], ":=", 
      RowBox[{"Distribute", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "e", "]"}], ",", "\[IndentingNewLine]", 
        "List"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Indexed", "[", 
             RowBox[{"x", ",", "##"}], "]"}], "&"}], ",", "n"}], "]"}]}], 
        "]"}], "//.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "x__", "]"}], ":>", 
         RowBox[{"ReplaceList", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"u_", ",", "v_"}], "]"}], ":>", 
            RowBox[{"CirclePlus", "[", 
             RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], "}"}]}], "//", 
      "Flatten"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8736478590250206`*^9, 3.873647916301325*^9}, {
  3.8736479792701373`*^9, 3.8736480522874155`*^9}},
 CellLabel->"In[135]:=",
 CellID->370807339,ExpressionUUID->"d854de25-8e08-45e1-bdc3-bbb2e899f273"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.873648025870307*^9, 3.8736480280632477`*^9}},
 CellLabel->"In[136]:=",
 CellID->181817188,ExpressionUUID->"94967a36-c09c-455c-bab9-10d7892c626f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "3"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8736480283895626`*^9, 3.8736480542448616`*^9}},
 CellLabel->"Out[136]=",
 CellID->401727723,ExpressionUUID->"021bf763-a763-4d64-917b-b98d54cc922a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.873648025870307*^9, 3.8736480592407036`*^9}},
 CellLabel->"In[137]:=",
 CellID->42881922,ExpressionUUID->"5177f0db-a4c4-4397-b0f5-35421286b264"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "4"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "4"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.873648059607606*^9},
 CellLabel->"Out[137]=",
 CellID->342787713,ExpressionUUID->"86934e7e-24e7-46dd-9867-6ff7653f4d7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.873648025870307*^9, 3.8736480612934904`*^9}},
 CellLabel->"In[138]:=",
 CellID->363139424,ExpressionUUID->"7ce04e77-e671-4eac-84cb-df5d3d3d6fb9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "5"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.873648061636443*^9},
 CellLabel->"Out[138]=",
 CellID->229155520,ExpressionUUID->"adad1699-87dd-4e9f-b5b9-c5121c516625"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", "6", "]"}]], "Input",
 CellChangeTimes->{{3.873648025870307*^9, 3.873648063906249*^9}},
 CellLabel->"In[139]:=",
 CellID->855485458,ExpressionUUID->"45a8080c-f7ab-4db7-bc00-a6a5fb3b1fe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8736480642740345`*^9},
 CellLabel->"Out[139]=",
 CellID->71622284,ExpressionUUID->"36d92a6f-aa80-4127-9b51-21ae22726358"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.873648025870307*^9, 3.873648066531763*^9}},
 CellLabel->"In[140]:=",
 CellID->430159267,ExpressionUUID->"bffc80c8-6511-442a-9444-afedc2fc1ec6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "6"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "7"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "5"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "6"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "7"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "6"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "7"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "5"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "6"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "6"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "7"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "5"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "6"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "6"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "7"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "5"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "6"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
      "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "2"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "3"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "6"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "7"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "6"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "7"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "6"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "7"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "6"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "7"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "5"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "6"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}],
     "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "2"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "3"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "4"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "5"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
      "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "2"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "3"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "3"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "4"},
               "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "2"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "3"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "2"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "3"},
               "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              TemplateBox[{"x", "1"},
               "IndexedDefault"], "\[CirclePlus]", 
              TemplateBox[{"x", "2"},
               "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "7"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.873648066930355*^9},
 CellLabel->"Out[140]=",
 CellID->151672559,ExpressionUUID->"ea71321e-fae2-4155-8dc6-c1474b638634"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SymbolicIndexedArray", "[", 
  RowBox[{"x", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.873647918225518*^9, 3.873647921665595*^9}},
 CellLabel->"In[123]:=",
 CellID->359748597,ExpressionUUID->"72d336cf-4643-4e2f-acd2-22c1aafdadc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"x", "1"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "2"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "3"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "4"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "5"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "6"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "7"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "8"},
    "IndexedDefault"], ",", 
   TemplateBox[{"x", "9"},
    "IndexedDefault"]}], "}"}]], "Output",
 CellChangeTimes->{3.8736479219160995`*^9},
 CellLabel->"Out[123]=",
 CellID->18637263,ExpressionUUID->"f3856e46-26df-4f8b-b499-c2550ec55dd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SymbolicIndexedArray"}]], "Input",
 CellChangeTimes->{{3.8736479681519036`*^9, 3.8736479699179697`*^9}},
 CellLabel->"In[128]:=",
 CellID->541280833,ExpressionUUID->"1b4d2ba2-f6ee-4b55-b5a4-afd042b7ac1c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`SymbolicIndexedArray\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"OwnValues\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{"SymbolicIndexedArray", "=", 
                    InterpretationBox[
                    TagBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    FrameBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    StyleBox[
                    AdjustmentBox[
                    "\"[\[FilledSmallSquare]]\"", BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                     FontColor -> RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]], ShowStringCharacters -> False, 
                    FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.6538461538461539 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["SymbolicIndexedArray", "ResourceFunctionLabel"],
                     " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> Rational[12, 13] Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], 
                    ItemBox[
                    PaneBox[
                    TogglerBox[
                    Dynamic[Typeset`open], {True -> DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "IconizeCloser"], 
                    ImageSizeCache -> {11., {2., 9.}}], False -> DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "IconizeOpener"], 
                    ImageSizeCache -> {11., {2., 9.}}]}, Appearance -> None, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0], Alignment -> Left, BaselinePosition -> 
                    Baseline, FrameMargins -> {{1, 1}, {0, 0}}], Frame -> {{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}}, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0}}}],
                     True -> GridBox[{{
                    GridBox[{{
                    PaneBox[
                    GridBox[{{
                    StyleBox[
                    AdjustmentBox[
                    StyleBox[
                    "\"[\[FilledSmallSquare]]\"", "ResourceFunctionIcon", 
                    FontColor -> RGBColor[0.8745098039215686, 
                    0.2784313725490196, 0.03137254901960784]], 
                    BoxBaselineShift -> -0.25, 
                    BoxMargins -> {{0, 0}, {-1, -1}}], ShowStringCharacters -> 
                    False, FontFamily -> "Source Sans Pro Black", FontSize -> 
                    0.6538461538461539 Inherited, FontWeight -> "Heavy", 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}], 
                    StyleBox[
                    RowBox[{
                    StyleBox["SymbolicIndexedArray", "ResourceFunctionLabel"],
                     " "}], ShowAutoStyles -> False, ShowStringCharacters -> 
                    False, FontSize -> Rational[12, 13] Inherited, FontColor -> 
                    GrayLevel[0.1]]}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], Alignment -> 
                    Left, BaseStyle -> {
                    LineSpacing -> {0, 0}, LineBreakWithin -> False}, 
                    BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 0}, {0, 0}}], 
                    ItemBox[
                    PaneBox[
                    TogglerBox[
                    Dynamic[Typeset`open], {True -> DynamicBox[
                    FEPrivate`FrontEndResource["FEBitmaps", "IconizeCloser"]],
                     False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "IconizeOpener"]]}, Appearance -> None, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0], Alignment -> Left, BaselinePosition -> 
                    Baseline, FrameMargins -> {{1, 1}, {0, 0}}], Frame -> {{
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627, 0.5], False}, {False, False}}]}}, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "Rows" -> {{0}}}]}, {
                    StyleBox[
                    PaneBox[
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Version (latest): \"", "IconizedLabel"], " ", 
                    TagBox["\"1.0.0\"", "IconizedItem"]}]}, {
                    TagBox[
                    
                    TemplateBox[{"\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/b5a96e2b-079c-4ef2-a073-4c693881c4dd/"}, "HyperlinkURL"], 
                    "IconizedItem"]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FrameMargins -> {{5, 4}, {0, 4}}], "DialogStyle", 
                    FontFamily -> "Roboto", FontSize -> 11]}}, 
                    BaselinePosition -> {1, 1}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {False, {
                    GrayLevel[0.8]}, False}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open], BaselinePosition -> Baseline, 
                    ImageSize -> Automatic], Background -> 
                    RGBColor[
                    0.9686274509803922, 0.9764705882352941, 
                    0.984313725490196], BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, FrameMargins -> {{0, 0}, {1, 0}}, 
                    FrameStyle -> 
                    RGBColor[
                    0.8313725490196079, 0.8470588235294118, 
                    0.8509803921568627], RoundingRadius -> 4]], {
                    "FunctionResourceBox", 
                    RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784], "SymbolicIndexedArray"}, TagBoxNote -> 
                    "FunctionResourceBox"], 
                    ResourceFunction["SymbolicIndexedArray"], Selectable -> 
                    False]}]}, {" "}}, DefaultBaseStyle -> "Column", 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`SymbolicIndexedArray\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`SymbolicIndexedArray\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`SymbolicIndexedArray", 
    "Documentation" -> None, "OwnValues" -> 
    Information`InformationValueForm[
     OwnValues, $CellContext`SymbolicIndexedArray, \
{$CellContext`SymbolicIndexedArray -> 
       FunctionRepository`$328ba4266583422d8493ba9ec399ecb0`\
SymbolicIndexedArray}], "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`SymbolicIndexedArray"|>, False]]], "Output",
 CellChangeTimes->{3.8736479702936974`*^9},
 CellLabel->"Out[128]=",
 CellID->163891728,ExpressionUUID->"2064116c-3d7c-4c63-859a-1b75d14e3582"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     TemplateBox[{"x", "1"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "2"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "3"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "4"},
      "IndexedDefault"]}], "]"}], "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x__", "]"}], ":>", 
     RowBox[{"ReplaceList", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u_", ",", "v_"}], "]"}], ":>", 
        RowBox[{"CirclePlus", "[", 
         RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], "}"}]}], "//", 
  "Flatten"}]], "Input",
 CellChangeTimes->{{3.8736479313106565`*^9, 3.8736479474498696`*^9}},
 CellLabel->"In[126]:=",
 CellID->377913020,ExpressionUUID->"4fb49425-5447-4668-a874-7093c3542757"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "4"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "4"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8736479319526987`*^9, 3.8736479479217176`*^9}},
 CellLabel->"Out[126]=",
 CellID->505922879,ExpressionUUID->"02aadfee-1022-4e7f-b9ad-e1fcf832c9b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     TemplateBox[{"x", "1"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "2"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "3"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "4"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "5"},
      "IndexedDefault"], ",", 
     TemplateBox[{"x", "6"},
      "IndexedDefault"]}], "]"}], "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x__", "]"}], ":>", 
     RowBox[{"ReplaceList", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"u_", ",", "v_"}], "]"}], ":>", 
        RowBox[{"CirclePlus", "[", 
         RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], "}"}]}], "//", 
  "Flatten"}]], "Input",
 CellChangeTimes->{{3.8736479313106565`*^9, 3.8736479584193788`*^9}},
 CellLabel->"In[127]:=",
 CellID->166518627,ExpressionUUID->"4b98b2c4-9558-42e7-a59f-10453067f880"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "5"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "6"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"x", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "5"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "6"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "5"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "6"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "5"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"x", "6"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "4"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "5"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"x", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"x", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "3"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "4"},
             "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"x", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"x", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"x", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "2"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "3"},
             "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            TemplateBox[{"x", "1"},
             "IndexedDefault"], "\[CirclePlus]", 
            TemplateBox[{"x", "2"},
             "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
          TemplateBox[{"x", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"x", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"x", "5"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"x", "6"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8736479590993743`*^9},
 CellLabel->"Out[127]=",
 CellID->142557726,ExpressionUUID->"2f1cfe09-b043-4da8-b2a8-7fef4e2a6046"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParenthesizedExpressions", "[", 
   RowBox[{"n_", ",", "indexedsymbol_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", 
    RowBox[{
     RowBox[{"SetAttributes", "[", 
      RowBox[{"f", ",", 
       RowBox[{"{", 
        RowBox[{"Flat", ",", "OneIdentity"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e", ":", 
       RowBox[{"CirclePlus", "[", 
        RowBox[{"___", ",", "_List", ",", "___"}], "]"}]}], ":=", 
      RowBox[{"Distribute", "[", 
       RowBox[{
        RowBox[{"Unevaluated", "[", "e", "]"}], ",", "\[IndentingNewLine]", 
        "List"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Indexed", "[", 
             RowBox[{"indexedsymbol", ",", "##"}], "]"}], "&"}], ",", "n"}], 
          "]"}]}], "]"}], "//.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"f", "[", "x__", "]"}], ":>", 
         RowBox[{"ReplaceList", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"u_", ",", "v_"}], "]"}], ":>", 
            RowBox[{"CirclePlus", "[", 
             RowBox[{"u", ",", "v"}], "]"}]}]}], "]"}]}], "}"}]}], "//", 
      "Flatten"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.873648166500787*^9, 3.8736482102972307`*^9}},
 CellLabel->"In[162]:=",
 CellID->61492363,ExpressionUUID->"76bd1ba9-752e-4dbb-ba2a-e1521a1bb57f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8736483290260043`*^9, 3.873648331327043*^9}},
 CellLabel->"In[1]:=",
 CellID->38180594,ExpressionUUID->"45767d6f-4a22-440f-b9b8-93a84882cf79"],

Cell[BoxData["\<\"C:\\\\Users\\\\peter\\\\Documents\\\\GitHub\\\\\
computational-essays\\\\\"\>"], "Output",
 CellChangeTimes->{3.8736483316431646`*^9},
 CellLabel->"Out[1]=",
 CellID->38552166,ExpressionUUID->"e7cf43b6-fc23-4e09-a32b-9af10d130b45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", 
  RowBox[{"5", ",", "e"}], "]"}]], "Input",
 CellChangeTimes->{{3.873648176873903*^9, 3.873648181004198*^9}},
 CellLabel->"In[163]:=",
 CellID->2006356,ExpressionUUID->"2b805184-50f5-431b-a540-e3ba089bbf73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"e", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "4"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "5"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"e", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "2"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "4"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"e", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"e", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"e", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    TemplateBox[{"e", "1"},
     "IndexedDefault"], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"e", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"e", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "3"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "4"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "5"},
         "IndexedDefault"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"e", "2"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "4"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "3"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"e", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "3"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "4"},
       "IndexedDefault"], "\[CirclePlus]", 
      TemplateBox[{"e", "5"},
       "IndexedDefault"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "2"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "3"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "4"},
           "IndexedDefault"]}], ")"}]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"e", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"e", "1"},
       "IndexedDefault"], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "3"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"e", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"e", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "2"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "3"},
         "IndexedDefault"], "\[CirclePlus]", 
        TemplateBox[{"e", "4"},
         "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"e", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"e", "1"},
         "IndexedDefault"], "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "2"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "3"},
           "IndexedDefault"]}], ")"}]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"e", "5"},
     "IndexedDefault"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          TemplateBox[{"e", "1"},
           "IndexedDefault"], "\[CirclePlus]", 
          TemplateBox[{"e", "2"},
           "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
        TemplateBox[{"e", "3"},
         "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
      TemplateBox[{"e", "4"},
       "IndexedDefault"]}], ")"}], "\[CirclePlus]", 
    TemplateBox[{"e", "5"},
     "IndexedDefault"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8736481812512083`*^9, 3.873648215248869*^9},
 CellLabel->"Out[163]=",
 CellID->24711302,ExpressionUUID->"16c93276-f704-46fb-a6dc-1eb18c46117c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParenthesizedExpressions", "[", 
  RowBox[{"5", ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "d", ",", "e", ",", "f"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8737324828892965`*^9, 3.8737324934500804`*^9}},
 CellLabel->"In[589]:=",
 CellID->257223168,ExpressionUUID->"ca3a712f-575c-4145-8375-deb4cb2c96f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"b", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"c", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"d", "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"e", "\[CirclePlus]", "f"}], ")"}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"b", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"c", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", "\[CirclePlus]", "e"}], ")"}], "\[CirclePlus]", "f"}], 
       ")"}]}], ")"}]}], ",", 
   RowBox[{"b", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "\[CirclePlus]", "d"}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"e", "\[CirclePlus]", "f"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"b", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"d", "\[CirclePlus]", "e"}], ")"}]}], ")"}], "\[CirclePlus]",
       "f"}], ")"}]}], ",", 
   RowBox[{"b", "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "\[CirclePlus]", "d"}], ")"}], "\[CirclePlus]", "e"}], 
       ")"}], "\[CirclePlus]", "f"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"d", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"e", "\[CirclePlus]", "f"}], ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "\[CirclePlus]", "e"}], ")"}], "\[CirclePlus]", "f"}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"c", "\[CirclePlus]", "d"}], ")"}]}], ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"e", "\[CirclePlus]", "f"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", "d"}], 
     ")"}], "\[CirclePlus]", 
    RowBox[{"(", 
     RowBox[{"e", "\[CirclePlus]", "f"}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"c", "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"d", "\[CirclePlus]", "e"}], ")"}]}], ")"}]}], ")"}], 
    "\[CirclePlus]", "f"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c", "\[CirclePlus]", "d"}], ")"}], "\[CirclePlus]", "e"}], 
       ")"}]}], ")"}], "\[CirclePlus]", "f"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", 
      RowBox[{"(", 
       RowBox[{"d", "\[CirclePlus]", "e"}], ")"}]}], ")"}], "\[CirclePlus]", 
    "f"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "\[CirclePlus]", 
        RowBox[{"(", 
         RowBox[{"c", "\[CirclePlus]", "d"}], ")"}]}], ")"}], "\[CirclePlus]",
       "e"}], ")"}], "\[CirclePlus]", "f"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "\[CirclePlus]", "c"}], ")"}], "\[CirclePlus]", "d"}], 
       ")"}], "\[CirclePlus]", "e"}], ")"}], "\[CirclePlus]", "f"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8737324947086773`*^9},
 CellLabel->"Out[589]=",
 CellID->177229318,ExpressionUUID->"e76c9714-afbd-4cee-976f-8bf79430b2e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "4" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "5" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "6" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "1" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "2" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "3" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", " (" <> "Shift+" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, 
  WindowSize -> {583.8, 494.4}, 
  WindowMargins -> {{278.4, Automatic}, {Automatic, 40.199999999999996`}}, 
  Visible -> False, FrontEndVersion -> 
  "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 220, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 220, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[803, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1057, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1057, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1226, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1358, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1491, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1645, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1887, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 927344, 20745},
 {"Your Essay Title", 927530, 20749},
 {"AuthorName", 927710, 20753},
 {"Abstract", 927869, 20757},
 {"TemplateCell", 928051, 20761},
 {"SectionHeader", 928234, 20765},
 {"ExampleTopicSentence", 928410, 20769},
 {"ExampleCodeText", 928585, 20773},
 {"ExampleInput", 928755, 20777},
 {"ExampleOutput", 928921, 20781}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 220, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[803, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1057, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1226, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1358, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1491, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1645, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1887, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2144, 69, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2242, 72, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]],
Cell[CellGroupData[{
Cell[2374, 78, 94, 1, 67, "Section",ExpressionUUID->"c3762676-6711-4cce-b808-78d56c1acc38",
 CellID->213864243],
Cell[CellGroupData[{
Cell[2493, 83, 324, 7, 48, "Input",ExpressionUUID->"9df7651f-058a-4e24-8683-5e5dbe371a66",
 CellID->10987584],
Cell[2820, 92, 23561, 415, 64, "Output",ExpressionUUID->"876887c7-e705-4427-b2c2-ef564ebf8623",
 CellID->429386898]
}, Open  ]],
Cell[26396, 510, 272, 5, 28, "Input",ExpressionUUID->"a5e89e5b-828e-47a0-be63-b18de37a555f",
 CellID->86770463],
Cell[26671, 517, 193, 2, 35, "Text",ExpressionUUID->"dc4a099a-2f87-4ea0-bc0c-fab62ae9e92f",
 CellID->701788317],
Cell[CellGroupData[{
Cell[26889, 523, 430, 11, 28, "Input",ExpressionUUID->"f3a7b652-4129-4b1d-870a-4d043b367c96",
 CellID->364752486],
Cell[27322, 536, 887, 31, 303, "Output",ExpressionUUID->"4a2cf045-a4eb-4148-9ee0-06db304d8f3f",
 CellID->646710630]
}, Open  ]],
Cell[28224, 570, 529, 18, 51, "Text",ExpressionUUID->"c4d004ea-dfe8-4568-b61b-6a3f95b0cbe9",
 CellID->121300404],
Cell[CellGroupData[{
Cell[28778, 592, 486, 14, 45, "Input",ExpressionUUID->"fa44f7a9-dec5-4788-a11a-03bde872371c",
 CellID->40043227],
Cell[29267, 608, 605, 25, 288, "Output",ExpressionUUID->"84942265-b114-42f8-88b0-36c1c6aac3ad",
 CellID->454250692]
}, Open  ]],
Cell[29887, 636, 422, 11, 35, "Text",ExpressionUUID->"6cf4f102-5031-4095-ad06-9ac61bc9d69c",
 CellID->80498616],
Cell[CellGroupData[{
Cell[30334, 651, 233, 4, 28, "Input",ExpressionUUID->"b5ed9aa4-8a50-4597-b7e3-252fac8edfe6",
 CellID->971899202],
Cell[30570, 657, 171, 3, 32, "Output",ExpressionUUID->"deffa82f-9bd7-46fe-aacc-95e8974f5a09",
 CellID->673112679]
}, Open  ]],
Cell[30756, 663, 173, 2, 35, "Text",ExpressionUUID->"a8d786fe-74f1-4939-903f-e5f26ae4165d",
 CellID->141851056],
Cell[CellGroupData[{
Cell[30954, 669, 337, 8, 28, "Input",ExpressionUUID->"f4419592-8ff0-4233-ab95-f9bede777838",
 CellID->351083846],
Cell[31294, 679, 313, 6, 32, "Output",ExpressionUUID->"7a7b3177-5b92-4908-8c56-8c6a9a1c6564",
 CellID->298545679]
}, Open  ]],
Cell[CellGroupData[{
Cell[31644, 690, 373, 9, 28, "Input",ExpressionUUID->"4a09fa59-eb1b-443a-ae61-9c955c6e51e4",
 CellID->798453488],
Cell[32020, 701, 171, 3, 32, "Output",ExpressionUUID->"147e7a6a-80f3-4188-aab1-2daeed588df2",
 CellID->171757679]
}, Open  ]],
Cell[32206, 707, 185, 2, 35, "Text",ExpressionUUID->"1caaeb06-098f-4e21-97ab-c24d6ce5bf7a",
 CellID->278285093],
Cell[CellGroupData[{
Cell[32416, 713, 265, 5, 28, "Input",ExpressionUUID->"badc398b-6ab5-4470-8b34-24faa5552f41",
 CellID->343652282],
Cell[32684, 720, 6912, 181, 248, "Output",ExpressionUUID->"9c5d0350-96ed-4ddd-b503-c80031e8f2e2",
 CellID->468274823]
}, Open  ]],
Cell[39611, 904, 421, 10, 35, "Text",ExpressionUUID->"ab800473-62e9-40aa-aeab-9a96af5b7c44",
 CellID->277249267],
Cell[CellGroupData[{
Cell[40057, 918, 538, 14, 48, "Input",ExpressionUUID->"f228f031-c9e7-488a-a2c3-b43dbdea9ced",
 CellID->175593186],
Cell[40598, 934, 382, 9, 32, "Output",ExpressionUUID->"cf351d89-d45f-4ad0-9b63-8954b2b4b7e5",
 CellID->146199546]
}, Open  ]],
Cell[CellGroupData[{
Cell[41017, 948, 298, 7, 28, "Input",ExpressionUUID->"946b97cc-9c45-4980-b09b-e65cef2b65b9",
 CellID->814990613],
Cell[41318, 957, 168, 3, 32, "Output",ExpressionUUID->"e694079a-b121-4b9a-bc16-9ae888f39d32",
 CellID->187498752]
}, Open  ]],
Cell[41501, 963, 234, 4, 35, "Text",ExpressionUUID->"414aa3a7-0e9f-4f82-8b5d-fc6f42f193c9",
 CellID->595977607],
Cell[41738, 969, 211, 2, 35, "Text",ExpressionUUID->"6c54aeb1-e1eb-4e93-9a45-8e5468de4293",
 CellID->39428534],
Cell[CellGroupData[{
Cell[41974, 975, 433, 10, 48, "Input",ExpressionUUID->"d184fb5e-1e1f-4bd6-b318-ca20dc359073",
 CellID->445395971],
Cell[42410, 987, 456, 13, 72, "Output",ExpressionUUID->"d33a089c-fcb8-45d3-979c-96207b981073",
 CellID->872766]
}, Open  ]],
Cell[CellGroupData[{
Cell[42903, 1005, 423, 10, 48, "Input",ExpressionUUID->"8610fe91-432f-4709-959d-898ea9994c9d",
 CellID->905303168],
Cell[43329, 1017, 503, 16, 76, "Output",ExpressionUUID->"0bb2fb0e-89bc-422b-b21a-e2cbfc80ab81",
 CellID->145983245]
}, Open  ]],
Cell[CellGroupData[{
Cell[43869, 1038, 423, 10, 48, "Input",ExpressionUUID->"1aa3041b-cd08-483b-a6f4-c9de455a4c12",
 CellID->820337583],
Cell[44295, 1050, 410, 12, 73, "Output",ExpressionUUID->"443b6d64-9e27-45c2-b0bc-7bba2f74a26e",
 CellID->160407143]
}, Open  ]],
Cell[CellGroupData[{
Cell[44742, 1067, 354, 9, 28, "Input",ExpressionUUID->"877c0858-2d63-4f7a-8ffc-4220e59733c0",
 CellID->82287220],
Cell[45099, 1078, 400, 13, 55, "Output",ExpressionUUID->"5c9f95a1-10c8-422a-8626-72816dee4ba4",
 CellID->352127684]
}, Open  ]],
Cell[CellGroupData[{
Cell[45536, 1096, 367, 9, 52, "Input",ExpressionUUID->"ead86a82-616f-495f-ad1b-1ba965a93ce0",
 CellID->852257796],
Cell[45906, 1107, 276, 8, 52, "Output",ExpressionUUID->"3bd4f1e5-042e-465e-ad39-42327c8430a7",
 CellID->213140601]
}, Open  ]],
Cell[46197, 1118, 208, 2, 35, "Text",ExpressionUUID->"b079cecb-f8cd-43aa-9c9f-b94cc4122725",
 CellID->148449908],
Cell[46408, 1122, 357, 6, 81, "Text",ExpressionUUID->"2e7a74bf-5156-45e3-9dc5-13799baec164",
 CellID->415344586],
Cell[46768, 1130, 179, 2, 35, "Text",ExpressionUUID->"3481f068-e8b0-4715-9b12-23eb7931e276",
 CellID->567952762],
Cell[CellGroupData[{
Cell[46972, 1136, 417, 10, 28, "Input",ExpressionUUID->"d4237b1d-164b-4d1b-982a-de02d773caed",
 CellID->11225660],
Cell[47392, 1148, 138561, 3462, 1068, "Output",ExpressionUUID->"4ee5fb41-f4bd-44c6-91a6-61b9d44fa397",
 CellID->371412868]
}, Open  ]],
Cell[CellGroupData[{
Cell[185990, 4615, 365, 9, 28, "Input",ExpressionUUID->"dfda508c-ec48-465e-bf5b-83542f04332f",
 CellID->488895337],
Cell[186358, 4626, 169, 3, 32, "Output",ExpressionUUID->"6ea5e5d4-165f-4cb0-8ea7-c375a20fe3bb",
 CellID->61529692]
}, Open  ]],
Cell[186542, 4632, 200, 2, 35, "Text",ExpressionUUID->"06e02760-cc0d-4ebd-9edd-9403f2fd26dd",
 CellID->182420856],
Cell[CellGroupData[{
Cell[186767, 4638, 178, 2, 54, "Subsection",ExpressionUUID->"535c1aca-2eb8-490a-b5c0-d13573777158",
 CellID->439073556],
Cell[CellGroupData[{
Cell[186970, 4644, 377, 8, 28, "Input",ExpressionUUID->"083eb3fd-fcc5-448e-8b82-c3db2b0e9282",
 CellID->263293724],
Cell[187350, 4654, 328, 9, 53, "Output",ExpressionUUID->"17450087-be12-4431-8aec-ffa4f66312ff",
 CellID->23656532]
}, Open  ]],
Cell[CellGroupData[{
Cell[187715, 4668, 377, 8, 28, "Input",ExpressionUUID->"7d95f847-df0d-4d15-9fb6-f69268fb3d64",
 CellID->135896902],
Cell[188095, 4678, 848, 28, 52, "Output",ExpressionUUID->"26f2d440-4510-4437-82e4-fd7f7443d33b",
 CellID->58120146]
}, Open  ]],
Cell[CellGroupData[{
Cell[188980, 4711, 429, 9, 28, "Input",ExpressionUUID->"937eb03c-c299-4891-b8f8-132bdeaa618e",
 CellID->38633199],
Cell[189412, 4722, 3214, 98, 136, "Output",ExpressionUUID->"d5b5ce00-ce1e-4c2d-badc-3f0b248c57f0",
 CellID->202494878]
}, Open  ]],
Cell[CellGroupData[{
Cell[192663, 4825, 184, 4, 28, "Input",ExpressionUUID->"5d507735-2b50-4bc1-9876-7601df4d980a",
 CellID->60122964],
Cell[192850, 4831, 1871, 49, 158, "Output",ExpressionUUID->"b799b4a2-1233-447c-8e51-2b7015e65380",
 CellID->940038239]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[194770, 4886, 176, 2, 54, "Subsection",ExpressionUUID->"32e71692-1e58-41f1-9f81-b165c7db3f30",
 CellID->120149218],
Cell[194949, 4890, 194, 2, 35, "Text",ExpressionUUID->"5d183997-1e30-40d1-abcf-0596f8ebf06f",
 CellID->202130146],
Cell[CellGroupData[{
Cell[195168, 4896, 675, 20, 45, "Input",ExpressionUUID->"f038deb7-8736-449e-bd5b-64e1143f1f79",
 CellID->131200110],
Cell[195846, 4918, 671, 21, 58, "Output",ExpressionUUID->"19d1ef25-f625-41df-9f84-c789df032164",
 CellID->20509873]
}, Open  ]],
Cell[CellGroupData[{
Cell[196554, 4944, 768, 24, 58, "Input",ExpressionUUID->"36d1d7f6-7a5d-4261-89e0-ab60211772fe",
 CellID->7919831],
Cell[197325, 4970, 527, 17, 58, "Output",ExpressionUUID->"7e2eb79d-6d13-4bf2-9bd4-c201c6f3c213",
 CellID->336984078]
}, Open  ]],
Cell[CellGroupData[{
Cell[197889, 4992, 555, 18, 58, "Input",ExpressionUUID->"83535271-3369-4918-b7eb-1a7671599f67",
 CellID->494351087],
Cell[198447, 5012, 417, 13, 59, "Output",ExpressionUUID->"e4b538af-515b-426e-b974-25bf4193d780",
 CellID->165594942]
}, Open  ]],
Cell[CellGroupData[{
Cell[198901, 5030, 700, 21, 58, "Input",ExpressionUUID->"0b581507-198c-477a-87e2-b64b793a0fe0",
 CellID->31614758],
Cell[199604, 5053, 168, 3, 32, "Output",ExpressionUUID->"2f075468-eb69-47d5-b9a8-9c3d5208b492",
 CellID->22900354]
}, Open  ]],
Cell[CellGroupData[{
Cell[199809, 5061, 706, 22, 45, "Input",ExpressionUUID->"b91cfce6-643c-4f25-ac18-4f262ee25591",
 CellID->307598322],
Cell[200518, 5085, 526, 17, 58, "Output",ExpressionUUID->"b943fc14-06af-4079-a7a0-364baec68626",
 CellID->78564515]
}, Open  ]],
Cell[CellGroupData[{
Cell[201081, 5107, 604, 20, 58, "Input",ExpressionUUID->"1519eafb-abd0-42f6-9f14-ea9496d5c7da",
 CellID->220810998],
Cell[201688, 5129, 376, 12, 54, "Output",ExpressionUUID->"5ea9dc41-cea9-4d56-a575-b88a223599ef",
 CellID->118622444]
}, Open  ]],
Cell[CellGroupData[{
Cell[202101, 5146, 763, 22, 58, "Input",ExpressionUUID->"7f55c95d-90e3-4414-8752-777f5abc48ba",
 CellID->853316718],
Cell[202867, 5170, 524, 16, 48, "Output",ExpressionUUID->"05d3d7e5-7782-46c8-b5e9-f57fe3125a45",
 CellID->260249900]
}, Open  ]],
Cell[CellGroupData[{
Cell[203428, 5191, 612, 20, 58, "Input",ExpressionUUID->"d6ae28bb-ee23-4a6a-9151-54497bc973dc",
 CellID->102095237],
Cell[204043, 5213, 344, 11, 51, "Output",ExpressionUUID->"c59f3a36-b1f4-43e5-a288-3576efcd826b",
 CellID->30601008]
}, Open  ]],
Cell[CellGroupData[{
Cell[204424, 5229, 644, 21, 58, "Input",ExpressionUUID->"dbe2f341-7eda-4ca5-9cf5-48001fa17c82",
 CellID->7509609],
Cell[205071, 5252, 496, 10, 32, "Output",ExpressionUUID->"a9fca785-5736-4a39-9922-7978d75b9626",
 CellID->873472762]
}, Open  ]],
Cell[CellGroupData[{
Cell[205604, 5267, 557, 18, 58, "Input",ExpressionUUID->"4bacb30f-54a9-4f31-bfaa-0f51e75094bd",
 CellID->545699083],
Cell[206164, 5287, 417, 13, 59, "Output",ExpressionUUID->"4f57698d-2cca-424e-abc8-f1beba087869",
 CellID->178407802]
}, Open  ]],
Cell[CellGroupData[{
Cell[206618, 5305, 664, 21, 58, "Input",ExpressionUUID->"5be3a53d-d0c5-460c-87c5-88fefd7eee75",
 CellID->263675682],
Cell[207285, 5328, 633, 20, 58, "Output",ExpressionUUID->"8c31055c-71f6-4195-84ce-507f42120a1f",
 CellID->75148755]
}, Open  ]],
Cell[CellGroupData[{
Cell[207955, 5353, 659, 20, 58, "Input",ExpressionUUID->"697cac91-756e-402c-9917-317c493aac06",
 CellID->98504792],
Cell[208617, 5375, 1297, 44, 122, "Output",ExpressionUUID->"ded5a59f-ee77-4b04-923c-051a46348880",
 CellID->455435786]
}, Open  ]],
Cell[CellGroupData[{
Cell[209951, 5424, 651, 21, 58, "Input",ExpressionUUID->"d1199330-d282-4979-a3a2-149fb13514c6",
 CellID->74071328],
Cell[210605, 5447, 4458, 107, 222, "Output",ExpressionUUID->"4ebfd4da-6849-4ae6-a14c-e856c212ab0d",
 CellID->41733039]
}, Open  ]],
Cell[CellGroupData[{
Cell[215100, 5559, 257, 5, 28, "Input",ExpressionUUID->"174475fe-bba3-433f-96ed-28e2a18ceb22",
 CellID->108176140],
Cell[215360, 5566, 224, 5, 49, "Output",ExpressionUUID->"e0a6e5e2-047f-4740-8496-0f8f097c5501",
 CellID->449325123]
}, Open  ]],
Cell[CellGroupData[{
Cell[215621, 5576, 275, 6, 28, "Input",ExpressionUUID->"6ea0fdc5-3d20-4a53-9a40-71a115067a9f",
 CellID->508540506],
Cell[215899, 5584, 254, 6, 45, "Output",ExpressionUUID->"dc310616-ce2a-424f-89bb-3a5c9a92ef92",
 CellID->28223778]
}, Open  ]],
Cell[CellGroupData[{
Cell[216190, 5595, 346, 8, 52, "Input",ExpressionUUID->"e9cf8ae5-ca9f-4098-a828-8510e0a1408a",
 CellID->560823884],
Cell[216539, 5605, 316, 9, 48, "Output",ExpressionUUID->"f3f798b0-a236-4aa7-a93a-25beb50ed1e5",
 CellID->3650833]
}, Open  ]],
Cell[CellGroupData[{
Cell[216892, 5619, 402, 11, 54, "Input",ExpressionUUID->"c8a2dd8b-284e-40b5-89cc-87cd14502a87",
 CellID->96668104],
Cell[217297, 5632, 503, 15, 35, "Output",ExpressionUUID->"f5aee693-5ffe-4562-a8e7-9bba6e41d901",
 CellID->557233601]
}, Open  ]],
Cell[CellGroupData[{
Cell[217837, 5652, 326, 7, 28, "Input",ExpressionUUID->"5c15faae-8983-4d0b-b893-555b01772352",
 CellID->351982919],
Cell[218166, 5661, 454, 8, 43, "Output",ExpressionUUID->"db998887-b15a-4162-8c69-da8d032994bb",
 CellID->858819288]
}, Open  ]],
Cell[CellGroupData[{
Cell[218657, 5674, 499, 13, 28, "Input",ExpressionUUID->"ff4cf4a2-95f8-4d3b-b184-ed6fcf73c357",
 CellID->262155219],
Cell[219159, 5689, 383856, 6310, 316, 107710, 1781, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1c5c85ea-abde-4c8b-8b63-b69487ae9372",
 CellID->31704268]
}, Open  ]],
Cell[603030, 12002, 250, 6, 28, "Input",ExpressionUUID->"ea1a6b0e-ba97-4f40-803d-4499d9eeccc1",
 CellID->62921541],
Cell[603283, 12010, 358, 9, 48, "Input",ExpressionUUID->"0840d252-d419-4588-b079-4acf3aeee742",
 CellID->189486743],
Cell[CellGroupData[{
Cell[603666, 12023, 663, 19, 86, "Input",ExpressionUUID->"e35c29ee-f653-44a6-9c33-463fc36489c3",
 CellID->37988007],
Cell[604332, 12044, 1090, 33, 52, "Output",ExpressionUUID->"ff19ea54-0593-45cf-a001-dd8e5a404be4",
 CellID->531586125]
}, Open  ]],
Cell[605437, 12080, 1642, 45, 143, "Input",ExpressionUUID->"d854de25-8e08-45e1-bdc3-bbb2e899f273",
 CellID->370807339],
Cell[CellGroupData[{
Cell[607104, 12129, 245, 4, 28, "Input",ExpressionUUID->"94967a36-c09c-455c-bab9-10d7892c626f",
 CellID->181817188],
Cell[607352, 12135, 745, 23, 32, "Output",ExpressionUUID->"021bf763-a763-4d64-917b-b98d54cc922a",
 CellID->401727723]
}, Open  ]],
Cell[CellGroupData[{
Cell[608134, 12163, 244, 4, 28, "Input",ExpressionUUID->"5177f0db-a4c4-4397-b0f5-35421286b264",
 CellID->42881922],
Cell[608381, 12169, 2127, 70, 52, "Output",ExpressionUUID->"86934e7e-24e7-46dd-9867-6ff7653f4d7f",
 CellID->342787713]
}, Open  ]],
Cell[CellGroupData[{
Cell[610545, 12244, 245, 4, 28, "Input",ExpressionUUID->"7ce04e77-e671-4eac-84cb-df5d3d3d6fb9",
 CellID->363139424],
Cell[610793, 12250, 7437, 243, 147, "Output",ExpressionUUID->"adad1699-87dd-4e9f-b5b9-c5121c516625",
 CellID->229155520]
}, Open  ]],
Cell[CellGroupData[{
Cell[618267, 12498, 243, 4, 28, "Input",ExpressionUUID->"45a8080c-f7ab-4db7-bc00-a6a5fb3b1fe6",
 CellID->855485458],
Cell[618513, 12504, 27629, 888, 413, "Output",ExpressionUUID->"36d92a6f-aa80-4127-9b51-21ae22726358",
 CellID->71622284]
}, Open  ]],
Cell[CellGroupData[{
Cell[646179, 13397, 243, 4, 28, "Input",ExpressionUUID->"bffc80c8-6511-442a-9444-afedc2fc1ec6",
 CellID->430159267],
Cell[646425, 13403, 104953, 3314, 2525, "Output",ExpressionUUID->"ea71321e-fae2-4155-8dc6-c1474b638634",
 CellID->151672559]
}, Open  ]],
Cell[CellGroupData[{
Cell[751415, 16722, 262, 5, 28, "Input",ExpressionUUID->"72d336cf-4643-4e2f-acd2-22c1aafdadc4",
 CellID->359748597],
Cell[751680, 16729, 700, 23, 32, "Output",ExpressionUUID->"f3856e46-26df-4f8b-b499-c2550ec55dd2",
 CellID->18637263]
}, Open  ]],
Cell[CellGroupData[{
Cell[752417, 16757, 233, 4, 28, "Input",ExpressionUUID->"1b4d2ba2-f6ee-4b55-b5a4-afd042b7ac1c",
 CellID->541280833],
Cell[752653, 16763, 17345, 382, 193, "Output",ExpressionUUID->"2064116c-3d7c-4c63-859a-1b75d14e3582",
 CellID->163891728]
}, Open  ]],
Cell[CellGroupData[{
Cell[770035, 17150, 880, 27, 67, "Input",ExpressionUUID->"4fb49425-5447-4668-a874-7093c3542757",
 CellID->377913020],
Cell[770918, 17179, 2155, 70, 52, "Output",ExpressionUUID->"02aadfee-1022-4e7f-b9ad-e1fcf832c9b2",
 CellID->505922879]
}, Open  ]],
Cell[CellGroupData[{
Cell[773110, 17254, 1000, 31, 67, "Input",ExpressionUUID->"4b98b2c4-9558-42e7-a59f-10453067f880",
 CellID->166518627],
Cell[774113, 17287, 27630, 888, 223, "Output",ExpressionUUID->"2f1cfe09-b043-4da8-b2a8-7fef4e2a6046",
 CellID->142557726]
}, Open  ]],
Cell[801758, 18178, 1639, 45, 86, "Input",ExpressionUUID->"76bd1ba9-752e-4dbb-ba2a-e1521a1bb57f",
 CellID->61492363],
Cell[CellGroupData[{
Cell[803422, 18227, 230, 4, 28, "Input",ExpressionUUID->"45767d6f-4a22-440f-b9b8-93a84882cf79",
 CellID->38180594],
Cell[803655, 18233, 249, 4, 32, "Output",ExpressionUUID->"e7cf43b6-fc23-4e09-a32b-9af10d130b45",
 CellID->38552166]
}, Open  ]],
Cell[CellGroupData[{
Cell[803941, 18242, 264, 5, 28, "Input",ExpressionUUID->"2b805184-50f5-431b-a540-e3ba089bbf73",
 CellID->2006356],
Cell[804208, 18249, 7460, 243, 71, "Output",ExpressionUUID->"16c93276-f704-46fb-a6dc-1eb18c46117c",
 CellID->24711302]
}, Open  ]],
Cell[CellGroupData[{
Cell[811705, 18497, 352, 8, 28, "Input",ExpressionUUID->"ca3a712f-575c-4145-8375-deb4cb2c96f5",
 CellID->257223168],
Cell[812060, 18507, 3686, 114, 52, "Output",ExpressionUUID->"e76c9714-afbd-4cee-976f-8bf79430b2e3",
 CellID->177229318]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

