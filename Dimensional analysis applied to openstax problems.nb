(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    825897,      17774]
NotebookOptionsPosition[    691090,      15139]
NotebookOutlinePosition[    804661,      17309]
CellTagsIndexPosition[    804305,      17296]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Applications of dimensional analysis in physics", "Title",
 CellChangeTimes->{{3.8770254110053654`*^9, 3.8770254213263845`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.877025423689163*^9, 3.8770254292345223`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["\<\
I work through applications of dimensional analysis in physics.\
\>", "Abstract",
 CellChangeTimes->{{3.877025431532585*^9, 3.8770254392420993`*^9}},
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Dimensional Combinations", "Section",
 CellChangeTimes->{{3.8770254459503703`*^9, 3.8770254487165995`*^9}},
 CellID->413375896,ExpressionUUID->"c4d25fab-c564-4743-bd0f-507303832e16"],

Cell["I will work through some exercises in OpenStax.", "Text",
 CellChangeTimes->{{3.8770257103459816`*^9, 3.8770257195486155`*^9}},
 CellID->174357538,ExpressionUUID->"3bb51974-759d-441a-9318-79b56c45bd17"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9TsfPaP+0G3D6OjkyoLXhg/eumNgB7ofGliK3WXRUtwbaEvRJN8IvmM+rRbz
uXz+TD53sl2auQ1ZjroTNxFOYatneU3B22nbmxuzXk5POm2Fmr3tTvcfF/sA
wHHG9wlsLQU261KpJrsImo3684J7wekrK5u1xpshdvrU7rV1XSZ3m49o8iqh
ctsNdsqcWR50ay0QDkl9OBf168rK7FjW8ceO3NSNUuUo9FVt5ZzbhsUjiUpr
1NaLF3N+EZ3RselP12u9c9gMdj9sNhqNN5WlM76lmCrVGqIpaOe/Xi64F+Su
3Ku0LUnzyILD6+WlmfHcaDaXy+UvTC89MxEqlfaLqzM2Pf9Jaf1Zufys/Oju
/PS5rOMwB7exLcLLvIjmm0b9H33FSqnZPvK22vbvGo36oytemeafy18fqX0A
ACRTX53Qn4bpyhiFhRWpBAfDX6bmxw8P9z+fdpzp9WGP9GyU50fbZrlQfiN/
F7ywOwtdOWLUrc/oTT/puoVMpqM77q9f9pVUZu7J0Q40r0oTjjP1qatJ6jvr
xQteNpx8YbO3s2+N5/PZ9lDkrZjrNe6KPCc/v7ZTf9Ooba5cyXtlPDlV6qET
u7v90J9K0BoBt7savuz4bqtMZnqdeIjc/uhais+P1FL4Cydz19b92ZP9J3Pu
Pxcquo4YGj2WduOKLwnBtHL2tlL9BP5JQ1ubiJFhPzz2tv3VyriiEx6lfeg/
nqciHGj8f3ShE/YKb1rzKJ0qnrEKnyauroaOgW9cJaaDi2v6jApYWz5DTBIF
uBrPmXg4hPXE0qqXJh1nvFghB9lWxYtt7Y7ki6td/4BY6AQZ3zIH83tH+hi6
7ouxO8y43qotn/PyMVqo9M6/5Cnk8duVFCNRo1apWHlF3ZUaztwT5icNf+1G
L41GV/thoGlMOoY7jhhopHjiWGEpPsq6ITfW+eyA7yqFUcGr6Qv+bGEzuQ49
z6o3m9z+/7kzU/Orlbrcr8IWoZx4PsHcRv5O575wnTVg7Mlxtu3B0gN59qED
+zCUQKwmcmzFKlfwbuVgNU33MjZTQRENusd+adKXPHIBm5XFXObccm2oH/9W
o7yQC3wvrSaxfCUIt+tKoCAz4hg8IG6/Smdh3A1bMmOzc56ToStjpTF+dTnZ
aWaYaz6ZC5xun/fGufqmXDidm3vs3ZFqw2RsndhBcU6OFRlfcSjVsr2aZOxm
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
49aOxWpw7DgjS9xPov0lXCEaZN5V2mxAXfN5MX/RK6I34gfjbKu+8UmhcDee
U+5iP1S/1RLylfOc6M1R6MkPn8TGk7n+7X3UiVitLrVfeNlQiv1HU+6P4jDO
wCfJBqyG6jRIOVh+xfnxAl2n2CqKhjbs2njpIbTtjUrhdLRg342yCB4H991N
dC+4cy4Zwe0Q+CV6tYpzMCHkifexN5QkiFVi6oRPhHnkFX2JUZjU7LlGRKmS
IrSZXCLqGo1kMhWrtJtXNQTTYQPiXeVc+dbJzwB5DTOZpagQPn9m9SyJVdqw
s0U2qOqOxSp1STqxGh3F4iXu7onk9G1eef/Z8tKT8N61lbFw8bWrysjIzE3P
SaV1LSqoLDgZ4VU92K/GsV33RItVjZGxE6v1BxOZ7Nz6K+9QTu9v/ZrfcuoF
yz3Gn5tryzbGcbFfvrO0EUaIuWcx+K3jjfXkvkyBhrca4m3oUKz6ajz3IROL
2Nx5tFgKi9zcuOYEmXe1QZ5aFB8oENU428V+KA1Mevt2aCpWo4lvz6T0ee+j
TsSqTCCEvMmawzhglX1TCHytQYAB5UQNvTBWM86CYTe0G0No25svHxVWw4fG
3R0ueBzcwFpxXaG/vT9v878mfFxvP6oBQhOzKvR/Is6HeeTpKXUfJtSTilSR
ZvlC5BjUIEvKyUT2QaC2upIkEzUDYSJW+dpIXF6qfcqUExziu4AUAFgQcyvW
OZcHw3oWW0o9SWNT1enEqiak2c89c1+zkMiwr7az81375Zedeeknrs4JHFbe
UELpDc5hZX8Hf4TiFNQXvsPEeoUv6X5XGRnLdVge7vydqtv1yYB7k3qcipOv
OBe2jjfWUxIikEBdCCoL/GPGGEQ7eEEpzvht9SyiN+z6mffm+qm24P3/Et3s
h9LAZDRfbGiOmNlAb++jiRV10/eaThZYqVMLXnuJVeeB9ztY3ROoWW6mIOh+
5NuK5s76t1fJUAy1bfccp34beTUpNFcY6Mu+3AWBNGn9EsNKv8Wq/yu9WGW/
YIIkWW9qN8WqHLdAyD/lbgBMUslrnI9IrIqfR8/soernUSn4erYSq0xUai/E
Kls6LnDCR7qvmUGLDfXy7Zy7J9IgbL7X8sYL/83aj2kkWlbjsNJAvapXP/Y0
gv36etKz2j2x6s3fSZuuh921H0eTB7twxypuf6dc3uUbwlNc/ojvjzWEjQpc
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAGEj+PwVckjw=
    "], {{0, 115.20998486535498`}, {546.6473761059291, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{546.6473761059291, 115.20998486535498`},
  PlotRange->{{0, 546.6473761059291}, {0, 115.20998486535498`}}]], "Input",
 CellLabel->"In[115]:=",
 CellID->227745308,ExpressionUUID->"3fbfd135-b113-45d6-aa07-99e1637c0d0d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9TsfPaP+0G3D6OjkyoLXhg/eumNgB7ofGliK3WXRUtwbaEvRJN8IvmM+rRbz
uXz+TD53sl2auQ1ZjroTNxFOYatneU3B22nbmxuzXk5POm2Fmr3tTvcfF/sA
wHHG9wlsLQU261KpJrsImo3684J7wekrK5u1xpshdvrU7rV1XSZ3m49o8iqh
ctsNdsqcWR50ay0QDkl9OBf168rK7FjW8ceO3NSNUuUo9FVt5ZzbhsUjiUpr
1NaLF3N+EZ3RselP12u9c9gMdj9sNhqNN5WlM76lmCrVGqIpaOe/Xi64F+Su
3Ku0LUnzyILD6+WlmfHcaDaXy+UvTC89MxEqlfaLqzM2Pf9Jaf1Zufys/Oju
/PS5rOMwB7exLcLLvIjmm0b9H33FSqnZPvK22vbvGo36oytemeafy18fqX0A
ACRTX53Qn4bpyhiFhRWpBAfDX6bmxw8P9z+fdpzp9WGP9GyU50fbZrlQfiN/
F7ywOwtdOWLUrc/oTT/puoVMpqM77q9f9pVUZu7J0Q40r0oTjjP1qatJ6jvr
xQteNpx8YbO3s2+N5/PZ9lDkrZjrNe6KPCc/v7ZTf9Ooba5cyXtlPDlV6qET
u7v90J9K0BoBt7savuz4bqtMZnqdeIjc/uhais+P1FL4Cydz19b92ZP9J3Pu
Pxcquo4YGj2WduOKLwnBtHL2tlL9BP5JQ1ubiJFhPzz2tv3VyriiEx6lfeg/
nqciHGj8f3ShE/YKb1rzKJ0qnrEKnyauroaOgW9cJaaDi2v6jApYWz5DTBIF
uBrPmXg4hPXE0qqXJh1nvFghB9lWxYtt7Y7ki6td/4BY6AQZ3zIH83tH+hi6
7ouxO8y43qotn/PyMVqo9M6/5Cnk8duVFCNRo1apWHlF3ZUaztwT5icNf+1G
L41GV/thoGlMOoY7jhhopHjiWGEpPsq6ITfW+eyA7yqFUcGr6Qv+bGEzuQ49
z6o3m9z+/7kzU/Orlbrcr8IWoZx4PsHcRv5O575wnTVg7Mlxtu3B0gN59qED
+zCUQKwmcmzFKlfwbuVgNU33MjZTQRENusd+adKXPHIBm5XFXObccm2oH/9W
o7yQC3wvrSaxfCUIt+tKoCAz4hg8IG6/Smdh3A1bMmOzc56ToStjpTF+dTnZ
aWaYaz6ZC5xun/fGufqmXDidm3vs3ZFqw2RsndhBcU6OFRlfcSjVsr2aZOxm
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
49aOxWpw7DgjS9xPov0lXCEaZN5V2mxAXfN5MX/RK6I34gfjbKu+8UmhcDee
U+5iP1S/1RLylfOc6M1R6MkPn8TGk7n+7X3UiVitLrVfeNlQiv1HU+6P4jDO
wCfJBqyG6jRIOVh+xfnxAl2n2CqKhjbs2njpIbTtjUrhdLRg342yCB4H991N
dC+4cy4Zwe0Q+CV6tYpzMCHkifexN5QkiFVi6oRPhHnkFX2JUZjU7LlGRKmS
IrSZXCLqGo1kMhWrtJtXNQTTYQPiXeVc+dbJzwB5DTOZpagQPn9m9SyJVdqw
s0U2qOqOxSp1STqxGh3F4iXu7onk9G1eef/Z8tKT8N61lbFw8bWrysjIzE3P
SaV1LSqoLDgZ4VU92K/GsV33RItVjZGxE6v1BxOZ7Nz6K+9QTu9v/ZrfcuoF
yz3Gn5tryzbGcbFfvrO0EUaIuWcx+K3jjfXkvkyBhrca4m3oUKz6ajz3IROL
2Nx5tFgKi9zcuOYEmXe1QZ5aFB8oENU428V+KA1Mevt2aCpWo4lvz6T0ee+j
TsSqTCCEvMmawzhglX1TCHytQYAB5UQNvTBWM86CYTe0G0No25svHxVWw4fG
3R0ueBzcwFpxXaG/vT9v878mfFxvP6oBQhOzKvR/Is6HeeTpKXUfJtSTilSR
ZvlC5BjUIEvKyUT2QaC2upIkEzUDYSJW+dpIXF6qfcqUExziu4AUAFgQcyvW
OZcHw3oWW0o9SWNT1enEqiak2c89c1+zkMiwr7az81375Zedeeknrs4JHFbe
UELpDc5hZX8Hf4TiFNQXvsPEeoUv6X5XGRnLdVge7vydqtv1yYB7k3qcipOv
OBe2jjfWUxIikEBdCCoL/GPGGEQ7eEEpzvht9SyiN+z6mffm+qm24P3/Et3s
h9LAZDRfbGiOmNlAb++jiRV10/eaThZYqVMLXnuJVeeB9ztY3ROoWW6mIOh+
5NuK5s76t1fJUAy1bfccp34beTUpNFcY6Mu+3AWBNGn9EsNKv8Wq/yu9WGW/
YIIkWW9qN8WqHLdAyD/lbgBMUslrnI9IrIqfR8/soernUSn4erYSq0xUai/E
Kls6LnDCR7qvmUGLDfXy7Zy7J9IgbL7X8sYL/83aj2kkWlbjsNJAvapXP/Y0
gv36etKz2j2x6s3fSZuuh921H0eTB7twxypuf6dc3uUbwlNc/ojvjzWEjQpc
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAGEj+PwVckjw=
    "], {{0, 115.20998486535498`}, {546.6473761059291, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{546.6473761059291, 115.20998486535498`},
  PlotRange->{{0, 546.6473761059291}, {0, 115.20998486535498`}}]], "Output",
 CellChangeTimes->{3.877027492241206*^9},
 CellLabel->"Out[115]=",
 CellID->307376642,ExpressionUUID->"0d56220d-c7b0-40b6-b117-7d74b93e4437"]
}, Open  ]],

Cell["\<\
This is what happens if I have an equation that is dimensionally unbalanced:\
\>", "Text",
 CellChangeTimes->{{3.8770257946592045`*^9, 3.877025809889786*^9}},
 CellID->118118011,ExpressionUUID->"13d74685-2182-4195-9f17-9419a2695d74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<l\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\"\<LengthUnit\>\"", "}"}], ",", "1"}], "}"}]}], "]"}], 
    "==", 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<m\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\"\<MassUnit\>\"", "}"}], ",", "1"}], "}"}]}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<l\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\"\<LengthUnit\>\"", "}"}], ",", "1"}], "}"}]}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", "l", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877025740719308*^9, 3.8770258150096397`*^9}},
 CellLabel->"In[116]:=",
 CellID->247200828,ExpressionUUID->"4c061205-d387-41d0-b13d-b56717e1a09d"],

Cell[BoxData[
 TemplateBox[{
  "NondimensionalizationTransform", "unbal", 
   "\"Equation is dimensionally unbalanced.\"", 2, 116, 20, 
   16935459654180758396, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8770257887831345`*^9, 3.8770274926787047`*^9},
 CellLabel->"During evaluation of In[116]:=",
 CellID->266227710,ExpressionUUID->"85e7fac6-50da-40ec-bb01-28e6a0c6cc88"],

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\<\"l\"\>", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\<\"LengthUnit\"\>", "}"}], ",", "1"}], "}"}]}], "]"}], 
    "\[Equal]", 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\<\"m\"\>", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\<\"MassUnit\"\>", "}"}], ",", "1"}], "}"}]}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\<\"l\"\>", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "\<\"LengthUnit\"\>", "}"}], ",", "1"}], "}"}]}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", "l", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8770257888143926`*^9, 3.877027493022458*^9},
 CellLabel->"Out[116]=",
 CellID->12104400,ExpressionUUID->"691dc36b-bacd-46ba-99ee-76afc2f76147"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "=", 
    RowBox[{
     SuperscriptBox["\[Pi]r", "2"], "h"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bd472f50-b6fc-4f6b-a37a-6df516166366"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.877025826887535*^9, 3.877025835826363*^9}, 
   3.8770261270039015`*^9},
 CellLabel->"In[117]:=",
 CellID->544636926,ExpressionUUID->"71a09c6a-ec3e-40ea-81b0-b7ea9c465ebf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equationA", "=", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalV]\>\"", ",", "\"\<Volume\>\""}], "]"}], "==", 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], "2"], 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8770259491645083`*^9, 3.8770259511348095`*^9}},
 CellLabel->"In[1]:=",
 CellID->550266101,ExpressionUUID->"08e78a19-9f75-4a3a-927b-6e2ad3182ca8"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  RowBox[{"\[Pi]", " ", 
   TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
      "TextStyling"]& )], " ", 
   SuperscriptBox[
    TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )], "2"]}]}]], "Output",
 CellChangeTimes->{3.877025951804285*^9, 3.87702749344433*^9},
 CellLabel->"Out[1]=",
 CellID->163806116,ExpressionUUID->"98469697-6545-4144-ad3c-409045ce0326"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], ",", 
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.8770259662140465`*^9, 3.877025986881682*^9}},
 CellLabel->"In[2]:=",
 CellID->268610901,ExpressionUUID->"6af12f74-108a-4338-880c-6d434851a0ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
      "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.877025987504377*^9, 3.8770274939287024`*^9},
 CellLabel->"Out[2]=",
 CellID->377951983,ExpressionUUID->"609046c0-6d7e-4f02-827b-c7e1cf0d641f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalV]\>\"", ",", "\"\<Volume\>\""}], "]"}], ",", 
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], ",", 
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.8770259662140465`*^9, 3.877025986881682*^9}, {
  3.8770262982451496`*^9, 3.877026301149271*^9}},
 CellLabel->"In[3]:=",
 CellID->213366258,ExpressionUUID->"a3a85c07-2011-459a-bc82-ed5b0199230a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
      "TextStyling"]& )], ",", 
   TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
      "TextStyling"]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.877026301518519*^9, 3.8770274942568307`*^9},
 CellLabel->"Out[3]=",
 CellID->158075726,ExpressionUUID->"c39d92db-2a1e-4637-90a6-865156b73d06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationA", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckR]", ",", "\[DoubleStruckH]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877025740719308*^9, 3.8770258511054974`*^9}, {
  3.877025892578787*^9, 3.8770260183569794`*^9}},
 CellLabel->"In[4]:=",
 CellID->42874454,ExpressionUUID->"9c6755b9-2cc3-4836-a4e8-c2aae452bf14"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "\[Pi]"], "\[Equal]", 
  RowBox[{"\[DoubleStruckH]", " ", 
   SuperscriptBox["\[DoubleStruckR]", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.87702594329412*^9, {3.877025973474509*^9, 3.877026019197455*^9}, 
   3.877027494819329*^9},
 CellLabel->"Out[4]=",
 CellID->299765511,ExpressionUUID->"c4af8736-83e6-4c99-8f48-cb3908cf0e2c"]
}, Open  ]],

Cell["This is the nondimensional form of the equation:", "Text",
 CellChangeTimes->{{3.877026025249985*^9, 3.8770260347662477`*^9}},
 CellID->132432358,ExpressionUUID->"75a73010-a286-4954-bc96-9de98e8364a3"],

Cell["NondimensionalizationTransform also computes other data:", "Text",
 CellChangeTimes->{{3.877026044045796*^9, 3.877026057428528*^9}},
 CellID->198273961,ExpressionUUID->"c990f158-a0e1-4e64-804d-6b70d177e25a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationA", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckR]", ",", "\[DoubleStruckH]"}], "}"}], ",", 
   "\"\<PropertyAssociation\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877025740719308*^9, 3.8770258511054974`*^9}, {
  3.877025892578787*^9, 3.8770260183569794`*^9}, {3.877026058708256*^9, 
  3.8770260644667273`*^9}},
 CellLabel->"In[5]:=",
 CellID->675465974,ExpressionUUID->"65ab8177-f9b5-4401-b805-703d88820a74"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["1", "\[Pi]"], "\[Equal]", 
     RowBox[{"\[DoubleStruckH]", " ", 
      SuperscriptBox["\[DoubleStruckR]", "2"]}]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckR]", " ", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckH]", " ", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       FractionBox[
        TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       FractionBox[
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )], 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{"1", "/", "3"}]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{"1", "/", "3"}]]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       FractionBox["1", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       FractionBox["1", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )], 
         RowBox[{"1", "/", "3"}]]]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8770260648676896`*^9, 3.8770274953974543`*^9},
 CellLabel->"Out[5]=",
 CellID->153394662,ExpressionUUID->"0260d12d-6654-4190-807c-b2872064a3fd"]
}, Open  ]],

Cell["I can also include the left term:", "Text",
 CellChangeTimes->{{3.877026341370881*^9, 3.8770263495510674`*^9}},
 CellID->30090891,ExpressionUUID->"cd81b174-ab1b-455b-85e8-793b791f3d1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationA", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\[DoubleStruckCapitalV]", ",", "\[DoubleStruckR]", ",", 
     "\[DoubleStruckH]"}], "}"}], ",", "\"\<PropertyAssociation\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877025740719308*^9, 3.8770258511054974`*^9}, {
  3.877025892578787*^9, 3.8770260183569794`*^9}, {3.877026058708256*^9, 
  3.8770260644667273`*^9}, {3.87702630684544*^9, 3.877026313387947*^9}},
 CellLabel->"In[6]:=",
 CellID->15445010,ExpressionUUID->"dd52f9ca-23e9-4ab9-b4fd-bb88c06faa89"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["\[DoubleStruckCapitalV]", "\[Pi]"], "\[Equal]", 
     RowBox[{"\[DoubleStruckH]", " ", 
      SuperscriptBox["\[DoubleStruckR]", "2"]}]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckCapitalV]", " ", 
        RowBox[{"(", 
         TemplateBox[{
           RowBox[{"K", "[", "1", "]"}], 
           RowBox[{
             SuperscriptBox["\"m\"", "3"]}], "meters cubed", 
           SuperscriptBox["\"Meters\"", "3"]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckR]", " ", 
        RowBox[{"(", 
         TemplateBox[{
           SuperscriptBox[
            RowBox[{"K", "[", "1", "]"}], 
            RowBox[{"1", "/", "3"}]], "\"m\"", "meters", "\"Meters\""},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckH]", " ", 
        RowBox[{"(", 
         TemplateBox[{
           SuperscriptBox[
            RowBox[{"K", "[", "1", "]"}], 
            RowBox[{"1", "/", "3"}]], "\"m\"", "meters", "\"Meters\""},
          "Quantity"], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalV]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            RowBox[{"K", "[", "1", "]"}]], 
           RowBox[{"\"per \"", "\[InvisibleSpace]", 
             SuperscriptBox["\"meter\"", "3"]}], "per meters cubed", 
           FractionBox["1", 
            SuperscriptBox["\"Meters\"", "3"]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"K", "[", "1", "]"}], 
             RowBox[{"1", "/", "3"}]]], 
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
           "reciprocal meters", 
           FractionBox["1", "\"Meters\""]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"K", "[", "1", "]"}], 
             RowBox[{"1", "/", "3"}]]], 
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
           "reciprocal meters", 
           FractionBox["1", "\"Meters\""]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         RowBox[{"K", "[", "1", "]"}], 
         RowBox[{
           SuperscriptBox["\"m\"", "3"]}], "meters cubed", 
         SuperscriptBox["\"Meters\"", "3"]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         SuperscriptBox[
          RowBox[{"K", "[", "1", "]"}], 
          RowBox[{"1", "/", "3"}]], "\"m\"", "meters", "\"Meters\""},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         SuperscriptBox[
          RowBox[{"K", "[", "1", "]"}], 
          RowBox[{"1", "/", "3"}]], "\"m\"", "meters", "\"Meters\""},
        "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalV]", "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          RowBox[{"K", "[", "1", "]"}]], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", 
           SuperscriptBox["\"meter\"", "3"]}], "per meters cubed", 
         FractionBox["1", 
          SuperscriptBox["\"Meters\"", "3"]]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"K", "[", "1", "]"}], 
           RowBox[{"1", "/", "3"}]]], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
         "reciprocal meters", 
         FractionBox["1", "\"Meters\""]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{"K", "[", "1", "]"}], 
           RowBox[{"1", "/", "3"}]]], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
         "reciprocal meters", 
         FractionBox["1", "\"Meters\""]},
        "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877026313819434*^9, 3.877027495938154*^9},
 CellLabel->"Out[6]=",
 CellID->285311813,ExpressionUUID->"d0472815-bec2-4e66-b418-40325fddb6a7"]
}, Open  ]],

Cell["I can even change the unit system to the Planck units:", "Text",
 CellChangeTimes->{{3.877026070177098*^9, 3.8770260814725647`*^9}},
 CellID->432224002,ExpressionUUID->"7ba57600-e2a6-4aca-a6fc-ce453de7cae2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationA", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckR]", ",", "\[DoubleStruckH]"}], "}"}], ",", 
   "\"\<PropertyAssociation\>\"", ",", 
   RowBox[{"UnitSystem", "->", "\"\<PlanckUnits\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877025740719308*^9, 3.8770258511054974`*^9}, {
  3.877025892578787*^9, 3.8770260183569794`*^9}, {3.877026058708256*^9, 
  3.877026089699142*^9}},
 CellLabel->"In[7]:=",
 CellID->27433761,ExpressionUUID->"e9cde61d-6571-4626-bb7d-3895c17d74a0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     FractionBox[
      TemplateBox[{"1"},
       "C"], "\[Pi]"], "\[Equal]", 
     RowBox[{"\[DoubleStruckH]", " ", 
      SuperscriptBox["\[DoubleStruckR]", "2"]}]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckR]", " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]]}], 
           "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 3/2", 
           FractionBox[
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}], 
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"3", "/", "2"}]]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckH]", " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]]}], 
           "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 3/2", 
           FractionBox[
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}], 
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"3", "/", "2"}]]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{
        TemplateBox[{"1"},
         "C"], " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
             SuperscriptBox["\"\[HBar]\"", 
              RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"9", "/", "2"}]]}], 
           "Newtonian gravitational constant to the 3/2 reduced Planck \
constant to the 3/2 per speed of light to the 9/2", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SuperscriptBox["\"ReducedPlanckConstant\"", 
               RowBox[{"3", "/", "2"}]]}], 
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"9", "/", "2"}]]]},
          "Quantity"], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
           "speed of light to the 3/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"3", "/", "2"}]], 
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
           "speed of light to the 3/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"3", "/", "2"}]], 
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"9", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
             SuperscriptBox["\"\[HBar]\"", 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", "\")\""}], 
           "speed of light to the 9/2 per Newtonian gravitational constant to \
the 3/2 reduced Planck constant to the 3/2", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"9", "/", "2"}]], 
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SuperscriptBox["\"ReducedPlanckConstant\"", 
               RowBox[{"3", "/", "2"}]]}]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]]}], 
         "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 3/2", 
         FractionBox[
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}], 
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"3", "/", "2"}]]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]]}], 
         "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 3/2", 
         FractionBox[
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}], 
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"3", "/", "2"}]]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
           SuperscriptBox["\"\[HBar]\"", 
            RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"9", "/", "2"}]]}], 
         "Newtonian gravitational constant to the 3/2 reduced Planck constant \
to the 3/2 per speed of light to the 9/2", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["\"ReducedPlanckConstant\"", 
             RowBox[{"3", "/", "2"}]]}], 
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"9", "/", "2"}]]]},
        "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
           "\[InvisibleSpace]", 
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
         "speed of light to the 3/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"3", "/", "2"}]], 
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}]]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckH]", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
           "\[InvisibleSpace]", 
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
         "speed of light to the 3/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"3", "/", "2"}]], 
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"9", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
           SuperscriptBox["\"\[HBar]\"", 
            RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", "\")\""}], 
         "speed of light to the 9/2 per Newtonian gravitational constant to \
the 3/2 reduced Planck constant to the 3/2", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"9", "/", "2"}]], 
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", 
             RowBox[{"3", "/", "2"}]], " ", 
            SuperscriptBox["\"ReducedPlanckConstant\"", 
             RowBox[{"3", "/", "2"}]]}]]},
        "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877026090215684*^9, 3.877027496595823*^9},
 CellLabel->"Out[7]=",
 CellID->221639173,ExpressionUUID->"f03f1bba-26c3-428b-862c-aad202ae0d2f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"A", "=", 
   RowBox[{
    RowBox[{"2", "\[Pi]", " ", 
     SuperscriptBox["r", "2"]}], "+", 
    RowBox[{"2", "\[Pi]", " ", "r", " ", "h"}]}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"69a7678a-c4f2-4690-bd01-bc5365c7e698"]], \
"Subsubsection",
 CellChangeTimes->{{3.8770261207449503`*^9, 3.8770261455002947`*^9}},
 CellLabel->"In[8]:=",
 CellID->45344407,ExpressionUUID->"330d39f8-6c46-410b-9dae-ec17442413d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equationB", "=", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalA]\>\"", ",", "\"\<Area\>\""}], "]"}], "==", 
   RowBox[{
    RowBox[{"2", "\[Pi]", " ", 
     SuperscriptBox[
      RowBox[{"QuantityVariable", "[", 
       RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], "2"]}], 
    "+", 
    RowBox[{"2", "\[Pi]", " ", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], " ", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], 
      "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.877026152350279*^9, 3.877026224750313*^9}},
 CellLabel->"In[1]:=",
 CellID->51172206,ExpressionUUID->"da57dc34-5516-465d-8579-0f6d44b70596"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"\[GothicCapitalA]\"", "\"Area\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " area"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  RowBox[{
   RowBox[{"2", " ", "\[Pi]", " ", 
    TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
       "TextStyling"]& )]}], "+", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    SuperscriptBox[
     TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]}]}]}]], "Output",
 CellChangeTimes->{{3.8770262161350265`*^9, 3.8770262250975657`*^9}, 
   3.877027496923952*^9},
 CellLabel->"Out[1]=",
 CellID->515888857,ExpressionUUID->"0cb20c1c-3862-4c0f-ab61-18100ea15962"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationB", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicCapitalA]\>\"", ",", "\"\<Area\>\""}], "]"}], ",", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckCapitalA]", ",", "\[DoubleStruckR]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770262304718075`*^9, 3.8770262557891493`*^9}},
 CellLabel->"In[2]:=",
 CellID->608436178,ExpressionUUID->"8fed8d1d-9d0d-44d6-a175-1e6e39bee681"],

Cell[BoxData[
 RowBox[{
  FractionBox["\[DoubleStruckCapitalA]", 
   RowBox[{"2", " ", "\[Pi]", " ", "\[DoubleStruckR]"}]], "\[Equal]", 
  RowBox[{"1", "+", "\[DoubleStruckR]"}]}]], "Output",
 CellChangeTimes->{{3.877026244806981*^9, 3.8770262561050143`*^9}, 
   3.8770274975249357`*^9},
 CellLabel->"Out[2]=",
 CellID->393114507,ExpressionUUID->"06e6159f-52ac-4eb8-907a-f4092a062a52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationB", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicCapitalA]\>\"", ",", "\"\<Area\>\""}], "]"}], ",", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckCapitalA]", ",", "\[DoubleStruckR]"}], "}"}], ",", 
   "\"\<PropertyAssociation\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8770262304718075`*^9, 3.8770262557891493`*^9}, {
  3.877026564132374*^9, 3.877026568789581*^9}},
 CellLabel->"In[3]:=",
 CellID->301005610,ExpressionUUID->"439d0e41-cc95-4d83-9770-1c71209ac104"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["\[DoubleStruckCapitalA]", 
      RowBox[{"2", " ", "\[Pi]", " ", "\[DoubleStruckR]"}]], "\[Equal]", 
     RowBox[{"1", "+", "\[DoubleStruckR]"}]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalA]\"", "\"Area\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " area"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckCapitalA]", " ", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], "2"]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckR]", " ", 
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalA]", "\[Rule]", 
       FractionBox[
        TemplateBox[{"\"\[GothicCapitalA]\"", "\"Area\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " area"}], TooltipStyle -> 
           "TextStyling"]& )], 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], "2"]]}], ",", 
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       FractionBox[
        TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], 
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )]]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[GothicCapitalA]\"", "\"Area\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " area"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )], "2"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[GothicR]\"", "\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalA]", "\[Rule]", 
       FractionBox["1", 
        SuperscriptBox[
         TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], "2"]]}], ",", 
      RowBox[{"\[DoubleStruckR]", "\[Rule]", 
       FractionBox["1", 
        TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
           "TextStyling"]& )]]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877026569089954*^9, 3.877027497966598*^9},
 CellLabel->"Out[3]=",
 CellID->247431360,ExpressionUUID->"bc9afdac-9a87-4ec3-a46d-3b9582c73dec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationB", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicCapitalA]\>\"", ",", "\"\<Area\>\""}], "]"}], ",", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicR]\>\"", ",", "\"\<Radius\>\""}], "]"}], ",", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "\[DoubleStruckCapitalA]", ",", "\[DoubleStruckR]", ",", 
     "\[DoubleStruckH]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8770262304718075`*^9, 3.8770262690189714`*^9}, {
  3.877026531146793*^9, 3.8770265327102175`*^9}},
 CellLabel->"In[4]:=",
 CellID->675966642,ExpressionUUID->"b068c94b-6f24-4268-931b-05e420e1d35c"],

Cell[BoxData[
 RowBox[{
  FractionBox["\[DoubleStruckCapitalA]", 
   RowBox[{
   "2", " ", "\[Pi]", " ", "\[DoubleStruckH]", " ", "\[DoubleStruckR]"}]], 
  "\[Equal]", 
  RowBox[{"1", "+", 
   FractionBox["\[DoubleStruckR]", "\[DoubleStruckH]"]}]}]], "Output",
 CellChangeTimes->{3.8770262696506157`*^9, 3.8770265331801057`*^9, 
  3.8770274985003824`*^9},
 CellLabel->"Out[4]=",
 CellID->301688976,ExpressionUUID->"ec149445-19ff-43da-9b99-ea5c5d5e39de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "bh"}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"7854b4c4-a6e2-4d1d-aa5b-c53c07b12e5c"]], \
"Subsubsection",
 CellChangeTimes->{{3.8770261207449503`*^9, 3.8770261455002947`*^9}, {
  3.877026440444538*^9, 3.8770264486065536`*^9}},
 CellLabel->"In[5]:=",
 CellID->401477280,ExpressionUUID->"4db6a9f7-ffdb-4ec4-a34b-b90d064f9eef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equationC", "=", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalV]\>\"", ",", "\"\<Volume\>\""}], "]"}], "==", 
   RowBox[{
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<\[GothicB]\>\"", ",", "\"\<BaseRadius\>\""}], "]"}], 
    FractionBox[
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], "]"}], 
     "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.877026152350279*^9, 3.877026224750313*^9}, {
  3.8770264510946193`*^9, 3.8770264904731283`*^9}},
 CellLabel->"In[1]:=",
 CellID->228296512,ExpressionUUID->"9976f723-bc92-4eab-a714-c5c99280a3f2"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"\[GothicB]\"", "\"BaseRadius\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " base radius"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
       "TextStyling"]& )]}], "2"]}]], "Output",
 CellChangeTimes->{{3.8770262161350265`*^9, 3.8770262250975657`*^9}, {
   3.8770264868683605`*^9, 3.8770264908579473`*^9}, 3.8770274990609937`*^9},
 CellLabel->"Out[1]=",
 CellID->70475713,ExpressionUUID->"1c33a7c6-3682-49f6-98f0-3f9f0a94bef1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationC", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicB]\>\"", ",", "\"\<BaseRadius\>\""}], "]"}], ",", 
     RowBox[{"QuantityVariable", "[", 
      RowBox[{"\"\<\[GothicH]\>\"", ",", "\"\<Height\>\""}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckB]", ",", "\[DoubleStruckH]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770262304718075`*^9, 3.8770262557891493`*^9}, {
  3.877026499407556*^9, 3.8770265135227375`*^9}},
 CellLabel->"In[2]:=",
 CellID->481105565,ExpressionUUID->"e4001123-6ff1-48b3-896e-24f23361a177"],

Cell[BoxData[
 TemplateBox[{
  "NondimensionalizationTransform", "unbal", 
   "\"Equation is dimensionally unbalanced.\"", 2, 2, 21, 
   16935459654180758396, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8770265139544067`*^9, 3.877027499420367*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->87865638,ExpressionUUID->"7cfd59f3-486d-435c-b909-5ba457695d0d"],

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      TemplateBox[{"\"\[GothicB]\"", "\"BaseRadius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " base radius"}], TooltipStyle -> 
         "TextStyling"]& )], " ", 
      TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
         "TextStyling"]& )]}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"\[GothicB]\"", "\"BaseRadius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " base radius"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[GothicH]\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckB]", ",", "\[DoubleStruckH]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.877026244806981*^9, 3.8770262561050143`*^9}, 
   3.877026514170619*^9, 3.877027499779744*^9},
 CellLabel->"Out[2]=",
 CellID->136203013,ExpressionUUID->"0217bf6e-cea7-4437-8991-be3e2a15cb91"]
}, Open  ]],

Cell["This is not dimensionally consistent", "Text",
 CellChangeTimes->{{3.877026536781571*^9, 3.8770265449771757`*^9}},
 CellID->150323186,ExpressionUUID->"79f9dd1d-ab2d-45ca-9b02-154a7f83229e"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"V", "=", 
   SuperscriptBox["\[Pi]d", "2"]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"9d13f55b-1cf8-4cd5-8243-388df407f556"]], \
"Subsubsection",
 CellChangeTimes->{{3.877026579891967*^9, 3.877026583494228*^9}},
 CellLabel->"In[3]:=",
 CellID->71073816,ExpressionUUID->"0856d6c1-89c3-44a4-9dce-68d1dea8d638"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equationD", "=", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalV]\>\"", ",", "\"\<Volume\>\""}], "]"}], "==", 
   RowBox[{"\[Pi]", " ", 
    RowBox[{"QuantityVariable", "[", 
     RowBox[{"\"\<\[GothicD]\>\"", ",", "\"\<Distance\>\""}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8770265903747025`*^9, 3.877026604618637*^9}},
 CellLabel->"In[1]:=",
 CellID->409813951,ExpressionUUID->"d76c0c50-db47-443e-8b51-ba5125dc7983"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  RowBox[{"\[Pi]", " ", 
   TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
    "QuantityVariable",
    DisplayFunction->(TooltipBox[
      StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
      RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
      "TextStyling"]& )]}]}]], "Output",
 CellChangeTimes->{3.877026606172487*^9, 3.8770275004636745`*^9},
 CellLabel->"Out[1]=",
 CellID->213800858,ExpressionUUID->"6e461cb1-72e0-4745-aa55-feec514b3c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationD", ",", 
   RowBox[{"{", 
    TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
       "TextStyling"]& )], "}"}], ",", 
   RowBox[{"{", "\[DoubleStruckD]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877026607083578*^9, 3.8770266320230722`*^9}},
 CellLabel->"In[2]:=",
 CellID->423314643,ExpressionUUID->"541df5ee-b9b6-46d9-bec8-b2b5e08ef1b1"],

Cell[BoxData[
 TemplateBox[{
  "NondimensionalizationTransform", "unbal", 
   "\"Equation is dimensionally unbalanced.\"", 2, 2, 22, 
   16935459654180758396, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.87702661329055*^9, 3.877026632545825*^9}, 
   3.8770275009324446`*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->233872994,ExpressionUUID->"ed99c996-724f-4b25-9576-9893fd1d5bfb"],

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    RowBox[{"\[Pi]", " ", 
     TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
        "TextStyling"]& )]}]}], ",", 
   RowBox[{"{", 
    TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
       "TextStyling"]& )], "}"}], ",", 
   RowBox[{"{", "\[DoubleStruckD]", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8770266134911366`*^9, 3.8770266327620564`*^9}, 
   3.8770275013230486`*^9},
 CellLabel->"Out[2]=",
 CellID->146447559,ExpressionUUID->"eac115f8-498a-41a0-9724-055e8e8f8d4c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "V=\[Pi] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["d", "3"], "/", "6"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e0bfbf03-3e29-4969-98d5-cd3fb8ee9085"]
}], "Subsubsection",
 CellChangeTimes->{{3.8770266434852285`*^9, 3.877026648757244*^9}},
 CellLabel->"In[3]:=",
 CellID->141707903,ExpressionUUID->"d2a1d2f3-a351-4adc-a4ef-a59d60d71bc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equationE", "=", 
  RowBox[{
   RowBox[{"QuantityVariable", "[", 
    RowBox[{"\"\<\[GothicCapitalV]\>\"", ",", "\"\<Volume\>\""}], "]"}], "==", 
   RowBox[{"\[Pi]", " ", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"QuantityVariable", "[", 
       RowBox[{"\"\<\[GothicD]\>\"", ",", "\"\<Distance\>\""}], "]"}], "3"], 
     "6"]}]}]}]], "Input",
 CellChangeTimes->{{3.877026651174573*^9, 3.87702668299772*^9}},
 CellLabel->"In[1]:=",
 CellID->29671965,ExpressionUUID->"a8fd3600-c852-4076-a428-af5871302109"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
   "QuantityVariable",
   DisplayFunction->(TooltipBox[
     StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> False], 
     RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
     "TextStyling"]& )], "\[Equal]", 
  FractionBox[
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox[
     TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
        "TextStyling"]& )], "3"]}], "6"]}]], "Output",
 CellChangeTimes->{3.8770266833670254`*^9, 3.877027502057428*^9},
 CellLabel->"Out[1]=",
 CellID->203029962,ExpressionUUID->"ab8847b4-255c-4103-a00b-783971c843d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NondimensionalizationTransform", "[", 
  RowBox[{"equationE", ",", 
   RowBox[{"{", 
    TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
       "TextStyling"]& )], "}"}], ",", 
   RowBox[{"{", "\[DoubleStruckD]", "}"}], ",", 
   "\"\<PropertyAssociation\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877026685785538*^9, 3.8770267161117983`*^9}},
 CellLabel->"In[2]:=",
 CellID->50675286,ExpressionUUID->"4164f25c-d1b0-4566-b573-13bbb98a1b18"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     FractionBox["6", "\[Pi]"], "\[Equal]", 
     SuperscriptBox["\[DoubleStruckD]", "3"]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )], "\[Rule]", 
      RowBox[{"\[DoubleStruckD]", " ", 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{"1", "/", "3"}]]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[DoubleStruckD]", "\[Rule]", 
      FractionBox[
       TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
          "TextStyling"]& )], 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{"1", "/", "3"}]]]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      TemplateBox[{"\"\[GothicD]\"", "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )], "\[Rule]", 
      SuperscriptBox[
       TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], 
       RowBox[{"1", "/", "3"}]]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\[DoubleStruckD]", "\[Rule]", 
      FractionBox["1", 
       SuperscriptBox[
        TemplateBox[{"\"\[GothicCapitalV]\"", "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{"1", "/", "3"}]]]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8770267059645367`*^9, 3.8770267166126175`*^9}, 
   3.8770275023965716`*^9},
 CellLabel->"Out[2]=",
 CellID->17215829,ExpressionUUID->"57492d7a-fe23-445c-a801-22aae3884c05"]
}, Open  ]],

Cell["Challenge problem", "Text",
 CellChangeTimes->{{3.87702672133442*^9, 3.8770267464170675`*^9}},
 CellID->601902263,ExpressionUUID->"39435128-fc56-480f-abc2-7ad5fb114e0b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvW2LZNl17ylm3szL+QrzLebtxKscBAX2lBEUCPpejesiSDSgGjNqDBa+
qBhQYcjE4MJgYTCti2hBkWJAAlMG0Qa5BUn2i0uDocFQ3IYEQ4Og4EJDQ0zG
edzree1zTkSciPz/EKIr48R+WHuttf9n731O/C//8f/64+f/w7e+9a0X/9PD
//3xf/h//rcf/vA/fPh//M8P//iTH7z4/n/6wZ/+n//7D/7vP/1Pf/rD//U/
/o8Pf/zy4dqrh//Y/fcWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAjsb9z//kWwU/+V31BXbRby43Add32/ubh6sub+4X7dW2
Lbat43a7vb3u/uP8mWfP9ttvlh6NbMWLu8HBeUSedkRvKZrQJJm8we+u2rQz
m91AW/56d13kuBn2aex7pTSWptYgbJqL2TVjeiTp+Nh+u9joNOQmIP6lukR0
9vF++Bhfm0lvSTRrnkGjSQnY8IJ5rCAPH4L/9vM//pbCT/4lfYHLEfVqWfUi
enWJRNrMYov7Kgd69ahUetqyE3SahVxxBXnySHq1nYA0fyWzWz/JTTNRWxQf
Jl1qmlV0l7Om3imtXFYkZHxDXHPyenV2RGg3F7OYWyDv0f5nsYPp1cRgNQ7p
xppx53eXv+AgHTl9hoXTP/75f2v/8rufkEXU8II6mqGXgbMXoWLUNbPAk9Cr
84BenQn06mE5vF4tpjDpr50OZAKmusZyjmPD1OnhokD5F9qey0sRWgcYuBXo
Vcbik4LC+elVzmPSq/JeT8Ralw3GS7oMMBQbXgBS9Gunf/xfCrv9y09GgRpe
UMnB9eqSeQ969SAVQ68eBujVSfC1U+GvzQXMIJUtFMsxdJjULGpVsbv44evy
6IJ3mGEhoFenFQC9uhq9qoYV/WMrPqnHkr2X8AKQY3V6lWxR6bnXWdgYiuN7
QI2rkBAYIq6/fWo9lk0UfRV6gUblbK7pY8Gdg+gkSMOnP8BGCmhbZp2RU4Qf
60J4R7m7IDy0s69mp8/+tYWXltTWstgMyPd3WOI1fMBGtFYmW1rm8JHrV6wd
1OV6sUFKEBJmtisaoVp+Ma1JLIPvhqPpCnGUmumezSma4CERMV5gzBpJVaPK
gKUVkdQGbaNFCjJ18pD9SKvGj+YgXKyvgh820AZUv6YfncAfknOB9q3y6tEx
ugKHSWG4Koy1Md6VHrXF8rlMJq6iKKNj/gFIVnU/suHtVVjCtpgRZqUOUZ+T
h3uT0gypuCstJLGD4A6W0Uj33lAfyiJIwwskzYe8+20rLCOvYN1g/wzb/cPm
fv+XP/n5feqCOly9einPeBRhrp620oc7rVdvhugT8ox4RFqv6kfC/EhXj8cU
RtLPvqj0vWN61SjByijmaMhlkH00W63YSn4i6vtB5J7TWdto1ZBMbB/QUa+n
DVBP0LWWNP3KaObYqdtr3VJiy0mrt84Vxb62VawxQvoBQnr7oHYlnXun61U9
I2WXj8yHmObJb4rSGGcOlfdunVmEXm1vE+68+50I3fmVe1LDAo5eVRyCn5+0
PcrB0qs3g+cbetWLNV8CaXLFXPC05KUaekMBzvHIpF71D1gm9GqQOnL1sTys
TgWRJCj8ZAm9qkK8SLtP3JZJJrwgbR4NOUbnDXv2X2rR8IIKPL1aGl+k3zYc
yuFQ8rNSF1cydA1/I2JepPRSAUQbVcreAU9WYvbp8klZLzvc0htHkSKFOiTW
kPmWtbxfhVTzyTAaRTt71UGCdC/NZk0dijEiUdEq7Vm94fpy3JXU0bSqa1Hs
AxTlGNIgz8jdNzF++y3Hr/o+K/bnyyZiEu97MtkVlRWdtlKlVVozKP2Xipbw
cvqZTpwQS8unOXpVcYn0XqStV7WJduL+qaJXeTCWNwXjlf0Gx9gpe7FuJL/i
qiwQca+bfh7A84cJcwEtXLcDd1GeP81Yi563koYKDj4Jv1LSdWkEuYTLBiI8
DxCUwHtUmzoEQR7WE0vvGOWdprLQzUS+rVfta3zYI5CeHG1aEl4gkbPerTJ5
Eq94HHr1/r+oT/9/61v/+XfJC6pw9aq9ymHsnvgCMqFXZYCFQT3poQlTJFiV
lideEvMCr6jMh/UHZYxvtJUWd9n7abZSsdsDEqe7f3R7cOQshzNqgV710J/d
Jslfd3iaW1RHlcUW9tevCWallCvqu8y7vsReoaBvhtKytGuCCZ0XN0evirry
Ye6+JIpv1Wl2yKAu9mpq8+q6vLIMgR1cr8ozdf3t5IxziQvqVdMfJs0F9LJA
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
vjH+u58qlc3ZRPbr2hxHhBW8PXWl6ddUzkok6ncWu7oT+7yDygmCUVvE81pS
7zY1rTVrTEVNhoS+DRvTtdxoTFGIX14cHcywTP+4Ztddkc7gqfMATpvlDb4V
fuWfo3l/UnLbRzotCzC0qa9eppxffXR61TqzJ/WAznA2SZlQas6vmoUMhVnb
FY5b5p63KgLZ3BPxHVTbHiB6VZ5JY8FS6lXlNqooih4zM4tVs1OdXjVztSLI
/SVux3mSjmHQtEG00/Ilr/v9+UwDESZ1/Ur6lXKZtdfmnRnjJkrEuDZyUq/a
gZMoIS6kOvpi32AXcme2LFB6eBFWqYjgjTJjP1XaBJEgKMy+86Jhzh3vB6sP
GgWZSquads/+VkVri+bVR42B5lOGsKnqvjnBlW7As4q2ZqhR3iGzbXQy/7oL
O8qnpIRJ51eLXkgLWAYUPmZ1uz9oXZ3c9pFOvX5l1EtOr3reDr0a6tXL7jGW
o+pVd7N+Kb3qHpS1d5ahV13nmadX2wKm6VV1ZrSo06uiX7FfycUHO/kUpRVr
enZbzkGvqtEX+0ZhSf5HzwJz9Gr5Z/lq4mPoVboY1X5xcHjq+SvQqxWtnRU1
Vmvpp962y/J6tfwz3xRI5hChvIpJPMjSc/VqMBUur1en34yXLJVOvX5l1Euo
V2NvP3+9WrsjpjH5PED5Rb2Q8VtRllM7V6tX804uv1tUMk+vWvsNwXkAasAF
9OqC5wG8LbloigwPY8hkmzkPUNYSh7nMUVX9ypm6UpaMPhOYaLHzAHvWq9XR
lzuo08s/5Sjs8ucBvAZMKW0RvdrLvFK0dAuVbHu9Tq8a5guCN8zk6dbOixpO
3HftC+nux+cB1DqG5BZHhzTs8JdIC008D1A2PpxxpF5NnwcI9zZrk5vC3HTK
Vj+MgYgaEI2R7+3nr1f7OCK9TDxvJV2VXjDcpLDT5sojeCR7k3bQcyDaQX3/
IEq1XlVvsVnYUuOJNvV3UtP1avZ5K8+Yi+jVYRCXft5KyXPxg3jKcxDl+j8p
Xxpw8EeSEIoHOf2NGOWeuq5fvl9JKUWf+tFSpBKApokSMS44vF6tjr644+zr
PF2oXsGcp+4JKa21pRiY9LzVbL3a6b2bK3Z++/rmzSUpqXLjRnleho7IJL2a
be3cqGEYZ9Sl/UV1ue47s2ThGywRySUdOzoUwxbvTvEdhs4vZdvYo3/8vMHw
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
33g875+VrO7dyYbtKmis1/h70oeXd/jKEW8i1PmB6Tp/iErbO8s24EjdGbxI
JWjP8OOxfglHH6kjpPrlOLr1wLno1dp679+w/P4o9OpBRufuekiRRjd5M6BX
FybqnTA49Op0bgt/1324iYirwrpr06sz/eHo8/g56FVfcUZDC716AI5uPXAm
U5WYESIeiV5lHGKs28zpjsUK9Op5A716OJpM4s9iB9Cr85jZnqPP40dvwAK0
t/kLxWBjEGVAj26otXl+FUe3HjiPqao+CqBX90ViLM5Mr97f3rz64bOnT59c
fPvpi796++6bYzcIevWAiEwigV7dM0dvwHzaVfqaJZewNOjVhTm69U4EcrKl
SI3trT1Nlt3GQOsS/TRUbNGKoFCmKra5IIKoq3dokT/x3V5bF3c17conLaxw
CbEPEscCbU9vvmGKD1pijYXZQGKrB8soWsIuM2WfzHCwa8aWyD5Yuc4wYHHl
HbesKERrRpHESMlCPtGxjp2E+4Z1ezL+dzcQ+Vnjm/u3f/ns4uL568/e7/75
5ccPJV38oO5mhJ9bK2vfGWTXMmI3MWIZHxtqU8eo9xNiMjl8tc7vDVmua9Ql
9BGko0arfPhjX5Hl783X3c5YDq9nErv/QyOXd3g64qFtx5nX9wdmJdERXlrS
hkVTur9rdVFbUSenplYawCwf2NYwjnGxnEAbY/ux49P2bjEhF+nVhGOwtpUX
MZ+puc9Ner6MYpve/nKKdAvxZgelm0ObHceAlJX5hI0v83P2T/sIt3mmUSgK
9XoOrTG4uHCN1n0vZZXZoedTRuKLnl71WxKMhcA+VDRawC8zblVyOHShqKU1
f6nNHdB5elXrpe+WeVHNGqrq1Zuha1m9+v7u6umDPn352/dDM5sRf/L681wB
locMDWiEh2IYFkEq1XpVqci5GWnwpqpgyOKu6c7We742aqYxegdVpGlwlMhz
+Jl6dUmHV/SqZ9s6vZrx0vDpLdHV4Xq2tMj+6Tg4vXFgx3HjGmPjmAPB5zjV
2DXiM75pqsLVq1qc631vIXpVt21asiY8X6/Cto3/nJo+IsHsYF2w2USOcapL
xwvRjkVphM5KY4ItVg3EnkI/lNrNUX8ZSU29qxQe2/+pyLTUeZoC+7+Q0rpB
V2rvezS4pkjUNTsjE3Yz9fMAbksSYyGrYA3rjU/M5ZQZtapqOBRDkYvHv1jG
jwd0+nkAzat7P+z/JSxpZbH2C8Ql6DlDoVe52yf4/PWDWt187+N3RSUfP2+a
9auvUiUo0wodkT5tCt3YNz3hYwr6eYCNkrGzjqpX4Q1Z1DXWAFGmMmpyeZz3
Sxrc11oJh598HmB5h0+7Td3zVjkvDWxojuNQXVOCTGiKrQa3V7tDJyxy/bWZ
NK+M0sIJMRE7CbzHpaZIIFevVjhG27jCw8eRIp+mM2fo+fyfY6WWHXr7K7dX
/A6FJHxndhCTWqFOp0boI8B4dEVXHSJotpp3Fdd3JZSlGdcXAW7sqWltsy4t
a1evqX14qvphq62pV+2WZMfCL5D+OS4z16rUcOit5Xbwpp7MgM7Qq6zgoiX6
4kPlUahQr1bu5rx/+yORRb/59FUbhUm9qqDpVeohxZAlfEzF0KvKjmrWUUU3
wiFLdU0UPnqFGDW91+yv/KSEe6ubcvjpenVJh9f0qmnb+e8HyOvVcBzLy5jw
KD4xzsCUvtSVZhwELa6PwoMPhDshhrGTwZOrk3aZfb2adwxxgWGQNJHnGy33
7KkES3iHJdtVzg6GC5V9X2RKOjfsRWl1gKQBrbRTWluoI+X6cjT5Mrh5Gtb0
kKJ21Q8r9eckJ8k9b1W0JD8W5XeVT4qK4jJj+6SHQ/nn2Jzy/IAZ1JkBna5X
+VeEMtFx/ET7nq1XK582+u+fvNyV9+yjfyv++PnrJ7s/5s8D7FD2s7Lbcwkf
U0npkypH1SrwhyzTNavKUXUUbTbmaBbp9J+7WmxfTTn8Ys9bzXJ4Ra96u7r1
erXWS0nfvXEkbVDKsfJJeQ9VNMBc7iuv5wZWHrgoBiKYEIPYybDsw1bbQK9W
OIa8gA9o5XJi4PnW6QttmHqsR2ZoL0Qs27OD6ULzp6TzxpsmlAVzaat96NXy
z/Km+PB6NTFfZL41R6+quXqmXi3iImsffziUf4o/LjB9H1qvejfdzs7vbL16
e33x8KWL67vibQD3v2xOA/zR68+TrwhQNpWqhMca9Krq/Ikhm6FXG+efqFdF
UDtmWqVe1avap16d5KWk7944ls3TOrgPvcrNQj354Hq1bks9wx71Ki+tG7Q5
v5SR1au6QSfoVX92mKtXH+2JgOTKYe+cchSWPw+gNlMP3vR5gHl6ddqreKr1
avUqbvY8gFvmFPs4uVS3FXloNFI5ezsP4CSx6iGOCpyvVz//22Yl9Udv349/
e/fx92pSd2amC6aPZc8D2C2p38KIhyzTNS/zi1FLnQco25asYl/nAZZ0+H3q
1Wleql/pNv/BRMqh6OXPA3gNYKWlzwPM0athuNazpF4NmxdstdPKoswcPbun
VF+rV3NtSJwHqFYdZ4920liRB3TmHV1He96qvzWY9ryVNpTmOCaft5qlVyt3
Xoav1erVzFgw7O57N3pVer5qOMwoawu82dXlm32fz1t5CURZ4XEnIPm8Q78U
sJBe7Rr05K/HL73//asn7cushsXVb7769OfX1z//9Ct9ubXvlYy1SuHh+5hV
c4VeneD84ZAlu0Z7Ufi2HDWe2bZ6AuyrfrO7PJgZ9/m81ZIOv0e9OtFLWb/s
cdxulfUTcSyZGZCNS93zVprflol0yvNWc/Rqjd5LMk+vlo2hEaRp1yq5nVxJ
YI10q6jWq8nZQXehyRH6SND3U+jz9YXp6R/afSvl7RG2hole32GshJMa+YOf
1sUpvRo8a1nYZ/Su+Em9opv5kwn+WGiNs161UdxSxOPrtWrycCiBtknc2EYD
mterRTPiJBa/VYbV4OxCjqcfLb0aPt77h7cftmVdXN58ufvD+3/96PJic/H8
9efleusvPmiv+uAX79Ri4sNaie25hI/Jikevsd63KXyv2vmDIZvcNecuQ4uG
6yu56T9cF9+khA6f1astzmbNLIdfQK9a/jDNS/M2FGuY2n6NNodNfp+V0SPd
OLkXPGZix3ASd2/Zfo7eZbJeNTMnu0G2bBs1MuH54fAx6s8DJM5U24MyNUIf
D8x2g2t1f2ejX/6IwDCUJGPM/r0Aln+ChRrq4bS18/Xq2BjzHR0qYx/zelWa
Jr6rFK+5lhU5ZaZaVTEc41ikHsLV8QY0pVd5MzJJTNQbrcCLtz2TlbF5erU7
vPrq49+8/OCPnjx99uTJ0xevfvPFe7qO+v6ffnzRVv+DG+t9AeJV/3QtKHec
LOFjvNrR+7N6dTvB+b0hm9K10kmsVXHSSOuUS91KiOvwmfPz/PmC5R1+nl6N
/GGCl/L2GePYWYZ1res4TQ5kYLUFc2UXm7RZq0IrT5bmTogz9ap7OyAdft96
dcsypxJBXMspexyz9Kpogy8CJz1v5c8OWhu6Xx6ZMyWBgDM5ZfHg5NXbJVO+
83ipP6B45rjuox1e1fn6y8/vfvHjhTf7QA3qm2emPaQJjsCZpKZHNB89RNyS
z46BR8N56NVdL2rvXHY3Piff8YOhv03uEeO6nL6vYbF7acBPP12wbcBA2SQo
N5sK9nBiEOyJ89Crj2c+2o0XQgtM4Rz06kOkV7v/3YTvPErU07+PHt/l1Dev
mrz7+HsXL//56+UaB2yCw3XkAiwBnQbnoFcfz3y0Gy1EFpjGOehVsEcSz5ID
xmfKm1ct7t9cXnwn/TpWMB/vcN2oV09c/zwmzkGvAgAAAIfm689eP//usxe/
+CK+9P0nP/529wIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAArJR///XLy8tn395svvuzL/BKKwAAAAAAsEKaHxe4wO9bAQAAAACA
ddL8uMCP/+n9sdsBAAAAAACAwrt/eLbZXH6MnwwAAAAAAHiUfPWrF0+ePXv2
3WdPLoKflH3/jx+qvywvufibz8ev/funP/vzDz740csXz56/+rufXf/8068q
G3jzg4cinzz7/ouXf/n8yfd/9nlynfWb+0///sPn3//w1V99+MH3Xn1SWSsA
AAAAAFgL33z9/g9ffPR8pzOf/O3n0ZXv33/2+mkjSp/93d3un8X/3t1+/OPv
0F+W/+qTl9/ZPP2bu6+/2W7fffzBJpDECs3h1c13rj/9w8M/3n303c3mJ598
HX7r/d31Q71Xn371zfb+V5cPSvz5L/Hj6QAAAAAAJ8s3d7sTopvNy9/GSvCr
X102cvXJa03bfv3PLx9KevX77tq3P9qdPH3broj++83DN5/9/Rd1bfv89ZPN
5sVv2uXR+10Rm+s73qZPXn3/2fO/vetb39f7h+Y7//Ty+Q9ff/rvddUCAAAA
x+f2ejft3R67Gdvt3ZU2/66fRjiMy2jnx9l3sOTfPnrWLIveJETdpz9t9/xf
fvLftY93duulbLug+me/brXm17/dPeXfS9kszeHV5x+/a/7xzaevNsqLrZpr
inXXtt6/eFvxgFYrhDenGYzL03p/vxK+mmyps3ioPqrYXxVH97SjN2ANwAhH
5m43AFfFRLSaETm4XhWmmMbZpXQ+EEt08P7NZf3+9xFo2vmgAz96F1/7+es/
2mzYtv43X33xuy++ajXklx8/7z9rz7s+/0VX6ud/u1so/XXdOdL3b3/0IHKv
777pKn8o4uInn1Ah2h5w3Vz+qiu6XQGuGbtRrUKvNkCvnlVyq2Mf3c+VefyE
uXJXPwwwwpGBXh0rhF5VecR69etPftI8JJXxil7ZkZOut9cXF73pPhv/u9WN
/YLq/YOQ3S2NfvnrD//qk/TKZ6NFn3/cmvDdLz7YbJ6+/q/0kvaA6+bZR//W
f4fU2/D+3Ttv6bgJivUP1OGgevWxcXbJrY6j6dUVeN1qhMExgRGODPTqWCH0
qsqR9Or7z//+8um3Ly6evnj12/uv37199cOnT58+e/bsxc/+68FeN9odXv3w
H5sav3n/xZuXz58+ufj2kw9/xZve7Omzk65ff/L/Xmx+pG2+N/vy7XtTH0yx
q+Snn371mxcf/IO+jnt/e/Pqh8+e7qp++uKv3r5r1lR3GvU7P9udef3D25cX
F5e/HL/7dfuc1z+/as/evv1q98/dg11fvf3wYlxu3d6/ffns2fWtY8+FguJ8
WIFyOCJnl9zqOJpeXUEYrkYYHBMY4WiUO30NbTj0I9LthG7EFqf27cQI0i/I
0GvqLesjMknzE0XzkEJkLbzLfZYwTGE0LOhXJv/wMpvvdJWqE6KSrxr7mO0i
nwrT+Z+OfXvD7NIMx9BB0gtxZ8HGgg6la9Idu6eTvvP682+ajm8uHmTr9e/f
f3X7+vm3N5s/Up9n2gPd4dXnzQtO399dPb149uqTL7/69OqpbMPdX1903WmX
K7/5+v6fXj7dbJ7pEvT9F7/48Ml3Ln/8589f/M3bt39/+eQ7zz74XvukP+Wb
+7d/+ezi4vnrzxpV+eXHD8a/+EFjs/df3Pzls2c//PDFd1+8/t3918PJVeHO
DRcv/3knpN9/9tGHHzy7/On1y7+4/PAnH336pfUcmRMU7CMy9GNUdgNt3XLe
UT8Ql7FKpPM3SYK44K34msgzftQoViAhcH3HwpPkpT6KSRPaS0k7RXKw29x8
sivfizXbklouorFPTRBWFxa4n0Q01k8zkkyzs3rnNemOp62hajGrFJUOiV06
qlsm7zY3e99II7imN2msgXtsKNVYpTK4aOannd1D7Ai0FTAZzrt/mOJHGqHr
VHtR0rZ2/mw/ERmANXvsSM6lzwJPr15eihmvGDUhY1RH8qpiBbIUoVg+oVeN
Qoax48mhaLY5Natljs3QhUFgDbOzFXpV7cvQU71ZZFZ1OsUtLKpoGyg9pAgT
1UO6C1J6dXc484NfvOt3tC8ud+uZ3Wrn5nsf66uQX/36wwutWotvf/jWPTLa
Pe/fSNN3v7x88mc37765v/nBxfDHguZ1Uhq1T1ExOzyI5J3U/O2wBNoOn/4K
Atb87vDqxOUgIygMnx/8p4vKN8Moa8nT8MGU/zTYGYNTdN+Pmmwrm0JtvZoj
yCFD+WGs+ZbkOsfJgRXVpU26WCLyzFvMAHN75zXJ0JY8m7E22VU6Zcqek5mu
VzCWoWY1ySmhvtJwih8v2EPsCJJ6VTGNcV69S1PsRt63bZA/xWteesMWli/E
QGIuPi/08wAbJSn1Y6YIfnoBR4mv1ntpyIt7wLKWUK923yBtKGtpXYuUwO9l
DFMo7bomM3dgPdUYpfrv+5rWq8R6oynIHYdyj5b5VEM9D6DEKVs3oF1oCinS
k38e4OtPX3/3xc277jGi4ami+9/+7PqvPzrU+5e6w6ubv7i5+4edWL3fteH+
13/2oFcvXrDzAP/e2eTip59071y9/+LjP3+48sO3csk0z+fNC12JPm8OuxaP
UJmIw6uTYEGh+HyvLTsPGaVm4FEkGEl49pUUF/B6xfpS8RYDNu32XhZEjYD1
a7TGxpq/+jYoCop5Pg12JzdGsZax5NDlzmhivUhkUTu0tQIPlIiU5XrFFLN6
FzaJy3WhLvhEIyYy6XWJ/Ti2npa4yZrTpM5plWE19Wpbppx8+78oUzyrZQ+x
I8jpVVYC1TZFvGvZI7RtNn8OnWo2ki6Jh5Q5J56LzwxDpNGkUaoLJjz6K+yg
axds1WX8phiZcseGpfWqUYhLoFeVwCctUWJ0aJUfMqKdxOaRXjWy+hiM2gga
daXQ9SprYbRbVKdXt+VlG/0I6N7pnve/uLh48pdvv/rGu3Q4vNqddG3YNb5/
HurhkvvPPr0zN99VmjcAMF9q31uV0au3zWr08AKBidCgMJyn9HlfBHaFutFq
fErcTslCSp4p7pvCqOFY4U3/rOhVRyoUV5WbWXZuDGMtyHtlWjY6RMY0DG1Z
4IESkdX66POq3oVNSmhLTRyyKmlMxWX2/iDXT3LUNckwgutp/uhYn5ZT/B5i
R5DVq7b4GbzFEMYTbUs0A/GH3T8e/rs//jRcTLdXKufiUyb1vFUxZO66vRbp
xtZeS38eTJsyas6vmoWwtiiNN/WqvrvUMpznUfKMl3+sdpZVR3rV3qxh6p20
tizL/VSSet7KPNijNG+b1auaYDsYX7YLmU+e/+CD3e+xfvuDl2++sGRz80Kq
DevR3V9fPB1+AuCrX7/YfGCcYzBQF0jbBefEeQD+5tWJkKBQZpDug3EeMa+R
xWqO4cRyWbIy9SgpotCriahRWqh8okxwRAmwI5PSz4WtDOhZcbOnjiXp1618
JVS9V50o0Dfpcokoek/FIr0Lm6SWoM0qjkvU69XopLdkRpPM+PVVEK9R7Epo
Y1fcde4hdvTqYr3qbePeetE23bbk1o/frvbHU9kR2eLacC4+HxbVq5pPun7V
P2p0AL2q3JxqAjWnV3eXrVGvusfmldHxP+0vqtarypYESz4pvdr9tlTmrOby
tK9I7c6p/uHTV7u11osP/1Fd1ez26J3XtH7+N0+GXwfIoi2Q3v/yedeqYNW0
G4JyvXcSe9KrBYU/F4fJD6lX1dYeXa8236qaj7glj6hXF09EB9KrQZNECco6
W+QS1Xq1OMGYCa6ZTZqoVwtKrx6P6R5Urxo+tJhe3f3TPA8wV6+yR1bpc1XD
f5QVQq8GO+81p3lTO8UTzgPI/UFRyDiaibyhngdwMuQhzwOIXa3aJUf9FEfF
pzV6NfFwXEqvdo/nv/o0uaNd+7zVxYeOgry7asr66aeFEbohePfmxbO/KzT0
H95+2JZn7STuHurvHs/P063ZkrMQ7z7+3sbxrpFubbZ9s8HDP+9ef785D1zN
xPMA9dlynNTS5wFq9Gp11Ew9D1Az5yafua6cj4xep3fMs3r1oInIaH10Oquu
d2GTWAnJO/d5epW6UKTb5zdpynkAsyVNOenzAMvGjkBJGl44a80IlmUm2pZr
hl6UFscAumVVchhgO9GlT5lqvTqMkjxq4i4qagdR6JKt8ngFewlS4Qn9xo1y
40O61v1FPhHW3z5XPW9Fw9Y+4W/nH9nOoa/WMXJ+gXp4Zox9bSxGc/ufqtTq
VXnj2d8L1+nV7vH84xxe7Z7379cnuzFoTo0+/DcVn7fdewuKN68WvL+7/k5m
RZTR1fjkr0czvv/9qyfty6zCoj5rmtS/xOD+l5fdK7Cqmfi8lZstNX9LJgQS
AjV6NYoaBfshkcX0ai432rGWsmTt81ZZvXrYRKQ8/kZnovm9i5vESpATRLEW
Wnxhll5lru4L/iWa5MS4FddaHJXaLPm81bKxI1vJ3dUPZ60Z7AKuhebYVjxI
eHVzc0lj7fLm5kp5HvDR6dVNYcPs4pjEXnQ1DhEMtdhr+8HbqMpW6W/M4A8U
O2UIU1jfKuq0tsTq3md1eX19yXddnb5Y9faVGq2ij3/ahTsNzp2pc8+MEE3b
tNrIvd3j+cc5vNo979+vT/bLra9+34jG73Ti8+v379//4f6Tn7aHVz/46PP3
3csB+lcEfPrm1e6FsZvm3VxV9Gu2m4vLm6YN7//1o8uLzcXz159n5Pu//uzp
pvv1q69++/Lpt1/cfBl/SUPcxOViOciWxlZylBDYrF2nV6Oo0TpvJY3F9Gpk
z9xeRvrruTc+pfXqYRORbqklexc2qWhCU070jENar4q+0IuF/rSdduEmMay4
NgI2mp0LTbF87EisEyyT9SpfnJluW61SYiBx31FU+Ij0auFIab06XDYSP+YZ
HRqnBfaP4Gkvk+kvCFvFeiHfa81uybkpxr4X39MfCSyKzWyTle3c1c5VgXhf
sZAN3O9ZkPCo0I5SmIayW5t8BoTXMG7YKZrW1Kt3f/v82fdf3x1jdXX7rx89
u7h48qNfj017//nPfvj04tsXTz94+bbVft2jTwkughe9KnSHV199/JuXH/zR
k6fPnjx5+uLVb754n16kffeb3U9xPXzzgz//2Yw3gEnH2wr/iZ7qVRE+KDbJ
6AW0DZP0qiw0OpHCw38I7+X06tBO1RT1sRZ+PXyjfo1eldXvMxEpw8EvmNW7
mgarmrwUselzaLJMv83upsAyTeKFDM9reAMUPIvEL1C8aNnYiRvp//yH1gzz
XGKVbb38SS+R+kc5z/Co9Co4PkoYgkeNdngVAAAAAOAgKCeuuztE3BCBnvKe
HQAAAADgwBjnV+KdSfBoWOanqQAAAAAAplP7xn7wuPhskZ+mAgAAAAAAYC98
/dnr59999uIXX8SXAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACxH+Uuay/w0RvHTingjHAAAAAAAmEP0G9z1BD9qDwAAAAAAQJ6d
oCz15O73MshPElfDStjpYfxCHAAAAADAPim2y1PCq/b6o3J3TRdUZ+tVLoCh
VwEAAIDFWGQndB8crGHN1m3wW7Rrs9JB2tPoz+tixZAbilqt12a7ti0s1Hol
bBc7tG3QnO1fsg3ZydeHcS9PtBpc50RtU/28BduTOVRw+HauzjJtg9Z9ezLG
b40Pr7xTAICDQE7QPeI26BxCkjkKjNrkyHp1p6aI+FmiPbsVRXfmWp9eNRWg
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
7DMFa/FVdbmSmCO1sWJbc9Z5KyfPxJaK1nmyEa2c46OumDzx4cSFPKJuPkbF
UZM5b1X9AFXPCbXFcF3PNOua87jR8qz53Vri0DbsEhHtcyqnBefcRG3unbOS
qToek8CWyoli++gQzbeyi6GFJF9dI/ok1uGrmoHc5SP7vFUZ47Xz5tNGIoFE
75fQawamNv133RjfDssu7rdKnQy5JN60ynhF0Ysvc7RaWLW+6m74jAtB5msZ
7Bbs8RaGTj7Jqmlct5WmlMxLkFREzpn2EG3UWm2kIuV4wewzCKpQa/FVa+zk
OTRa8EzfnjNl/FxsKEXs1Jg638nPBfShVb9Rx5sxDfvK9wPEUSP8M9R2lq+W
d2lkhqLUv7f+Q6mjslac2e+g49UeZ7xOxRd0aInEyPXDLG540CTe8tybMGL1
NBRJZdcM0OoUe+yZ2t1AtytEn1DuKvUAyhu0Fr3PKp0BgAmzzkFIVVIfk3mD
cVrtMLvZvPst8YRpXov5avTAqwqgrLKaQ5adVfFV0cW0WWnx1XHsavJn8muY
lDmHr9IWOiOEhyZ8x+AJcDgXQNRGxih3hF0P0UZt7nkZapzDV0WbQwXZinxV
aE9aKrNzl77djYjq7oSlQr5aEdFcM8o9dOxKnEYzJp+G+Fc5Pe+lfxbd6drO
OCTPaTFfbW8pl9EMRdMSxIgqWKXITA+z+aq6bLgPInov9GORHNeDFuXeZFaJ
8qfsJ5CKNNj0JSI3yLciY+sbUq5ul0cfHfNa9avE5p5UMt05qViMt/KwIfAU
oLo9cOqYtV0IPAUgordFfDQVuDzMKSe+MCCxAMeGXIwCzgHgq4AORPTWaNaI
oOAnBvBV8FXgeFDro4BzAfgqwICIPhgaVeMYyJMC+Cr4KnA8iDPmwDkBfBVg
QEQfEE2h4NNmL08M4KvgqwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACg4H8+eXX96vnVbvd/Pn93bFkAAAAAAAAA
QMH//vrFbnf9W7xKDgAAAAAAADhFfP0f17vdi0/+fGw5AAAAAAAAAEDBt3/4
+W539Ysvvju2IE8S7S/FdMj+XsyMWwAAAAAAWBUPt99//uKHL140JZUn/bPU
X/7Ls10O7//fr6tb/+sXn/zs5cuffvT+i1e/+NdPbv/9i/omkni4fdT0s+cv
rz/86McvXvz952/XJq7v/vzZL3784v2f33703osPfvvm25WbP2805FP8wP3D
L589fwyBH7YxIL7tgR/BBAAAAIDj4dt3797950ct0fvg82+OLY2DR0G/eff2
/37QkdIPf/f28c/iv7df/eftq6vdHNb99R8++sHu+T8/fPtIHd98+nLTn0Fv
i1ev3vv0zWNff/vDo95f/Nsbfs13X336SGV/9tkMGd7eXV9dXX/6v9/u//Zw
+4PHkWAhl0Dlq61rfd7HwO+NY3BH5Kvfvf38n96//X84nwcAAAA8aTySnGaq
/uGvBXM6OTz88sqh1m9+80g2X336l6omv/78p49tftgf1//rfVNd+quvVpBV
w7vfP/LtZx//T/fXw63Gjb/9r49mmuPLj58/Cv+vrfB/+/LXP3710d1XYDkl
dL76iLf3bQy8+PX/GncemK9+923zdPbVw2f//tGr7zWSXd8lHl+aUSSftdoB
W4vJ5XV36SYBAACAp4ZmcjzY7nxbUbnbXf3y9Hc73376audxuUZvE5V98/vb
21/a//1bu+nfLaj+5LOuAKDlile/+GO1ZO/+9KnX1y8/+6rZmO9U/VG/5vmX
djTixVYdJyfm+ObhU6/x28/+/G3T+D9cncRJrpYKpfgVueEQpMjiq/0zwpXN
SA/MV1uVXD1/8epn77/cpflqnl6Ow4mN1ZJgv/ee7Ws4ba7bFievYNa12qnG
QWeKAZO5j1ohE469VjlHUSawKaono8W4fC9q19nKaXSNIWdT6HdtReUji/qv
ky91/ObzrhrgqtTVuzcPf3rTU74//qI2hbYLnrtXv+n5b1sl+/5nW1Wvfvnx
96cZvOv6Ja8HePPrH84zR2vHR8Z19AKAKEW06/klj1mDr+byksVXH27aGPj5
H0ylH60eoE0O+ZTb6iFKHQUFTeittZc7doevnjZlfWp8dQ05S2ODrwInBUGl
wFfXx1H5altRedKTyojXt1eiyLCZTN+77whm86qo4d9JtG+X2g0Lqu367Q8/
+eovn33wT3/Qd9K/efP5rz549fz5s+9fPfvRB7/+U9V+e0sp//GL9t/tcujV
B5/9tf+uKST+5t27rz5tZ4OXv/6y/bOCtLaNv/q0NOPX//vmCPUA58dX+2cE
7/Zz4avdGH1lNmMZrkjprZHBu6ajMEqnvfAnm72PxjPXwhH4ql7FdASsTgwu
n2lcPASVOjwu34uOyVc7wrb7/sdfdn+//eLjH794/r2rq5cfPxyA6/zl849e
Prv63rOXP/v1l9+8e/j3D14+f/78xYtXP1cOzr/5t5ZZkyLDN5/+aPfsX76c
L0BbD/DhfzZDbQ4r7Ro++fXv3hfLng3e/c8nr763e/5/PmtOS+3fffGPz3a7
57d/ynPKlqN2BQB//uTl471/HFXcz+wML39TUcT65b883z0b1le/e/fVv10/
+8n96u8fiHF2fPWv3YrRsz4Gvnv7xT+//+L51dX3Xn78ejDQ+fBVQkfVFktC
m9eb06TJV/tUdtD1jRqAr9bjBChBB/BVgOMEnPOSvUhspHWqHobcn4QyttWK
N0MW9+7pXcGuTV+82i/6/eX++urq/d989fWb+/eds9Kr4ZFtXn3w+687ga8e
8d6nb755c//3L66U3r++f68VdSwy/O7rL/+tYZjLKhneffWbD5794PrDn716
/58///xX189+8OLlj26/kOe5GuXsdj/69ZuRAbZm2v205pdV//rFx3/37NVP
P3j1dx/df6msBPfFq/Mi7rs3n//T9bNXH9z+00fv/+TDj3/35dcxWeUeWFKL
gaWQawT3oC08Su5QoNeMlXc+PfJVQtp5yAtJh3jgVN9hRypf7YtXu3cpfPf2
/r2rq5982sTAjwvjnhFfDSgoTenjxcQ0PNeIRwylR/X7LrQ7U3b5Sjer7fBW
lmswMHM3T0YeXtTxGjm2dU0mBvVSwgPHkgyiUuk8xG8fpYrrLsQtcnKcMSl4
GnY12V45ulP/7aReGuzEIQcVKYZz/ZAgnCUV5uDqPDft+vKot+USKTUEbcBQ
ssi947NqJww3ZXe942PMxHLw7ALalB+PeqSLxYqZajSolJIMFwyhlET2Vcj/
BPnq9bUoCpv0ZlSMtbfX8NW+eLUhh998cfvixe0f37370+3z3fChgq8/++mV
1reFhpHqnX/58bOrj/7wt2Hh9Ae3D38b1nt3Vx/9N2Wh7dufNNS+EGAeutcI
UKmacln3kE41ZhevzoO+qDtGd5sfpBcW4W8XLtbzVaWjKer5jeXtS/lq/9KJ
R2r63bsvbl68+OUX7951bwOr4qvrxQWVrpqv+ju2bMHT1D3t0V8mDeoBCJFj
+neZsJflBqlUBx3bS3j4IN5ITbn8bXe1fFV152nkuj/vPB8zbxnDZMakEGnY
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
Hatnnu1TWfPD9IZKu9+s7zNGkz3muCVrv2tTH1EX3ePF2+Ur/ovGCs47T542
Fqa41TPkQVIucNJYxlebR/LdTXE3+OpynD1fLacZ3bXa2bCcfc+er4oRrYJa
tYh4PAi2tqbW5VPjq97CKeGrM5dJefutexsmbBPU6Gbelbq4aV2dKl99IsQJ
fBW4LCybH8FXVZw9X229wp3BDstwumlv20QHvnp2q8BrYuNU1mrYdGDKV4OL
c+17IcO6q8V8b2kT4ynMFyBORwHUDiwD+OoGuAy+6noF+GqyVfDV88C2qaxt
3TYrJ5Dt5TUJRLTPdvwpqhdUldtnBSP46tMG1A4QHxgTXbfjI7d0p7Qstmq6
dCe5FmnKas0G7Ue03KTNLl2b+7xEAJ0j9dvHQ8YmDTYCj1tsRh63E+k0lfdi
EFXb42LTDb1azFx8+5tdwGxVoSIDrMGpO8MrzL7G7kZbPBDP43NuoAdX3DLR
jbyub7CxHfXGRqWtc5U9liaeAkcZUbWf9IJyx9P4qm4sV/NUQirAyFVczVtR
HFjTbGGODHt+R95Y/u1TI4pizetJnIYNCl9gMZsfrPI9X/CsfGyR7dMdfyb4
bekA0hCj3wpDiCqdppHe5zPSGuHjGc4asZnhiU6kdeiNu4A+2Xk16bG2C2kZ
TMr9eMEwS1pzl/P0UccN/NuLRoh4/vU0k4QN8iAKJz4LSV0tGw4wA9Inr69l
0ZDMTim+KqLbak2Hevt0fRuJirCFP6h1jIN4vfPcj9cU4W/2q+VM57mv56t3
Y4wXKdobF18tscdoCDzGDmcUVSrKGmUY/kK+qnleVg8OLL56P7Zo8FXNufjU
bIyo0k+8Wr2UsUzN66W8zH9czXsWz/HV5TKo2soby7+d8WTl9mq+qjY4ml63
da48NXNB3YaCbN/rsWubPtrTjCoNUXiF+HgZX40MZw7Au8vJz3m+6ufVhMf6
LmRmMHVkXaRp1NR7tKnjBv7tIRmo56uZadTQRIxQV8uHA8yA9MndTlkx89Ky
ed5KqWMkbuDz1aFnTjPG2weHFDFOLxBLqpJcTZmZrYIqvchBeSE/efUNm6yC
cZEpQDkK4fDnUkLlQZGYIFCRHE+vMzE5lhqYWw9A+6UTWaQHDwZfZSNXVoro
BVRX0XmreX6iCUkPYrvG0uNREUxZkLE0H0WxZU0m9iIZpL7qjJW6vbyYyVzJ
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
vHGW/PotNbXWAO/n3mY7f5lZFe335n6/Nl+19p89WOWrzcamVKPMV6Metr1v
tWi9Nsicu0kLL2dhRQqv6KBCKvcAk6KKbiyH91fTFUrsjuVneVYitMXQumYe
7tl8tWo9r2JgKYbH7g+rWwRfn8CAyk1m7d86MWliAWJPqLzN8hlfza0azCNd
71uhsJyd/pXc3NjGV/l9gIsCLzTib7k84z6A/xWa6hKyOXQLz4n8gpl9bKfO
V40Y0cySGVwj1quyP+kcSaFZHpvCuKNyK0BXUaF43w1qZTQ9aK5dg2181cqj
Wx+5vxqeMS6HmHFU+KftNb7q9pA71/2e1c0wvcy5G7QAOdubku649RzPi0+D
QlUpuONWzkpP5XS4taseviqtk/PVovVSNoUe1mc3jtk9O+MZtuYaAVzz1fZC
l+VzvlrMVjxqwlcLuoMvYCAEMjffMdAXV/j91QsiueYEQvQ5fPWmInnlqHW+
KnpwvslcOQJoE0pXycpZkhajMLPcQoMDBHoVz9N1F2kMNNICd0z9RcYB27D4
UKmpk4MuaHcruoegKm3k926+Kkx3Fr560/5cOKr8d/GWheykfH8ViwE3OqIU
Q3JOz7vkxJ3pilrcYOkw/RRPnD3NbnmOK9uFdaZWVSruKGclbBgUsZUpdfFV
mV5lvmpVhTdBo3MWRwy72kKBpFyvj/m6mnhowx58GqLL8hW+eitY1UhVur/a
dot1r12/MTKbXDZ8VX5PhiAIgiAI4lTgxtqVUHpzaku/6R0DgiAIgiCIF6H4
eQfiDKjuxnfjO72YTRAEQRAEcTjA/WTirJCvB+y/trjTYC5ZCIIgCII4HWa+
SqJyAVQ+6PFQ39xcJQiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIDbg/5MvcnU=
    "], {{0, 444.03848333522234`}, {547.2474281104362, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{547.2474281104362, 444.03848333522234`},
  PlotRange->{{0, 547.2474281104362}, {0, 444.03848333522234`}}]], "Input",
 CellLabel->"In[3]:=",
 CellID->628932942,ExpressionUUID->"94ff3f98-9e79-49e0-a271-2bbe6591dc66"],

Cell["Find dimensional combinations for the radius:", "Text",
 CellChangeTimes->{{3.8770282496182446`*^9, 3.877028258649667*^9}},
 CellID->186053296,ExpressionUUID->"ec96bb6a-bff3-44ca-96a7-b08e7c24a458"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DimensionalCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"time\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mass density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"energy\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "}"}], ",", 
   TemplateBox[{"\"radius\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.87702677874117*^9, 3.8770268306537104`*^9}, {
  3.8770268671437125`*^9, 3.877026890355126*^9}},
 CellLabel->"In[4]:=",
 CellID->162951853,ExpressionUUID->"d3610f43-6d0a-491f-9683-58542cb62dc5"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     TemplateBox[{"\"Energy\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " energy"}], TooltipStyle -> 
        "TextStyling"]& )], 
     RowBox[{"1", "/", "5"}]], " ", 
    SuperscriptBox[
     TemplateBox[{"\"Time\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
        "TextStyling"]& )], 
     RowBox[{"2", "/", "5"}]]}], 
   SuperscriptBox[
    TemplateBox[{"\"MassDensity\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
       "TextStyling"]& )], 
    RowBox[{"1", "/", "5"}]]], "}"}]], "Output",
 CellChangeTimes->{3.877026935096905*^9, 3.877027503715148*^9},
 CellLabel->"Out[4]=",
 CellID->575499468,ExpressionUUID->"f25c03f9-8140-43fe-b132-0d78f87ecd96"]
}, Open  ]],

Cell["This gives all dimensions combinations:", "Text",
 CellChangeTimes->{{3.8770282610548496`*^9, 3.877028271640703*^9}},
 CellID->290879684,ExpressionUUID->"561895b5-a585-4f56-829b-dcc9bd13bc92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DimensionalCombinations", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"time\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"mass density\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"energy\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], ",", 
    TemplateBox[{"\"radius\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.87702677874117*^9, 3.8770268306537104`*^9}, {
  3.8770268671437125`*^9, 3.877026890355126*^9}, {3.877027266120781*^9, 
  3.877027271719912*^9}},
 CellLabel->"In[5]:=",
 CellID->156363503,ExpressionUUID->"7cce0172-826b-486a-ad6a-98400fcce730"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"MassDensity\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "5"]}], 
   RowBox[{
    TemplateBox[{"\"Energy\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " energy"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"Time\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
        "TextStyling"]& )], "2"]}]], "}"}]], "Output",
 CellChangeTimes->{3.877027272016895*^9, 3.87702750559461*^9},
 CellLabel->"Out[5]=",
 CellID->147611255,ExpressionUUID->"27f628c3-dc0b-45e9-9310-0df51f7e8df2"]
}, Open  ]],

Cell["\<\
Do the computation for the dimensional combinations for energy:\
\>", "Text",
 CellChangeTimes->{{3.877028275775611*^9, 3.877028298976405*^9}},
 CellID->742625996,ExpressionUUID->"42dc6de5-b2b8-4eb0-a225-978babd8ae7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DimensionalCombinations", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"time\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mass density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "}"}], ",", 
   TemplateBox[{"\"energy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{{3.87702677874117*^9, 3.8770268306537104`*^9}, {
  3.8770268671437125`*^9, 3.877026890355126*^9}, {3.877027266120781*^9, 
  3.8770272997956595`*^9}},
 CellLabel->"In[6]:=",
 CellID->660585148,ExpressionUUID->"9bd0eafb-da86-4a1d-9709-26a2eb2d82a7"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    TemplateBox[{"\"MassDensity\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
       "TextStyling"]& )], " ", 
    SuperscriptBox[
     TemplateBox[{"\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "5"]}], 
   SuperscriptBox[
    TemplateBox[{"\"Time\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
       "TextStyling"]& )], "2"]], "}"}]], "Output",
 CellChangeTimes->{{3.8770272966159625`*^9, 3.8770273001550765`*^9}, 
   3.877027506230713*^9},
 CellLabel->"Out[6]=",
 CellID->1451397,ExpressionUUID->"2bde8a4b-45a6-4eb3-b616-b693486cb89b"]
}, Open  ]],

Cell["Enter the values from the problem:", "Text",
 CellChangeTimes->{{3.877028301962004*^9, 3.877028310115404*^9}},
 CellID->575242827,ExpressionUUID->"db7fe245-f5c0-4381-a918-c0a1b675bfe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"DimensionalCombinations", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"\"time\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
         "\"physical quantity\""},
        "Entity"], ",", 
       TemplateBox[{"\"mass density\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
         "\"physical quantity\""},
        "Entity"], ",", 
       TemplateBox[{"\"radius\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
         "\"physical quantity\""},
        "Entity"]}], "}"}], ",", 
     TemplateBox[{"\"energy\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     TemplateBox[{"\"MassDensity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
        "TextStyling"]& )], "->", 
     TemplateBox[{"1.25", 
       RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
       FractionBox["\"Kilograms\"", 
        SuperscriptBox["\"Meters\"", "3"]]},
      "Quantity"]}], ",", 
    RowBox[{
     TemplateBox[{"\"Radius\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
        "TextStyling"]& )], "->", 
     TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
      "Quantity"]}], ",", 
    RowBox[{
     TemplateBox[{"\"Time\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
        "TextStyling"]& )], "->", 
     TemplateBox[{"25", "\"ms\"", "milliseconds", "\"Milliseconds\""},
      "Quantity"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8770273055520544`*^9, 3.8770273735176497`*^9}},
 CellLabel->"In[7]:=",
 CellID->65502275,ExpressionUUID->"36c485cb-fdf4-4481-abb8-cb75d49396ef"],

Cell[BoxData[
 TemplateBox[{"7.42586`*^7", 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"ms\"", "2"]}], 
   "kilogram meters squared per millisecond squared", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    SuperscriptBox["\"Milliseconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.877027344370097*^9, 3.8770273760488977`*^9, {3.8770274785960035`*^9, 
   3.877027506668212*^9}},
 CellLabel->"Out[7]=",
 CellID->844186107,ExpressionUUID->"cc34bbbf-c7ad-44c3-b092-0b34f8f237b9"]
}, Open  ]],

Cell["Convert the answer from SI base units to joules:", "Text",
 CellChangeTimes->{{3.8770283137165537`*^9, 3.877028321612297*^9}},
 CellID->361102042,ExpressionUUID->"ff36b0de-02ba-4d18-bb3f-6616886fbfd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"DimensionalCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
           "\"physical quantity\""},
          "Entity"], ",", 
         TemplateBox[{"\"mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
           "\"physical quantity\""},
          "Entity"], ",", 
         TemplateBox[{"\"radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
           "\"physical quantity\""},
          "Entity"]}], "}"}], ",", 
       TemplateBox[{"\"energy\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
         "\"physical quantity\""},
        "Entity"]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"MassDensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"1.25", 
         RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
         FractionBox["\"Kilograms\"", 
          SuperscriptBox["\"Meters\"", "3"]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"25", "\"ms\"", "milliseconds", "\"Milliseconds\""},
        "Quantity"]}]}], "}"}]}], ",", "\"\<Joules\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.87702738716546*^9, 3.877027393040572*^9}},
 CellLabel->"In[8]:=",
 CellID->537650721,ExpressionUUID->"baa9045b-e33c-407c-809a-0128d6263c1a"],

Cell[BoxData[
 TemplateBox[{"7.42586`*^13", "\"J\"", "joules", "\"Joules\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8770273934310784`*^9, 3.877027473009385*^9, 
  3.877027507518606*^9},
 CellLabel->"Out[8]=",
 CellID->105268131,ExpressionUUID->"11687aba-a867-48cc-a4a7-dae33cf81b46"]
}, Open  ]],

Cell["Convert to kilotons of TNT:", "Text",
 CellChangeTimes->{{3.8770283248409777`*^9, 3.8770283296903076`*^9}},
 CellID->1032462463,ExpressionUUID->"737e7894-81ee-4aef-bc8b-43eaf8dcbbc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"DimensionalCombinations", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
           "\"physical quantity\""},
          "Entity"], ",", 
         TemplateBox[{"\"mass density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
           "\"physical quantity\""},
          "Entity"], ",", 
         TemplateBox[{"\"radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
           "\"physical quantity\""},
          "Entity"]}], "}"}], ",", 
       TemplateBox[{"\"energy\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
         "\"physical quantity\""},
        "Entity"]}], "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"MassDensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"1.25", 
         RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
         FractionBox["\"Kilograms\"", 
          SuperscriptBox["\"Meters\"", "3"]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"Radius\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "->", 
       TemplateBox[{"25", "\"ms\"", "milliseconds", "\"Milliseconds\""},
        "Quantity"]}]}], "}"}]}], ",", "\"\<KilotonsOfTNT\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87702738716546*^9, 3.877027408643867*^9}},
 CellLabel->"In[9]:=",
 CellID->902298,ExpressionUUID->"e56c162c-70af-4e97-8920-8ebdd82e8970"],

Cell[BoxData[
 TemplateBox[{
  "17.74823135755258`", "\"kilotons of TNT\"", "kilotons of TNT", 
   "\"KilotonsOfTNT\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8770274090032344`*^9, 3.877027468195253*^9, 
  3.87702750791182*^9},
 CellLabel->"Out[9]=",
 CellID->3521900,ExpressionUUID->"17c94569-5769-42ad-a19f-2713b6f97ce1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formulas", "Section",
 CellChangeTimes->{{3.87702834129185*^9, 3.877028342939042*^9}},
 CellID->265431126,ExpressionUUID->"dabd7686-70e4-4f8f-9de9-cfbe5489a888"],

Cell["I want to apply the physics framework to some formulas. ", "Text",
 CellChangeTimes->{{3.8770283445328197`*^9, 3.8770283581028605`*^9}},
 CellID->400137981,ExpressionUUID->"e3d6b790-1c7f-42be-8825-0c59527c3ffa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"FormulaData", "[", "]"}], ",", "19"}], "]"}]], "Input",
 CellChangeTimes->{{3.877027532966557*^9, 3.8770275508997707`*^9}},
 CellLabel->"In[12]:=",
 CellID->59671516,ExpressionUUID->"e0877775-2bba-4026-9a2d-be39e2b33a4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AbbeNumberHelium\"\>", ",", "\<\"AbbeNumberHydrogen\"\>", 
   ",", "\<\"AbbeNumberMercury\"\>", ",", "\<\"AcceleratingFrequency\"\>", 
   ",", "\<\"AccelerationNumber\"\>", ",", "\<\"AdiabaticProcess\"\>", 
   ",", "\<\"Albedo\"\>", ",", "\<\"AlfvenNumber\"\>", 
   ",", "\<\"AngleSubtended\"\>", ",", "\<\"AngularDiameter\"\>", 
   ",", "\<\"AngularFrequency\"\>", ",", "\<\"AnnulusAreaMomentOfInertia\"\>",
    ",", "\<\"AntiKnockIndex\"\>", ",", "\<\"ApparentMagnitudeIntensity\"\>", 
   ",", "\<\"ArchimedesNumber\"\>", ",", "\<\"ArrheniusNumber\"\>", 
   ",", "\<\"AtkinsonCycle\"\>", ",", "\<\"AtwoodNumber\"\>", 
   ",", "\<\"AvogadrosLaw\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.87702753858514*^9, 3.877027551196573*^9}},
 CellLabel->"Out[12]=",
 CellID->444819810,ExpressionUUID->"afdd956d-ab9f-4a2d-907b-33e75385214a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "/@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"FormulaData", "[", "]"}], ",", "19"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8770275522746468`*^9, 3.877027554837263*^9}},
 CellLabel->"In[13]:=",
 CellID->417542579,ExpressionUUID->"bb52d63e-b23a-42f9-9ee7-27402587e4f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"V\"", "\"AbbeNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Abbe number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"d\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     RowBox[{
      RowBox[{"-", 
       TemplateBox[{
         SubscriptBox["\"n\"", "\"C\""], "\"RefractiveIndex\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
          "TextStyling"]& )]}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"F\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{
    TemplateBox[{"\"V\"", "\"AbbeNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Abbe number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"D\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     RowBox[{
      RowBox[{"-", 
       TemplateBox[{
         SubscriptBox["\"n\"", "\"C\""], "\"RefractiveIndex\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
          "TextStyling"]& )]}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"F\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{
    TemplateBox[{"\"V\"", "\"AbbeNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Abbe number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"e\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     RowBox[{
      RowBox[{"-", 
       TemplateBox[{
         SubscriptBox["\"n\"", "\"C'\""], "\"RefractiveIndex\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
          "TextStyling"]& )]}], "+", 
      TemplateBox[{
        SubscriptBox["\"n\"", "\"F\""], "\"RefractiveIndex\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " refractive index"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{
    TemplateBox[{
      SubscriptBox["\"N\"", "\"f\""], "\"AcceleratingFrequency\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " accelerating frequency"}], 
       TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
    SqrtBox[
     FractionBox[
      RowBox[{
       SuperscriptBox[
        TemplateBox[{"\"l\"", "\"Length\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
           "TextStyling"]& )], "3"], " ", 
       TemplateBox[{
        "\"\[CapitalDelta]\[InvisibleSpace]\[Rho]\"", "\"MassDensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       SuperscriptBox[
        TemplateBox[{"\"\[Omega]\"", "\"AngularVelocity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " angular velocity"}], TooltipStyle -> 
           "TextStyling"]& )], "2"]}], 
      TemplateBox[{"\"\[Gamma]\"", "\"SurfaceTension\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " surface tension"}], TooltipStyle -> 
         "TextStyling"]& )]]]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " acceleration number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     SuperscriptBox[
      TemplateBox[{"\"E\"", "\"YoungModulus\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
         "TextStyling"]& )], "3"], 
     RowBox[{
      SuperscriptBox[
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "2"], " ", 
      SuperscriptBox[
       TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
          "TextStyling"]& )], "2"], " ", 
      TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"P\"", "\"f\""], "\"Pressure\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " pressure"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"V\"", "\"f\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " heat capacity ratio"}], 
           TooltipStyle -> "TextStyling"]& )]]}], "\[Equal]", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"P\"", "\"i\""], "\"Pressure\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " pressure"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"V\"", "\"i\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " heat capacity ratio"}], 
           TooltipStyle -> "TextStyling"]& )]]}]}], ",", 
     RowBox[{
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"T\"", "\"f\""], "\"Temperature\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"V\"", "\"f\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " heat capacity ratio"}], 
            TooltipStyle -> "TextStyling"]& )]}]]}], "\[Equal]", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"T\"", "\"i\""], "\"Temperature\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
          "TextStyling"]& )], " ", 
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"V\"", "\"i\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " heat capacity ratio"}], 
            TooltipStyle -> "TextStyling"]& )]}]]}]}], ",", 
     RowBox[{
      TemplateBox[{"\"W\"", "\"Work\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " work"}], TooltipStyle -> 
         "TextStyling"]& )], "\[Equal]", 
      FractionBox[
       RowBox[{
        RowBox[{
         TemplateBox[{
           SubscriptBox["\"P\"", "\"f\""], "\"Pressure\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " pressure"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{
           SubscriptBox["\"V\"", "\"f\""], "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )]}], "-", 
        RowBox[{
         TemplateBox[{
           SubscriptBox["\"P\"", "\"i\""], "\"Pressure\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " pressure"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{
           SubscriptBox["\"V\"", "\"i\""], "\"Volume\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
            "TextStyling"]& )]}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " heat capacity ratio"}], 
           TooltipStyle -> "TextStyling"]& )]}]]}], ",", 
     RowBox[{
      TemplateBox[{"\"Q\"", "\"Heat\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " amount of heat"}], TooltipStyle -> 
         "TextStyling"]& )], "\[Equal]", "0"}], ",", 
     RowBox[{
      TemplateBox[{"\"\[CapitalDelta]\[InvisibleSpace]S\"", "\"Entropy\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " absolute entropy"}], TooltipStyle -> 
         "TextStyling"]& )], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Alpha]\"", "\"Albedo\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " albedo"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     TemplateBox[{"\"M\"", "\"RadiantExitance\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " radiant exitance"}], TooltipStyle -> 
        "TextStyling"]& )], 
     TemplateBox[{"\"E\"", "\"Irradiance\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " irradiance"}], TooltipStyle -> 
        "TextStyling"]& )]]}], ",", 
   RowBox[{
    TemplateBox[{"\"Al\"", "\"AlfvenNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Alfv\[EAcute]n number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], " ", 
      SqrtBox[
       RowBox[{
        TemplateBox[{"\"\[Mu]\"", "\"MagneticPermeability\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " magnetic permeability"}], 
           TooltipStyle -> "TextStyling"]& )], " ", 
        TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )]}]]}], 
     TemplateBox[{"\"B\"", "\"MagneticFluxDensity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " magnetic flux density"}], 
        TooltipStyle -> "TextStyling"]& )]]}], ",", 
   RowBox[{
    RowBox[{"Tan", "[", 
     FractionBox[
      TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
         "TextStyling"]& )], "2"], "]"}], "\[Equal]", 
    FractionBox[
     TemplateBox[{"\"H\"", "\"Height\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
        "TextStyling"]& )], 
     RowBox[{"2", " ", 
      TemplateBox[{"\"D\"", "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Delta]\"", "\"Angle\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      FractionBox[
       TemplateBox[{"\"d\"", "\"Diameter\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " diameter"}], TooltipStyle -> 
          "TextStyling"]& )], 
       RowBox[{"2", " ", 
        TemplateBox[{"\"D\"", "\"Distance\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
           "TextStyling"]& )]}]], "]"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Nu]\"", "\"Frequency\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
        "TextStyling"]& )], 
     RowBox[{"2", " ", "\[Pi]"}]]}], ",", 
   RowBox[{
    TemplateBox[{"\"J\"", "\"PlanarAreaMomentOfInertia\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " planar area moment of inertia"}], 
       TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
    RowBox[{
     FractionBox["1", "4"], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"R\"", "1"], "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], "4"], "-", 
       SuperscriptBox[
        TemplateBox[{
          SubscriptBox["\"R\"", "2"], "\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], "4"]}], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"AKI\"", "\"MultiplicativeConstants\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " multiplicative constant"}], 
       TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"\"MON\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "+", 
       TemplateBox[{"\"RON\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )]}], ")"}]}]}], ",", 
   RowBox[{
    TemplateBox[{
      FractionBox[
       SubscriptBox["\"I\"", "1"], 
       SubscriptBox["\"I\"", "2"]], "\"MultiplicativeConstants\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " multiplicative constant"}], 
       TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
    SuperscriptBox["10", 
     RowBox[{
      FractionBox["2", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         TemplateBox[{
           SubscriptBox["\"m\"", "1"], "\"ApparentMagnitude\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " apparent magnitude"}], 
            TooltipStyle -> "TextStyling"]& )]}], "+", 
        TemplateBox[{
          SubscriptBox["\"m\"", "2"], "\"MultiplicativeConstants\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " multiplicative constant"}], 
           TooltipStyle -> "TextStyling"]& )]}], ")"}]}]]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ar\"", "\"ArchimedesNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Archimedes number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " gravitational acceleration"}], 
         TooltipStyle -> "TextStyling"]& )], " ", 
      SuperscriptBox[
       TemplateBox[{"\"l\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )], "-", 
        TemplateBox[{
          SubscriptBox["\"\[Rho]\"", "0"], "\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )]}], ")"}], " ", 
      TemplateBox[{
        SubscriptBox["\"\[Rho]\"", "0"], "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     SuperscriptBox[
      TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
         "TextStyling"]& )], "2"]]}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Alpha]\"", "\"ArrheniusNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Arrhenius number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       TemplateBox[{"1", 
         RowBox[{"\"/\"", "\[InvisibleSpace]", 
           StyleBox["\"R\"", Italic, StripOnInput -> False]}], 
         "reciprocal molar gas constant", 
         FractionBox["1", "\"MolarGasConstant\""]},
        "Quantity"], ")"}], " ", 
      TemplateBox[{
        SubscriptBox["\"E\"", "\"a\""], "\"ActivationEnergy\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " activation energy"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     TemplateBox[{"\"T\"", "\"Temperature\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
        "TextStyling"]& )]]}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Eta]\"", "\"ThermalEfficiency\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " thermal efficiency"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{
       TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " heat capacity ratio"}], 
          TooltipStyle -> "TextStyling"]& )], " ", 
       RowBox[{"(", 
        RowBox[{
         TemplateBox[{"\"r\"", "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             TemplateBox[{"\"r\"", "\"MultiplicativeConstants\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " multiplicative constant"}], 
                TooltipStyle -> "TextStyling"]& )], " ", 
             TemplateBox[{
               SubscriptBox["\"T\"", "\"h\""], "\"Temperature\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
                "TextStyling"]& )]}], 
            TemplateBox[{
              SubscriptBox["\"T\"", "\"c\""], "\"Temperature\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
               "TextStyling"]& )]], ")"}], 
          FractionBox["1", 
           TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " heat capacity ratio"}], 
              TooltipStyle -> "TextStyling"]& )]]]}], ")"}]}], 
      RowBox[{
       SuperscriptBox[
        TemplateBox[{"\"r\"", "\"MultiplicativeConstants\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " multiplicative constant"}], 
           TooltipStyle -> "TextStyling"]& )], 
        TemplateBox[{"\"\[Gamma]\"", "\"HeatCapacityRatio\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " heat capacity ratio"}], 
           TooltipStyle -> "TextStyling"]& )]], "-", 
       FractionBox[
        RowBox[{
         TemplateBox[{"\"r\"", "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )], " ", 
         TemplateBox[{
           SubscriptBox["\"T\"", "\"h\""], "\"Temperature\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
            "TextStyling"]& )]}], 
        TemplateBox[{
          SubscriptBox["\"T\"", "\"c\""], "\"Temperature\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " temperature"}], TooltipStyle -> 
           "TextStyling"]& )]]}]]}]}], ",", 
   RowBox[{
    TemplateBox[{"\"At\"", "\"AtwoodNumber\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " Atwood number"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Equal]", 
    FractionBox[
     RowBox[{
      TemplateBox[{
        SubscriptBox["\"\[Rho]\"", "1"], "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )], "-", 
      TemplateBox[{
        SubscriptBox["\"\[Rho]\"", "2"], "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )]}], 
     RowBox[{
      TemplateBox[{
        SubscriptBox["\"\[Rho]\"", "1"], "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )], "+", 
      TemplateBox[{
        SubscriptBox["\"\[Rho]\"", "2"], "\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )]}]]}], ",", 
   RowBox[{
    FractionBox[
     TemplateBox[{
       SubscriptBox["\"V\"", "\"i\""], "\"Volume\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
        "TextStyling"]& )], 
     TemplateBox[{
       SubscriptBox["\"n\"", "\"i\""], "\"Amount\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " amount of substance"}], TooltipStyle -> 
        "TextStyling"]& )]], "\[Equal]", 
    FractionBox[
     TemplateBox[{
       SubscriptBox["\"V\"", "\"f\""], "\"Volume\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
        "TextStyling"]& )], 
     TemplateBox[{
       SubscriptBox["\"n\"", "\"f\""], "\"Amount\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " amount of substance"}], TooltipStyle -> 
        "TextStyling"]& )]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.877027555227804*^9},
 CellLabel->"Out[13]=",
 CellID->288504711,ExpressionUUID->"afd0eaf6-a8d3-49ec-8c89-c1ee695e368f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormulaData", "[", 
    RowBox[{"#", ",", "\"\<QuantityVariableTable\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"FormulaData", "[", "]"}], ",", "19"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877027562464905*^9, 3.8770275646836505`*^9}, {
  3.8770276776261463`*^9, 3.877027688844844*^9}},
 CellLabel->"In[15]:=",
 CellID->154788387,ExpressionUUID->"3caef403-61d6-4333-b49e-7f665fbb1d1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"d\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer d spectral line of helium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"C\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer C spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"D\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer D spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"C\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer C spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"e\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer e spectral line of mercury\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"C'\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer C' spectral line of cadmium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F' spectral line of cadmium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {
        SubscriptBox["\<\"N\"\>", "\<\"f\"\>"], "\<\"accelerating frequency\"\
\>", "\<\"AcceleratingFrequency\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"l\"\>", "\<\"characteristic length\"\>", "\<\"Length\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"\[Gamma]\"\>", "\<\"surface tension\"\>", \
"\<\"SurfaceTension\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"\[CapitalDelta]\[InvisibleSpace]\[Rho]\"\>", "\<\"density \
difference\"\>", "\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
       {"\<\"\[Omega]\"\>", "\<\"angular velocity\"\>", \
"\<\"AngularVelocity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"Ac\"\>", "\<\"acceleration number\"\>", \
"\<\"AccelerationNumber\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"E\"\>", "\<\"Young modulus\"\>", "\<\"YoungModulus\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"g\"\>", "\<\"gravitational acceleration\"\>", \
"\<\"GravitationalAcceleration\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"\[Eta]\"\>", "\<\"dynamic viscosity\"\>", \
"\<\"DynamicViscosity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
       {"\<\"\[Rho]\"\>", "\<\"mass density\"\>", "\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {
        SubscriptBox["\<\"P\"\>", "\<\"f\"\>"], "\<\"final pressure\"\>", "\<\
\"Pressure\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {
        SubscriptBox["\<\"V\"\>", "\<\"f\"\>"], "\<\"final volume\"\>", \
"\<\"Volume\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
       {"\<\"\[Gamma]\"\>", "\<\"heat capacity ratio\"\>", \
"\<\"HeatCapacityRatio\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"P\"\>", "\<\"i\"\>"], "\<\"initial pressure\"\>", "\
\<\"Pressure\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {
        SubscriptBox["\<\"V\"\>", "\<\"i\"\>"], "\<\"initial volume\"\>", "\<\
\"Volume\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
       {
        SubscriptBox["\<\"T\"\>", "\<\"f\"\>"], "\<\"final temperature\"\>", \
"\<\"Temperature\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"T\"\>", "\<\"i\"\>"], "\<\"initial \
temperature\"\>", "\<\"Temperature\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"W\"\>", "\<\"work done on the system\"\>", "\<\"Work\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"Q\"\>", "\<\"heat transferred to the system\"\>", "\<\"Heat\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"\[CapitalDelta]\[InvisibleSpace]S\"\>", "\<\"entropy \
change\"\>", "\<\"Entropy\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TemperatureUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Alpha]\"\>", "\<\"albedo\"\>", "\<\"Albedo\"\>", \
"\<\"Dimensionless\"\>"},
       {"\<\"E\"\>", "\<\"irradiance\"\>", "\<\"Irradiance\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}]},
       {"\<\"M\"\>", "\<\"radiant exitance\"\>", "\<\"RadiantExitance\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"Al\"\>", "\<\"Alfv\[EAcute]n number\"\>", \
"\<\"AlfvenNumber\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"B\"\>", "\<\"magnetic flux density\"\>", \
"\<\"MagneticFluxDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"v\"\>", "\<\"characteristic speed\"\>", "\<\"Speed\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
       {"\<\"\[Mu]\"\>", "\<\"magnetic permeability\"\>", \
"\<\"MagneticPermeability\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"\[Rho]\"\>", "\<\"mass density\"\>", "\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Theta]\"\>", "\<\"plane angle\"\>", "\<\"Angle\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"D\"\>", "\<\"distance\"\>", "\<\"Distance\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"H\"\>", "\<\"height\"\>", "\<\"Height\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Delta]\"\>", "\<\"angular diameter\"\>", "\<\"Angle\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"d\"\>", "\<\"diameter\"\>", "\<\"Diameter\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"D\"\>", "\<\"distance to center of object\"\>", \
"\<\"Distance\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Nu]\"\>", "\<\"frequency\"\>", "\<\"Frequency\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TimeUnit\"\>", ",", 
          RowBox[{"-", "1"}]}], "}"}]},
       {"\<\"\[Omega]\"\>", "\<\"angular frequency\"\>", \
"\<\"AngularFrequency\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"J\"\>", "\<\"planar area moment of inertia\"\>", \
"\<\"PlanarAreaMomentOfInertia\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}]},
       {
        SubscriptBox["\<\"R\"\>", "1"], "\<\"radius 1\"\>", "\<\"Radius\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"R\"\>", "2"], "\<\"radius 2\"\>", "\<\"Radius\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"AKI\"\>", "\<\"anti\[Hyphen]knock index\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"MON\"\>", "\<\"motor octane number\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"RON\"\>", "\<\"research octane number\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {
        FractionBox[
         SubscriptBox["\<\"I\"\>", "1"], 
         SubscriptBox["\<\"I\"\>", "2"]], 
        TemplateBox[{"\"intensity ratio \"", 
          FractionBox[
           SubscriptBox["\"I\"", "1"], 
           SubscriptBox["\"I\"", "2"]]},
         "RowDefault"], "\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\
\"\>"},
       {
        SubscriptBox["\<\"m\"\>", 
         "1"], "\<\"apparent magnitude 1\"\>", "\<\"ApparentMagnitude\"\>", "\
\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"m\"\>", 
         "2"], "\<\"apparent magnitude 2\"\>", "\<\"MultiplicativeConstants\"\
\>", "\<\"Dimensionless\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"Ar\"\>", "\<\"Archimedes number\"\>", \
"\<\"ArchimedesNumber\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"g\"\>", "\<\"gravitational acceleration\"\>", \
"\<\"GravitationalAcceleration\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
       {"\<\"l\"\>", "\<\"characteristic length\"\>", "\<\"Length\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
       {"\<\"\[Eta]\"\>", "\<\"dynamic viscosity\"\>", \
"\<\"DynamicViscosity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
       {"\<\"\[Rho]\"\>", "\<\"particle mass density\"\>", "\<\"MassDensity\"\
\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
       {
        SubscriptBox["\<\"\[Rho]\"\>", 
         "0"], "\<\"fluid density\"\>", "\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Alpha]\"\>", "\<\"Arrhenius number\"\>", \
"\<\"ArrheniusNumber\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"T\"\>", "\<\"temperature\"\>", "\<\"Temperature\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"E\"\>", "\<\"a\"\>"], "\<\"activation energy\"\>", \
"\<\"ActivationEnergy\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"AmountUnit\"\>", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"TimeUnit\"\>", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"\[Eta]\"\>", "\<\"thermal efficiency\"\>", \
"\<\"ThermalEfficiency\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"\[Gamma]\"\>", "\<\"heat capacity ratio\"\>", \
"\<\"HeatCapacityRatio\"\>", "\<\"Dimensionless\"\>"},
       {"\<\"r\"\>", "\<\"compression ratio\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"T\"\>", "\<\"c\"\>"], "\<\"cold reservoir \
temperature\"\>", "\<\"Temperature\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"T\"\>", "\<\"h\"\>"], "\<\"hot reservoir \
temperature\"\>", "\<\"Temperature\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {"\<\"At\"\>", "\<\"Atwood number\"\>", "\<\"AtwoodNumber\"\>", \
"\<\"Dimensionless\"\>"},
       {
        SubscriptBox["\<\"\[Rho]\"\>", 
         "1"], "\<\"fluid density\"\>", "\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
       {
        SubscriptBox["\<\"\[Rho]\"\>", 
         "2"], "\<\"fluid density of lighter fluid\"\>", \
"\<\"MassDensity\"\>", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"LengthUnit\"\>", ",", 
            RowBox[{"-", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False], ",", 
   StyleBox[
    TagBox[GridBox[{
       {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical quantity\"\>", \
"\<\"dimensions\"\>"},
       {
        SubscriptBox["\<\"n\"\>", "\<\"i\"\>"], "\<\"initial number of \
moles\"\>", "\<\"Amount\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"V\"\>", "\<\"i\"\>"], "\<\"initial volume\"\>", "\<\
\"Volume\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
       {
        SubscriptBox["\<\"n\"\>", "\<\"f\"\>"], "\<\"final number of \
moles\"\>", "\<\"Amount\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}]},
       {
        SubscriptBox["\<\"V\"\>", "\<\"f\"\>"], "\<\"final volume\"\>", \
"\<\"Volume\"\>", 
        RowBox[{"{", 
         RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
        "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"], "DialogStyle",
    StripOnInput->False]}], "}"}]], "Output",
 CellChangeTimes->{3.87702756510546*^9, 3.8770276893135557`*^9},
 CellLabel->"Out[15]=",
 CellID->123985392,ExpressionUUID->"0fc41c68-f1f0-43f1-ad44-bbc44c0c78b1"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{"#", ",", "\"\<QuantityVariableTable\>\""}], "]"}], "&"}], ",", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"FormulaData", "[", "]"}], ",", "19"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877027562464905*^9, 3.8770275646836505`*^9}, {
  3.8770276776261463`*^9, 3.877027726540162*^9}, {3.8770278528526473`*^9, 
  3.8770278548160505`*^9}},
 CellLabel->"In[24]:=",
 CellID->398638960,ExpressionUUID->"3dc767c0-ba90-4c84-964a-136a6d1de38d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"AbbeNumberHelium\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"d\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer d spectral line of helium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"C\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer C spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AbbeNumberHydrogen\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"D\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer D spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"C\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer C spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F spectral line of hydrogen\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AbbeNumberMercury\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"V\"\>", "\<\"Abbe number\"\>", "\<\"AbbeNumber\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"e\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer e spectral line of mercury\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"C'\"\>"], "\<\"refractive index at \
the wavelength of the Fraunhofer C' spectral line of cadmium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"F\"\>"], "\<\"refractive index at the \
wavelength of the Fraunhofer F' spectral line of cadmium\"\>", \
"\<\"RefractiveIndex\"\>", "\<\"Dimensionless\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AcceleratingFrequency\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {
         SubscriptBox["\<\"N\"\>", "\<\"f\"\>"], "\<\"accelerating \
frequency\"\>", "\<\"AcceleratingFrequency\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"l\"\>", "\<\"characteristic length\"\>", "\<\"Length\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"\[Gamma]\"\>", "\<\"surface tension\"\>", "\<\"SurfaceTension\"\
\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"\[CapitalDelta]\[InvisibleSpace]\[Rho]\"\>", "\<\"density \
difference\"\>", "\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
        {"\<\"\[Omega]\"\>", "\<\"angular velocity\"\>", "\<\"AngularVelocity\
\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AccelerationNumber\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"Ac\"\>", "\<\"acceleration number\"\>", "\<\"AccelerationNumber\
\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"E\"\>", "\<\"Young modulus\"\>", "\<\"YoungModulus\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"g\"\>", "\<\"gravitational acceleration\"\>", \
"\<\"GravitationalAcceleration\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"\[Eta]\"\>", "\<\"dynamic viscosity\"\>", "\<\"DynamicViscosity\
\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"\[Rho]\"\>", "\<\"mass density\"\>", "\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AdiabaticProcess\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {
         SubscriptBox["\<\"P\"\>", "\<\"f\"\>"], "\<\"final pressure\"\>", \
"\<\"Pressure\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"V\"\>", "\<\"f\"\>"], "\<\"final volume\"\>", \
"\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {"\<\"\[Gamma]\"\>", "\<\"heat capacity ratio\"\>", \
"\<\"HeatCapacityRatio\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"P\"\>", "\<\"i\"\>"], "\<\"initial pressure\"\>", \
"\<\"Pressure\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"V\"\>", "\<\"i\"\>"], "\<\"initial volume\"\>", \
"\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {
         SubscriptBox["\<\"T\"\>", "\<\"f\"\>"], "\<\"final temperature\"\>", \
"\<\"Temperature\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"T\"\>", "\<\"i\"\>"], "\<\"initial \
temperature\"\>", "\<\"Temperature\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"W\"\>", "\<\"work done on the system\"\>", "\<\"Work\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"Q\"\>", "\<\"heat transferred to the system\"\>", \
"\<\"Heat\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"\[CapitalDelta]\[InvisibleSpace]S\"\>", "\<\"entropy \
change\"\>", "\<\"Entropy\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TemperatureUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"Albedo\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Alpha]\"\>", "\<\"albedo\"\>", "\<\"Albedo\"\>", \
"\<\"Dimensionless\"\>"},
        {"\<\"E\"\>", "\<\"irradiance\"\>", "\<\"Irradiance\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}]},
        {"\<\"M\"\>", "\<\"radiant exitance\"\>", "\<\"RadiantExitance\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AlfvenNumber\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"Al\"\>", "\<\"Alfv\[EAcute]n number\"\>", \
"\<\"AlfvenNumber\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"B\"\>", "\<\"magnetic flux density\"\>", \
"\<\"MagneticFluxDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"v\"\>", "\<\"characteristic speed\"\>", "\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"\[Mu]\"\>", "\<\"magnetic permeability\"\>", \
"\<\"MagneticPermeability\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"\[Rho]\"\>", "\<\"mass density\"\>", "\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AngleSubtended\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Theta]\"\>", "\<\"plane angle\"\>", "\<\"Angle\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"D\"\>", "\<\"distance\"\>", "\<\"Distance\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"H\"\>", "\<\"height\"\>", "\<\"Height\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AngularDiameter\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Delta]\"\>", "\<\"angular diameter\"\>", "\<\"Angle\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"d\"\>", "\<\"diameter\"\>", "\<\"Diameter\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"D\"\>", "\<\"distance to center of object\"\>", "\<\"Distance\"\
\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AngularFrequency\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Nu]\"\>", "\<\"frequency\"\>", "\<\"Frequency\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]},
        {"\<\"\[Omega]\"\>", "\<\"angular frequency\"\>", \
"\<\"AngularFrequency\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AnnulusAreaMomentOfInertia\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"J\"\>", "\<\"planar area moment of inertia\"\>", \
"\<\"PlanarAreaMomentOfInertia\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}]},
        {
         SubscriptBox["\<\"R\"\>", "1"], "\<\"radius 1\"\>", "\<\"Radius\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"R\"\>", "2"], "\<\"radius 2\"\>", "\<\"Radius\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AntiKnockIndex\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"AKI\"\>", "\<\"anti\[Hyphen]knock index\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"MON\"\>", "\<\"motor octane number\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"RON\"\>", "\<\"research octane number\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ApparentMagnitudeIntensity\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {
         FractionBox[
          SubscriptBox["\<\"I\"\>", "1"], 
          SubscriptBox["\<\"I\"\>", "2"]], 
         TemplateBox[{"\"intensity ratio \"", 
           FractionBox[
            SubscriptBox["\"I\"", "1"], 
            SubscriptBox["\"I\"", "2"]]},
          
          "RowDefault"], "\<\"MultiplicativeConstants\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"m\"\>", 
          "1"], "\<\"apparent magnitude 1\"\>", "\<\"ApparentMagnitude\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"m\"\>", 
          "2"], "\<\"apparent magnitude 2\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ArchimedesNumber\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"Ar\"\>", "\<\"Archimedes number\"\>", \
"\<\"ArchimedesNumber\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"g\"\>", "\<\"gravitational acceleration\"\>", \
"\<\"GravitationalAcceleration\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"l\"\>", "\<\"characteristic length\"\>", "\<\"Length\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"\[Eta]\"\>", "\<\"dynamic viscosity\"\>", "\<\"DynamicViscosity\
\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"\[Rho]\"\>", "\<\"particle mass density\"\>", \
"\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"\[Rho]\"\>", 
          "0"], "\<\"fluid density\"\>", "\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"ArrheniusNumber\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Alpha]\"\>", "\<\"Arrhenius number\"\>", "\<\"ArrheniusNumber\
\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"T\"\>", "\<\"temperature\"\>", "\<\"Temperature\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"E\"\>", "\<\"a\"\>"], "\<\"activation energy\"\>", \
"\<\"ActivationEnergy\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"AmountUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AtkinsonCycle\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Eta]\"\>", "\<\"thermal efficiency\"\>", \
"\<\"ThermalEfficiency\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"\[Gamma]\"\>", "\<\"heat capacity ratio\"\>", \
"\<\"HeatCapacityRatio\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"r\"\>", "\<\"compression ratio\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"T\"\>", "\<\"c\"\>"], "\<\"cold reservoir \
temperature\"\>", "\<\"Temperature\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"T\"\>", "\<\"h\"\>"], "\<\"hot reservoir \
temperature\"\>", "\<\"Temperature\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AtwoodNumber\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"At\"\>", "\<\"Atwood number\"\>", "\<\"AtwoodNumber\"\>", \
"\<\"Dimensionless\"\>"},
        {
         SubscriptBox["\<\"\[Rho]\"\>", 
          "1"], "\<\"fluid density\"\>", "\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"\[Rho]\"\>", 
          "2"], "\<\"fluid density of lighter fluid\"\>", \
"\<\"MassDensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}], ",", 
   RowBox[{"\<\"AvogadrosLaw\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {
         SubscriptBox["\<\"n\"\>", "\<\"i\"\>"], "\<\"initial number of moles\
\"\>", "\<\"Amount\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"V\"\>", "\<\"i\"\>"], "\<\"initial volume\"\>", \
"\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {
         SubscriptBox["\<\"n\"\>", "\<\"f\"\>"], "\<\"final number of moles\"\
\>", "\<\"Amount\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"V\"\>", "\<\"f\"\>"], "\<\"final volume\"\>", \
"\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.877027713732129*^9, 3.8770277268213987`*^9}, 
   3.8770277676330824`*^9, 3.877027855175434*^9},
 CellLabel->"Out[24]=",
 CellID->79504512,ExpressionUUID->"cb800ec6-1f18-4928-a126-4607fd6079ad"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{"#", ",", "\"\<QuantityVariables\>\""}], "]"}], "&"}], ",", 
   RowBox[{"{", "\"\<AccelerationNumber\>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877027562464905*^9, 3.8770275646836505`*^9}, {
  3.8770276776261463`*^9, 3.877027726540162*^9}, {3.877027769508104*^9, 
  3.8770277782966585`*^9}, {3.8770278701015744`*^9, 3.8770278733487206`*^9}},
 CellLabel->"In[25]:=",
 CellID->30782342,ExpressionUUID->"901ac829-a0ab-4e18-8bb4-b2cd17f621d4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"AccelerationNumber\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " acceleration number"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"E\"", "\"YoungModulus\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " gravitational acceleration"}], 
        TooltipStyle -> "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
        "TextStyling"]& )], ",", 
     TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
      "QuantityVariable",
      DisplayFunction->(TooltipBox[
        StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
         False], 
        RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
        "TextStyling"]& )]}], "}"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8770277786404085`*^9, 3.877027873629941*^9},
 CellLabel->"Out[25]=",
 CellID->858662304,ExpressionUUID->"fc7127c0-5e32-4d46-87b4-529e7dc3e34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NondimensionalizationTransform", "[", 
   RowBox[{
    RowBox[{"FormulaData", "[", "\"\<AccelerationNumber\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"E\"", "\"YoungModulus\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " gravitational acceleration"}], 
         TooltipStyle -> "TextStyling"]& )], ",", 
      TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckCapitalE]", ",", "\[DoubleStruckG]", ",", "\[Eta]"}], 
     "}"}], ",", "\"\<PropertyAssociation\>\""}], "]"}], "//", 
  "Quiet"}]], "Input",
 CellChangeTimes->{{3.8770277356701827`*^9, 3.8770278133375006`*^9}, {
  3.8770278796160507`*^9, 3.8770279234290314`*^9}, {3.8770279556466312`*^9, 
  3.8770279638412056`*^9}},
 CellLabel->"In[29]:=",
 CellID->390529296,ExpressionUUID->"b4bf684f-bc46-4df5-8346-ecd09047f78e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"(", 
       TemplateBox[{
         RowBox[{"K", "[", "3", "]"}], "", "", "\"DimensionlessUnit\""},
        "Quantity"], ")"}]}], "\[Equal]", 
     FractionBox[
      SuperscriptBox["\[DoubleStruckCapitalE]", "3"], 
      RowBox[{
       SuperscriptBox["\[DoubleStruckG]", "2"], " ", 
       SuperscriptBox["\[Eta]", "2"]}]]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"E\"", "\"YoungModulus\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckCapitalE]", " ", 
        RowBox[{"(", 
         TemplateBox[{
           RowBox[{"K", "[", "1", "]"}], "\"Pa\"", "pascals", "\"Pascals\""},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckG]", " ", 
        RowBox[{"(", 
         TemplateBox[{
           RowBox[{"K", "[", "2", "]"}], 
           RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
           FractionBox["\"Meters\"", 
            SuperscriptBox["\"Seconds\"", "2"]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       FractionBox[
        RowBox[{"\[Eta]", " ", 
         RowBox[{"(", 
          TemplateBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"K", "[", "1", "]"}], 
              RowBox[{"3", "/", "2"}]], 
             RowBox[{"K", "[", "2", "]"}]], 
            RowBox[{
              SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", 
              SuperscriptBox["\"Pa\"", 
               RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/\"", 
              "\[InvisibleSpace]", "\"m\""}], 
            "second squared pascals to the 3/2 per meter", 
            FractionBox[
             RowBox[{
               SuperscriptBox["\"Pascals\"", 
                RowBox[{"3", "/", "2"}]], " ", 
               SuperscriptBox["\"Seconds\"", "2"]}], "\"Meters\""]},
           "Quantity"], ")"}]}], 
        SqrtBox[
         TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " acceleration number"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       RowBox[{
        TemplateBox[{"1"},
         "C"], " ", 
        RowBox[{"(", 
         TemplateBox[{
           RowBox[{"K", "[", "3", "]"}], "", "", "\"DimensionlessUnit\""},
          "Quantity"], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalE]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            RowBox[{"K", "[", "1", "]"}]], 
           RowBox[{"\"/\"", "\[InvisibleSpace]", "\"Pa\""}], 
           "reciprocal pascals", 
           FractionBox["1", "\"Pascals\""]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"E\"", "\"YoungModulus\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[DoubleStruckG]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            RowBox[{"K", "[", "2", "]"}]], 
           RowBox[{
             SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", "\"m\""}], "seconds squared per meter", 
           FractionBox[
            SuperscriptBox["\"Seconds\"", "2"], "\"Meters\""]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " gravitational acceleration"}], 
           TooltipStyle -> "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox[
            RowBox[{"K", "[", "2", "]"}], 
            SuperscriptBox[
             RowBox[{"K", "[", "1", "]"}], 
             RowBox[{"3", "/", "2"}]]], 
           
           RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"Pa\"", 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", "\")\""}], 
           "meters per second squared pascal to the 3/2", 
           FractionBox["\"Meters\"", 
            RowBox[{
              SuperscriptBox["\"Pascals\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SuperscriptBox["\"Seconds\"", "2"]}]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
           "TextStyling"]& )], " ", 
        SqrtBox[
         TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
            "TextStyling"]& )]]}]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox["1", 
            RowBox[{"K", "[", "3", "]"}]], 
           RowBox[{"\"per \"", "\[InvisibleSpace]", "\"\""}], "reciprocal ", 
           FractionBox["1", "\"DimensionlessUnit\""]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " acceleration number"}], 
           TooltipStyle -> "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"E\"", "\"YoungModulus\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         RowBox[{"K", "[", "1", "]"}], "\"Pa\"", "pascals", "\"Pascals\""},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         RowBox[{"K", "[", "2", "]"}], 
         RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
         FractionBox["\"Meters\"", 
          SuperscriptBox["\"Seconds\"", "2"]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       FractionBox[
        TemplateBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"K", "[", "1", "]"}], 
            RowBox[{"3", "/", "2"}]], 
           RowBox[{"K", "[", "2", "]"}]], 
          RowBox[{
            SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", 
            SuperscriptBox["\"Pa\"", 
             RowBox[{"3", "/", "2"}]], "\[NegativeMediumSpace]", "\"/\"", 
            "\[InvisibleSpace]", "\"m\""}], 
          "second squared pascals to the 3/2 per meter", 
          FractionBox[
           RowBox[{
             SuperscriptBox["\"Pascals\"", 
              RowBox[{"3", "/", "2"}]], " ", 
             SuperscriptBox["\"Seconds\"", "2"]}], "\"Meters\""]},
         "Quantity"], 
        SqrtBox[
         TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " acceleration number"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{
         RowBox[{"K", "[", "3", "]"}], "", "", "\"DimensionlessUnit\""},
        "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalE]", "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          RowBox[{"K", "[", "1", "]"}]], 
         RowBox[{"\"/\"", "\[InvisibleSpace]", "\"Pa\""}], 
         "reciprocal pascals", 
         FractionBox["1", "\"Pascals\""]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckG]", "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          RowBox[{"K", "[", "2", "]"}]], 
         RowBox[{
           SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", "\"m\""}], "seconds squared per meter", 
         FractionBox[
          SuperscriptBox["\"Seconds\"", "2"], "\"Meters\""]},
        "Quantity"]}], ",", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{
           FractionBox[
            RowBox[{"K", "[", "2", "]"}], 
            SuperscriptBox[
             RowBox[{"K", "[", "1", "]"}], 
             RowBox[{"3", "/", "2"}]]], 
           
           RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", 
             SuperscriptBox["\"Pa\"", 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", "\")\""}], 
           "meters per second squared pascal to the 3/2", 
           FractionBox["\"Meters\"", 
            RowBox[{
              SuperscriptBox["\"Pascals\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SuperscriptBox["\"Seconds\"", "2"]}]]},
          "Quantity"], ")"}], " ", 
        SqrtBox[
         TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
            "TextStyling"]& )]]}]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", 
       TemplateBox[{
         FractionBox["1", 
          RowBox[{"K", "[", "3", "]"}]], 
         RowBox[{"\"per \"", "\[InvisibleSpace]", "\"\""}], "reciprocal ", 
         FractionBox["1", "\"DimensionlessUnit\""]},
        "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8770277887258053`*^9, 3.877027813806137*^9}, {
  3.8770279161793346`*^9, 3.8770279255399694`*^9}, {3.877027957240258*^9, 
  3.877027964294322*^9}},
 CellLabel->"Out[29]=",
 CellID->292386690,ExpressionUUID->"58183044-37b4-4097-b277-d33e238d062c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NondimensionalizationTransform", "[", 
   RowBox[{
    RowBox[{"FormulaData", "[", "\"\<AccelerationNumber\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"E\"", "\"YoungModulus\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " gravitational acceleration"}], 
         TooltipStyle -> "TextStyling"]& )], ",", 
      TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\[DoubleStruckCapitalE]", ",", "\[DoubleStruckG]", ",", "\[Eta]"}], 
     "}"}], ",", "\"\<PropertyAssociation\>\"", ",", 
    RowBox[{"UnitSystem", "->", "\"\<PlanckUnits\>\""}]}], "]"}], "//", 
  "Quiet"}]], "Input",
 CellChangeTimes->{{3.8770277356701827`*^9, 3.8770278133375006`*^9}, {
  3.8770278796160507`*^9, 3.8770279234290314`*^9}, {3.8770279556466312`*^9, 
  3.87702798302948*^9}},
 CellLabel->"In[30]:=",
 CellID->179242368,ExpressionUUID->"2de09f7c-5e68-4944-a66f-cd69c447372b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ReducedForm\"\>", "\[Rule]", 
    RowBox[{
     TemplateBox[{"1"},
      "C"], "\[Equal]", 
     FractionBox[
      SuperscriptBox["\[DoubleStruckCapitalE]", "3"], 
      RowBox[{
       SuperscriptBox["\[DoubleStruckG]", "2"], " ", 
       SuperscriptBox["\[Eta]", "2"], " ", 
       TemplateBox[{"2"},
        "C"]}]]}]}], ",", 
   RowBox[{"\<\"NondimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"E\"", "\"YoungModulus\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckCapitalE]", " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], "7"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", 
             "\")\""}], 
           "speed of light to the 7 per Newtonian gravitational constant \
squared reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", "7"], 
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
              "\"ReducedPlanckConstant\""}]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[DoubleStruckG]", " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"7", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
           "speed of light to the 7/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"7", "/", "2"}]], 
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"\[Eta]", " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"9", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
           "speed of light to the 9/2 per Newtonian gravitational constant to \
the 3/2 square root reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"9", "/", "2"}]], 
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}]]},
          "Quantity"], ")"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " acceleration number"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1"},
        "C"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{
        TemplateBox[{"2"},
         "C"], " ", 
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], "5"], 
             "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", 
             "\")\""}], 
           "speed of light to the fifth per Newtonian gravitational constant \
squared reduced Planck constant", 
           FractionBox[
            SuperscriptBox["\"SpeedOfLight\"", "5"], 
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
              "\"ReducedPlanckConstant\""}]]},
          "Quantity"], ")"}]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalizationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalE]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\"/\"",
              "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], "7"]}], 
           "Newtonian gravitational constant squared reduced Planck constant \
per speed of light to the 7", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
              "\"ReducedPlanckConstant\""}], 
            SuperscriptBox["\"SpeedOfLight\"", "7"]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"E\"", "\"YoungModulus\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[DoubleStruckG]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SqrtBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False]], 
             "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"7", "/", "2"}]]}], 
           "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 7/2", 
           FractionBox[
            RowBox[{
              SqrtBox["\"GravitationalConstant\""], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}], 
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"7", "/", "2"}]]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " gravitational acceleration"}], 
           TooltipStyle -> "TextStyling"]& )]}]}], ",", 
      RowBox[{"\[Eta]", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], 
              RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
             SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
             "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], 
              RowBox[{"9", "/", "2"}]]}], 
           "Newtonian gravitational constant to the 3/2 square root reduced \
Planck constant per speed of light to the 9/2", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", 
               RowBox[{"3", "/", "2"}]], " ", 
              SqrtBox["\"ReducedPlanckConstant\""]}], 
            SuperscriptBox["\"SpeedOfLight\"", 
             RowBox[{"9", "/", "2"}]]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"{", "}"}], "]"}], "\[Rule]", 
       FractionBox[
        TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " acceleration number"}], 
           TooltipStyle -> "TextStyling"]& )], 
        TemplateBox[{"1"},
         "C"]]}], ",", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox[
              StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
             "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\"/\"",
              "\[InvisibleSpace]", 
             SuperscriptBox[
              StyleBox["\"c\"", Italic, StripOnInput -> False], "5"]}], 
           "Newtonian gravitational constant squared reduced Planck constant \
per speed of light to the fifth", 
           FractionBox[
            RowBox[{
              SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
              "\"ReducedPlanckConstant\""}], 
            SuperscriptBox["\"SpeedOfLight\"", "5"]]},
          "Quantity"], ")"}], " ", 
        TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"NondimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"E\"", "\"YoungModulus\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " Young modulus"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], "7"], 
           "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
           "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\")\""}],
          "speed of light to the 7 per Newtonian gravitational constant \
squared reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", "7"], 
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
            "\"ReducedPlanckConstant\""}]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"7", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
           "\[InvisibleSpace]", 
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
         "speed of light to the 7/2 per square root Newtonian gravitational \
constant square root reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"7", "/", "2"}]], 
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Eta]\"", "\"DynamicViscosity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " dynamic viscosity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"9", "/", "2"}]], "\[NegativeMediumSpace]", "\"/(\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[InvisibleSpace]", "\")\""}], 
         "speed of light to the 9/2 per Newtonian gravitational constant to \
the 3/2 square root reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"9", "/", "2"}]], 
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", 
             RowBox[{"3", "/", "2"}]], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"\"Ac\"", "\"AccelerationNumber\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " acceleration number"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", "1"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MassDensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], "5"], 
           "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
           "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\")\""}],
          "speed of light to the fifth per Newtonian gravitational constant \
squared reduced Planck constant", 
         FractionBox[
          SuperscriptBox["\"SpeedOfLight\"", "5"], 
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
            "\"ReducedPlanckConstant\""}]]},
        "Quantity"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"DimensionalizationMultipliers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalE]", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
           "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], "7"]}], 
         "Newtonian gravitational constant squared reduced Planck constant \
per speed of light to the 7", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
            "\"ReducedPlanckConstant\""}], 
          SuperscriptBox["\"SpeedOfLight\"", "7"]]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckG]", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SqrtBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False]], 
           "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"7", "/", "2"}]]}], 
         "square root Newtonian gravitational constant square root reduced \
Planck constant per speed of light to the 7/2", 
         FractionBox[
          RowBox[{
            SqrtBox["\"GravitationalConstant\""], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}], 
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"7", "/", "2"}]]]},
        "Quantity"]}], ",", 
      RowBox[{"\[Eta]", "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], 
            RowBox[{"3", "/", "2"}]], "\[InvisibleSpace]", 
           SqrtBox["\"\[HBar]\""], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], 
            RowBox[{"9", "/", "2"}]]}], 
         "Newtonian gravitational constant to the 3/2 square root reduced \
Planck constant per speed of light to the 9/2", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", 
             RowBox[{"3", "/", "2"}]], " ", 
            SqrtBox["\"ReducedPlanckConstant\""]}], 
          SuperscriptBox["\"SpeedOfLight\"", 
           RowBox[{"9", "/", "2"}]]]},
        "Quantity"]}], ",", 
      RowBox[{
       TemplateBox[{"1"},
        "C"], "\[Rule]", "1"}], ",", 
      RowBox[{
       TemplateBox[{"2"},
        "C"], "\[Rule]", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox[
            StyleBox["\"G\"", Italic, StripOnInput -> False], "2"], 
           "\[InvisibleSpace]", "\"\[HBar]\"", "\[InvisibleSpace]", "\"/\"", 
           "\[InvisibleSpace]", 
           SuperscriptBox[
            StyleBox["\"c\"", Italic, StripOnInput -> False], "5"]}], 
         "Newtonian gravitational constant squared reduced Planck constant \
per speed of light to the fifth", 
         FractionBox[
          RowBox[{
            SuperscriptBox["\"GravitationalConstant\"", "2"], " ", 
            "\"ReducedPlanckConstant\""}], 
          SuperscriptBox["\"SpeedOfLight\"", "5"]]},
        "Quantity"]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877027983560609*^9},
 CellLabel->"Out[30]=",
 CellID->76337150,ExpressionUUID->"efb783b6-f963-45b9-9c2d-9cfa7f0704db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaData", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877028048355893*^9, 3.8770280509977016`*^9}},
 CellLabel->"In[31]:=",
 CellID->562710345,ExpressionUUID->"d17899b3-3d12-4ebc-ab05-0399a80d4337"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Classes\"\>", ",", "\<\"ExternalIdentifiers\"\>", 
   ",", "\<\"Formula\"\>", ",", "\<\"QuantityVariableDimensions\"\>", 
   ",", "\<\"QuantityVariableNames\"\>", 
   ",", "\<\"QuantityVariablePhysicalQuantities\"\>", 
   ",", "\<\"QuantityVariables\"\>", ",", "\<\"QuantityVariableTable\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8770280512788396`*^9},
 CellLabel->"Out[31]=",
 CellID->62246355,ExpressionUUID->"99aba2d6-02a6-49af-ba07-280b5eae2113"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{"\"\<RunningInTheRain\>\"", ",", "#"}], "]"}], "&"}], ",", 
   RowBox[{"FormulaData", "[", "\"\<Properties\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877028056591457*^9, 3.8770280751664667`*^9}},
 CellLabel->"In[32]:=",
 CellID->326922591,ExpressionUUID->"fb0d18e4-8e12-4ab3-af85-510148c4daab"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Athletics\"\>", ",", "\<\"EverydayLife\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Athletics\"\>", ",", "\<\"Exercises\"\>"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"EverydayLife\"\>", ",", "\<\"Surprises\"\>"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ExternalIdentifiers\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"DOI\"", ",", "\"10.1088/0143-0807/33/5/1321\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             
             RowBox[{"\"Label\"", "\[Rule]", 
               "\"Whether or not to run in the rain\""}], 
             "\[RightAssociation]"}]}], "]"}], "\"DOI\"", 
       "\"Whether or not to run in the rain\"", 
       "https://doi.org/10.1088/0143-0807/33/5/1321"},
      "ExternalIdentifierURL"], "}"}]}], ",", 
   RowBox[{"\<\"Formula\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"t\"", "\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        TemplateBox[{"\"d\"", "\"Distance\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
           "TextStyling"]& )], 
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
             "TextStyling"]& )], "]"}]}], " ", 
        RowBox[{"Cos", "[", 
         TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
            "TextStyling"]& )], "]"}], " ", 
        TemplateBox[{
          SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
             "TextStyling"]& )], "]"}]}], " ", 
        TemplateBox[{
          SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )], " ", 
        RowBox[{"Sin", "[", 
         TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
            "TextStyling"]& )], "]"}]}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        RowBox[{"-", 
         TemplateBox[{
           SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
            "TextStyling"]& )]}], " ", 
        RowBox[{"Sin", "[", 
         TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
            "TextStyling"]& )], "]"}]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        TemplateBox[{"\"i\"", "\"RainfallIntensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " rainfall intensity"}], 
           TooltipStyle -> "TextStyling"]& )], 
        RowBox[{"Abs", "[", 
         TemplateBox[{
           SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
            "TextStyling"]& )], "]"}]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", 
            TemplateBox[{"\"v\"", "\"Speed\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
               "TextStyling"]& )]}], "+", 
           TemplateBox[{
             SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
              "TextStyling"]& )]}], "]"}], " ", 
         TemplateBox[{"\"d\"", "\"Distance\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"H\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"W\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )]}], 
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          TemplateBox[{
            SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
             "TextStyling"]& )], "]"}], " ", 
         TemplateBox[{"\"d\"", "\"Distance\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"D\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"H\"", "\"Height\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )]}], 
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"Abs", "[", 
          TemplateBox[{
            SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
             "TextStyling"]& )], "]"}], " ", 
         TemplateBox[{"\"d\"", "\"Distance\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"D\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"W\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )], " ", 
         TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )]}], 
        TemplateBox[{"\"v\"", "\"Speed\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"T\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        TemplateBox[{
          SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], "+", 
        TemplateBox[{
          SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )], "+", 
        TemplateBox[{
          SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
           "TextStyling"]& )]}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableDimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"t\"", "\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"d\"", "\"Distance\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], 
       "\[Rule]", "\<\"Dimensionless\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"i\"", "\"RainfallIntensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " rainfall intensity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"H\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"W\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"D\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"T\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"t\"", "\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"time spent in the rain\"\>"}], 
      ",", 
      RowBox[{
       TemplateBox[{"\"d\"", "\"Distance\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"distance to travel\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"rain speed in x direction\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"angle of rain to the direction of motion\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"angle of rain to side of person\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"rain speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"rain speed in y direction\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"rain speed in z direction\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], 
       "\[Rule]", "\<\"rain density\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"i\"", "\"RainfallIntensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " rainfall intensity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"rain rate\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"wetness for front and back\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"H\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"height\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"W\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"width shoulder to shoulder\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"wetness for sides\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"D\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"width front to back\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"wetness for top\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"T\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"total wetness\"\>"}]}], "}"}]}],
    ",", 
   RowBox[{"\<\"QuantityVariablePhysicalQuantities\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"t\"", "\"Time\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Time\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"d\"", "\"Distance\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Distance\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"v\"", "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Angle\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Angle\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Speed\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], 
       "\[Rule]", "\<\"MultiplicativeConstants\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"i\"", "\"RainfallIntensity\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " rainfall intensity"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"RainfallIntensity\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Volume\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"H\"", "\"Height\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Height\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"W\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Length\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Volume\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"D\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Length\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Volume\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"w\"", "\"T\""], "\"Volume\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Volume\"\>"}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariables\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"t\"", "\"Time\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"d\"", "\"Distance\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " distance"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"v\"", "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"v\"", "\"x\""], "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"v\"", "\"r\""], "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"v\"", "\"y\""], "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"v\"", "\"z\""], "\"Speed\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"\[Rho]\"", "\"MultiplicativeConstants\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " multiplicative constant"}], 
         TooltipStyle -> "TextStyling"]& )], ",", 
      TemplateBox[{"\"i\"", "\"RainfallIntensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " rainfall intensity"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"w\"", "\"x\""], "\"Volume\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"H\"", "\"Height\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " height"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"W\"", "\"Length\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"w\"", "\"y\""], "\"Volume\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"D\"", "\"Length\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"w\"", "\"z\""], "\"Volume\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"w\"", "\"T\""], "\"Volume\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " volume"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"t\"\>", "\<\"time spent in the rain\"\>", "\<\"Time\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"d\"\>", "\<\"distance to travel\"\>", "\<\"Distance\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"v\"\>", "\<\"speed\"\>", "\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"v\"\>", "\<\"x\"\>"], "\<\"rain speed in x \
direction\"\>", "\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"\[Theta]\"\>", "\<\"angle of rain to the direction of \
motion\"\>", "\<\"Angle\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"\[Phi]\"\>", "\<\"angle of rain to side of person\"\>", \
"\<\"Angle\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"v\"\>", "\<\"r\"\>"], "\<\"rain speed\"\>", \
"\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"v\"\>", "\<\"y\"\>"], "\<\"rain speed in y \
direction\"\>", "\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"v\"\>", "\<\"z\"\>"], "\<\"rain speed in z \
direction\"\>", "\<\"Speed\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"\[Rho]\"\>", "\<\"rain density\"\>", \
"\<\"MultiplicativeConstants\"\>", "\<\"Dimensionless\"\>"},
        {"\<\"i\"\>", "\<\"rain rate\"\>", "\<\"RainfallIntensity\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"w\"\>", "\<\"x\"\>"], "\<\"wetness for front and \
back\"\>", "\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {"\<\"H\"\>", "\<\"height\"\>", "\<\"Height\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {"\<\"W\"\>", "\<\"width shoulder to shoulder\"\>", "\<\"Length\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"w\"\>", "\<\"y\"\>"], "\<\"wetness for sides\"\>", \
"\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {"\<\"D\"\>", "\<\"width front to back\"\>", "\<\"Length\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]},
        {
         SubscriptBox["\<\"w\"\>", "\<\"z\"\>"], "\<\"wetness for top\"\>", "\
\<\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]},
        {
         SubscriptBox["\<\"w\"\>", "\<\"T\"\>"], "\<\"total wetness\"\>", "\<\
\"Volume\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "3"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877028075869599*^9},
 CellLabel->"Out[32]=",
 CellID->180338236,ExpressionUUID->"2da10889-1a1f-4dd9-9632-952d88998628"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unit System Transform", "Section",
 CellChangeTimes->{{3.8770283819355707`*^9, 3.8770283955798855`*^9}},
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["\<\
I would like to demonstrate a function I created to transform units:\
\>", "Text",
 CellChangeTimes->{{3.8770284000426054`*^9, 3.8770284135999794`*^9}},
 CellID->258399282,ExpressionUUID->"29a0c58e-9f52-480b-a220-4eb257460937"],

Cell["\<\
What if I want to directly convert quantities instead of using dimensional \
combinations? I created a function UnitSystemTransform to do this.\
\>", "Text",
 CellChangeTimes->{{3.8770284158968544`*^9, 3.8770284401531534`*^9}},
 CellID->456215884,ExpressionUUID->"e7e14108-d550-4457-9e89-73dc2f6c9fcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<PeterBurbery/DimensionalAnalysis\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.877028441673937*^9, 3.8770284527997217`*^9}},
 CellLabel->"In[33]:=",
 CellID->379926399,ExpressionUUID->"2cd1e21d-64f6-4e24-a9b8-1a6dbf3f2ccc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/DimensionalAnalysis\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.20.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"PeterBurbery/DimensionalAnalysis\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.20.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\Hannah\\\\AppData\\\\Roaming\\\\\
Mathematica\\\\Paclets\\\\Repository\\\\PeterBurbery__DimensionalAnalysis-1.\
20.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"A paclet for dimensional analysis\"", Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "PeterBurbery/DimensionalAnalysis", "Description" -> 
    "A paclet for dimensional analysis", "Creator" -> "Peter Cullen Burbery", 
    "License" -> "MIT", "PublisherID" -> "PeterBurbery", "Version" -> 
    "1.20.0", "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{
         "PeterBurbery`DimensionalAnalysis`", "DimensionalAnalysis.wl"}}, 
       "Symbols" -> {
        "PeterBurbery`DimensionalAnalysis`CanonicalDimensionalProduct", 
         "PeterBurbery`DimensionalAnalysis`PhysicalQuantityLookup", 
         "PeterBurbery`DimensionalAnalysis`UnitSystemTransform"}}, {
      "Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\Hannah\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
PeterBurbery__DimensionalAnalysis-1.20.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8770284533933487`*^9},
 CellLabel->"Out[33]=",
 CellID->59169728,ExpressionUUID->"d0a0ad0e-e399-4535-809d-393ed4e5d203"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`DimensionalAnalysis`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770284544714727`*^9, 3.877028468218586*^9}},
 CellLabel->"In[36]:=",
 CellID->313916198,ExpressionUUID->"21b046dd-0004-40dd-8604-e58f03c9fe61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"J\"", "joules", 
     "\"Joules\""},
    "Quantity"], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
      "Quantity"], ",", 
     TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
      "Quantity"], ",", 
     TemplateBox[{"1.25", 
       RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
       FractionBox["\"Kilograms\"", 
        SuperscriptBox["\"Meters\"", "3"]]},
      "Quantity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877028471062334*^9, 3.8770285177244864`*^9}},
 CellLabel->"In[38]:=",
 CellID->165352126,ExpressionUUID->"5b795f32-2470-402f-a4c4-118be041a7ff"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{
    FractionBox["1", "1000000"], 
    RowBox[{"\"kg\"", "\[ThinSpace]", 
      SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
      "\[InvisibleSpace]", 
      SuperscriptBox["\"ms\"", "2"]}], 
    "kilogram meters squared per millisecond squared", 
    FractionBox[
     RowBox[{"\"Kilograms\"", " ", 
       SuperscriptBox["\"Meters\"", "2"]}], 
     SuperscriptBox["\"Milliseconds\"", "2"]]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{{3.877028523657136*^9, 3.877028528549659*^9}},
 CellLabel->"Out[38]=",
 CellID->538724055,ExpressionUUID->"aeabfc01-c481-45f4-a3e2-f45da86ab96c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"UnitSystemTransform", "[", 
   RowBox[{
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"J\"", "joules", 
      "\"Joules\""},
     "Quantity"], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
       "Quantity"], ",", 
      TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
       "Quantity"], ",", 
      TemplateBox[{"1.25", 
        RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
        FractionBox["\"Kilograms\"", 
         SuperscriptBox["\"Meters\"", "3"]]},
       "Quantity"]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8770285909499874`*^9, 3.877028592307626*^9}},
 CellLabel->"In[41]:=",
 CellID->125726696,ExpressionUUID->"e20372d6-a5b8-4432-b561-db3d683580f5"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1", "1000000"], 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"ms\"", "2"]}], 
   "kilogram meters squared per millisecond squared", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    SuperscriptBox["\"Milliseconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8770285927295017`*^9},
 CellLabel->"Out[41]=",
 CellID->88535652,ExpressionUUID->"8f878f45-9ee4-4720-824f-ea5788ad0b2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityMagnitude", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
     "Quantity"], ",", 
    TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
     "Quantity"], ",", 
    TemplateBox[{"1.25", 
      RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
      FractionBox["\"Kilograms\"", 
       SuperscriptBox["\"Meters\"", "3"]]},
     "Quantity"]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.877028603619244*^9, 3.8770286116295834`*^9}},
 CellLabel->"In[42]:=",
 CellID->562370332,ExpressionUUID->"057b4870-5a64-4f83-ba9d-ad08a84a78cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25.`", ",", "130.`", ",", "1.25`"}], "}"}]], "Output",
 CellChangeTimes->{3.8770286122389555`*^9},
 CellLabel->"Out[42]=",
 CellID->295217248,ExpressionUUID->"9ce67073-02ec-4e61-9a61-9142272b890c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "@@", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
      "Quantity"], ",", 
     TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
      "Quantity"], ",", 
     TemplateBox[{"1.25", 
       RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
         SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
       FractionBox["\"Kilograms\"", 
        SuperscriptBox["\"Meters\"", "3"]]},
      "Quantity"]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8770286150203247`*^9, 3.8770286177405877`*^9}},
 CellLabel->"In[43]:=",
 CellID->768951496,ExpressionUUID->"eb0e8b60-8880-4d4c-b661-8db07b8eef49"],

Cell[BoxData["4062.5`"], "Output",
 CellChangeTimes->{3.8770286180687027`*^9},
 CellLabel->"Out[43]=",
 CellID->582472275,ExpressionUUID->"6a50a85f-b0b4-49e2-bc49-306f3470867f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantityUnit", "@", 
   RowBox[{"First", "[", 
    RowBox[{"UnitSystemTransform", "[", 
     RowBox[{
      TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"J\"", "joules", 
        "\"Joules\""},
       "Quantity"], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
         "Quantity"], ",", 
        TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
         "Quantity"], ",", 
        TemplateBox[{"1.25", 
          RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
          FractionBox["\"Kilograms\"", 
           SuperscriptBox["\"Meters\"", "3"]]},
         "Quantity"]}], "}"}]}], "]"}], "]"}]}], "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.877028631599207*^9, 3.8770286592006035`*^9}},
 CellLabel->"In[46]:=",
 CellID->680533327,ExpressionUUID->"dd99978a-a327-435b-bca6-6996ac83cbf2"],

Cell["(\"Kilograms\"*\"Meters\"^2)/\"Milliseconds\"^2", "Output",
 CellChangeTimes->{{3.8770286338179207`*^9, 3.8770286595442066`*^9}},
 CellLabel->"Out[46]//InputForm=",
 CellID->720582321,ExpressionUUID->"b29fcce6-1890-481f-be00-83609fd40bc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"Times", "@@", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{"25.", "\"ms\"", "milliseconds", "\"Milliseconds\""},
        "Quantity"], ",", 
       TemplateBox[{"130.", "\"m\"", "meters", "\"Meters\""},
        "Quantity"], ",", 
       TemplateBox[{"1.25", 
         RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
           SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
         FractionBox["\"Kilograms\"", 
          SuperscriptBox["\"Meters\"", "3"]]},
        "Quantity"]}], "}"}], "]"}]}], ",", 
   RowBox[{"\"\<Kilograms\>\"", "*", 
    RowBox[{
     RowBox[{"\"\<Meters\>\"", "^", "2"}], "/", 
     RowBox[{"\"\<Milliseconds\>\"", "^", "2"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.877028637224182*^9, 3.877028687490839*^9}},
 CellLabel->"In[48]:=",
 CellID->687280586,ExpressionUUID->"e42d9475-8baa-4d29-bd58-3ac4d7a72e2f"],

Cell[BoxData[
 TemplateBox[{"4062.5`", 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"ms\"", "2"]}], 
   "kilogram meters squared per millisecond squared", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    SuperscriptBox["\"Milliseconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877028687850103*^9},
 CellLabel->"Out[48]=",
 CellID->19841988,ExpressionUUID->"9b386f58-914c-4a17-9d3e-526d541346ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"4062.5`", ",", 
    FractionBox[
     RowBox[{"\"\<Kilograms\>\"", " ", 
      SuperscriptBox["\"\<Meters\>\"", "2"]}], 
     SuperscriptBox["\"\<Milliseconds\>\"", "2"]]}], "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[49]:=",
 CellID->738535870,ExpressionUUID->"81d62a25-11d1-4ac5-aeab-d4004a710c6a"],

Cell[BoxData[
 TemplateBox[{"4.0625`", "\"GJ\"", "gigajoules", "\"Gigajoules\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877028691996714*^9},
 CellLabel->"Out[49]=",
 CellID->11845043,ExpressionUUID->"d3542004-79b2-4b0f-a72d-37c993c6a4f8"]
}, Open  ]],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[10]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
  "XXXX"], "Input",ExpressionUUID->"97b135be-f1de-446c-b13a-b4341ed946b7"],
  ExpressionCell[$CellContext`XXXX, "Input"]]], "Output",
 CellChangeTimes->{3.8770275086265535`*^9},
 CellTags->"ExampleInput",
 CellLabel->"Out[10]=",
 CellID->460994882,ExpressionUUID->"7807b63e-d736-423d-8b01-c291c5ffe2a4"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Quantities with Uncertainty", "Section",
 CellChangeTimes->{{3.877028728343217*^9, 3.8770287395108385`*^9}},
 CellID->74998758,ExpressionUUID->"5a641b42-b5ae-4c7e-b9b2-3e26f8deefd0"],

Cell["\<\
Let's make an extension to the problem. I have the time as 25.0ms plus or \
minus 2.718 ms.\
\>", "Text",
 CellChangeTimes->{{3.8770287553581285`*^9, 3.8770288015835857`*^9}},
 CellID->51244318,ExpressionUUID->"0ef79e41-79b2-4f6d-8153-150781973fee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Around", "[", 
  RowBox[{"25", ",", "2.718"}], "]"}]], "Input",
 CellChangeTimes->{{3.8770288060973988`*^9, 3.8770288121762004`*^9}},
 CellLabel->"In[50]:=",
 CellID->408122043,ExpressionUUID->"98e434cf-3838-43f8-9d0c-ab04ee67fa32"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"25.0", "2.7"},
   "Around"],
  Around[25., 2.718]]], "Output",
 CellChangeTimes->{3.87702881251982*^9},
 CellLabel->"Out[50]=",
 CellID->97602148,ExpressionUUID->"000eb7dc-a38f-4991-9e7a-daca13442ec8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"Around", "[", 
    RowBox[{"25", ",", "2.718"}], "]"}], ",", "\"\<Milliseconds\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770288163792095`*^9, 3.8770288208111105`*^9}},
 CellLabel->"In[51]:=",
 CellID->670620259,ExpressionUUID->"8b341de5-df38-4702-8d7d-ac96658ca16b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     InterpretationBox[
      TemplateBox[{"25.0", "2.7"}, "Around", SyntaxForm -> PlusMinus], 
      Around[25., 2.718]], ")"}], "\"ms\"", "milliseconds", 
   "\"Milliseconds\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8770288211392403`*^9},
 CellLabel->"Out[51]=",
 CellID->41838414,ExpressionUUID->"7a07abc4-ad92-4643-99a3-5bf74824ee0b"]
}, Open  ]],

Cell["\<\
I can have 130.0m plus or minus 0.4m and 1.25kg/m^3 plus or minus 0.1 kg/m^3.\
\>", "Text",
 CellChangeTimes->{{3.877028829980085*^9, 3.8770288673669186`*^9}},
 CellID->236671133,ExpressionUUID->"f5bae885-5629-46b2-acb8-8f3482a0ce58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Around", "[", 
  RowBox[{"130", ",", "0.4"}], "]"}]], "Input",
 CellChangeTimes->{{3.8770288693199563`*^9, 3.8770288745855384`*^9}},
 CellLabel->"In[52]:=",
 CellID->310954202,ExpressionUUID->"efe17990-f622-447c-99cf-733764823b81"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"130.0", "0.4"},
   "Around"],
  Around[130., 0.4]]], "Output",
 CellChangeTimes->{3.877028874960419*^9},
 CellLabel->"Out[52]=",
 CellID->60062732,ExpressionUUID->"902e6d36-e3e4-4514-aaa1-bbcef07d1a64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"Around", "[", 
    RowBox[{"130", ",", "0.4"}], "]"}], ",", "\"\<Meters\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770288755697966`*^9, 3.877028881974744*^9}},
 CellLabel->"In[53]:=",
 CellID->230792812,ExpressionUUID->"1e6df49d-0b65-4f43-bac6-6322d0a30e19"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     InterpretationBox[
      TemplateBox[{"130.0", "0.4"}, "Around", SyntaxForm -> PlusMinus], 
      Around[130., 0.4]], ")"}], "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8770288822871265`*^9},
 CellLabel->"Out[53]=",
 CellID->392118351,ExpressionUUID->"1f661882-4529-4e2e-8d9d-69f598ef08e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Around", "[", 
  RowBox[{"1.25", ",", "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8770288849747896`*^9, 3.8770288976461105`*^9}},
 CellLabel->"In[54]:=",
 CellID->602900892,ExpressionUUID->"e31a3aa5-7bcf-42f4-80d3-51f1937fe941"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"1.25", "0.10"},
   "Around"],
  Around[1.25, 0.1]]], "Output",
 CellChangeTimes->{3.877028897989869*^9},
 CellLabel->"Out[54]=",
 CellID->192631476,ExpressionUUID->"ef5fc76f-f9e5-40e4-a7b7-d40f7628f83b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"Around", "[", 
    RowBox[{"1.25", ",", "0.1"}], "]"}], ",", 
   RowBox[{"\"\<Kilograms\>\"", "/", 
    SuperscriptBox["\"\<Meters\>\"", "3"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8770288993179913`*^9, 3.877028913091427*^9}},
 CellLabel->"In[55]:=",
 CellID->150633148,ExpressionUUID->"b065a44a-ff6a-4cde-844f-d949a801e0ab"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     InterpretationBox[
      TemplateBox[{"1.25", "0.10"}, "Around", SyntaxForm -> PlusMinus], 
      Around[1.25, 0.1]], ")"}], 
   RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
   FractionBox["\"Kilograms\"", 
    SuperscriptBox["\"Meters\"", "3"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877028913435096*^9},
 CellLabel->"Out[55]=",
 CellID->29063474,ExpressionUUID->"53b95bf4-2848-4a43-b75d-9cdc8da3a7e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AroundReplace", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"DimensionalCombinations", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"time\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
          "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
          "\"physical quantity\""},
         "Entity"], ",", 
        TemplateBox[{"\"mass density\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}], 
          "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
          "\"physical quantity\""},
         "Entity"], ",", 
        TemplateBox[{"\"radius\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
          "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
          "\"physical quantity\""},
         "Entity"]}], "}"}], ",", 
      TemplateBox[{"\"energy\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
        "\"physical quantity\""},
       "Entity"]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"MassDensity\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
         "TextStyling"]& )], "->", 
      TemplateBox[{
        RowBox[{"(", 
          InterpretationBox[
           TemplateBox[{"1.25", "0.10"}, "Around", SyntaxForm -> PlusMinus], 
           Around[1.25, 0.1]], ")"}], 
        RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
        FractionBox["\"Kilograms\"", 
         SuperscriptBox["\"Meters\"", "3"]]},
       "Quantity"]}], ",", 
     RowBox[{
      TemplateBox[{"\"Radius\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
         "TextStyling"]& )], "->", 
      TemplateBox[{
        RowBox[{"(", 
          InterpretationBox[
           TemplateBox[{"130.0", "0.4"}, "Around", SyntaxForm -> PlusMinus], 
           Around[130., 0.4]], ")"}], "\"m\"", "meters", "\"Meters\""},
       "Quantity"]}], ",", 
     RowBox[{
      TemplateBox[{"\"Time\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
         "TextStyling"]& )], "->", 
      TemplateBox[{
        RowBox[{"(", 
          InterpretationBox[
           TemplateBox[{"25.0", "2.7"}, "Around", SyntaxForm -> PlusMinus], 
           Around[25., 2.718]], ")"}], "\"ms\"", "milliseconds", 
        "\"Milliseconds\""},
       "Quantity"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8770289400093684`*^9, 3.8770290030284452`*^9}},
 CellLabel->"In[58]:=",
 CellID->175606448,ExpressionUUID->"86140603-1838-441a-b6b2-0768f64b0570"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TemplateBox[{"7.4", "1.7", 
      SuperscriptBox["10", "7"]}, "AroundExp"], 
    Around[7.42586*^7, 1.7242846918486133`*^7]], 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"ms\"", "2"]}], 
   "kilogram meters squared per millisecond squared", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    SuperscriptBox["\"Milliseconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.8770289423659735`*^9, {3.8770289779118347`*^9, 3.8770290039190683`*^9}},
 CellLabel->"Out[58]=",
 CellID->9193457,ExpressionUUID->"35489e0e-88b8-4dee-b0eb-05baf9365550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"AroundReplace", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DimensionalCombinations", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          TemplateBox[{"\"time\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
            "\"physical quantity\""},
           "Entity"], ",", 
          TemplateBox[{"\"mass density\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}],
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
            "\"physical quantity\""},
           "Entity"], ",", 
          TemplateBox[{"\"radius\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
            "\"physical quantity\""},
           "Entity"]}], "}"}], ",", 
        TemplateBox[{"\"energy\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
          "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
          "\"physical quantity\""},
         "Entity"]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"1.25", "0.10"}, "Around", SyntaxForm -> PlusMinus], 
             Around[1.25, 0.1]], ")"}], 
          RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
          FractionBox["\"Kilograms\"", 
           SuperscriptBox["\"Meters\"", "3"]]},
         "Quantity"]}], ",", 
       RowBox[{
        TemplateBox[{"\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"130.0", "0.4"}, "Around", SyntaxForm -> PlusMinus], 
             Around[130., 0.4]], ")"}], "\"m\"", "meters", "\"Meters\""},
         "Quantity"]}], ",", 
       RowBox[{
        TemplateBox[{"\"Time\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"25.0", "2.7"}, "Around", SyntaxForm -> PlusMinus], 
             Around[25., 2.718]], ")"}], "\"ms\"", "milliseconds", 
          "\"Milliseconds\""},
         "Quantity"]}]}], "}"}]}], "]"}], ",", "\"\<Joules\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877029012462655*^9, 3.87702901731369*^9}},
 CellLabel->"In[59]:=",
 CellID->86942197,ExpressionUUID->"0a953b9e-763c-4020-b74e-3c26ca5ee812"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TemplateBox[{"7.4", "1.7", 
      SuperscriptBox["10", "13"]}, "AroundExp"], 
    Around[7.42586*^13, 1.7242846918486135`*^13]], "\"J\"", "joules", 
   "\"Joules\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.87702901765744*^9},
 CellLabel->"Out[59]=",
 CellID->427006043,ExpressionUUID->"2fa50e2b-1b15-4afa-a50a-6a24c67ac44b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"AroundReplace", "[", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"DimensionalCombinations", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          TemplateBox[{"\"time\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
            "\"physical quantity\""},
           "Entity"], ",", 
          TemplateBox[{"\"mass density\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"MassDensity\""}], "]"}],
             "\"Entity[\\\"PhysicalQuantity\\\", \\\"MassDensity\\\"]\"", 
            "\"physical quantity\""},
           "Entity"], ",", 
          TemplateBox[{"\"radius\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
            "\"physical quantity\""},
           "Entity"]}], "}"}], ",", 
        TemplateBox[{"\"energy\"", 
          RowBox[{"Entity", "[", 
            RowBox[{"\"PhysicalQuantity\"", ",", "\"Energy\""}], "]"}], 
          "\"Entity[\\\"PhysicalQuantity\\\", \\\"Energy\\\"]\"", 
          "\"physical quantity\""},
         "Entity"]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        TemplateBox[{"\"MassDensity\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " mass density"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"1.25", "0.10"}, "Around", SyntaxForm -> PlusMinus], 
             Around[1.25, 0.1]], ")"}], 
          RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
            SuperscriptBox["\"m\"", "3"]}], "kilograms per meter cubed", 
          FractionBox["\"Kilograms\"", 
           SuperscriptBox["\"Meters\"", "3"]]},
         "Quantity"]}], ",", 
       RowBox[{
        TemplateBox[{"\"Radius\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " radius"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"130.0", "0.4"}, "Around", SyntaxForm -> PlusMinus], 
             Around[130., 0.4]], ")"}], "\"m\"", "meters", "\"Meters\""},
         "Quantity"]}], ",", 
       RowBox[{
        TemplateBox[{"\"Time\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
           "TextStyling"]& )], "->", 
        TemplateBox[{
          RowBox[{"(", 
            InterpretationBox[
             TemplateBox[{"25.0", "2.7"}, "Around", SyntaxForm -> PlusMinus], 
             Around[25., 2.718]], ")"}], "\"ms\"", "milliseconds", 
          "\"Milliseconds\""},
         "Quantity"]}]}], "}"}]}], "]"}], ",", "\"\<KilotonsOfTNT\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877029012462655*^9, 3.877029022063446*^9}},
 CellLabel->"In[60]:=",
 CellID->227509808,ExpressionUUID->"be6c8ad0-b20f-425f-b6f6-7382a7b63a03"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"(", 
     InterpretationBox[
      TemplateBox[{"18.", "4."}, "Around", SyntaxForm -> PlusMinus], 
      Around[17.74823135755258, 4.121139320861887]], ")"}], 
   "\"kilotons of TNT\"", "kilotons of TNT", "\"KilotonsOfTNT\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.877029022391579*^9},
 CellLabel->"Out[60]=",
 CellID->319932232,ExpressionUUID->"b7962f09-f13e-4e2a-8e0b-018494315eb5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pendulum", "Section",
 CellChangeTimes->{{3.8770290700712023`*^9, 3.877029074241001*^9}},
 CellID->67693121,ExpressionUUID->"cb95551a-1acf-4579-b758-8b9d204e389b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"double pendulum\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalSystem\"", ",", "\"DoublePendulum\""}], "]"}], 
    "\"Entity[\\\"PhysicalSystem\\\", \\\"DoublePendulum\\\"]\"", 
    "\"physical system\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8770290952845173`*^9, 3.877029096784584*^9}},
 CellLabel->"In[61]:=",
 CellID->167382795,ExpressionUUID->"d689da3c-cb38-4deb-9d45-9bf7fccb8f19"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["PhysicalSystem", "Action"] -> Inactive[Integrate][
         Inactive[ReplaceRepeated][
         "T" - "V", {"T" :> Rational[1, 2] (QuantityVariable[
                 Subscript["l", 1], "Length"]^2 (QuantityVariable[
                 Subscript["m", 1], "Mass"] + QuantityVariable[
                 Subscript["m", 2], "Mass"]) Derivative[1][
                 QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"]][
                 QuantityVariable["\[Tau]", "Time"]]^2 + 
             2 Cos[QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"][
                  QuantityVariable["\[Tau]", "Time"]] - QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["\[Tau]", "Time"]]] QuantityVariable[
                Subscript["l", 1], "Length"] QuantityVariable[
                Subscript["l", 2], "Length"] QuantityVariable[
                Subscript["m", 2], "Mass"] Derivative[1][
                QuantityVariable[
                 Subscript["\[Theta]", 1], "Angle"]][
                QuantityVariable["\[Tau]", "Time"]] Derivative[1][
                QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"]][
                QuantityVariable["\[Tau]", "Time"]] + QuantityVariable[
                 Subscript["l", 2], "Length"]^2 QuantityVariable[
                Subscript["m", 2], "Mass"] Derivative[1][
                 QuantityVariable[
                  Subscript["\[Theta]", 2], "Angle"]][
                 QuantityVariable["\[Tau]", "Time"]]^2), "V" :> -Cos[
               QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["\[Tau]", "Time"]]] 
             QuantityVariable["g", "Acceleration"] QuantityVariable[
               Subscript["l", 1], "Length"] QuantityVariable[
               Subscript["m", 1], "Mass"] - 
            QuantityVariable["g", "Acceleration"] (Cos[
                QuantityVariable[
                 Subscript["\[Theta]", 1], "Angle"][
                 QuantityVariable["\[Tau]", "Time"]]] QuantityVariable[
                Subscript["l", 1], "Length"] + Cos[
                QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["\[Tau]", "Time"]]] QuantityVariable[
                Subscript["l", 2], "Length"]) QuantityVariable[
              Subscript["m", 2], "Mass"]}], {
          QuantityVariable["\[Tau]", "Time"], 
          QuantityVariable[
           Subscript["t", 1], "Time"], 
          QuantityVariable[
           Subscript["t", 2], "Time"]}], 
       EntityProperty["PhysicalSystem", "AlternateNames"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "Assumptions"] -> And[QuantityVariable[
           Subscript["l", 1], "Length"] > 0, QuantityVariable[
           Subscript["m", 1], "Mass"] > 0, QuantityVariable[
           Subscript["l", 2], "Length"] > 0, QuantityVariable[
           Subscript["m", 2], "Mass"] > 0, 
         Element[
          QuantityVariable["g", "Acceleration"], Reals], 
         Element[
          QuantityVariable["t", "Time"], Reals], 
         Element[
          QuantityVariable[
           Subscript["\[Theta]", 1], "Angle"], Reals], 
         Element[
          QuantityVariable[
           Subscript["\[Theta]", 2], "Angle"], Reals], 
         Element[
          QuantityVariable[
           Subscript["p", "\[Theta]", 1], "AngularMomentum"], Reals], 
         Element[
          QuantityVariable[
           Subscript["p", "\[Theta]", 2], "AngularMomentum"], Reals]], 
       EntityProperty[
        "PhysicalSystem", "BluePropagatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BluePropagatorPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BoundStateWaveFunctionMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "BoundStateWaveFunctionMomentumRepresentationAbsoluteValueSquared"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BoundStateWaveFunctionPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "BoundStateWaveFunctionPositionRepresentationAbsoluteValueSquared"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "CanonicalMomenta"] -> {
        QuantityVariable[
           Subscript["l", 1], "Length"] (QuantityVariable[
             Subscript["l", 1], "Length"] (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
              Subscript["m", 2], "Mass"]) Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]] + Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 2], "Length"] QuantityVariable[
             Subscript["m", 2], "Mass"] Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"]][
             QuantityVariable["t", "Time"]]), QuantityVariable[
           Subscript["l", 2], "Length"] QuantityVariable[
           Subscript["m", 2], "Mass"] (Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 1], "Length"] Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]] + QuantityVariable[
             Subscript["l", 2], "Length"] Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"]][
             QuantityVariable["t", "Time"]])}, 
       EntityProperty["PhysicalSystem", "CenterOfMassCoordinates"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Classes"] -> {
         EntityClass["PhysicalSystem", "Classical"], 
         EntityClass["PhysicalSystem", "Holonomic"], 
         EntityClass["PhysicalSystem", "NonDissipative"], 
         EntityClass["PhysicalSystem", "TimeDependent"]}, 
       EntityProperty["PhysicalSystem", "ConfigurationSpaceCoordinateChart"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ConfigurationSpaceCoordinates"] -> {
         QuantityVariable[
          Subscript["\[Theta]", 1], "Angle"], 
         QuantityVariable[
          Subscript["\[Theta]", 2], "Angle"]}, 
       EntityProperty["PhysicalSystem", "ContinuousEnergyEigenvalue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ContinuousSpectrumQuantumNumbers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "CoordinateChart"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "Coordinates"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "DegreesOfFreedom"] -> 2, 
       EntityProperty["PhysicalSystem", "DiscreteEnergyEigenvalue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "DiscreteSpectrumQuantumNumbers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricCharge"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricChargeDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricCurrentDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricDipoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricField"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricMonopoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricQuadrupoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "EntityClasses"] -> {
         EntityClass["PhysicalSystem", "Classical"], 
         EntityClass["PhysicalSystem", "Holonomic"], 
         EntityClass["PhysicalSystem", "NonDissipative"], 
         EntityClass["PhysicalSystem", "TimeDependent"]}, 
       EntityProperty["PhysicalSystem", "EquationOfState"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "EquationsOfMotion"] -> {
        QuantityVariable["g", "Acceleration"] QuantityVariable[
             Subscript["m", 1], "Mass"] Sin[
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]]] + 
          QuantityVariable["g", "Acceleration"] QuantityVariable[
             Subscript["m", 2], "Mass"] Sin[
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]]] + QuantityVariable[
             Subscript["l", 2], "Length"] QuantityVariable[
             Subscript["m", 2], "Mass"] Sin[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] Derivative[1][
              QuantityVariable[
               Subscript["\[Theta]", 2], "Angle"]][
              QuantityVariable["t", "Time"]]^2 + QuantityVariable[
             Subscript["l", 1], "Length"] (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
              Subscript["m", 2], "Mass"]) Derivative[2][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]] + Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 2], "Length"] QuantityVariable[
             Subscript["m", 2], "Mass"] Derivative[2][
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"]][
             QuantityVariable["t", "Time"]] == 0, 
         QuantityVariable["g", "Acceleration"] Sin[
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] + Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 1], "Length"] Derivative[2][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]] + QuantityVariable[
             Subscript["l", 2], "Length"] Derivative[2][
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"]][
             QuantityVariable["t", "Time"]] == QuantityVariable[
            Subscript["l", 1], "Length"] Sin[QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]] - QuantityVariable[
             Subscript["\[Theta]", 2], "Angle"][
             QuantityVariable["t", "Time"]]] Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]]^2}, 
       EntityProperty["PhysicalSystem", "EquationsOfMotionSolution"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "GravitationalField"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "GravitationalPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "HamiltonianEquationsOfMotion"] -> {
        Derivative[1][
           QuantityVariable[
            Subscript["\[Theta]", 1], "Angle"]][
           QuantityVariable["t", "Time"]] == QuantityVariable[
             Subscript["l", 1], "Length"]^(-2) QuantityVariable[
             Subscript["l", 2], "Length"]^(-1) (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"][
                  QuantityVariable["t", "Time"]] - QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["t", "Time"]]]^2)^(-1) (QuantityVariable[
              Subscript["l", 2], "Length"] QuantityVariable[
              Subscript["p", "\[Theta]", 1], "AngularMomentum"][
              QuantityVariable["t", "Time"]] - Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 1], "Length"] QuantityVariable[
             Subscript["p", "\[Theta]", 2], "AngularMomentum"][
             QuantityVariable["t", "Time"]]), 
         QuantityVariable["g", "Acceleration"] QuantityVariable[
             Subscript["l", 1], "Length"] (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
              Subscript["m", 2], "Mass"]) Sin[
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]]] + QuantityVariable[
              Subscript["l", 1], "Length"]^(-1) QuantityVariable[
              Subscript["l", 2], "Length"]^(-1) Sin[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] (QuantityVariable[
               Subscript["m", 1], "Mass"] + QuantityVariable[
                Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                   Subscript["\[Theta]", 1], "Angle"][
                   QuantityVariable["t", "Time"]] - QuantityVariable[
                  Subscript["\[Theta]", 2], "Angle"][
                  QuantityVariable["t", "Time"]]]^2)^(-1) QuantityVariable[
             Subscript["p", "\[Theta]", 1], "AngularMomentum"][
             QuantityVariable["t", "Time"]] QuantityVariable[
             Subscript["p", "\[Theta]", 2], "AngularMomentum"][
             QuantityVariable["t", "Time"]] + Derivative[1][
            QuantityVariable[
             Subscript["p", "\[Theta]", 1], "AngularMomentum"]][
            QuantityVariable["t", "Time"]] == Rational[1, 2] QuantityVariable[
             Subscript["l", 1], "Length"]^(-2) QuantityVariable[
             Subscript["l", 2], "Length"]^(-2) Sin[2 QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - 2 QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"][
                  QuantityVariable["t", "Time"]] - QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["t", "Time"]]]^2)^(-2) (QuantityVariable[
               Subscript["l", 2], "Length"]^2 QuantityVariable[
              Subscript["m", 2], "Mass"] QuantityVariable[
               Subscript["p", "\[Theta]", 1], "AngularMomentum"][
               QuantityVariable["t", "Time"]]^2 - 2 Cos[QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]] - QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] QuantityVariable[
             Subscript["l", 1], "Length"] QuantityVariable[
             Subscript["l", 2], "Length"] QuantityVariable[
             Subscript["m", 2], "Mass"] QuantityVariable[
             Subscript["p", "\[Theta]", 1], "AngularMomentum"][
             QuantityVariable["t", "Time"]] QuantityVariable[
             Subscript["p", "\[Theta]", 2], "AngularMomentum"][
             QuantityVariable["t", "Time"]] + QuantityVariable[
               Subscript["l", 1], "Length"]^2 (QuantityVariable[
               Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"]) QuantityVariable[
               Subscript["p", "\[Theta]", 2], "AngularMomentum"][
               QuantityVariable["t", "Time"]]^2), Derivative[1][
           QuantityVariable[
            Subscript["\[Theta]", 2], "Angle"]][
           QuantityVariable["t", "Time"]] == QuantityVariable[
             Subscript["l", 1], "Length"]^(-1) QuantityVariable[
             Subscript["l", 2], "Length"]^(-2) QuantityVariable[
             Subscript["m", 2], "Mass"]^(-1) (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"][
                  QuantityVariable["t", "Time"]] - QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["t", "Time"]]]^2)^(-1) (-
            Cos[QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["t", "Time"]] - QuantityVariable[
               Subscript["\[Theta]", 2], "Angle"][
               QuantityVariable["t", "Time"]]] QuantityVariable[
              Subscript["l", 2], "Length"] QuantityVariable[
              Subscript["m", 2], "Mass"] QuantityVariable[
              Subscript["p", "\[Theta]", 1], "AngularMomentum"][
              QuantityVariable["t", "Time"]] + QuantityVariable[
              Subscript["l", 1], "Length"] (QuantityVariable[
               Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"]) QuantityVariable[
              Subscript["p", "\[Theta]", 2], "AngularMomentum"][
              QuantityVariable["t", "Time"]]), 
         QuantityVariable["g", "Acceleration"] QuantityVariable[
             Subscript["l", 2], "Length"] QuantityVariable[
             Subscript["m", 2], "Mass"] Sin[
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"][
              QuantityVariable["t", "Time"]]] + 
          Rational[1, 2] QuantityVariable[
              Subscript["l", 1], "Length"]^(-2) QuantityVariable[
              Subscript["l", 2], "Length"]^(-2) Sin[2 QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["t", "Time"]] - 2 QuantityVariable[
               Subscript["\[Theta]", 2], "Angle"][
               QuantityVariable["t", "Time"]]] (QuantityVariable[
               Subscript["m", 1], "Mass"] + QuantityVariable[
                Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                   Subscript["\[Theta]", 1], "Angle"][
                   QuantityVariable["t", "Time"]] - QuantityVariable[
                  Subscript["\[Theta]", 2], "Angle"][
                  QuantityVariable["t", "Time"]]]^2)^(-2) (QuantityVariable[
                Subscript["l", 2], "Length"]^2 QuantityVariable[
               Subscript["m", 2], "Mass"] QuantityVariable[
                Subscript["p", "\[Theta]", 1], "AngularMomentum"][
                QuantityVariable["t", "Time"]]^2 - 2 Cos[QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["t", "Time"]] - QuantityVariable[
               Subscript["\[Theta]", 2], "Angle"][
               QuantityVariable["t", "Time"]]] QuantityVariable[
              Subscript["l", 1], "Length"] QuantityVariable[
              Subscript["l", 2], "Length"] QuantityVariable[
              Subscript["m", 2], "Mass"] QuantityVariable[
              Subscript["p", "\[Theta]", 1], "AngularMomentum"][
              QuantityVariable["t", "Time"]] QuantityVariable[
              Subscript["p", "\[Theta]", 2], "AngularMomentum"][
              QuantityVariable["t", "Time"]] + QuantityVariable[
                Subscript["l", 1], "Length"]^2 (QuantityVariable[
                Subscript["m", 1], "Mass"] + QuantityVariable[
                Subscript["m", 2], "Mass"]) QuantityVariable[
                Subscript["p", "\[Theta]", 2], "AngularMomentum"][
                QuantityVariable["t", "Time"]]^2) + Derivative[1][
            QuantityVariable[
             Subscript["p", "\[Theta]", 2], "AngularMomentum"]][
            QuantityVariable["t", "Time"]] == QuantityVariable[
             Subscript["l", 1], "Length"]^(-1) QuantityVariable[
             Subscript["l", 2], "Length"]^(-1) Sin[QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]] - QuantityVariable[
             Subscript["\[Theta]", 2], "Angle"][
             QuantityVariable["t", "Time"]]] (QuantityVariable[
              Subscript["m", 1], "Mass"] + QuantityVariable[
               Subscript["m", 2], "Mass"] Sin[QuantityVariable[
                  Subscript["\[Theta]", 1], "Angle"][
                  QuantityVariable["t", "Time"]] - QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"][
                 QuantityVariable["t", "Time"]]]^2)^(-1) QuantityVariable[
            Subscript["p", "\[Theta]", 1], "AngularMomentum"][
            QuantityVariable["t", "Time"]] QuantityVariable[
            Subscript["p", "\[Theta]", 2], "AngularMomentum"][
            QuantityVariable["t", "Time"]]}, 
       EntityProperty[
        "PhysicalSystem", "HamiltonianEquationsOfMotionSolution"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "HamiltonianFunction"] -> -Cos[
           QuantityVariable[
            Subscript["\[Theta]", 2], "Angle"][
            QuantityVariable["t", "Time"]]] 
         QuantityVariable["g", "Acceleration"] QuantityVariable[
           Subscript["l", 2], "Length"] QuantityVariable[
           Subscript["m", 2], "Mass"] - Cos[
          QuantityVariable[
           Subscript["\[Theta]", 1], "Angle"][
           QuantityVariable["t", "Time"]]] 
        QuantityVariable["g", "Acceleration"] QuantityVariable[
          Subscript["l", 1], "Length"] (QuantityVariable[
           Subscript["m", 1], "Mass"] + QuantityVariable[
           Subscript["m", 2], "Mass"]) - QuantityVariable[
           Subscript["l", 1], "Length"]^(-2) QuantityVariable[
           Subscript["l", 2], "Length"]^(-2) QuantityVariable[
           Subscript["m", 2], "Mass"]^(-1) ((-2) QuantityVariable[
             Subscript["m", 1], "Mass"] - QuantityVariable[
           Subscript["m", 2], "Mass"] + Cos[2 (QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["t", "Time"]] - QuantityVariable[
               Subscript["\[Theta]", 2], "Angle"][
               QuantityVariable["t", "Time"]])] QuantityVariable[
             Subscript["m", 2], "Mass"])^(-1) (QuantityVariable[
             Subscript["l", 2], "Length"]^2 QuantityVariable[
            Subscript["m", 2], "Mass"] QuantityVariable[
             Subscript["p", "\[Theta]", 1], "AngularMomentum"][
             QuantityVariable["t", "Time"]]^2 - 2 Cos[QuantityVariable[
             Subscript["\[Theta]", 1], "Angle"][
             QuantityVariable["t", "Time"]] - QuantityVariable[
            Subscript["\[Theta]", 2], "Angle"][
            QuantityVariable["t", "Time"]]] QuantityVariable[
           Subscript["l", 1], "Length"] QuantityVariable[
           Subscript["l", 2], "Length"] QuantityVariable[
           Subscript["m", 2], "Mass"] QuantityVariable[
           Subscript["p", "\[Theta]", 1], "AngularMomentum"][
           QuantityVariable["t", "Time"]] QuantityVariable[
           Subscript["p", "\[Theta]", 2], "AngularMomentum"][
           QuantityVariable["t", "Time"]] + QuantityVariable[
             Subscript["l", 1], "Length"]^2 (QuantityVariable[
             Subscript["m", 1], "Mass"] + QuantityVariable[
             Subscript["m", 2], "Mass"]) QuantityVariable[
             Subscript["p", "\[Theta]", 2], "AngularMomentum"][
             QuantityVariable["t", "Time"]]^2), 
       EntityProperty["PhysicalSystem", "HamiltonianOperator"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "HamiltonianOperatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "HamiltonianOperatorPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "InternalEnergy"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "IsobaricHeatCapacity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "IsochoricHeatCapacity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "KineticEnergy"] -> 
       Rational[1, 2] (QuantityVariable[
             Subscript["l", 1], "Length"]^2 (QuantityVariable[
             Subscript["m", 1], "Mass"] + QuantityVariable[
             Subscript["m", 2], "Mass"]) Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"]][
             QuantityVariable["t", "Time"]]^2 + 2 Cos[QuantityVariable[
              Subscript["\[Theta]", 1], "Angle"][
              QuantityVariable["t", "Time"]] - QuantityVariable[
             Subscript["\[Theta]", 2], "Angle"][
             QuantityVariable["t", "Time"]]] QuantityVariable[
            Subscript["l", 1], "Length"] QuantityVariable[
            Subscript["l", 2], "Length"] QuantityVariable[
            Subscript["m", 2], "Mass"] Derivative[1][
            QuantityVariable[
             Subscript["\[Theta]", 1], "Angle"]][
            QuantityVariable["t", "Time"]] Derivative[1][
            QuantityVariable[
             Subscript["\[Theta]", 2], "Angle"]][
            QuantityVariable["t", "Time"]] + QuantityVariable[
             Subscript["l", 2], "Length"]^2 QuantityVariable[
            Subscript["m", 2], "Mass"] Derivative[1][
             QuantityVariable[
              Subscript["\[Theta]", 2], "Angle"]][
             QuantityVariable["t", "Time"]]^2), 
       EntityProperty["PhysicalSystem", "Lagrangian"] -> 
       Inactive[ReplaceRepeated][
        "T" - "V", {"T" :> Rational[1, 2] (QuantityVariable[
                Subscript["l", 1], "Length"]^2 (QuantityVariable[
                Subscript["m", 1], "Mass"] + QuantityVariable[
                Subscript["m", 2], "Mass"]) Derivative[1][
                QuantityVariable[
                 Subscript["\[Theta]", 1], "Angle"]][
                QuantityVariable["t", "Time"]]^2 + 2 Cos[QuantityVariable[
                 Subscript["\[Theta]", 1], "Angle"][
                 QuantityVariable["t", "Time"]] - QuantityVariable[
                Subscript["\[Theta]", 2], "Angle"][
                QuantityVariable["t", "Time"]]] QuantityVariable[
               Subscript["l", 1], "Length"] QuantityVariable[
               Subscript["l", 2], "Length"] QuantityVariable[
               Subscript["m", 2], "Mass"] Derivative[1][
               QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"]][
               QuantityVariable["t", "Time"]] Derivative[1][
               QuantityVariable[
                Subscript["\[Theta]", 2], "Angle"]][
               QuantityVariable["t", "Time"]] + QuantityVariable[
                Subscript["l", 2], "Length"]^2 QuantityVariable[
               Subscript["m", 2], "Mass"] Derivative[1][
                QuantityVariable[
                 Subscript["\[Theta]", 2], "Angle"]][
                QuantityVariable["t", "Time"]]^2), "V" :> -Cos[
              QuantityVariable[
               Subscript["\[Theta]", 1], "Angle"][
               QuantityVariable["t", "Time"]]] 
            QuantityVariable["g", "Acceleration"] QuantityVariable[
              Subscript["l", 1], "Length"] QuantityVariable[
              Subscript["m", 1], "Mass"] - 
           QuantityVariable["g", "Acceleration"] (Cos[
               QuantityVariable[
                Subscript["\[Theta]", 1], "Angle"][
                QuantityVariable["t", "Time"]]] QuantityVariable[
               Subscript["l", 1], "Length"] + Cos[
               QuantityVariable[
                Subscript["\[Theta]", 2], "Angle"][
                QuantityVariable["t", "Time"]]] QuantityVariable[
               Subscript["l", 2], "Length"]) QuantityVariable[
             Subscript["m", 2], "Mass"]}], 
       EntityProperty["PhysicalSystem", "MagneticFluxDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticScalarPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticVectorPotential"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Mass"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MassDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MomentOfInertiaTensor"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "MomentumOperatorsMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "MomentumOperatorsPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MomentumSpaceCoordinates"] -> {
         QuantityVariable[
          Subscript["p", "\[Theta]", 1], "AngularMomentum"], 
         QuantityVariable[
          Subscript["p", "\[Theta]", 2], "AngularMomentum"]}, 
       EntityProperty["PhysicalSystem", "Name"] -> "double pendulum", 
       EntityProperty["PhysicalSystem", "Period"] -> Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "PositionOperatorsMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "PositionOperatorsPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "PotentialEnergy"] -> -Cos[
           QuantityVariable[
            Subscript["\[Theta]", 1], "Angle"][
            QuantityVariable["t", "Time"]]] 
         QuantityVariable["g", "Acceleration"] QuantityVariable[
           Subscript["l", 1], "Length"] QuantityVariable[
           Subscript["m", 1], "Mass"] - 
        QuantityVariable["g", "Acceleration"] (Cos[
            QuantityVariable[
             Subscript["\[Theta]", 1], "Angle"][
             QuantityVariable["t", "Time"]]] QuantityVariable[
            Subscript["l", 1], "Length"] + Cos[
            QuantityVariable[
             Subscript["\[Theta]", 2], "Angle"][
             QuantityVariable["t", "Time"]]] QuantityVariable[
            Subscript["l", 2], "Length"]) QuantityVariable[
          Subscript["m", 2], "Mass"], 
       EntityProperty["PhysicalSystem", "PropagatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "PropagatorPositionRepresentation"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Region"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "ScatteringStateWaveFunctionMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "ScatteringStateWaveFunctionPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "SystemVariables"] -> {
         QuantityVariable[
          Subscript["l", 1], "Length"], 
         QuantityVariable[
          Subscript["m", 1], "Mass"], 
         QuantityVariable[
          Subscript["l", 2], "Length"], 
         QuantityVariable[
          Subscript["m", 2], "Mass"], 
         QuantityVariable["g", "Acceleration"]}, 
       EntityProperty["PhysicalSystem", "TimeCoordinate"] -> 
       QuantityVariable["t", "Time"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeDependentSchroedingerEquationMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeDependentSchroedingerEquationPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeIndependentSchroedingerEquationMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeIndependentSchroedingerEquationPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "VariableRandomValues"] -> <|
        QuantityVariable[
           Subscript["l", 1], "Length"] -> 
         Quantity[50.183614052110386`, "Meters"], QuantityVariable[
           Subscript["m", 1], "Mass"] -> 
         Quantity[84.26567438328198, "Kilograms"], QuantityVariable[
           Subscript["l", 2], "Length"] -> 
         Quantity[87.22124281677566, "Meters"], QuantityVariable[
           Subscript["m", 2], "Mass"] -> 
         Quantity[36.32055013451247, "Kilograms"], 
         QuantityVariable["g", "Acceleration"] -> 
         Quantity[-0.26363090798588473`, "Meters" "Seconds"^(-2)], 
         QuantityVariable["t", "Time"] -> 
         Quantity[-17.29855096537085, "Seconds"], QuantityVariable[
           Subscript["\[Theta]", 1], "Angle"] -> 
         Quantity[14.608333832625704`, "Radians"], QuantityVariable[
           Subscript["\[Theta]", 2], "Angle"] -> 
         Quantity[-11.452358036447151`, "Radians"], QuantityVariable[
           Subscript["p", "\[Theta]", 1], "AngularMomentum"] -> 
         Quantity[-53.02507031513696, "Joules" "Seconds"], QuantityVariable[
           Subscript["p", "\[Theta]", 2], "AngularMomentum"] -> 
         Quantity[-34.21715648266013, "Joules" "Seconds"]|>, 
       EntityProperty["PhysicalSystem", "Variables"] -> {
         QuantityVariable[
          Subscript["l", 1], "Length"], 
         QuantityVariable[
          Subscript["m", 1], "Mass"], 
         QuantityVariable[
          Subscript["l", 2], "Length"], 
         QuantityVariable[
          Subscript["m", 2], "Mass"], 
         QuantityVariable["g", "Acceleration"], 
         QuantityVariable["t", "Time"], 
         QuantityVariable[
          Subscript["\[Theta]", 1], "Angle"], 
         QuantityVariable[
          Subscript["\[Theta]", 2], "Angle"], 
         QuantityVariable[
          Subscript["p", "\[Theta]", 1], "AngularMomentum"], 
         QuantityVariable[
          Subscript["p", "\[Theta]", 2], "AngularMomentum"]}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 74], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`AtomShape[10], "Type" -> TypeSystem`AnyType, 
     "Path" -> {
       Key[
        EntityProperty["PhysicalSystem", "Action"]]}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 4|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key[
      EntityProperty["PhysicalSystem", "Action"]]}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\"T\"", "-", "\"V\""}], 
                    TagBox[
                    "//.", "InactiveToken", BaseStyle -> "Inactive", 
                    SyntaxForm -> "//."], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"T\"", "\[RuleDelayed]", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"l\"", "1"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"m\"", "1"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )], "+", 
                    TemplateBox[{
                    SubscriptBox["\"m\"", "2"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "1"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "\[Prime]", 
                    MultilineFunction -> None], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "2"]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "1"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "-", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "2"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}]}], "]"}], " ", 
                    TemplateBox[{
                    SubscriptBox["\"l\"", "1"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], " ", 
                    TemplateBox[{
                    SubscriptBox["\"l\"", "2"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], " ", 
                    TemplateBox[{
                    SubscriptBox["\"m\"", "2"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )], " ", 
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "1"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "\[Prime]", 
                    MultilineFunction -> None], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "2"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "\[Prime]", 
                    MultilineFunction -> None], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"l\"", "2"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], "2"], " ", 
                    TemplateBox[{
                    SubscriptBox["\"m\"", "2"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox[
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "2"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "\[Prime]", 
                    MultilineFunction -> None], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "2"]}]}], ")"}]}]}], ",", 
                    RowBox[{"\"V\"", "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "1"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "]"}]}], " ", 
                    
                    TemplateBox[{"\"g\"", "\"Acceleration\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " acceleration"}], 
                    TooltipStyle -> "TextStyling"]& )], " ", 
                    TemplateBox[{
                    SubscriptBox["\"l\"", "1"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], " ", 
                    TemplateBox[{
                    SubscriptBox["\"m\"", "1"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )]}], "-", 
                    RowBox[{
                    
                    TemplateBox[{"\"g\"", "\"Acceleration\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " acceleration"}], 
                    TooltipStyle -> "TextStyling"]& )], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "1"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "]"}], " ", 
                    TemplateBox[{
                    SubscriptBox["\"l\"", "1"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )]}], "+", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\"\[Theta]\"", "2"], "\"Angle\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], "[", 
                    
                    TemplateBox[{"\"\[Tau]\"", "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], "]"}], "]"}], " ", 
                    TemplateBox[{
                    SubscriptBox["\"l\"", "2"], "\"Length\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )]}]}], ")"}], " ", 
                    TemplateBox[{
                    SubscriptBox["\"m\"", "2"], "\"Mass\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )]}]}]}]}], "}"}]}], ")"}], 
                   
                   TemplateBox[{"\"\[Tau]\"", "\"Time\""}, "QuantityVariable",
                     DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], 
                   TemplateBox[{
                    SubscriptBox["\"t\"", "1"], "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], 
                   TemplateBox[{
                    SubscriptBox["\"t\"", "2"], "\"Time\""}, 
                    "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )]}, "InactiveIntegrate", 
                  DisplayFunction -> (RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\[Integral]", "Inactive"], #3, #4], 
                    RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ), 
                  InterpretationFunction -> (RowBox[{
                    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                    RowBox[{#, ",", 
                    RowBox[{"{", 
                    RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalSystem", "Action"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{10, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{452., {33.13403328722343, 38.86596671277657}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{452., {33.13403328722343, 38.86596671277657}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.87702909886259*^9},
 CellLabel->"Out[61]=",
 CellID->365642567,ExpressionUUID->"4ee822b1-7917-4d31-a6d7-ee6c97615635"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"pendulum\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalSystem\"", ",", "\"Pendulum1D\""}], "]"}], 
    "\"Entity[\\\"PhysicalSystem\\\", \\\"Pendulum1D\\\"]\"", 
    "\"physical system\""},
   "Entity"], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8770291301953344`*^9, 3.8770291327891254`*^9}},
 CellLabel->"In[62]:=",
 CellID->166330132,ExpressionUUID->"0c535c27-a6a1-47d4-869e-eed44864b23b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["PhysicalSystem", "Action"] -> Inactive[Integrate][Cos[
            QuantityVariable["\[Theta]", "Angle"][
             QuantityVariable["\[Tau]", "Time"]]] 
          QuantityVariable["g", "GravitationalAcceleration"] 
          QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] + 
         Rational[1, 2] QuantityVariable["l", "Length"]^2 
          QuantityVariable["m", "Mass"] Derivative[1][
             QuantityVariable["\[Theta]", "Angle"]][
             QuantityVariable["\[Tau]", "Time"]]^2, {
          QuantityVariable["\[Tau]", "Time"], 
          QuantityVariable[
           Subscript["t", 1], "Time"], 
          QuantityVariable[
           Subscript["t", 2], "Time"]}], 
       EntityProperty["PhysicalSystem", "AlternateNames"] -> {
        "simple pendulum"}, EntityProperty["PhysicalSystem", "Assumptions"] -> 
       And[
         Element[
          QuantityVariable["g", "GravitationalAcceleration"], Reals], 
         Element[
          QuantityVariable["t", "Time"], Reals], 
         Element[
          QuantityVariable[
           Subscript["p", "\[Theta]"], "AngularMomentum"], Reals], 
         QuantityVariable["l", "Length"] > 0, QuantityVariable["m", "Mass"] > 
         0, 
         Inequality[-Pi, Less, 
          QuantityVariable["\[Theta]", "Angle"], LessEqual, Pi]], 
       EntityProperty[
        "PhysicalSystem", "BluePropagatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BluePropagatorPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BoundStateWaveFunctionMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "BoundStateWaveFunctionMomentumRepresentationAbsoluteValueSquared"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "BoundStateWaveFunctionPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "BoundStateWaveFunctionPositionRepresentationAbsoluteValueSquared"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "CanonicalMomenta"] -> {
        QuantityVariable["l", "Length"]^2 QuantityVariable["m", "Mass"] 
         Derivative[1][
           QuantityVariable["\[Theta]", "Angle"]][
           QuantityVariable["t", "Time"]]}, 
       EntityProperty["PhysicalSystem", "CenterOfMassCoordinates"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Classes"] -> {
         EntityClass["PhysicalSystem", "Classical"], 
         EntityClass["PhysicalSystem", "DiscreteSpectrum"], 
         EntityClass["PhysicalSystem", "Holonomic"], 
         EntityClass["PhysicalSystem", "NonDissipative"], 
         EntityClass["PhysicalSystem", "Periodic"], 
         EntityClass["PhysicalSystem", "Quantum"], 
         EntityClass["PhysicalSystem", "Scleronomic"], 
         EntityClass["PhysicalSystem", "TimeDependent"]}, 
       EntityProperty[
        "PhysicalSystem", "ConfigurationSpaceCoordinateChart"] -> {
        "Standard", {"Sphere", {
           QuantityVariable["l", "Length"]}}, 1}, 
       EntityProperty["PhysicalSystem", "ConfigurationSpaceCoordinates"] -> {
         QuantityVariable["\[Theta]", "Angle"]}, 
       EntityProperty["PhysicalSystem", "ContinuousEnergyEigenvalue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ContinuousSpectrumQuantumNumbers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "CoordinateChart"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "Coordinates"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "DegreesOfFreedom"] -> 1, 
       EntityProperty["PhysicalSystem", "DiscreteEnergyEigenvalue"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "DiscreteSpectrumQuantumNumbers"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricCharge"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricChargeDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricCurrentDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricDipoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricField"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricMonopoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "ElectricQuadrupoleMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "EntityClasses"] -> {
         EntityClass["PhysicalSystem", "Classical"], 
         EntityClass["PhysicalSystem", "DiscreteSpectrum"], 
         EntityClass["PhysicalSystem", "Holonomic"], 
         EntityClass["PhysicalSystem", "NonDissipative"], 
         EntityClass["PhysicalSystem", "Periodic"], 
         EntityClass["PhysicalSystem", "Quantum"], 
         EntityClass["PhysicalSystem", "Scleronomic"], 
         EntityClass["PhysicalSystem", "TimeDependent"]}, 
       EntityProperty["PhysicalSystem", "EquationOfState"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "EquationsOfMotion"] -> {
        QuantityVariable["g", "GravitationalAcceleration"] 
           QuantityVariable["l", "Length"]^(-1) Sin[
             QuantityVariable["\[Theta]", "Angle"][
              QuantityVariable["t", "Time"]]] + Derivative[2][
            QuantityVariable["\[Theta]", "Angle"]][
            QuantityVariable["t", "Time"]] == 0}, 
       EntityProperty["PhysicalSystem", "EquationsOfMotionSolution"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "GravitationalField"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "GravitationalPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "HamiltonianEquationsOfMotion"] -> {
        Derivative[1][
           QuantityVariable["\[Theta]", "Angle"]][
           QuantityVariable["t", "Time"]] == 
         QuantityVariable["l", "Length"]^(-2) 
          QuantityVariable["m", "Mass"]^(-1) QuantityVariable[
            Subscript["p", "\[Theta]"], "AngularMomentum"][
            QuantityVariable["t", "Time"]], Derivative[1][
           QuantityVariable[
            Subscript["p", "\[Theta]"], "AngularMomentum"]][
           QuantityVariable["t", "Time"]] == -
          QuantityVariable["g", "GravitationalAcceleration"] 
          QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] Sin[
            QuantityVariable["\[Theta]", "Angle"][
             QuantityVariable["t", "Time"]]]}, 
       EntityProperty[
        "PhysicalSystem", "HamiltonianEquationsOfMotionSolution"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "HamiltonianFunction"] -> -Cos[
           QuantityVariable["\[Theta]", "Angle"][
            QuantityVariable["t", "Time"]]] 
         QuantityVariable["g", "GravitationalAcceleration"] 
         QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] + 
        Rational[1, 2] QuantityVariable["l", "Length"]^(-2) 
         QuantityVariable["m", "Mass"]^(-1) QuantityVariable[
            Subscript["p", "\[Theta]"], "AngularMomentum"][
            QuantityVariable["t", "Time"]]^2, 
       EntityProperty["PhysicalSystem", "HamiltonianOperator"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "HamiltonianOperatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "HamiltonianOperatorPositionRepresentation"] -> (
        Apply[Plus, 
         Through[
          {
          Apply[Composition, {(Rational[-1, 2] 
              Quantity[1, "ReducedPlanckConstant"]^2/QuantityVariable[
              "m", "Mass"]) #& , QuantityVariable["l", "Length"]^(-2) #& , 
             Nest[D[#, 
               QuantityVariable["\[Theta]", "Angle"]]& , #, 2]& }][#]& , (Cos[
              QuantityVariable["\[Theta]", "Angle"]] 
            QuantityVariable["g", "GravitationalAcceleration"] 
            QuantityVariable["l", "Length"] 
            QuantityVariable["m", "Mass"]) #& }[#]]]& ), 
       EntityProperty["PhysicalSystem", "InternalEnergy"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "IsobaricHeatCapacity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "IsochoricHeatCapacity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "KineticEnergy"] -> 
       Rational[1, 2] QuantityVariable["l", "Length"]^2 
        QuantityVariable["m", "Mass"] Derivative[1][
           QuantityVariable["\[Theta]", "Angle"]][
           QuantityVariable["t", "Time"]]^2, 
       EntityProperty["PhysicalSystem", "Lagrangian"] -> Cos[
           QuantityVariable["\[Theta]", "Angle"][
            QuantityVariable["t", "Time"]]] 
         QuantityVariable["g", "GravitationalAcceleration"] 
         QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] + 
        Rational[1, 2] QuantityVariable["l", "Length"]^2 
         QuantityVariable["m", "Mass"] Derivative[1][
            QuantityVariable["\[Theta]", "Angle"]][
            QuantityVariable["t", "Time"]]^2, 
       EntityProperty["PhysicalSystem", "MagneticFluxDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticMoment"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticScalarPotential"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MagneticVectorPotential"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Mass"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MassDensity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "MomentOfInertiaTensor"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "MomentumOperatorsMomentumRepresentation"] -> {
        QuantityVariable[
           Subscript["p", "\[Theta]"], "AngularMomentum"] #& }, 
       EntityProperty[
        "PhysicalSystem", "MomentumOperatorsPositionRepresentation"] -> {
        Apply[Composition, {(Complex[0, -1] 
            Quantity[1, "ReducedPlanckConstant"]) #& , D[#, 
            QuantityVariable["\[Theta]", "Angle"]]& }][#]& }, 
       EntityProperty["PhysicalSystem", "MomentumSpaceCoordinates"] -> {
         QuantityVariable[
          Subscript["p", "\[Theta]"], "AngularMomentum"]}, 
       EntityProperty["PhysicalSystem", "Name"] -> "pendulum", 
       EntityProperty["PhysicalSystem", "Period"] -> Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "PositionOperatorsMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", "PositionOperatorsPositionRepresentation"] -> {
        QuantityVariable["\[Theta]", "Angle"] #& }, 
       EntityProperty["PhysicalSystem", "PotentialEnergy"] -> -Cos[
          QuantityVariable["\[Theta]", "Angle"][
           QuantityVariable["t", "Time"]]] 
        QuantityVariable["g", "GravitationalAcceleration"] 
        QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"], 
       EntityProperty["PhysicalSystem", "PropagatorMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "PropagatorPositionRepresentation"] -> 
       Missing["NotAvailable"], EntityProperty["PhysicalSystem", "Region"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "ScatteringStateWaveFunctionMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "ScatteringStateWaveFunctionPositionRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalSystem", "SystemVariables"] -> {
         QuantityVariable["l", "Length"], 
         QuantityVariable["m", "Mass"], 
         QuantityVariable["g", "GravitationalAcceleration"]}, 
       EntityProperty["PhysicalSystem", "TimeCoordinate"] -> 
       QuantityVariable["t", "Time"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeDependentSchroedingerEquationMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeDependentSchroedingerEquationPositionRepresentation"] -> 
       Quantity[
           Complex[0, 1], "ReducedPlanckConstant"] Derivative[0, 1][
           QuantityVariable["\[CapitalPsi]", {}]][
           QuantityVariable["\[Theta]", "Angle"], 
           QuantityVariable["t", "Time"]] == Cos[
            QuantityVariable["\[Theta]", "Angle"]] 
          QuantityVariable["g", "GravitationalAcceleration"] 
          QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] 
          QuantityVariable["\[CapitalPsi]", {}][
            QuantityVariable["\[Theta]", "Angle"], 
            QuantityVariable["t", "Time"]] + Quantity[
            Rational[-1, 2], "ReducedPlanckConstant"^2] 
          QuantityVariable["l", "Length"]^(-2) 
          QuantityVariable["m", "Mass"]^(-1) Derivative[2, 0][
            QuantityVariable["\[CapitalPsi]", {}]][
            QuantityVariable["\[Theta]", "Angle"], 
            QuantityVariable["t", "Time"]], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeIndependentSchroedingerEquationMomentumRepresentation"] -> 
       Missing["NotAvailable"], 
       EntityProperty[
        "PhysicalSystem", 
         "TimeIndependentSchroedingerEquationPositionRepresentation"] -> Cos[
            QuantityVariable["\[Theta]", "Angle"]] 
          QuantityVariable["g", "GravitationalAcceleration"] 
          QuantityVariable["l", "Length"] QuantityVariable["m", "Mass"] 
          QuantityVariable["\[Psi]", {}][
            QuantityVariable["\[Theta]", "Angle"]] + Quantity[
            Rational[-1, 2], "ReducedPlanckConstant"^2] 
          QuantityVariable["l", "Length"]^(-2) 
          QuantityVariable["m", "Mass"]^(-1) Derivative[2][
            QuantityVariable["\[Psi]", {}]][
            QuantityVariable["\[Theta]", "Angle"]] == 
        QuantityVariable["\[ScriptCapitalE]", "Energy"] 
         QuantityVariable["\[Psi]", {}][
           QuantityVariable["\[Theta]", "Angle"]], 
       EntityProperty["PhysicalSystem", "VariableRandomValues"] -> <|
        QuantityVariable["l", "Length"] -> 
         Quantity[31.01477681442347, "Meters"], QuantityVariable["m", "Mass"] -> 
         Quantity[99.09650276881734, "Kilograms"], 
         QuantityVariable["g", "GravitationalAcceleration"] -> 
         Quantity[-84.00020014745806, "Meters" "Seconds"^(-2)], 
         QuantityVariable["t", "Time"] -> 
         Quantity[54.45230541731598, "Seconds"], 
         QuantityVariable["\[Theta]", "Angle"] -> 
         Quantity[1.4459600235131838`, "Radians"], QuantityVariable[
           Subscript["p", "\[Theta]"], "AngularMomentum"] -> 
         Quantity[71.02275544443006, "Joules" "Seconds"]|>, 
       EntityProperty["PhysicalSystem", "Variables"] -> {
         QuantityVariable["l", "Length"], 
         QuantityVariable["m", "Mass"], 
         QuantityVariable["g", "GravitationalAcceleration"], 
         QuantityVariable["t", "Time"], 
         QuantityVariable["\[Theta]", "Angle"], 
         QuantityVariable[
          Subscript["p", "\[Theta]"], "AngularMomentum"]}|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 74], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 6, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 6], "Path" -> {
       Key[
        EntityProperty["PhysicalSystem", "VariableRandomValues"]]}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 4|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key[
      EntityProperty["PhysicalSystem", "VariableRandomValues"]]}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"l\"", "\"Length\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["l", "Length"]]}, "Item", False], "Mouse"],
               ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"31.01477681442347`", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["l", "Length"]]}, "Item", False], "Mouse"],
               ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"m\"", "\"Mass\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
                    "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["m", "Mass"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"99.09650276881734`", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["m", "Mass"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""}, 
                  "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    
                    RowBox[{
                    "Quantity variable:", " gravitational acceleration"}], 
                    TooltipStyle -> "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["g", "GravitationalAcceleration"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"-84.00020014745806`", 
                  
                  RowBox[{
                   "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SuperscriptBox["\"s\"", "2"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["g", "GravitationalAcceleration"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"t\"", "\"Time\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
                    "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["t", "Time"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"54.45230541731598`", "\"s\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["t", "Time"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"\[Theta]\"", "\"Angle\""}, 
                  "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["\[Theta]", "Angle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.4459600235131838`", "\"rad\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable["\[Theta]", "Angle"]]}, "Item", False], 
               "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{
                   SubscriptBox["\"p\"", "\"\[Theta]\""], 
                   "\"AngularMomentum\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " angular momentum"}], 
                    TooltipStyle -> "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable[
                   Subscript["p", "\[Theta]"], "AngularMomentum"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"71.02275544443006`", 
                  RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "36ad980f-8b11-4eed-a646-80f17bbb62e7"][{
                 Key[
                  EntityProperty["PhysicalSystem", "VariableRandomValues"]], 
                 Key[
                  QuantityVariable[
                   Subscript["p", "\[Theta]"], "AngularMomentum"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "36ad980f-8b11-4eed-a646-80f17bbb62e7", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "36ad980f-8b11-4eed-a646-80f17bbb62e7"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "36ad980f-8b11-4eed-a646-80f17bbb62e7"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "36ad980f-8b11-4eed-a646-80f17bbb62e7"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "36ad980f-8b11-4eed-a646-80f17bbb62e7"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "36ad980f-8b11-4eed-a646-80f17bbb62e7"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "36ad980f-8b11-4eed-a646-80f17bbb62e7"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{160., {98.13403328722343, 103.86596671277657`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{160., {98.13403328722343, 103.86596671277657`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.877029134294984*^9},
 CellLabel->"Out[62]=",
 CellID->343708306,ExpressionUUID->"0baa1484-96f7-412c-ac0f-95fcd53803f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"pendulum\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"PhysicalSystem\"", ",", "\"Pendulum1D\""}], "]"}], 
    "\"Entity[\\\"PhysicalSystem\\\", \\\"Pendulum1D\\\"]\"", 
    "\"physical system\""},
   "Entity"], "[", "\"\<VariableRandomValues\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8770291301953344`*^9, 3.8770291327891254`*^9}, {
  3.8770293765209913`*^9, 3.8770293863168325`*^9}},
 CellLabel->"In[64]:=",
 CellID->17751050,ExpressionUUID->"3eab6cc9-b5b6-4295-b2f9-afc1455192b4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"l\"", "\"Length\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"55.33501309767004`", "\"m\"", "meters", "\"Meters\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"m\"", "\"Mass\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{
     "49.861939575597916`", "\"kg\"", "kilograms", "\"Kilograms\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " gravitational acceleration"}], 
       TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "62.210378103128676`"}], 
      RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
      FractionBox["\"Meters\"", 
       SuperscriptBox["\"Seconds\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"t\"", "\"Time\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " time"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "67.52062352231687`"}], "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "0.6687527180933959`"}], "\"rad\"", "radians", 
      "\"Radians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{
      SubscriptBox["\"p\"", "\"\[Theta]\""], "\"AngularMomentum\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " angular momentum"}], TooltipStyle -> 
       "TextStyling"]& )], "\[Rule]", 
    TemplateBox[{"91.73907783297204`", 
      RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}], "second joules", 
      RowBox[{"\"Joules\"", " ", "\"Seconds\""}]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.877029383235836*^9, 3.877029386988577*^9}},
 CellLabel->"Out[64]=",
 CellID->650201970,ExpressionUUID->"df5a5cfe-a1de-4ebb-936f-db6f5393cb38"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyzing the pendulum", "Section",
 CellChangeTimes->{{3.8770297099007893`*^9, 3.877029714599382*^9}},
 CellID->47492671,ExpressionUUID->"655f374c-4d8b-4323-becf-51205a242a20"],

Cell["Find formulas for a pendulum:", "Text",
 CellChangeTimes->{{3.877029756089136*^9, 3.8770297606198792`*^9}},
 CellID->255192171,ExpressionUUID->"20cde609-2c23-42cd-8725-3116c5b1d950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaLookup", "[", "\"\<*pendulum*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.877029719468523*^9, 3.8770297259017363`*^9}},
 CellLabel->"In[65]:=",
 CellID->144361879,ExpressionUUID->"86e6429b-fa52-484a-b308-192f2dea6b83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pendulum\"\>", ",", "\<\"MomentOfInertia\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pendulum\"\>", ",", "\<\"Standard\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PendulumSmallOscillations\"\>", 
     ",", "\<\"MomentOfInertia\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PendulumSmallOscillations\"\>", ",", "\<\"Standard\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"Damping\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"Driving\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"FrequencyPeriod\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"Damping\"\>", ",", "\<\"Driving\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Damping\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Driving\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
     ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Damping\"\>", 
     ",", "\<\"Driving\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8770297270149117`*^9},
 CellLabel->"Out[65]=",
 CellID->75996745,ExpressionUUID->"11d0d06f-941e-4429-92ce-35e28b303898"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"FormulaData", ",", 
   RowBox[{"FormulaLookup", "[", "\"\<*pendulum*\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8770297307574883`*^9, 3.8770297401892166`*^9}},
 CellLabel->"In[66]:=",
 CellID->42517386,ExpressionUUID->"66343323-e69e-45b5-b902-3c43303f861c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Pendulum\"\>", ",", "\<\"MomentOfInertia\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"T\"", "\"Period\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"4", " ", 
        RowBox[{"EllipticK", "[", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           FractionBox[
            TemplateBox[{
              SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
               "TextStyling"]& )], "2"], "]"}], "2"], "]"}], " ", 
        SqrtBox[
         FractionBox[
          TemplateBox[{"\"I\"", "\"MomentOfInertia\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " moment of inertia"}], 
             TooltipStyle -> "TextStyling"]& )], 
          RowBox[{
           TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " gravitational acceleration"}], 
              TooltipStyle -> "TextStyling"]& )], " ", 
           TemplateBox[{"\"l\"", "\"Length\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
              "TextStyling"]& )], " ", 
           TemplateBox[{"\"m\"", "\"Mass\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
              "TextStyling"]& )]}]]]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"max\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             TemplateBox[{
               SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
                "TextStyling"]& )], "]"}]}], ")"}], " ", 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )]}]]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Pendulum\"\>", ",", "\<\"Standard\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"T\"", "\"Period\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"4", " ", 
        RowBox[{"EllipticK", "[", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           FractionBox[
            TemplateBox[{
              SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
               "TextStyling"]& )], "2"], "]"}], "2"], "]"}], " ", 
        SqrtBox[
         FractionBox[
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )], 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )]]]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"max\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             TemplateBox[{
               SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
                "TextStyling"]& )], "]"}]}], ")"}], " ", 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )]}]]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PendulumSmallOscillations\"\>", 
      ",", "\<\"MomentOfInertia\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"T\"", "\"Period\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        SqrtBox[
         FractionBox[
          TemplateBox[{"\"I\"", "\"MomentOfInertia\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " moment of inertia"}], 
             TooltipStyle -> "TextStyling"]& )], 
          RowBox[{
           TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " gravitational acceleration"}], 
              TooltipStyle -> "TextStyling"]& )], " ", 
           TemplateBox[{"\"l\"", "\"Length\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
              "TextStyling"]& )], " ", 
           TemplateBox[{"\"m\"", "\"Mass\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " mass"}], TooltipStyle -> 
              "TextStyling"]& )]}]]]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"max\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             TemplateBox[{
               SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
                "TextStyling"]& )], "]"}]}], ")"}], " ", 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )]}]]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PendulumSmallOscillations\"\>", ",", "\<\"Standard\"\>"}], 
     "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"T\"", "\"Period\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        SqrtBox[
         FractionBox[
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )], 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )]]]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"v\"", "\"max\""], "\"Speed\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " speed"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", 
             TemplateBox[{
               SubscriptBox["\"\[Theta]\"", "0"], "\"Angle\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
                "TextStyling"]& )], "]"}]}], ")"}], " ", 
          TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " gravitational acceleration"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{"\"l\"", "\"Length\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
             "TextStyling"]& )]}]]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"Damping\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " multiplicative constant"}], 
              TooltipStyle -> "TextStyling"]& )], "2"]}]], " ", 
        TemplateBox[{
          SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"Driving\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"A\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        TemplateBox[{
          SubscriptBox["\"A\"", "\"d\""], "\"MultiplicativeConstants\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " multiplicative constant"}], 
           TooltipStyle -> "TextStyling"]& )], 
        RowBox[{"Abs", "[", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"]]}], "]"}]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{
             InterpretationBox["\[InvisibleSpace]", 1], 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"]}], "+", 
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}]}], 
         "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"FrequencyPeriod\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        TemplateBox[{"\"f\"", "\"Frequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"Damping\"\>", ",", "\<\"Driving\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"A\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        RowBox[{
         TemplateBox[{
           SubscriptBox["\"A\"", "\"d\""], "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )], " ", 
         SuperscriptBox[
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )], "2"]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox[
            TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " multiplicative constant"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], " ", 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], " ", 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"], "-", 
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}], 
           "2"]}]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{
             InterpretationBox["\[InvisibleSpace]", 1], 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"], "-", 
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{"2", 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " multiplicative constant"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )]}]}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Damping\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox[
           TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
            "QuantityVariable",
            DisplayFunction->(TooltipBox[
              
              StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
               False], 
              RowBox[{"Quantity variable:", " multiplicative constant"}], 
              TooltipStyle -> "TextStyling"]& )], "2"]}]], " ", 
        TemplateBox[{
          SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        TemplateBox[{"\"f\"", "\"Frequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Driving\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        TemplateBox[{"\"f\"", "\"Frequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{"\"A\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        TemplateBox[{
          SubscriptBox["\"A\"", "\"d\""], "\"MultiplicativeConstants\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " multiplicative constant"}], 
           TooltipStyle -> "TextStyling"]& )], 
        RowBox[{"Abs", "[", 
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"]]}], "]"}]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{
             InterpretationBox["\[InvisibleSpace]", 1], 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"]}], "+", 
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}]}], 
         "]"}]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"HarmonicOscillator\"\>", ",", "\<\"Pendulum\"\>", 
      ",", "\<\"FrequencyPeriod\"\>", ",", "\<\"Damping\"\>", 
      ",", "\<\"Driving\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"2", " ", "\[Pi]", " ", 
        TemplateBox[{"\"f\"", "\"Frequency\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
           "TextStyling"]& )]}]}], ",", 
      RowBox[{
       TemplateBox[{"\"f\"", "\"Frequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       FractionBox["1", 
        TemplateBox[{"\"T\"", "\"Period\""},
         "QuantityVariable",
         DisplayFunction->(TooltipBox[
           
           StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
            False], 
           RowBox[{"Quantity variable:", " period"}], TooltipStyle -> 
           "TextStyling"]& )]]}], ",", 
      RowBox[{
       TemplateBox[{"\"A\"", "\"MultiplicativeConstants\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " multiplicative constant"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Equal]", 
       FractionBox[
        RowBox[{
         TemplateBox[{
           SubscriptBox["\"A\"", "\"d\""], "\"MultiplicativeConstants\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " multiplicative constant"}], 
            TooltipStyle -> "TextStyling"]& )], " ", 
         SuperscriptBox[
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )], "2"]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox[
            TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " multiplicative constant"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], " ", 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"], " ", 
           SuperscriptBox[
            TemplateBox[{
              SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
             "QuantityVariable",
             DisplayFunction->(TooltipBox[
               
               StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                False], 
               RowBox[{"Quantity variable:", " angular frequency"}], 
               TooltipStyle -> "TextStyling"]& )], "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"], "-", 
             SuperscriptBox[
              TemplateBox[{
                SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
               "QuantityVariable",
               DisplayFunction->(TooltipBox[
                 
                 StyleBox[#, FontColor -> GrayLevel[0.4], 
                  ShowStringCharacters -> False], 
                 RowBox[{"Quantity variable:", " angular frequency"}], 
                 TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}], 
           "2"]}]]]}], ",", 
      RowBox[{
       TemplateBox[{"\"\[Phi]\"", "\"Angle\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{
             InterpretationBox["\[InvisibleSpace]", 1], 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"], "-", 
            SuperscriptBox[
             TemplateBox[{
               SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
              "QuantityVariable",
              DisplayFunction->(TooltipBox[
                
                StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
                 False], 
                RowBox[{"Quantity variable:", " angular frequency"}], 
                TooltipStyle -> "TextStyling"]& )], "2"]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           TemplateBox[{"2", 
             RowBox[{
               SuperscriptBox["\"s\"", "2"], "\[NegativeMediumSpace]", 
               "\"/\"", "\[InvisibleSpace]", 
               SuperscriptBox["\"rad\"", "2"]}], 
             "seconds squared per radian squared", 
             FractionBox[
              SuperscriptBox["\"Seconds\"", "2"], 
              SuperscriptBox["\"Radians\"", "2"]]},
            "Quantity"], ")"}], " ", 
          TemplateBox[{"\"\[Zeta]\"", "\"MultiplicativeConstants\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " multiplicative constant"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )], " ", 
          TemplateBox[{
            SubscriptBox["\"\[Omega]\"", "\"d\""], "\"AngularFrequency\""},
           "QuantityVariable",
           DisplayFunction->(TooltipBox[
             
             StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
              False], 
             RowBox[{"Quantity variable:", " angular frequency"}], 
             TooltipStyle -> "TextStyling"]& )]}]}], "]"}]}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8770297413308587`*^9},
 CellLabel->"Out[66]=",
 CellID->142955490,ExpressionUUID->"bff8c32e-ea69-46d2-a2d3-e4a25abd9e52"]
}, Open  ]],

Cell["Go get data for a harmonic oscillator pendulum:", "Text",
 CellChangeTimes->{{3.877029773060916*^9, 3.877029802030673*^9}},
 CellID->171864730,ExpressionUUID->"18fc5dc3-31cd-477b-83c9-91eba9f2187d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FormulaData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<HarmonicOscillator\>\"", ",", "\"\<Pendulum\>\""}], "}"}],
       ",", "#"}], "]"}], "&"}], ",", 
   RowBox[{"FormulaData", "[", "\"\<Properties\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8770297307574883`*^9, 3.8770297401892166`*^9}, {
  3.877029779261551*^9, 3.8770298278504763`*^9}},
 CellLabel->"In[67]:=",
 CellID->292817525,ExpressionUUID->"f275b592-3216-4030-95b2-3c53ba0e7f02"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Physics\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Physics\"\>", ",", "\<\"Mechanics\"\>"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"ExternalIdentifiers\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{
       RowBox[{"ExternalIdentifier", "[", 
         RowBox[{"\"WikidataID\"", ",", "\"Q190070\"", ",", 
           RowBox[{"\[LeftAssociation]", 
             RowBox[{
               RowBox[{"\"Label\"", "\[Rule]", "\"harmonic oscillator\""}], 
               ",", 
               
               RowBox[{
                "\"Description\"", "\[Rule]", 
                 "\"physical system that responds to a restoring force \
inversely proportional to displacement\""}]}], "\[RightAssociation]"}]}], 
         "]"}], "\"Wikidata\"", "\"harmonic oscillator\"", 
       "http://www.wikidata.org/entity/Q190070"},
      "ExternalIdentifierURL"], "}"}]}], ",", 
   RowBox[{"\<\"Formula\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Equal]", 
       SqrtBox[
        FractionBox[
         TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " gravitational acceleration"}], 
            TooltipStyle -> "TextStyling"]& )], 
         TemplateBox[{"\"l\"", "\"Length\""},
          "QuantityVariable",
          DisplayFunction->(TooltipBox[
            
            StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
             False], 
            RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
            "TextStyling"]& )]]]}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableDimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"TimeUnit\"\>", ",", 
           RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       TemplateBox[{"\"l\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableNames\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"angular frequency\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], 
       "\[Rule]", "\<\"natural angular frequency\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], 
       "\[Rule]", "\<\"gravitational acceleration\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"l\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"length\"\>"}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariablePhysicalQuantities\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"AngularFrequency\"\>"}], ",", 
      RowBox[{
       TemplateBox[{
         SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"AngularFrequency\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " gravitational acceleration"}], 
          TooltipStyle -> "TextStyling"]& )], 
       "\[Rule]", "\<\"GravitationalAcceleration\"\>"}], ",", 
      RowBox[{
       TemplateBox[{"\"l\"", "\"Length\""},
        "QuantityVariable",
        DisplayFunction->(TooltipBox[
          
          StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
           False], 
          RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
          "TextStyling"]& )], "\[Rule]", "\<\"Length\"\>"}]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariables\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"\[Omega]\"", "\"AngularFrequency\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{
        SubscriptBox["\"\[Omega]\"", "0"], "\"AngularFrequency\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " angular frequency"}], TooltipStyle -> 
         "TextStyling"]& )], ",", 
      TemplateBox[{"\"g\"", "\"GravitationalAcceleration\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " gravitational acceleration"}], 
         TooltipStyle -> "TextStyling"]& )], ",", 
      TemplateBox[{"\"l\"", "\"Length\""},
       "QuantityVariable",
       DisplayFunction->(TooltipBox[
         StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
          False], 
         RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
         "TextStyling"]& )]}], "}"}]}], ",", 
   RowBox[{"\<\"QuantityVariableTable\"\>", "\[Rule]", 
    StyleBox[
     TagBox[GridBox[{
        {"\<\"symbol\"\>", "\<\"description\"\>", "\<\"physical \
quantity\"\>", "\<\"dimensions\"\>"},
        {"\<\"\[Omega]\"\>", "\<\"angular frequency\"\>", \
"\<\"AngularFrequency\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {
         SubscriptBox["\<\"\[Omega]\"\>", 
          "0"], "\<\"natural angular frequency\"\>", \
"\<\"AngularFrequency\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}]},
        {"\<\"g\"\>", "\<\"gravitational acceleration\"\>", \
"\<\"GravitationalAcceleration\"\>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"TimeUnit\"\>", ",", 
             RowBox[{"-", "2"}]}], "}"}]}], "}"}]},
        {"\<\"l\"\>", "\<\"length\"\>", "\<\"Length\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
         "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], "DialogStyle",
     StripOnInput->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877029828130283*^9},
 CellLabel->"Out[67]=",
 CellID->13999359,ExpressionUUID->"3bcc4800-2318-441f-bccd-b72489aa6e57"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 5, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "4" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "5" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "6" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "1" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "2" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "3" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", " (" <> "Shift+" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (November 5, 2022)",
   StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 254, 3, 222, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 254, 3, 222, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[837, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1091, 34, 275, 5, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1091, 34, 275, 5, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[434537, 9606, 213, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[467552, 10290, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[467685, 10294, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[467839, 10300, 240, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532],
  Cell[468082, 10307, 350, 7, 32, "Output",ExpressionUUID->"7807b63e-d736-423d-8b01-c291c5ffe2a4",
   CellTags->"ExampleInput",
   CellID->460994882]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 802553, 17254},
 {"Your Essay Title", 802740, 17258},
 {"AuthorName", 802921, 17262},
 {"Abstract", 803080, 17266},
 {"TemplateCell", 803262, 17270},
 {"SectionHeader", 803445, 17274},
 {"ExampleTopicSentence", 803625, 17278},
 {"ExampleCodeText", 803805, 17282},
 {"ExampleInput", 803980, 17286}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 254, 3, 222, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[837, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1091, 34, 275, 5, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1391, 43, 188, 2, 67, "Section",ExpressionUUID->"c4d25fab-c564-4743-bd0f-507303832e16",
 CellID->413375896],
Cell[1582, 47, 208, 2, 35, "Text",ExpressionUUID->"3bb51974-759d-441a-9318-79b56c45bd17",
 CellID->174357538],
Cell[CellGroupData[{
Cell[1815, 53, 23993, 397, 128, "Input",ExpressionUUID->"3fbfd135-b113-45d6-aa07-99e1637c0d0d",
 CellID->227745308],
Cell[25811, 452, 23982, 396, 132, "Output",ExpressionUUID->"0d56220d-c7b0-40b6-b117-7d74b93e4437",
 CellID->307376642]
}, Open  ]],
Cell[49808, 851, 243, 4, 35, "Text",ExpressionUUID->"13d74685-2182-4195-9f17-9419a2695d74",
 CellID->118118011],
Cell[CellGroupData[{
Cell[50076, 859, 909, 26, 48, "Input",ExpressionUUID->"4c061205-d387-41d0-b13d-b56717e1a09d",
 CellID->247200828],
Cell[50988, 887, 400, 8, 28, "Message",ExpressionUUID->"85e7fac6-50da-40ec-bb01-28e6a0c6cc88",
 CellID->266227710],
Cell[51391, 897, 913, 26, 52, "Output",ExpressionUUID->"691dc36b-bacd-46ba-99ee-76afc2f76147",
 CellID->12104400]
}, Open  ]],
Cell[CellGroupData[{
Cell[52341, 928, 450, 13, 45, "Subsubsection",ExpressionUUID->"71a09c6a-ec3e-40ea-81b0-b7ea9c465ebf",
 CellID->544636926],
Cell[CellGroupData[{
Cell[52816, 945, 624, 14, 28, "Input",ExpressionUUID->"08e78a19-9f75-4a3a-927b-6e2ad3182ca8",
 CellID->550266101],
Cell[53443, 961, 1121, 25, 32, "Output",ExpressionUUID->"98469697-6545-4144-ad3c-409045ce0326",
 CellID->163806116]
}, Open  ]],
Cell[CellGroupData[{
Cell[54601, 991, 439, 10, 28, "Input",ExpressionUUID->"6af12f74-108a-4338-880c-6d434851a0ba",
 CellID->268610901],
Cell[55043, 1003, 787, 17, 32, "Output",ExpressionUUID->"609046c0-6d7e-4f02-827b-c7e1cf0d641f",
 CellID->377951983]
}, Open  ]],
Cell[CellGroupData[{
Cell[55867, 1025, 606, 13, 28, "Input",ExpressionUUID->"a3a85c07-2011-459a-bc82-ed5b0199230a",
 CellID->213366258],
Cell[56476, 1040, 1079, 23, 32, "Output",ExpressionUUID->"c39d92db-2a1e-4637-90a6-865156b73d06",
 CellID->158075726]
}, Open  ]],
Cell[CellGroupData[{
Cell[57592, 1068, 1065, 25, 28, "Input",ExpressionUUID->"9c6755b9-2cc3-4836-a4e8-c2aae452bf14",
 CellID->42874454],
Cell[58660, 1095, 374, 9, 49, "Output",ExpressionUUID->"c4af8736-83e6-4c99-8f48-cb3908cf0e2c",
 CellID->299765511]
}, Open  ]],
Cell[59049, 1107, 207, 2, 35, "Text",ExpressionUUID->"75a73010-a286-4954-bc96-9de98e8364a3",
 CellID->132432358],
Cell[59259, 1111, 213, 2, 35, "Text",ExpressionUUID->"c990f158-a0e1-4e64-804d-6b70d177e25a",
 CellID->198273961],
Cell[CellGroupData[{
Cell[59497, 1117, 1154, 26, 28, "Input",ExpressionUUID->"65ab8177-f9b5-4401-b805-703d88820a74",
 CellID->675465974],
Cell[60654, 1145, 6713, 165, 89, "Output",ExpressionUUID->"0260d12d-6654-4190-807c-b2872064a3fd",
 CellID->153394662]
}, Open  ]],
Cell[67382, 1313, 191, 2, 35, "Text",ExpressionUUID->"cd81b174-ab1b-455b-85e8-793b791f3d1d",
 CellID->30090891],
Cell[CellGroupData[{
Cell[67598, 1319, 1554, 35, 28, "Input",ExpressionUUID->"dd52f9ca-23e9-4ab9-b4fd-bb88c06faa89",
 CellID->15445010],
Cell[69155, 1356, 7952, 203, 186, "Output",ExpressionUUID->"d0472815-bec2-4e66-b418-40325fddb6a7",
 CellID->285311813]
}, Open  ]],
Cell[77122, 1562, 213, 2, 35, "Text",ExpressionUUID->"7ba57600-e2a6-4aca-a6fc-ce453de7cae2",
 CellID->432224002],
Cell[CellGroupData[{
Cell[77360, 1568, 1213, 27, 28, "Input",ExpressionUUID->"e9cde61d-6571-4626-bb7d-3895c17d74a0",
 CellID->27433761],
Cell[78576, 1597, 15356, 367, 142, "Output",ExpressionUUID->"f03f1bba-26c3-428b-862c-aad202ae0d2f",
 CellID->221639173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93981, 1970, 488, 12, 43, "Subsubsection",ExpressionUUID->"330d39f8-6c46-410b-9dae-ec17442413d8",
 CellID->45344407],
Cell[CellGroupData[{
Cell[94494, 1986, 800, 19, 48, "Input",ExpressionUUID->"da57dc34-5516-465d-8579-0f6d44b70596",
 CellID->51172206],
Cell[95297, 2007, 1535, 36, 32, "Output",ExpressionUUID->"0cb20c1c-3862-4c0f-ab61-18100ea15962",
 CellID->515888857]
}, Open  ]],
Cell[CellGroupData[{
Cell[96869, 2048, 645, 15, 28, "Input",ExpressionUUID->"8fed8d1d-9d0d-44d6-a175-1e6e39bee681",
 CellID->608436178],
Cell[97517, 2065, 385, 8, 48, "Output",ExpressionUUID->"06e6159f-52ac-4eb8-907a-f4092a062a52",
 CellID->393114507]
}, Open  ]],
Cell[CellGroupData[{
Cell[97939, 2078, 731, 16, 28, "Input",ExpressionUUID->"439d0e41-cc95-4d83-9770-1c71209ac104",
 CellID->301005610],
Cell[98673, 2096, 6325, 153, 88, "Output",ExpressionUUID->"bc9afdac-9a87-4ec3-a46d-3b9582c73dec",
 CellID->247431360]
}, Open  ]],
Cell[CellGroupData[{
Cell[105035, 2254, 842, 19, 48, "Input",ExpressionUUID->"b068c94b-6f24-4268-931b-05e420e1d35c",
 CellID->675966642],
Cell[105880, 2275, 453, 11, 48, "Output",ExpressionUUID->"ec149445-19ff-43da-9b99-ea5c5d5e39de",
 CellID->301688976]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106382, 2292, 456, 11, 43, "Subsubsection",ExpressionUUID->"4db6a9f7-ffdb-4ec4-a34b-b90d064f9eef",
 CellID->401477280],
Cell[CellGroupData[{
Cell[106863, 2307, 660, 15, 85, "Input",ExpressionUUID->"9976f723-bc92-4eab-a714-c5c99280a3f2",
 CellID->228296512],
Cell[107526, 2324, 1212, 27, 70, "Output",ExpressionUUID->"1c33a7c6-3682-49f6-98f0-3f9f0a94bef1",
 CellID->70475713]
}, Open  ]],
Cell[CellGroupData[{
Cell[108775, 2356, 688, 16, 67, "Input",ExpressionUUID->"e4001123-6ff1-48b3-896e-24f23361a177",
 CellID->481105565],
Cell[109466, 2374, 393, 8, 70, "Message",ExpressionUUID->"7cfd59f3-486d-435c-b909-5ba457695d0d",
 CellID->87865638],
Cell[109862, 2384, 2059, 49, 70, "Output",ExpressionUUID->"0217bf6e-cea7-4437-8991-be3e2a15cb91",
 CellID->136203013]
}, Open  ]],
Cell[111936, 2436, 195, 2, 35, "Text",ExpressionUUID->"79f9dd1d-ab2d-45ca-9b02-154a7f83229e",
 CellID->150323186]
}, Closed]],
Cell[CellGroupData[{
Cell[112168, 2443, 385, 9, 35, "Subsubsection",ExpressionUUID->"0856d6c1-89c3-44a4-9dce-68d1dea8d638",
 CellID->71073816],
Cell[CellGroupData[{
Cell[112578, 2456, 490, 11, 48, "Input",ExpressionUUID->"d76c0c50-db47-443e-8b51-ba5125dc7983",
 CellID->409813951],
Cell[113071, 2469, 803, 17, 70, "Output",ExpressionUUID->"6e461cb1-72e0-4745-aa55-feec514b3c57",
 CellID->213800858]
}, Open  ]],
Cell[CellGroupData[{
Cell[113911, 2491, 647, 14, 28, "Input",ExpressionUUID->"541df5ee-b9b6-46d9-bec8-b2b5e08ef1b1",
 CellID->423314643],
Cell[114561, 2507, 421, 9, 70, "Message",ExpressionUUID->"ed99c996-724f-4b25-9576-9893fd1d5bfb",
 CellID->233872994],
Cell[114985, 2518, 1328, 31, 70, "Output",ExpressionUUID->"eac115f8-498a-41a0-9724-055e8e8f8d4c",
 CellID->146447559]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[116362, 2555, 403, 11, 38, "Subsubsection",ExpressionUUID->"d2a1d2f3-a351-4adc-a4ef-a59d60d71bc5",
 CellID->141707903],
Cell[CellGroupData[{
Cell[116790, 2570, 540, 13, 47, "Input",ExpressionUUID->"a8fd3600-c852-4076-a428-af5871302109",
 CellID->29671965],
Cell[117333, 2585, 873, 20, 50, "Output",ExpressionUUID->"ab8847b4-255c-4103-a00b-783971c843d0",
 CellID->203029962]
}, Open  ]],
Cell[CellGroupData[{
Cell[118243, 2610, 686, 15, 28, "Input",ExpressionUUID->"4164f25c-d1b0-4566-b573-13bbb98a1b18",
 CellID->50675286],
Cell[118932, 2627, 3676, 88, 89, "Output",ExpressionUUID->"57492d7a-fe23-445c-a801-22aae3884c05",
 CellID->17215829]
}, Open  ]],
Cell[122623, 2718, 175, 2, 35, "Text",ExpressionUUID->"39435128-fc56-480f-abc2-7ad5fb114e0b",
 CellID->601902263],
Cell[122801, 2722, 99216, 1630, 457, "Input",ExpressionUUID->"94ff3f98-9e79-49e0-a271-2bbe6591dc66",
 CellID->628932942],
Cell[222020, 4354, 204, 2, 35, "Text",ExpressionUUID->"ec96bb6a-bff3-44ca-96a7-b08e7c24a458",
 CellID->186053296],
Cell[CellGroupData[{
Cell[222249, 4360, 1348, 32, 40, "Input",ExpressionUUID->"d3610f43-6d0a-491f-9683-58542cb62dc5",
 CellID->162951853],
Cell[223600, 4394, 1248, 33, 54, "Output",ExpressionUUID->"f25c03f9-8140-43fe-b132-0d78f87ecd96",
 CellID->575499468]
}, Open  ]],
Cell[224863, 4430, 198, 2, 35, "Text",ExpressionUUID->"561895b5-a585-4f56-829b-dcc9bd13bc92",
 CellID->290879684],
Cell[CellGroupData[{
Cell[225086, 4436, 1370, 32, 99, "Input",ExpressionUUID->"7cce0172-826b-486a-ad6a-98400fcce730",
 CellID->156363503],
Cell[226459, 4470, 1441, 37, 54, "Output",ExpressionUUID->"27f628c3-dc0b-45e9-9310-0df51f7e8df2",
 CellID->147611255]
}, Open  ]],
Cell[227915, 4510, 228, 4, 35, "Text",ExpressionUUID->"42dc6de5-b2b8-4eb0-a225-978babd8ae7c",
 CellID->742625996],
Cell[CellGroupData[{
Cell[228168, 4518, 1399, 33, 99, "Input",ExpressionUUID->"9bd0eafb-da86-4a1d-9709-26a2eb2d82a7",
 CellID->660585148],
Cell[229570, 4553, 1168, 30, 51, "Output",ExpressionUUID->"2bde8a4b-45a6-4eb3-b616-b693486cb89b",
 CellID->1451397]
}, Open  ]],
Cell[230753, 4586, 191, 2, 35, "Text",ExpressionUUID->"db7fe245-f5c0-4381-a918-c0a1b675bfe8",
 CellID->575242827],
Cell[CellGroupData[{
Cell[230969, 4592, 2822, 69, 129, "Input",ExpressionUUID->"36c485cb-fdf4-4481-abb8-cb75d49396ef",
 CellID->65502275],
Cell[233794, 4663, 660, 16, 42, "Output",ExpressionUUID->"cc34bbbf-c7ad-44c3-b092-0b34f8f237b9",
 CellID->844186107]
}, Open  ]],
Cell[234469, 4682, 207, 2, 35, "Text",ExpressionUUID->"ff36b0de-02ba-4d18-bb3f-6616886fbfd7",
 CellID->361102042],
Cell[CellGroupData[{
Cell[234701, 4688, 3056, 74, 185, "Input",ExpressionUUID->"baa9045b-e33c-407c-809a-0128d6263c1a",
 CellID->537650721],
Cell[237760, 4764, 292, 6, 39, "Output",ExpressionUUID->"11687aba-a867-48cc-a4a7-dae33cf81b46",
 CellID->105268131]
}, Open  ]],
Cell[238067, 4773, 189, 2, 35, "Text",ExpressionUUID->"737e7894-81ee-4aef-bc8b-43eaf8dcbbc4",
 CellID->1032462463],
Cell[CellGroupData[{
Cell[238281, 4779, 3063, 75, 185, "Input",ExpressionUUID->"e56c162c-70af-4e97-8920-8ebdd82e8970",
 CellID->902298],
Cell[241347, 4856, 332, 8, 36, "Output",ExpressionUUID->"17c94569-5769-42ad-a19f-2713b6f97ce1",
 CellID->3521900]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241740, 4871, 167, 2, 67, "Section",ExpressionUUID->"dabd7686-70e4-4f8f-9de9-cfbe5489a888",
 CellID->265431126],
Cell[241910, 4875, 217, 2, 35, "Text",ExpressionUUID->"e3d6b790-1c7f-42be-8825-0c59527c3ffa",
 CellID->400137981],
Cell[CellGroupData[{
Cell[242152, 4881, 281, 6, 28, "Input",ExpressionUUID->"e0877775-2bba-4026-9a2d-be39e2b33a4b",
 CellID->59671516],
Cell[242436, 4889, 879, 14, 128, "Output",ExpressionUUID->"afdd956d-ab9f-4a2d-907b-33e75385214a",
 CellID->444819810]
}, Open  ]],
Cell[CellGroupData[{
Cell[243352, 4908, 318, 7, 28, "Input",ExpressionUUID->"bb52d63e-b23a-42f9-9ee7-27402587e4f8",
 CellID->417542579],
Cell[243673, 4917, 37268, 917, 311, "Output",ExpressionUUID->"afd0eaf6-a8d3-49ec-8c89-c1ee695e368f",
 CellID->288504711]
}, Open  ]],
Cell[CellGroupData[{
Cell[280978, 5839, 469, 11, 48, "Input",ExpressionUUID->"3caef403-61d6-4333-b49e-7f665fbb1d1e",
 CellID->154788387],
Cell[281450, 5852, 28624, 705, 1101, "Output",ExpressionUUID->"0fc41c68-f1f0-43f1-ad44-bbc44c0c78b1",
 CellID->123985392]
}, Closed]],
Cell[CellGroupData[{
Cell[310111, 6562, 568, 13, 44, "Input",ExpressionUUID->"3dc767c0-ba90-4c84-964a-136a6d1de38d",
 CellID->398638960],
Cell[310682, 6577, 30345, 727, 1652, "Output",ExpressionUUID->"cb800ec6-1f18-4928-a126-4607fd6079ad",
 CellID->79504512]
}, Closed]],
Cell[CellGroupData[{
Cell[341064, 7309, 566, 11, 44, "Input",ExpressionUUID->"901ac829-a0ab-4e18-8bb4-b2cd17f621d4",
 CellID->30782342],
Cell[341633, 7322, 1943, 42, 32, "Output",ExpressionUUID->"fc7127c0-5e32-4d46-87b4-529e7dc3e34f",
 CellID->858662304]
}, Open  ]],
Cell[CellGroupData[{
Cell[343613, 7369, 1663, 37, 67, "Input",ExpressionUUID->"b4bf684f-bc46-4df5-8346-ecd09047f78e",
 CellID->390529296],
Cell[345279, 7408, 14196, 352, 466, "Output",ExpressionUUID->"58183044-37b4-4097-b277-d33e238d062c",
 CellID->292386690]
}, Open  ]],
Cell[CellGroupData[{
Cell[359512, 7765, 1723, 38, 86, "Input",ExpressionUUID->"2de09f7c-5e68-4944-a66f-cd69c447372b",
 CellID->179242368],
Cell[361238, 7805, 20438, 486, 366, "Output",ExpressionUUID->"efb783b6-f963-45b9-9c2d-9cfa7f0704db",
 CellID->76337150]
}, Open  ]],
Cell[CellGroupData[{
Cell[381713, 8296, 248, 4, 28, "Input",ExpressionUUID->"d17899b3-3d12-4ebc-ab05-0399a80d4337",
 CellID->562710345],
Cell[381964, 8302, 502, 10, 90, "Output",ExpressionUUID->"99aba2d6-02a6-49af-ba07-280b5eae2113",
 CellID->62246355]
}, Open  ]],
Cell[CellGroupData[{
Cell[382503, 8317, 421, 9, 48, "Input",ExpressionUUID->"fb0d18e4-8e12-4ab3-af85-510148c4daab",
 CellID->326922591],
Cell[382927, 8328, 51561, 1272, 1026, "Output",ExpressionUUID->"2da10889-1a1f-4dd9-9632-952d88998628",
 CellID->180338236]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[434537, 9606, 213, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[434753, 9611, 237, 4, 35, "Text",ExpressionUUID->"29a0c58e-9f52-480b-a220-4eb257460937",
 CellID->258399282],
Cell[434993, 9617, 312, 5, 58, "Text",ExpressionUUID->"e7e14108-d550-4457-9e89-73dc2f6c9fcf",
 CellID->456215884],
Cell[CellGroupData[{
Cell[435330, 9626, 275, 5, 28, "Input",ExpressionUUID->"2cd1e21d-64f6-4e24-a9b8-1a6dbf3f2ccc",
 CellID->379926399],
Cell[435608, 9633, 22946, 404, 64, "Output",ExpressionUUID->"d0a0ad0e-e399-4535-809d-393ed4e5d203",
 CellID->59169728]
}, Open  ]],
Cell[458569, 10040, 268, 5, 28, "Input",ExpressionUUID->"21b046dd-0004-40dd-8604-e58f03c9fe61",
 CellID->313916198],
Cell[CellGroupData[{
Cell[458862, 10049, 873, 21, 39, "Input",ExpressionUUID->"5b795f32-2470-402f-a4c4-118be041a7ff",
 CellID->165352126],
Cell[459738, 10072, 658, 16, 57, "Output",ExpressionUUID->"aeabfc01-c481-45f4-a3e2-f45da86ab96c",
 CellID->538724055]
}, Open  ]],
Cell[CellGroupData[{
Cell[460433, 10093, 922, 22, 39, "Input",ExpressionUUID->"e20372d6-a5b8-4432-b561-db3d683580f5",
 CellID->125726696],
Cell[461358, 10117, 601, 15, 57, "Output",ExpressionUUID->"8f878f45-9ee4-4720-824f-ea5788ad0b2c",
 CellID->88535652]
}, Open  ]],
Cell[CellGroupData[{
Cell[461996, 10137, 718, 16, 39, "Input",ExpressionUUID->"057b4870-5a64-4f83-ba9d-ad08a84a78cd",
 CellID->562370332],
Cell[462717, 10155, 237, 5, 32, "Output",ExpressionUUID->"9ce67073-02ec-4e61-9a61-9142272b890c",
 CellID->295217248]
}, Open  ]],
Cell[CellGroupData[{
Cell[462991, 10165, 760, 17, 39, "Input",ExpressionUUID->"eb0e8b60-8880-4d4c-b661-8db07b8eef49",
 CellID->768951496],
Cell[463754, 10184, 177, 3, 32, "Output",ExpressionUUID->"6a50a85f-b0b4-49e2-bc49-306f3470867f",
 CellID->582472275]
}, Open  ]],
Cell[CellGroupData[{
Cell[463968, 10192, 1025, 24, 86, "Input",ExpressionUUID->"dd99978a-a327-435b-bca6-6996ac83cbf2",
 CellID->680533327],
Cell[464996, 10218, 245, 3, 47, "Output",ExpressionUUID->"b29fcce6-1890-481f-be00-83609fd40bc0",
 CellID->720582321]
}, Open  ]],
Cell[CellGroupData[{
Cell[465278, 10226, 990, 23, 95, "Input",ExpressionUUID->"e42d9475-8baa-4d29-bd58-3ac4d7a72e2f",
 CellID->687280586],
Cell[466271, 10251, 577, 14, 42, "Output",ExpressionUUID->"9b386f58-914c-4a17-9d3e-526d541346ce",
 CellID->19841988]
}, Open  ]],
Cell[CellGroupData[{
Cell[466885, 10270, 402, 10, 48, "Input",ExpressionUUID->"81d62a25-11d1-4ac5-aeab-d4004a710c6a",
 CellID->738535870],
Cell[467290, 10282, 247, 5, 61, "Output",ExpressionUUID->"d3542004-79b2-4b0f-a72d-37c993c6a4f8",
 CellID->11845043]
}, Open  ]],
Cell[467552, 10290, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[467685, 10294, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[467839, 10300, 240, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[468082, 10307, 350, 7, 32, "Output",ExpressionUUID->"7807b63e-d736-423d-8b01-c291c5ffe2a4",
 CellTags->"ExampleInput",
 CellID->460994882]
}, Open  ]],
Cell[468447, 10317, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[468545, 10320, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Closed]],
Cell[CellGroupData[{
Cell[468677, 10326, 188, 2, 53, "Section",ExpressionUUID->"5a641b42-b5ae-4c7e-b9b2-3e26f8deefd0",
 CellID->74998758],
Cell[468868, 10330, 259, 5, 58, "Text",ExpressionUUID->"0ef79e41-79b2-4f6d-8153-150781973fee",
 CellID->51244318],
Cell[CellGroupData[{
Cell[469152, 10339, 256, 5, 28, "Input",ExpressionUUID->"98e434cf-3838-43f8-9d0c-ab04ee67fa32",
 CellID->408122043],
Cell[469411, 10346, 251, 7, 32, "Output",ExpressionUUID->"000eb7dc-a38f-4991-9e7a-daca13442ec8",
 CellID->97602148]
}, Open  ]],
Cell[CellGroupData[{
Cell[469699, 10358, 339, 8, 28, "Input",ExpressionUUID->"8b341de5-df38-4702-8d7d-ac96658ca16b",
 CellID->670620259],
Cell[470041, 10368, 394, 10, 39, "Output",ExpressionUUID->"7a07abc4-ad92-4643-99a3-5bf74824ee0b",
 CellID->41838414]
}, Open  ]],
Cell[470450, 10381, 244, 4, 58, "Text",ExpressionUUID->"f5bae885-5629-46b2-acb8-8f3482a0ce58",
 CellID->236671133],
Cell[CellGroupData[{
Cell[470719, 10389, 255, 5, 28, "Input",ExpressionUUID->"efe17990-f622-447c-99cf-733764823b81",
 CellID->310954202],
Cell[470977, 10396, 252, 7, 32, "Output",ExpressionUUID->"902e6d36-e3e4-4514-aaa1-bbcef07d1a64",
 CellID->60062732]
}, Open  ]],
Cell[CellGroupData[{
Cell[471266, 10408, 330, 8, 28, "Input",ExpressionUUID->"1e6df49d-0b65-4f43-bac6-6322d0a30e19",
 CellID->230792812],
Cell[471599, 10418, 378, 9, 39, "Output",ExpressionUUID->"1f661882-4529-4e2e-8d9d-69f598ef08e4",
 CellID->392118351]
}, Open  ]],
Cell[CellGroupData[{
Cell[472014, 10432, 256, 5, 28, "Input",ExpressionUUID->"e31a3aa5-7bcf-42f4-80d3-51f1937fe941",
 CellID->602900892],
Cell[472273, 10439, 253, 7, 32, "Output",ExpressionUUID->"ef5fc76f-f9e5-40e4-a7b7-d40f7628f83b",
 CellID->192631476]
}, Open  ]],
Cell[CellGroupData[{
Cell[472563, 10451, 394, 9, 31, "Input",ExpressionUUID->"b065a44a-ff6a-4cde-844f-d949a801e0ab",
 CellID->150633148],
Cell[472960, 10462, 556, 13, 42, "Output",ExpressionUUID->"53b95bf4-2848-4a43-b75d-9cdc8da3a7e8",
 CellID->29063474]
}, Open  ]],
Cell[CellGroupData[{
Cell[473553, 10480, 3419, 83, 185, "Input",ExpressionUUID->"86140603-1838-441a-b6b2-0768f64b0570",
 CellID->175606448],
Cell[476975, 10565, 773, 19, 42, "Output",ExpressionUUID->"35489e0e-88b8-4dee-b0eb-05baf9365550",
 CellID->9193457]
}, Open  ]],
Cell[CellGroupData[{
Cell[477785, 10589, 3685, 89, 212, "Input",ExpressionUUID->"0a953b9e-763c-4020-b74e-3c26ca5ee812",
 CellID->86942197],
Cell[481473, 10680, 387, 10, 42, "Output",ExpressionUUID->"2fa50e2b-1b15-4afa-a50a-6a24c67ac44b",
 CellID->427006043]
}, Open  ]],
Cell[CellGroupData[{
Cell[481897, 10695, 3694, 89, 212, "Input",ExpressionUUID->"be6c8ad0-b20f-425f-b6f6-7382a7b63a03",
 CellID->227509808],
Cell[485594, 10786, 434, 10, 39, "Output",ExpressionUUID->"b7962f09-f13e-4e2a-8e0b-018494315eb5",
 CellID->319932232]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[486077, 10802, 169, 2, 67, "Section",ExpressionUUID->"cb95551a-1acf-4579-b758-8b9d204e389b",
 CellID->67693121],
Cell[CellGroupData[{
Cell[486271, 10808, 480, 10, 39, "Input",ExpressionUUID->"d689da3c-cb38-4deb-9d45-9bf7fccb8f19",
 CellID->167382795],
Cell[486754, 10820, 73715, 1372, 91, "Output",ExpressionUUID->"4ee822b1-7917-4d31-a6d7-ee6c97615635",
 CellID->365642567]
}, Open  ]],
Cell[CellGroupData[{
Cell[560506, 12197, 467, 10, 39, "Input",ExpressionUUID->"0c535c27-a6a1-47d4-869e-eed44864b23b",
 CellID->166330132],
Cell[560976, 12209, 46308, 885, 221, "Output",ExpressionUUID->"0baa1484-96f7-412c-ac0f-95fcd53803f0",
 CellID->343708306]
}, Open  ]],
Cell[CellGroupData[{
Cell[607321, 13099, 532, 11, 39, "Input",ExpressionUUID->"3eab6cc9-b5b6-4295-b2f9-afc1455192b4",
 CellID->17751050],
Cell[607856, 13112, 3170, 77, 75, "Output",ExpressionUUID->"df5a5cfe-a1de-4ebb-936f-db6f5393cb38",
 CellID->650201970]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[611075, 13195, 183, 2, 67, "Section",ExpressionUUID->"655f374c-4d8b-4323-becf-51205a242a20",
 CellID->47492671],
Cell[611261, 13199, 188, 2, 35, "Text",ExpressionUUID->"20cde609-2c23-42cd-8725-3116c5b1d950",
 CellID->255192171],
Cell[CellGroupData[{
Cell[611474, 13205, 250, 4, 28, "Input",ExpressionUUID->"86e6429b-fa52-484a-b308-192f2dea6b83",
 CellID->144361879],
Cell[611727, 13211, 1774, 40, 242, "Output",ExpressionUUID->"11d0d06f-941e-4429-92ce-35e28b303898",
 CellID->75996745]
}, Open  ]],
Cell[CellGroupData[{
Cell[613538, 13256, 329, 7, 28, "Input",ExpressionUUID->"66343323-e69e-45b5-b902-3c43303f861c",
 CellID->42517386],
Cell[613870, 13265, 63983, 1544, 1048, "Output",ExpressionUUID->"bff8c32e-ea69-46d2-a2d3-e4a25abd9e52",
 CellID->142955490]
}, Open  ]],
Cell[677868, 14812, 204, 2, 35, "Text",ExpressionUUID->"18fc5dc3-31cd-477b-83c9-91eba9f2187d",
 CellID->171864730],
Cell[CellGroupData[{
Cell[678097, 14818, 553, 13, 67, "Input",ExpressionUUID->"f275b592-3216-4030-95b2-3c53ba0e7f02",
 CellID->292817525],
Cell[678653, 14833, 12397, 301, 389, "Output",ExpressionUUID->"3bcc4800-2318-441f-bccd-b72489aa6e57",
 CellID->13999359]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

