(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    404866,       8284]
NotebookOptionsPosition[    282568,       5922]
NotebookOutlinePosition[    396150,       8091]
CellTagsIndexPosition[    395803,       8078]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Orders of Magnitude of Length", "Title",
 CellChangeTimes->{{3.874774813240224*^9, 3.874774818600547*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.874774820849741*^9, 3.874774822408911*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Length Information", "Section",
 CellChangeTimes->{{3.8747749011079397`*^9, 3.8747749042440805`*^9}},
 CellID->130535342,ExpressionUUID->"a486b60a-b6fa-4208-bc4f-e3df294506ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PersistResourceFunction\>\"", "]"}], 
  "[", "\"\<PersistResourceFunction\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874774905415666*^9, 3.8747749553343983`*^9}},
 CellLabel->"In[4]:=",
 CellID->529321347,ExpressionUUID->"92e72208-1d9a-4589-9394-6572efc942c8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored PersistResourceFunction as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored PersistResourceFunction as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "InstalledResourceFunction", <|
   "MessageTemplate" :> 
    "Successfully stored `symName` as an initialization symbol.", 
    "MessageParameters" -> <|"symName" -> "PersistResourceFunction"|>, 
    "PersistenceLocation" -> 
    PersistenceLocation[
     "Local", "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/Objects/\
Persistence", 
      Hold[Persistence`Data`a33273952689306982616$7]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8747749267184134`*^9, 3.8747749560239725`*^9}},
 CellLabel->"Out[4]=",
 CellID->411572560,ExpressionUUID->"c0c82766-1a70-4987-bbce-e5dba6b4e821"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", 
  RowBox[{"{", "\"\<PhysicalQuantityData\>\"", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.874774926855341*^9, 3.8747749443732567`*^9}},
 CellLabel->"In[5]:=",
 CellID->31063968,ExpressionUUID->"d0c646a3-1147-4e13-944a-fbb2fe4bac65"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    TagBox["Success",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored PhysicalQuantityData as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             FrameBox[
              StyleBox["\"\[Checkmark]\"", 
               Directive[
                RGBColor[
                0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
                25], StripOnInput -> False], ContentPadding -> False, 
              FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
              StripOnInput -> False], 
             GridBox[{{
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox[
                  "\"Successfully stored PhysicalQuantityData as an \
initialization symbol.\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   
                   TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    PersistenceLocation[
                    "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                   TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   Success[
   "InstalledResourceFunction", <|
    "MessageTemplate" :> 
     "Successfully stored `symName` as an initialization symbol.", 
     "MessageParameters" -> <|"symName" -> "PhysicalQuantityData"|>, 
     "PersistenceLocation" -> 
     PersistenceLocation[
      "Local", "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/Objects/\
Persistence", 
       Hold[Persistence`Data`a33273952689306982616$7]]|>],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "}"}]], "Output",
 CellChangeTimes->{{3.8747749450059395`*^9, 3.874774958193169*^9}},
 CellLabel->"Out[5]=",
 CellID->184969266,ExpressionUUID->"b2f9b5a3-3881-4147-a086-43cb1bfc2c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874774998163115*^9, 3.8747750031364737`*^9}},
 CellLabel->"In[9]:=",
 CellID->296309748,ExpressionUUID->"90100da2-889e-44f5-9482-1b66f427e654"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "All"}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", All]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"counting physical quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Counting\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"Counting\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"physical quantity instances\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
       "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
    "EntityClass"], ",", 
   TemplateBox[{"\"SI base quantities\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
     "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
     "\"physical quantities\""},
    "EntityClass"]}], "}"}]], "Output",
 CellChangeTimes->{3.8747750042908792`*^9},
 CellLabel->"Out[9]=",
 CellID->540997277,ExpressionUUID->"0d2fcf1e-df5b-4369-9f9c-4c7010c5cf55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874775005580193*^9, 3.874775006496436*^9}},
 CellLabel->"In[10]:=",
 CellID->16163654,ExpressionUUID->"a875ecb5-08cf-4bbf-9057-6a5b4f0e203c"],

Cell[BoxData[
 TemplateBox[{"\"SI base quantities\"", 
   RowBox[{"EntityClass", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
   "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
   "\"physical quantities\""},
  "EntityClass"]], "Output",
 CellChangeTimes->{3.8747750069103394`*^9},
 CellLabel->"Out[10]=",
 CellID->10701630,ExpressionUUID->"c50fd4ce-5e87-4037-8b02-ddc269fefe05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"Last", "[", 
   RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874775008164305*^9, 3.874775012401679*^9}},
 CellLabel->"In[11]:=",
 CellID->51575141,ExpressionUUID->"2edf1d94-ad58-42a1-9e84-c688ff55ed06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"length\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"mass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Mass\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Mass\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electric current\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectricCurrent\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectricCurrent\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"amount of substance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"luminous intensity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminousIntensity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LuminousIntensity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.874775013291744*^9},
 CellLabel->"Out[11]=",
 CellID->6094332,ExpressionUUID->"08449c41-ae52-4472-959b-48cc5d6fe0e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"EntityList", "[", 
   RowBox[{"Last", "[", 
    RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874775015707365*^9, 3.874775016713394*^9}},
 CellLabel->"In[12]:=",
 CellID->581521248,ExpressionUUID->"2c521658-9101-48ff-a492-193c144906fa"],

Cell[BoxData[
 TemplateBox[{"\"length\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
   "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
   "\"physical quantity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8747750170914435`*^9},
 CellLabel->"Out[12]=",
 CellID->637033924,ExpressionUUID->"300a980c-1a46-46d7-8bc7-3f35b7d7778a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"EntityList", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}],
     "]"}], "]"}], "[", "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.87477501923551*^9, 3.874775025472769*^9}},
 CellLabel->"In[13]:=",
 CellID->728975774,ExpressionUUID->"670ab396-8402-4b51-83e1-8abb0ba1e85c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["PhysicalQuantity", "Abbreviations"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "AlgebraicTypes"] -> {"scalar"}, 
       EntityProperty["PhysicalQuantity", "AlternateNames"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "BasePhysicalQuantity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "CanonicalUnit"] -> 
       Quantity[1, "Meters"], EntityProperty["PhysicalQuantity", "Classes"] -> {
         EntityClass["PhysicalQuantity", "SIBase"]}, 
       EntityProperty[
        "PhysicalQuantity", "Dimensions"] -> {{"LengthUnit", 1}}, 
       EntityProperty["PhysicalQuantity", "EntityClasses"] -> {
         EntityClass["PhysicalQuantity", "SIBase"]}, 
       EntityProperty["PhysicalQuantity", "Instances"] -> {
         Entity["PhysicalQuantity", "BondLength"], 
         Entity["PhysicalQuantity", "BreakingLength"], 
         Entity["PhysicalQuantity", "DiagonalLength"], 
         Entity["PhysicalQuantity", "FocalLength"], 
         Entity["PhysicalQuantity", "JeansLength"], 
         Entity["PhysicalQuantity", "NuclearCollisionLength"], 
         Entity["PhysicalQuantity", "NuclearInteractionLength"], 
         Entity["PhysicalQuantity", "ScatteringLength"]}, 
       EntityProperty["PhysicalQuantity", "Name"] -> "length", 
       EntityProperty["PhysicalQuantity", "NamedSIUnit"] -> 
       Quantity[1, "Meters"], 
       EntityProperty["PhysicalQuantity", "PhysicalPropertyType"] -> 
       "extensive", EntityProperty["PhysicalQuantity", "QuantityVariable"] -> 
       QuantityVariable["L", "Length"], 
       EntityProperty["PhysicalQuantity", "SIBaseUnit"] -> 
       Quantity[1, "Meters"], EntityProperty["PhysicalQuantity", "SIUnit"] -> 
       Quantity[1, "Meters"], 
       EntityProperty["PhysicalQuantity", "StandardIdentifiers"] -> <|
        "ISO 31/I-1978" -> "1-3.1", "ISO 31-1:1992" -> "1-3.1", 
         "ISO 80000-3:2006" -> "3-1.1", "ISO 80000-3:2019" -> "3-1.1", 
         "Wikidata" -> "Q36253"|>, 
       EntityProperty["PhysicalQuantity", "StandardSymbols"] -> <|
        "ISO" -> {"l", "L"}, "Wikidata" -> {"L"}|>, 
       EntityProperty["PhysicalQuantity", "Symbols"] -> {"l", "L"}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Path" -> {}, "DisplayedRowCount" -> 18, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 18, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"abbreviations\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"algebraic types\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"scalar"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"scalar"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"alternate names\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"base physical quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"canonical unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Classes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    EntityClass["PhysicalQuantity", "SIBase"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    EntityClass["PhysicalQuantity", "SIBase"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Classes"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Classes"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{{"LengthUnit", 1}}, ShowStringCharacters -> False], 
                  Style[
                   Style[{{"LengthUnit", 1}}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Dimensions"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "EntityClasses"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    EntityClass["PhysicalQuantity", "SIBase"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    EntityClass["PhysicalQuantity", "SIBase"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "EntityClasses"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "EntityClasses"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"instances\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                    Entity["PhysicalQuantity", "BondLength"], 
                    Entity["PhysicalQuantity", "BreakingLength"], 
                    Entity["PhysicalQuantity", "DiagonalLength"], 
                    Entity["PhysicalQuantity", "FocalLength"], 
                    Entity["PhysicalQuantity", "JeansLength"], 
                    Entity["PhysicalQuantity", "NuclearCollisionLength"], 
                    Entity["PhysicalQuantity", "NuclearInteractionLength"], 
                    Entity["PhysicalQuantity", "ScatteringLength"]}, 
                   ShowStringCharacters -> False], 
                  Style[
                   Style[{
                    Entity["PhysicalQuantity", "BondLength"], 
                    Entity["PhysicalQuantity", "BreakingLength"], 
                    Entity["PhysicalQuantity", "DiagonalLength"], 
                    Entity["PhysicalQuantity", "FocalLength"], 
                    Entity["PhysicalQuantity", "JeansLength"], 
                    Entity["PhysicalQuantity", "NuclearCollisionLength"], 
                    Entity["PhysicalQuantity", "NuclearInteractionLength"], 
                    Entity["PhysicalQuantity", "ScatteringLength"]}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Instances"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"named SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"physical property type\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["extensive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quantity variable\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"L\"", "\"Length\""}, "QuantityVariable", 
                  DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " length"}], TooltipStyle -> 
                    "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI base unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard identifiers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardIdentifiers"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"ISO 31/I-1978" -> "1-3.1", "ISO 31-1:1992" -> 
                    "1-3.1", "ISO 80000-3:2006" -> "3-1.1", 
                    "ISO 80000-3:2019" -> "3-1.1", "Wikidata" -> "Q36253"|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"ISO 31/I-1978" -> "1-3.1", "ISO 31-1:1992" -> 
                    "1-3.1", "ISO 80000-3:2006" -> "3-1.1", 
                    "ISO 80000-3:2019" -> "3-1.1", "Wikidata" -> "Q36253"|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty[
                    "PhysicalQuantity", "StandardIdentifiers"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardIdentifiers"]]},
                 "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"ISO" -> {"l", "L"}, "Wikidata" -> {"L"}|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"ISO" -> {"l", "L"}, "Wikidata" -> {"L"}|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Symbols"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"l", "L"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"l", "L"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Symbols"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Symbols"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1159., {265.13403309800196`, 270.86596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1159., {265.13403309800196`, 270.86596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8747750271995096`*^9},
 CellLabel->"Out[13]=",
 CellID->427397361,ExpressionUUID->"65f9c5d2-66eb-4a38-9855-80e2aa969069"]
}, Open  ]],

Cell[TextData[{
 "Make a function to display the dimensions in canonical form according to ",
 ButtonBox["NIST SI Brochure ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], None},
  ButtonNote->
   "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-2019.\
pdf"],
 "Table 3:"
}], "Text",
 CellChangeTimes->{{3.8747750379692793`*^9, 3.87477507343785*^9}},
 CellID->870557477,ExpressionUUID->"bf6911e5-e088-4fef-96f6-400302c5dd4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseQuantities", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", 
      ",", "\"\<ElectricCurrentUnit\>\"", ",", "\"\<TemperatureUnit\>\"", 
      ",", "\"\<AmountUnit\>\"", ",", "\"\<LuminousIntensityUnit\>\""}], 
     "}"}], "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<T\>\"", ",", "\"\<L\>\"", ",", "\"\<M\>\"", ",", "\"\<I\>\"", ",", 
      "\"\<\[CapitalTheta]\>\"", ",", "\"\<N\>\"", ",", "\"\<J\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8747751349140162`*^9, 3.8747752096983156`*^9}},
 CellLabel->"In[16]:=",
 CellID->330008970,ExpressionUUID->"8d4a9318-fcac-4cab-8daf-70315be4e1bb"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TimeUnit\"\>", "\[Rule]", "\<\"T\"\>"}], ",", 
   RowBox[{"\<\"LengthUnit\"\>", "\[Rule]", "\<\"L\"\>"}], ",", 
   RowBox[{"\<\"MassUnit\"\>", "\[Rule]", "\<\"M\"\>"}], ",", 
   RowBox[{"\<\"ElectricCurrentUnit\"\>", "\[Rule]", "\<\"I\"\>"}], ",", 
   RowBox[{"\<\"TemperatureUnit\"\>", "\[Rule]", "\<\"\[CapitalTheta]\"\>"}], 
   ",", 
   RowBox[{"\<\"AmountUnit\"\>", "\[Rule]", "\<\"N\"\>"}], ",", 
   RowBox[{"\<\"LuminousIntensityUnit\"\>", "\[Rule]", "\<\"J\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8747752061005425`*^9, 3.874775210019413*^9}},
 CellLabel->"Out[16]=",
 CellID->268904778,ExpressionUUID->"81176376-ed60-4fba-bf23-e568c8db50b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnitDimensions", "[", 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], "]"}], "/.", 
  RowBox[{"Normal", "[", "BaseQuantities", "]"}]}]], "Input",
 CellChangeTimes->{{3.874775214308488*^9, 3.8747752369828863`*^9}},
 CellLabel->"In[17]:=",
 CellID->67273667,ExpressionUUID->"6d7f81fd-b9a1-4dac-9dff-092acb8a2c7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"L\"\>", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8747752372244234`*^9},
 CellLabel->"Out[17]=",
 CellID->142560227,ExpressionUUID->"16449928-a1f6-4adb-a285-02e7bd635145"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Superscript", "@@@", 
   RowBox[{"UnitDimensions", "[", 
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], "]"}]}], "/.", 
  RowBox[{"Normal", "[", "BaseQuantities", "]"}]}]], "Input",
 CellChangeTimes->{{3.8747752388284883`*^9, 3.874775243947693*^9}},
 CellLabel->"In[18]:=",
 CellID->14735985,ExpressionUUID->"9f3dfef8-2823-41b0-8edb-d47fd8d9e686"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"L\"", "1"},
   "Superscript"], "}"}]], "Output",
 CellChangeTimes->{3.874775244322516*^9},
 CellLabel->"Out[18]=",
 CellID->266260410,ExpressionUUID->"54bcb2dd-efd1-4c6c-9ee2-7059cf961595"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Times", "@@", 
   RowBox[{"Superscript", "@@@", 
    RowBox[{"UnitDimensions", "[", 
     TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
      "Quantity"], "]"}]}]}], "/.", 
  RowBox[{"Normal", "[", "BaseQuantities", "]"}]}]], "Input",
 CellChangeTimes->{{3.87477525234074*^9, 3.8747752605786467`*^9}},
 CellLabel->"In[20]:=",
 CellID->159473210,ExpressionUUID->"1a2328d2-8649-4049-80f6-15f9fa05c5ae"],

Cell[BoxData[
 TemplateBox[{"\"L\"", "1"},
  "Superscript"]], "Output",
 CellChangeTimes->{{3.874775255979916*^9, 3.8747752609358006`*^9}},
 CellLabel->"Out[20]=",
 CellID->152773353,ExpressionUUID->"0b8a8496-f662-4be6-8687-cefe4d131bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Times", "@@", 
   RowBox[{"Superscript", "@@@", 
    RowBox[{"UnitDimensions", "[", 
     TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
      "Quantity"], "]"}]}]}], "/.", 
  RowBox[{"Normal", "[", "BaseQuantities", "]"}]}]], "Input",
 CellChangeTimes->{{3.87477525234074*^9, 3.874775270396825*^9}},
 CellLabel->"In[22]:=",
 CellID->615081274,ExpressionUUID->"4047d2bf-074c-4884-9248-cfa0f43e46c5"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"L\"", 
    RowBox[{"-", "1"}]},
   "Superscript"], " ", 
  TemplateBox[{"\"M\"", "1"},
   "Superscript"], " ", 
  TemplateBox[{"\"T\"", 
    RowBox[{"-", "2"}]},
   "Superscript"]}]], "Output",
 CellChangeTimes->{{3.874775273530836*^9, 3.8747752770299916`*^9}},
 CellLabel->"Out[22]=",
 CellID->188260935,ExpressionUUID->"4a382b9d-928a-4c5b-8d06-d59ce283af89"]
}, Open  ]],

Cell["This is not in the canonical ordering:", "Text",
 CellChangeTimes->{{3.874775280323213*^9, 3.8747752853877287`*^9}},
 CellID->134302041,ExpressionUUID->"b4232440-9968-463c-a7bd-1c1bd09c6ee1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CenterDot", "@@", 
  RowBox[{"Superscript", "@@@", 
   RowBox[{
    RowBox[{"ReverseSortBy", "[", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"First", "[", "#", "]"}], ",", 
        RowBox[{"Values", "[", "BaseQuantities", "]"}]}], "]"}], "&"}], "]"}],
     "[", 
    RowBox[{
     RowBox[{"UnitDimensions", "[", 
      TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
       "Quantity"], "]"}], "/.", 
     RowBox[{"Normal", "[", "BaseQuantities", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874775293494483*^9, 3.874775376159919*^9}, {
  3.8747754135538273`*^9, 3.874775415697016*^9}},
 CellLabel->"In[26]:=",
 CellID->487148059,ExpressionUUID->"4f563c07-454a-4742-be04-843bfe73fb30"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"T\"", 
    RowBox[{"-", "2"}]},
   "Superscript"], "\[CenterDot]", 
  TemplateBox[{"\"M\"", "1"},
   "Superscript"], "\[CenterDot]", 
  TemplateBox[{"\"L\"", 
    RowBox[{"-", "1"}]},
   "Superscript"]}]], "Output",
 CellChangeTimes->{{3.8747753581096735`*^9, 3.874775376867945*^9}, 
   3.8747754162819266`*^9},
 CellLabel->"Out[26]=",
 CellID->79509807,ExpressionUUID->"dc6acb3c-0ba0-4a75-957a-e86ecdf91294"]
}, Open  ]],

Cell["\<\
This will write the dimensional product for a physical quantity:\
\>", "Text",
 CellChangeTimes->{{3.8747754662589664`*^9, 3.874775478971303*^9}},
 CellID->73501208,ExpressionUUID->"2f6a9219-22c2-4373-93f0-28028e2dda2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DimensionalProduct", "//", "ClearAll"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DimensionalProduct", "[", 
    RowBox[{"quantity_", "?", "QuantityQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "terms", "}"}], ",", 
      RowBox[{
       RowBox[{"terms", "=", 
        RowBox[{"Superscript", "@@@", 
         RowBox[{
          RowBox[{"ReverseSortBy", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"First", "[", "#", "]"}], ",", 
              RowBox[{"Values", "[", "BaseQuantities", "]"}]}], "]"}], "&"}], 
           "]"}], "[", 
          RowBox[{
           RowBox[{"UnitDimensions", "[", "quantity", "]"}], "/.", 
           RowBox[{"Normal", "[", "BaseQuantities", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "terms", "]"}], "==", "1"}], ",", 
         RowBox[{"First", "[", "terms", "]"}], ",", 
         RowBox[{"CenterDot", "@@", "terms"}]}], "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"ContainsOnly", "[", 
      RowBox[{"Keys", "[", "BaseQuantities", "]"}], "]"}], "[", 
     RowBox[{
      RowBox[{"UnitDimensions", "[", "quantity", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.874775480494467*^9, 3.8747756093183002`*^9}, {
  3.87477577347239*^9, 3.8747758642758503`*^9}, {3.8747759047732944`*^9, 
  3.8747759606864443`*^9}},
 CellLabel->"In[72]:=",
 CellID->47505829,ExpressionUUID->"9ff4555f-9fc9-421c-bf36-7e7cd2adcad0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIBaseUnits", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", 
     RowBox[{"#", ",", "\"\<CanonicalUnit\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"EntityList", "[", 
    RowBox[{"Last", "[", 
     RowBox[{"EntityClassList", "[", "\"\<PhysicalQuantity\>\"", "]"}], "]"}],
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874775628043808*^9, 3.8747756610029697`*^9}},
 CellLabel->"In[41]:=",
 CellID->250084041,ExpressionUUID->"42c1fc16-0e5f-41fe-a121-059bcb0ae8f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"A\"", "ampere", "\"Amperes\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"mol\"", "mole", "\"Moles\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"cd\"", "candela", "\"Candelas\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8747756577426367`*^9, 3.8747756647110443`*^9}},
 CellLabel->"Out[41]=",
 CellID->492845518,ExpressionUUID->"9b1911fa-04e3-4a2b-8c9b-5c0facd46fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIBaseUnitDimensionsalProducts", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{"SIBaseUnits", ",", 
       RowBox[{"DimensionalProduct", "/@", "SIBaseUnits"}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.874775668165741*^9, 3.87477569828691*^9}, {
  3.874776004977291*^9, 3.8747760057117186`*^9}, {3.8747763377482443`*^9, 
  3.8747763398523197`*^9}},
 CellLabel->"In[91]:=",
 CellID->19996617,ExpressionUUID->"bf3a987c-80d0-4b8b-a212-2d080fdd9fc8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"L\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"M\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"T\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"A\"", "ampere", "\"Amperes\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"I\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"\[CapitalTheta]\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"mol\"", "mole", "\"Moles\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"N\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"cd\"", "candela", "\"Candelas\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"J\"", "1"},
     "Superscript"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.874775833591621*^9, 3.8747760062270746`*^9, 
  3.8747763402393246`*^9},
 CellLabel->"Out[91]=",
 CellID->110414119,ExpressionUUID->"8458685e-c4b4-4507-ae5e-dea869c6b9fe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SIDerivedUnitsWithoutAngles", "=", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
      "Quantity"], ",", 
     TemplateBox[{
      "1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"Bq\"", "becquerel", "\"Becquerels\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
      "Quantity"], ",", 
     TemplateBox[{"1", "\"kat\"", "katal", "\"Katals\""},
      "Quantity"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8747760125713778`*^9, 3.874776047609954*^9}, {
   3.874776079395011*^9, 3.8747761450452914`*^9}, {3.874776191319936*^9, 
   3.874776240232876*^9}, 3.8747762750754347`*^9, {3.874776314525374*^9, 
   3.874776324309953*^9}},
 CellLabel->"In[50]:=",
 CellID->981741212,ExpressionUUID->"88e24816-ffb2-4079-a291-81884a57391a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIDerivedUnitsWithoutAnglesDimensionalProducts", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{"SIDerivedUnitsWithoutAngles", ",", 
       RowBox[{"DimensionalProduct", "/@", "SIDerivedUnitsWithoutAngles"}]}], 
      "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87477632787928*^9, 3.874776353817947*^9}},
 CellLabel->"In[92]:=",
 CellID->173915885,ExpressionUUID->"a976b893-bf63-4991-9884-6c1717087d22"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"T\"", 
      RowBox[{"-", "1"}]},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "1"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", 
       RowBox[{"-", "1"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "3"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", "1"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "3"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "1"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", "4"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", 
       RowBox[{"-", "1"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "3"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "2"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", "3"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", 
       RowBox[{"-", "1"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "1"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "1"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "2"}]},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{
     "1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"\[CapitalTheta]\"", "1"},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"Bq\"", "becquerel", "\"Becquerels\""},
     "Quantity"], "\[Rule]", 
    TemplateBox[{"\"T\"", 
      RowBox[{"-", "1"}]},
     "Superscript"]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"]}]}], ",", 
   RowBox[{
    TemplateBox[{"1", "\"kat\"", "katal", "\"Katals\""},
     "Quantity"], "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "1"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"N\"", "1"},
      "Superscript"]}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8747763542612076`*^9},
 CellLabel->"Out[92]=",
 CellID->582569298,ExpressionUUID->"65136e8f-e398-4a35-aff1-51d31c171299"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Meter", "Section",
 CellChangeTimes->{{3.8747748257844577`*^9, 3.8747748263044534`*^9}},
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["A meter is a unit of length.", "Text",
 CellChangeTimes->{{3.874774829192256*^9, 3.8747748335207853`*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["Ask Mathematica for a meter:", "CodeText",
 CellChangeTimes->{{3.874774838481389*^9, 3.874774851705861*^9}},
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
  RowBox[{"Quantity", "[", "\"\<Meter\>\"", "]"}]], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellChangeTimes->{{3.874774853854494*^9, 3.8747748564141636`*^9}},
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"]], "Input",ExpressionUUID->
   "016f7904-8185-463f-a890-1fdb6cb113d8"],
  ExpressionCell[
   Quantity[1, "Meters"], "Input"]]], "Output",
 CellChangeTimes->{3.874774856952594*^9},
 CellTags->"ExampleInput",
 CellLabel->"Out[1]=",
 CellID->26902839,ExpressionUUID->"eed77647-941e-44e5-938f-5ebf7f026647"]
}, Open  ]],

Cell["Convert to Planck length:", "Text",
 CellChangeTimes->{{3.8747763978778253`*^9, 3.8747764019979525`*^9}},
 CellID->204485247,ExpressionUUID->"f7478052-0b91-4a50-b5a3-2e75e6aba399"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PersistResourceFunction", "[", "\"\<PlanckUnitConversion\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8747764037144136`*^9, 3.874776443888052*^9}},
 CellLabel->"In[95]:=",
 CellID->102840374,ExpressionUUID->"52831f50-6c51-46f3-b7b5-2d89f64da953"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored PlanckUnitConversion as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"Successfully stored PlanckUnitConversion as an \
initialization symbol.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"PersistenceLocation\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["PersistenceLocation", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{
                    Thickness[0.04081632653061224], {
                    FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigAFlBwht7oCLr7ihKGNir7nDlhNl++ZLKUHF
LaC0Ihr/hz2Mv6FksgRL2Dt7VPkH9jDzYHxU+2D8D/Yw/oHvwY+Xzr5jj2oe
DPxA5TfAzGFgiEqxvu/Pa+GAKm/hADMPxkexD843dYDxIe41dUA1z8wB1T4o
n0EVzvcx73RMeKqMJq/scN+/d3peEYIP8z8AUyhEVw==
                    "]]}, {
                    RGBColor[1., 1., 1.], 
                    Opacity[1.], 
                    CapForm["Round"], 
                    JoinForm["Round"], 
                    
                    JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIFIGYC4pASlen/AwwcGMBAxAHM/4Dg7zOYqSWx1dCh
1t40bpeniMP9B9yTVzYZOlhuOVG2T17KIWz+6rU34g0dKl+qGXLoyDkcv7O1
pUbA0OHF75UfL/UqOBx1Wpt576O+gwpb41RnbiWHP6ffnTx8SNchSSDCckuH
skOeScN2BydtB441MlEp1ipw/qdLvkkCEmoOZkBu0yJtiP7TGg6SasGsi4V0
Hc5/D3689LaGw6L0za+KTXUdWl8H7pBr1XXYd1BcLdhV10EeJDBP30Fo6d6D
4mm6UP8YOVx0ufHhC5cGnM/k28Lrv14Jzg8z0FopfEEJrr+oq+/Jp/tKcPPB
7mdShtv/oBCooEgF7r5lQOvULqvA3Q/jw/wHdn+QEtz/geunpHYoK8DDh69w
TfftF9Lw8Hs3dRNP4RopePiuSQgJUleQgoe/V8AfieJwSXj83BL65Hg+TQYe
f2D+MznU+EWKbwBI8b86
                    "], CurveClosed -> {1}]}}, AspectRatio -> Automatic, 
                    ImageSize -> {25., 25.}, 
                    PlotRange -> {{0., 24.5}, {0., 24.5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Base: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   PersistenceLocation[
                   "Local", 
                    "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/\
Objects/Persistence", 
                    Hold[Persistence`Data`a33273952689306982616$7]], 
                   Selectable -> False, Editable -> False, SelectWithContents -> 
                   True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"InstalledResourceFunction\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "InstalledResourceFunction", <|
   "MessageTemplate" :> 
    "Successfully stored `symName` as an initialization symbol.", 
    "MessageParameters" -> <|"symName" -> "PlanckUnitConversion"|>, 
    "PersistenceLocation" -> 
    PersistenceLocation[
     "Local", "file:///C:/Users/burbery1/AppData/Roaming/Wolfram/Objects/\
Persistence", 
      Hold[Persistence`Data`a33273952689306982616$7]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8747764170931187`*^9, 3.874776445136623*^9}},
 CellLabel->"Out[95]=",
 CellID->720031,ExpressionUUID->"61075fa0-4daf-451d-acc1-097122dd6c3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanckUnitConversion", "[", 
  RowBox[{"Quantity", "[", "\"\<Meters\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874776449484206*^9, 3.874776457135766*^9}},
 CellLabel->"In[96]:=",
 CellID->791993303,ExpressionUUID->"c42bf711-820b-48de-a441-6ba51b436c05"],

Cell[BoxData[
 TemplateBox[{"6.187142499172469`4.652207380644164*^34", 
   SubscriptBox[
    StyleBox["\"l\"", Italic, StripOnInput -> False], 
    StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck lengths", 
   "\"PlanckLength\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.874776457507002*^9},
 CellLabel->"Out[96]=",
 CellID->825771876,ExpressionUUID->"f756639e-5b41-476a-8d4f-fc3a6ffd6122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanckUnitConversion", "[", 
  RowBox[{"Quantity", "[", "\"\<Candelas\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874776449484206*^9, 3.87477648091298*^9}},
 CellLabel->"In[97]:=",
 CellID->414648637,ExpressionUUID->"c59eda2c-9d63-4e60-9cb3-e7936ef3be8d"],

Cell[BoxData[
 TemplateBox[{"1", "\"cd\"", "candela", "\"Candelas\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8747764813645926`*^9},
 CellLabel->"Out[97]=",
 CellID->480440853,ExpressionUUID->"ead7ec83-9e7f-4a42-9910-ebcffb04565f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanckUnitConversion", "[", 
  RowBox[{"Quantity", "[", "\"\<Lux\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874776449484206*^9, 3.8747764919777336`*^9}},
 CellLabel->"In[98]:=",
 CellID->60658887,ExpressionUUID->"091d1725-b7ad-4460-8dab-8351753754eb"],

Cell[BoxData[
 TemplateBox[{"2.61228022502500074650758719`4.351177384980183*^-70", 
   RowBox[{"\"cd\"", "\[ThinSpace]", 
     SuperscriptBox["\"rad\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", 
     SubsuperscriptBox[
      StyleBox["\"l\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "2"]}], 
   "candela radians squared per Planck length squared", 
   FractionBox[
    RowBox[{"\"Candelas\"", " ", 
      SuperscriptBox["\"Radians\"", "2"]}], 
    SuperscriptBox["\"PlanckLength\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8747764923282623`*^9},
 CellLabel->"Out[98]=",
 CellID->542983757,ExpressionUUID->"c0e220bd-ca63-4352-9709-e1a998d61e59"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CompatibleWithPlanckUnitsQ", "[", 
   RowBox[{"quantity_", "?", "QuantityQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ContainsAny", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", "\"\<MassUnit\>\"", 
      ",", "\"\<TemperatureUnit\>\""}], "}"}], "]"}], "[", 
   RowBox[{
    RowBox[{"UnitDimensions", "[", "quantity", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8747766461381288`*^9, 3.874776750738163*^9}, 
   3.874776787788658*^9},
 CellLabel->"In[112]:=",
 CellID->483012643,ExpressionUUID->"ddab1933-6f67-4c02-ac80-39eef6a0c04f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompatibleWithPlanckUnitsQ", "[", 
  RowBox[{"Quantity", "[", "\"\<Moles\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874776753512933*^9, 3.874776760571089*^9}},
 CellLabel->"In[113]:=",
 CellID->27579095,ExpressionUUID->"ffb295f4-efc7-47e3-b513-e873559d7ca1"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8747767608415637`*^9, 3.874776789729294*^9}},
 CellLabel->"Out[113]=",
 CellID->7079227,ExpressionUUID->"00410cde-b091-4d6c-99f4-1c501b047754"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIUnitsExpressibleInPlanckNaturalUnits", "=", 
  RowBox[{
   RowBox[{"Select", "[", "CompatibleWithPlanckUnitsQ", "]"}], "[", 
   RowBox[{"Join", "[", 
    RowBox[{"SIBaseUnits", ",", "SIDerivedUnitsWithoutAngles"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8747767952504573`*^9, 3.8747768296191783`*^9}},
 CellLabel->"In[114]:=",
 CellID->79630526,ExpressionUUID->"5b2ee54c-b59e-4321-94ea-d808c7c1c70f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Bq\"", "becquerel", "\"Becquerels\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"kat\"", "katal", "\"Katals\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.874776830099904*^9},
 CellLabel->"Out[114]=",
 CellID->243462640,ExpressionUUID->"3f63fd93-e253-4e46-8ea2-1a64973400ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIUnitsExpressibleInPlanckNaturalUnitsData", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"AssociationMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<dimensions\>\"", "->", 
         RowBox[{"DimensionalProduct", "[", "#", "]"}]}], ",", 
        RowBox[{"\"\<planck-form\>\"", "->", 
         RowBox[{"PlanckUnitConversion", "[", "#", "]"}]}], ",", 
        RowBox[{"\"\<base-10-exponent\>\"", "->", 
         RowBox[{
          RowBox[{"Last", "[", 
           RowBox[{"MantissaExponent", "[", 
            RowBox[{"QuantityMagnitude", "[", 
             RowBox[{"PlanckUnitConversion", "[", "#", "]"}], "]"}], "]"}], 
           "]"}], "-", "1"}]}]}], "|>"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Select", "[", "CompatibleWithPlanckUnitsQ", "]"}], "[", 
      RowBox[{"Join", "[", 
       RowBox[{"SIBaseUnits", ",", "SIDerivedUnitsWithoutAngles"}], "]"}], 
      "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8747768328326006`*^9, 3.8747769134408464`*^9}, {
  3.8747769530659094`*^9, 3.8747769587053685`*^9}, {3.8747770570293145`*^9, 
  3.8747771104702463`*^9}},
 CellLabel->"In[129]:=",
 CellID->5758660,ExpressionUUID->"68d28ed6-af03-4930-b71d-8f046b256c1f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      Quantity[1, "Meters"] -> <|
        "dimensions" -> Superscript["L", 1], "planck-form" -> 
         Quantity[6.187142499172469`4.652207380644164*^34, "PlanckLength"], 
         "base-10-exponent" -> 34|>, 
       Quantity[1, "Kilograms"] -> <|
        "dimensions" -> Superscript["M", 1], "planck-form" -> 
         Quantity[
          4.59467183475354345190053954`4.656504264409395*^7, "PlanckMass"], 
         "base-10-exponent" -> 7|>, 
       Quantity[1, "Seconds"] -> <|
        "dimensions" -> Superscript["T", 1], "planck-form" -> 
         Quantity[
          1.854858439986149918184821`4.652507983440015*^43, "PlanckTime"], 
         "base-10-exponent" -> 43|>, 
       Quantity[1, "Kelvins"] -> <|
        "dimensions" -> Superscript["\[CapitalTheta]", 1], "planck-form" -> 
         Quantity[
          7.0582389411512269323155718`4.646153665323047*^-33, 
           "PlanckTemperature"], "base-10-exponent" -> -33|>, 
       Quantity[1, "Hertz"] -> <|
        "dimensions" -> Superscript["T", -1], "planck-form" -> 
         Quantity[5.39124699999999`4.652507983440015*^-44, "PlanckTime"^(-1)],
          "base-10-exponent" -> -44|>, 
       Quantity[1, "Newtons"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["L", 1]], "planck-form" -> 
         Quantity[
          8.26272075671756457181477739488337`4.051368277467217*^-45, (
            "PlanckLength" "PlanckMass") "PlanckTime"^(-2)], 
         "base-10-exponent" -> -45|>, 
       Quantity[1, "Pascals"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["L", -1]], "planck-form" -> 
         Quantity[
          2.158454203767690402295`4.051368277467217*^-114, (
            "PlanckLength"^(-1) "PlanckMass") "PlanckTime"^(-2)], 
         "base-10-exponent" -> -114|>, 
       Quantity[1, "Joules"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["L", 2]], "planck-form" -> 
         Quantity[
          5.1122630752681745090977756667`3.954213812101825*^-10, (
            "PlanckLength"^2 "PlanckMass") "PlanckTime"^(-2)], 
         "base-10-exponent" -> -10|>, 
       Quantity[1, "Watts"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -3], 
           Superscript["M", 1], 
           Superscript["L", 2]], "planck-form" -> 
         Quantity[
          2.756147296775032733026256`3.8749198541608103*^-53, (
            "PlanckLength"^2 "PlanckMass") "PlanckTime"^(-3)], 
         "base-10-exponent" -> -53|>, 
       Quantity[1, "Coulombs"] -> <|"dimensions" -> CenterDot[
           Superscript["T", 1], 
           Superscript["I", 1]], "planck-form" -> 
         Quantity[
          1.854858439986149918184821`4.652507983440015*^43, "Amperes" 
           "PlanckTime"], "base-10-exponent" -> 43|>, 
       Quantity[1, "Volts"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -3], 
           Superscript["M", 1], 
           Superscript["L", 2], 
           Superscript["I", -1]], "planck-form" -> 
         Quantity[
          2.756147296775032733026256`3.8749198541608103*^-53, ((
             "Amperes"^(-1) "PlanckLength"^2) "PlanckMass") 
           "PlanckTime"^(-3)], "base-10-exponent" -> -53|>, 
       Quantity[1, "Farads"] -> <|"dimensions" -> CenterDot[
           Superscript["T", 4], 
           Superscript["M", -1], 
           Superscript["L", -2], 
           Superscript["I", 2]], "planck-form" -> 
         Quantity[
          6.729895902720875722`3.8078925739405287*^95, (("Amperes"^2 
             "PlanckLength"^(-2))/"PlanckMass") "PlanckTime"^4], 
         "base-10-exponent" -> 95|>, 
       Quantity[1, "Ohms"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -3], 
           Superscript["M", 1], 
           Superscript["L", 2], 
           Superscript["I", -2]], "planck-form" -> 
         Quantity[
          2.756147296775032733026256`3.8749198541608103*^-53, ((
             "Amperes"^(-2) "PlanckLength"^2) "PlanckMass") 
           "PlanckTime"^(-3)], "base-10-exponent" -> -53|>, 
       Quantity[1, "Siemens"] -> <|"dimensions" -> CenterDot[
           Superscript["T", 3], 
           Superscript["M", -1], 
           Superscript["L", -2], 
           Superscript["I", 2]], "planck-form" -> 
         Quantity[
          3.6282531095856`3.8749198541608103*^52, (("Amperes"^2 
             "PlanckLength"^(-2))/"PlanckMass") "PlanckTime"^3], 
         "base-10-exponent" -> 52|>, 
       Quantity[1, "Webers"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["L", 2], 
           Superscript["I", -1]], "planck-form" -> 
         Quantity[
          5.1122630752681745090977756667`3.954213812101825*^-10, ((
             "Amperes"^(-1) "PlanckLength"^2) "PlanckMass") 
           "PlanckTime"^(-2)], "base-10-exponent" -> -10|>, 
       Quantity[1, "Teslas"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["I", -1]], "planck-form" -> 
         Quantity[
          1.33546637366485492`4.176714740687622*^-79, ("Amperes"^(-1) 
            "PlanckMass") "PlanckTime"^(-2)], "base-10-exponent" -> -79|>, 
       Quantity[1, "Henries"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["M", 1], 
           Superscript["L", 2], 
           Superscript["I", -2]], "planck-form" -> 
         Quantity[
          5.1122630752681745090977756667`3.954213812101825*^-10, ((
             "Amperes"^(-2) "PlanckLength"^2) "PlanckMass") 
           "PlanckTime"^(-2)], "base-10-exponent" -> -10|>, 
       Quantity[1, "DegreesCelsius"] -> <|
        "dimensions" -> Superscript["\[CapitalTheta]", 1], "planck-form" -> 
         Quantity[
          1.9350162057166088634943139961`4.646153665323047*^-30, 
           "PlanckTemperature"], "base-10-exponent" -> -30|>, 
       Quantity[1, "Becquerels"] -> <|
        "dimensions" -> Superscript["T", -1], "planck-form" -> 
         Quantity[5.39124699999999`4.652507983440015*^-44, "PlanckTime"^(-1)],
          "base-10-exponent" -> -44|>, 
       Quantity[1, "Grays"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["L", 2]], "planck-form" -> 
         Quantity[
          1.112650317395820978701`4.050297664705841*^-17, "PlanckLength"^2 
           "PlanckTime"^(-2)], "base-10-exponent" -> -17|>, 
       Quantity[1, "Sieverts"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -2], 
           Superscript["L", 2]], "planck-form" -> 
         Quantity[
          1.112650317395820978701`4.050297664705841*^-17, "PlanckLength"^2 
           "PlanckTime"^(-2)], "base-10-exponent" -> -17|>, 
       Quantity[1, "Katals"] -> <|"dimensions" -> CenterDot[
           Superscript["T", -1], 
           Superscript["N", 1]], "planck-form" -> 
         Quantity[
          5.39124699999999`4.652507983440015*^-44, "Moles"/"PlanckTime"], 
         "base-10-exponent" -> -44|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "dimensions"} -> 
        1, {All, "planck-form"} -> 1, {All, "base-10-exponent"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "dimensions" -> TypeSystem`PackageScope`UnknownShape[False], 
             "planck-form" -> TypeSystem`PackageScope`UnknownShape[False], 
             "base-10-exponent" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{"dimensions", "planck-form", "base-10-exponent"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[Integer]}], 22], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "dimensions"} -> 
        1, {All, "planck-form"} -> 1, {All, "base-10-exponent"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "dimensions" -> TypeSystem`PackageScope`UnknownShape[False], 
             "planck-form" -> TypeSystem`PackageScope`UnknownShape[False], 
             "base-10-exponent" -> TypeSystem`PackageScope`AtomShape[34]|>], 
           DirectedInfinity[1], 3, {All}]]], 20, 
        DirectedInfinity[1], {}]], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{"dimensions", "planck-form", "base-10-exponent"}, {
        TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[Integer]}], 22], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 22, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dimensions", 
                  Style[
                  "dimensions", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "dimensions"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "dimensions"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["planck-form", 
                  Style[
                  "planck-form", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "planck-form"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "planck-form"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["base-10-exponent", 
                  Style[
                  "base-10-exponent", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "base-10-exponent"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "base-10-exponent"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"m\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Meters"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"L\"", "1"}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Meters"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.187142499172469`4.652207380644164*^34", 
                  SubscriptBox[
                   StyleBox["\"l\"", Italic, StripOnInput -> False], 
                   StyleBox["\"P\"", Italic, StripOnInput -> False]]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Meters"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Meters"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"kg\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kilograms"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kilograms"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"4.59467183475354345190053954`4.656504264409395*^7", 
                  SubscriptBox[
                   StyleBox["\"m\"", Italic, StripOnInput -> False], 
                   StyleBox["\"P\"", Italic, StripOnInput -> False]]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kilograms"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kilograms"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"s\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Seconds"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"T\"", "1"}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Seconds"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.854858439986149918184821`4.652507983440015*^43", 
                  SubscriptBox[
                   StyleBox["\"t\"", Italic, StripOnInput -> False], 
                   StyleBox["\"P\"", Italic, StripOnInput -> False]]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Seconds"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Seconds"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"K\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kelvins"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"\[CapitalTheta]\"", "1"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kelvins"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"7.0582389411512269323155718`4.646153665323047*^-33", 
                  SubscriptBox[
                   StyleBox["\"T\"", Italic, StripOnInput -> False], 
                   StyleBox["\"P\"", Italic, StripOnInput -> False]]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kelvins"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Kelvins"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Hz\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Hertz"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"\"T\"", 
                   RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Hertz"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.39124699999999`4.652507983440015*^-44", 
                  RowBox[{"\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Hertz"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Hertz"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"N\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Newtons"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Newtons"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "8.26272075671756457181477739488337`4.051368277467217*^-45", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "2"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Newtons"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Newtons"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Pa\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Pascals"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"L\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Pascals"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.158454203767690402295`4.051368277467217*^-114", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Pascals"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-114"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Pascals"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"J\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Joules"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Joules"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "5.1122630752681745090977756667`3.954213812101825*^-10", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "2"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Joules"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Joules"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"W\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Watts"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Watts"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.756147296775032733026256`3.8749198541608103*^-53", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "3"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Watts"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Watts"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"C\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Coulombs"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   
                   TemplateBox[{"\"T\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"I\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Coulombs"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.854858439986149918184821`4.652507983440015*^43", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", "\"A\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Coulombs"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Coulombs"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"V\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Volts"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"I\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Volts"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.756147296775032733026256`3.8749198541608103*^-53", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", "\"A\"", "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Volts"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Volts"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"F\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Farads"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   
                   TemplateBox[{"\"T\"", "4"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"M\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"L\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"I\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Farads"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"6.729895902720875722`3.8078925739405287*^95", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "4"], 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"A\"", "2"], "\[NegativeMediumSpace]", 
                    "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Farads"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Farads"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"\[CapitalOmega]\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Ohms"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "3"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"I\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Ohms"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2.756147296775032733026256`3.8749198541608103*^-53", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"A\"", "2"], "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Ohms"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-53"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Ohms"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"S\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Siemens"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   
                   TemplateBox[{"\"T\"", "3"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"M\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"L\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"I\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Siemens"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"3.6282531095856`3.8749198541608103*^52", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"A\"", "2"], "\[NegativeMediumSpace]", 
                    "\"/(\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Siemens"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Siemens"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Wb\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Webers"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"I\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Webers"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "5.1122630752681745090977756667`3.954213812101825*^-10", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\"A\"", "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Webers"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Webers"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"T\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Teslas"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"I\"", 
                    RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Teslas"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.33546637366485492`4.176714740687622*^-79", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", "\"A\"", "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Teslas"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-79"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Teslas"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"H\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Henries"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   TemplateBox[{"\"I\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Henries"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "5.1122630752681745090977756667`3.954213812101825*^-10", 
                  RowBox[{
                    SubscriptBox[
                    StyleBox["\"m\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]], 
                    "\[ThinSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"A\"", "2"], "\[InvisibleSpace]", 
                    "\")\""}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Henries"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Henries"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"\[Degree]C\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "DegreesCelsius"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"\[CapitalTheta]\"", "1"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "DegreesCelsius"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                
                RowBox[{
                 "1.9350162057166088634943139961`4.646153665323047*^-30", 
                  SubscriptBox[
                   StyleBox["\"T\"", Italic, StripOnInput -> False], 
                   StyleBox["\"P\"", Italic, StripOnInput -> False]]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "DegreesCelsius"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "DegreesCelsius"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Bq\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Becquerels"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"\"T\"", 
                   RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> 
                  SuperscriptBox], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Becquerels"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"5.39124699999999`4.652507983440015*^-44", 
                  RowBox[{"\"/\"", "\[InvisibleSpace]", 
                    SubscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False]]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Becquerels"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Becquerels"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"Gy\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Grays"]]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   TemplateBox[{"\"T\"", 
                    RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], "\[CenterDot]", 
                   
                   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Grays"]], 
                 Key["dimensions"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1.112650317395820978701`4.050297664705841*^-17", 
                  RowBox[{
                    SubsuperscriptBox[
                    StyleBox["\"l\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
                    "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
                    SubsuperscriptBox[
                    StyleBox["\"t\"", Italic, StripOnInput -> False], 
                    StyleBox["\"P\"", Italic, StripOnInput -> False], 
                    "2"]}]}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Grays"]], 
                 Key["planck-form"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  Quantity[1, "Grays"]], 
                 Key["base-10-exponent"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 22, 1], {1, 22 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[22, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 22, 1], {1, 22 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{543., {299.6340332872234, 305.3659667127766}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{543., {299.6340332872234, 305.3659667127766}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8747768912014923`*^9, 3.874776913793098*^9}, {
  3.8747770657243104`*^9, 3.874777111217104*^9}},
 CellLabel->"Out[129]=",
 CellID->1865023,ExpressionUUID->"75b5f3e6-160e-4048-b2bf-1078c8d11a66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIUnitsExpressibleInPlanckNaturalUnits", "[", 
  RowBox[{"All", ",", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#\"base-10-exponent\"", "&"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8747772237025766`*^9, 3.874777323520805*^9}},
 CellLabel->"In[139]:=",
 CellID->374394923,ExpressionUUID->"3981b1ce-6cd6-4a98-9fa2-47858d297b84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"kg\"", "kilogram", "\"Kilograms\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"s\"", "second", "\"Seconds\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
     "Quantity"], ",", 
    TemplateBox[{
     "1", "\"\[Degree]C\"", "degree Celsius", "\"DegreesCelsius\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Bq\"", "becquerel", "\"Becquerels\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"Sv\"", "sievert", "\"Sieverts\""},
     "Quantity"], ",", 
    TemplateBox[{"1", "\"kat\"", "katal", "\"Katals\""},
     "Quantity"]}], "}"}], "[", 
  RowBox[{"All", ",", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#\"base-10-exponent\"", "&"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8747772281800213`*^9, 3.874777284814925*^9}, 
   3.87477732386406*^9},
 CellLabel->"Out[139]=",
 CellID->330054452,ExpressionUUID->"7b6c1ed9-14bb-4274-a778-45508bdc3265"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{719.25, 575.25},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 232, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 232, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[815, 27, 249, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1067, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1067, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[128875, 2760, 197, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[129075, 2765, 222, 3, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[129300, 2770, 218, 3, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[129543, 2777, 349, 6, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532],
  Cell[129895, 2785, 419, 10, 41, "Output",ExpressionUUID->"eed77647-941e-44e5-938f-5ebf7f026647",
   CellTags->"ExampleInput",
   CellID->26902839]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 394057, 8036},
 {"Your Essay Title", 394243, 8040},
 {"AuthorName", 394423, 8044},
 {"Abstract", 394582, 8048},
 {"TemplateCell", 394764, 8052},
 {"SectionHeader", 394947, 8056},
 {"ExampleTopicSentence", 395127, 8060},
 {"ExampleCodeText", 395306, 8064},
 {"ExampleInput", 395480, 8068}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[815, 27, 249, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1067, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1236, 40, 182, 2, 67, "Section",ExpressionUUID->"a486b60a-b6fa-4208-bc4f-e3df294506ee",
 CellID->130535342],
Cell[CellGroupData[{
Cell[1443, 46, 326, 6, 28, "Input",ExpressionUUID->"92e72208-1d9a-4589-9394-6572efc942c8",
 CellID->529321347],
Cell[1772, 54, 22020, 431, 96, "Output",ExpressionUUID->"c0c82766-1a70-4987-bbce-e5dba6b4e821",
 CellID->411572560]
}, Open  ]],
Cell[CellGroupData[{
Cell[23829, 490, 291, 5, 28, "Input",ExpressionUUID->"d0c646a3-1147-4e13-944a-fbb2fe4bac65",
 CellID->31063968],
Cell[24123, 497, 22194, 434, 96, "Output",ExpressionUUID->"b2f9b5a3-3881-4147-a086-43cb1bfc2c04",
 CellID->184969266]
}, Open  ]],
Cell[CellGroupData[{
Cell[46354, 936, 257, 4, 28, "Input",ExpressionUUID->"90100da2-889e-44f5-9482-1b66f427e654",
 CellID->296309748],
Cell[46614, 942, 1319, 29, 74, "Output",ExpressionUUID->"0d2fcf1e-df5b-4369-9f9c-4c7010c5cf55",
 CellID->540997277]
}, Open  ]],
Cell[CellGroupData[{
Cell[47970, 976, 289, 6, 28, "Input",ExpressionUUID->"a875ecb5-08cf-4bbf-9057-6a5b4f0e203c",
 CellID->16163654],
Cell[48262, 984, 419, 9, 43, "Output",ExpressionUUID->"c50fd4ce-5e87-4037-8b02-ddc269fefe05",
 CellID->10701630]
}, Open  ]],
Cell[CellGroupData[{
Cell[48718, 998, 327, 7, 28, "Input",ExpressionUUID->"2edf1d94-ad58-42a1-9e84-c688ff55ed06",
 CellID->51575141],
Cell[49048, 1007, 1964, 47, 74, "Output",ExpressionUUID->"08449c41-ae52-4472-959b-48cc5d6fe0e9",
 CellID->6094332]
}, Open  ]],
Cell[CellGroupData[{
Cell[51049, 1059, 363, 8, 28, "Input",ExpressionUUID->"2c521658-9101-48ff-a492-193c144906fa",
 CellID->581521248],
Cell[51415, 1069, 391, 9, 43, "Output",ExpressionUUID->"300a980c-1a46-46d7-8bc7-3f35b7d7778a",
 CellID->637033924]
}, Open  ]],
Cell[CellGroupData[{
Cell[51843, 1083, 408, 9, 28, "Input",ExpressionUUID->"670ab396-8402-4b51-83e1-8abb0ba1e85c",
 CellID->728975774],
Cell[52254, 1094, 55961, 1053, 555, "Output",ExpressionUUID->"65f9c5d2-66eb-4a38-9855-80e2aa969069",
 CellID->427397361]
}, Open  ]],
Cell[108230, 2150, 528, 13, 58, "Text",ExpressionUUID->"bf6911e5-e088-4fef-96f6-400302c5dd4d",
 CellID->870557477],
Cell[CellGroupData[{
Cell[108783, 2167, 757, 17, 105, "Input",ExpressionUUID->"8d4a9318-fcac-4cab-8daf-70315be4e1bb",
 CellID->330008970],
Cell[109543, 2186, 752, 14, 52, "Output",ExpressionUUID->"81176376-ed60-4fba-bf23-e568c8db50b1",
 CellID->268904778]
}, Open  ]],
Cell[CellGroupData[{
Cell[110332, 2205, 370, 8, 37, "Input",ExpressionUUID->"6d7f81fd-b9a1-4dac-9dff-092acb8a2c7b",
 CellID->67273667],
Cell[110705, 2215, 248, 6, 32, "Output",ExpressionUUID->"16449928-a1f6-4adb-a285-02e7bd635145",
 CellID->142560227]
}, Open  ]],
Cell[CellGroupData[{
Cell[110990, 2226, 408, 9, 37, "Input",ExpressionUUID->"9f3dfef8-2823-41b0-8edb-d47fd8d9e686",
 CellID->14735985],
Cell[111401, 2237, 236, 6, 35, "Output",ExpressionUUID->"54bcb2dd-efd1-4c6c-9ee2-7059cf961595",
 CellID->266260410]
}, Open  ]],
Cell[CellGroupData[{
Cell[111674, 2248, 440, 10, 37, "Input",ExpressionUUID->"1a2328d2-8649-4049-80f6-15f9fa05c5ae",
 CellID->159473210],
Cell[112117, 2260, 238, 5, 32, "Output",ExpressionUUID->"0b8a8496-f662-4be6-8687-cefe4d131bf1",
 CellID->152773353]
}, Open  ]],
Cell[CellGroupData[{
Cell[112392, 2270, 441, 10, 37, "Input",ExpressionUUID->"4047d2bf-074c-4884-9248-cfa0f43e46c5",
 CellID->615081274],
Cell[112836, 2282, 402, 12, 32, "Output",ExpressionUUID->"4a382b9d-928a-4c5b-8d06-d59ce283af89",
 CellID->188260935]
}, Open  ]],
Cell[113253, 2297, 197, 2, 35, "Text",ExpressionUUID->"b4232440-9968-463c-a7bd-1c1bd09c6ee1",
 CellID->134302041],
Cell[CellGroupData[{
Cell[113475, 2303, 758, 19, 84, "Input",ExpressionUUID->"4f563c07-454a-4742-be04-843bfe73fb30",
 CellID->487148059],
Cell[114236, 2324, 451, 13, 32, "Output",ExpressionUUID->"dc6acb3c-0ba0-4a75-957a-e86ecdf91294",
 CellID->79509807]
}, Open  ]],
Cell[114702, 2340, 230, 4, 35, "Text",ExpressionUUID->"2f6a9219-22c2-4373-93f0-28028e2dda2d",
 CellID->73501208],
Cell[114935, 2346, 1729, 44, 181, "Input",ExpressionUUID->"9ff4555f-9fc9-421c-bf36-7e7cd2adcad0",
 CellID->47505829],
Cell[CellGroupData[{
Cell[116689, 2394, 508, 12, 48, "Input",ExpressionUUID->"42c1fc16-0e5f-41fe-a121-059bcb0ae8f5",
 CellID->250084041],
Cell[117200, 2408, 779, 19, 42, "Output",ExpressionUUID->"9b1911fa-04e3-4a2b-8c9b-5c0facd46fbf",
 CellID->492845518]
}, Open  ]],
Cell[CellGroupData[{
Cell[118016, 2432, 571, 13, 48, "Input",ExpressionUUID->"bf3a987c-80d0-4b8b-a212-2d080fdd9fc8",
 CellID->19996617],
Cell[118590, 2447, 1418, 41, 42, "Output",ExpressionUUID->"8458685e-c4b4-4507-ae5e-dea869c6b9fe",
 CellID->110414119]
}, Open  ]],
Cell[120023, 2491, 1991, 47, 87, "Input",ExpressionUUID->"88e24816-ffb2-4079-a291-81884a57391a",
 CellID->981741212],
Cell[CellGroupData[{
Cell[122039, 2542, 519, 11, 86, "Input",ExpressionUUID->"a976b893-bf63-4991-9884-6c1717087d22",
 CellID->173915885],
Cell[122561, 2555, 6265, 199, 121, "Output",ExpressionUUID->"65136e8f-e398-4a35-aff1-51d31c171299",
 CellID->582569298]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128875, 2760, 197, 3, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[129075, 2765, 222, 3, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[129300, 2770, 218, 3, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[129543, 2777, 349, 6, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[129895, 2785, 419, 10, 41, "Output",ExpressionUUID->"eed77647-941e-44e5-938f-5ebf7f026647",
 CellTags->"ExampleInput",
 CellID->26902839]
}, Open  ]],
Cell[130329, 2798, 186, 2, 35, "Text",ExpressionUUID->"f7478052-0b91-4a50-b5a3-2e75e6aba399",
 CellID->204485247],
Cell[CellGroupData[{
Cell[130540, 2804, 273, 5, 28, "Input",ExpressionUUID->"52831f50-6c51-46f3-b7b5-2d89f64da953",
 CellID->102840374],
Cell[130816, 2811, 22007, 431, 96, "Output",ExpressionUUID->"61075fa0-4daf-451d-acc1-097122dd6c3e",
 CellID->720031]
}, Open  ]],
Cell[CellGroupData[{
Cell[152860, 3247, 286, 5, 28, "Input",ExpressionUUID->"c42bf711-820b-48de-a441-6ba51b436c05",
 CellID->791993303],
Cell[153149, 3254, 408, 9, 44, "Output",ExpressionUUID->"f756639e-5b41-476a-8d4f-fc3a6ffd6122",
 CellID->825771876]
}, Open  ]],
Cell[CellGroupData[{
Cell[153594, 3268, 287, 5, 28, "Input",ExpressionUUID->"c59eda2c-9d63-4e60-9cb3-e7936ef3be8d",
 CellID->414648637],
Cell[153884, 3275, 239, 5, 38, "Output",ExpressionUUID->"ead7ec83-9e7f-4a42-9910-ebcffb04565f",
 CellID->480440853]
}, Open  ]],
Cell[CellGroupData[{
Cell[154160, 3285, 284, 5, 28, "Input",ExpressionUUID->"091d1725-b7ad-4460-8dab-8351753754eb",
 CellID->60658887],
Cell[154447, 3292, 735, 16, 45, "Output",ExpressionUUID->"c0e220bd-ca63-4352-9709-e1a998d61e59",
 CellID->542983757]
}, Open  ]],
Cell[155197, 3311, 689, 17, 67, "Input",ExpressionUUID->"ddab1933-6f67-4c02-ac80-39eef6a0c04f",
 CellID->483012643],
Cell[CellGroupData[{
Cell[155911, 3332, 291, 5, 28, "Input",ExpressionUUID->"ffb295f4-efc7-47e3-b513-e873559d7ca1",
 CellID->27579095],
Cell[156205, 3339, 198, 3, 32, "Output",ExpressionUUID->"00410cde-b091-4d6c-99f4-1c501b047754",
 CellID->7079227]
}, Open  ]],
Cell[CellGroupData[{
Cell[156440, 3347, 439, 9, 67, "Input",ExpressionUUID->"5b2ee54c-b59e-4321-94ea-d808c7c1c70f",
 CellID->79630526],
Cell[156882, 3358, 1961, 49, 69, "Output",ExpressionUUID->"3f63fd93-e253-4e46-8ea2-1a64973400ab",
 CellID->243462640]
}, Open  ]],
Cell[CellGroupData[{
Cell[158880, 3412, 1251, 28, 162, "Input",ExpressionUUID->"68d28ed6-af03-4930-b71d-8f046b256c1f",
 CellID->5758660],
Cell[160134, 3442, 119610, 2400, 624, "Output",ExpressionUUID->"75b5f3e6-160e-4048-b2bf-1078c8d11a66",
 CellID->1865023]
}, Open  ]],
Cell[CellGroupData[{
Cell[279781, 5847, 358, 7, 28, "Input",ExpressionUUID->"3981b1ce-6cd6-4a98-9fa2-47858d297b84",
 CellID->374394923],
Cell[280142, 5856, 2190, 55, 71, "Output",ExpressionUUID->"7b6c1ed9-14bb-4274-a778-45508bdc3265",
 CellID->330054452]
}, Open  ]],
Cell[282347, 5914, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[282445, 5917, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]]
}, Open  ]]
}
]
*)

