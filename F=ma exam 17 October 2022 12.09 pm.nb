(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    228693,       4348]
NotebookOptionsPosition[    110047,       2076]
NotebookOutlinePosition[    222635,       4222]
CellTagsIndexPosition[    222432,       4213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Working through the American Association of Physics Teacher's 2011 F=ma exam\
\>", "Title",
 CellChangeTimes->{{3.8750113122633576`*^9, 3.8750113365028753`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Cullen", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.8750113401123466`*^9, 3.8750113431752586`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Problem #1", "Section",
 CellChangeTimes->{{3.875011354799266*^9, 3.8750113662395077`*^9}},
 CellID->627868314,ExpressionUUID->"9952e69f-1ff1-46f0-b93a-e36b077bffca"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
O3/z8x2+h/H8G2prTVPsM8DtqOC26YfyL+CyMx5RR0nzfit9becHY6/Y+cRa
GWfg0ya4ksEYSb2kgNdz5/VwUZMema26vRuv79WyGNFzxoqoHCS+Y3A7QiqK
1yhL13SRmeyrBDx20EFt9T2y8djj7qXz/nUg2nATuxfNO++c4VWbD/GzrmSm
XzprErZczhY9HgLrUxat8ta29aqnY4X7/1PpZhvWKzjmYgS/S0EHa773mYfL
k5pll92odXc1cQoXw9p4J41dsXjr4Dbvca/j38FABqKNCMo3Sld1QsdzrI3c
qlfkZ3bQoYWTO+MnvDW83r3GxRSh5VhvVlC5xK6aWLS+8vTcdtSH62IVcE62
zLr+B+EYuYl94NPVfvahNfyreGiFiJ0HMLIH7ywpH+L9m/cNI4mXFJW03F/x
T63kBZ83vErWkNjBvylGf+2ts8kkcCkbsdvQSEOCrkslb9szz2+oyalZx7Lr
a9r7ivSC1nHULWPWlpKYKHfRlNl6M+Uj89tzlKjaRlr+uHs5vzZCRh+fxmtZ
P19MumVNzIK4OoRFr3XZhecHHRycZFLgBx3czc/lXt2EN18+Amqq0lULfyBk
sRpiZwP/Y3KnfNpEHgBCzbmidjZ9WHDYk8l3H/H6MCI3Lq4eEJt5vof4oENe
9lhEm4iaX1whWgmj7HC37HcUv/VuMb9eYBftUNdw3tVmMSsuH17FYrQ+3CNJ
6yy+xGGkoyjYLTI7l+5X2HarajHJ6F3k+yGc9w9h1huiCy9WG4qMxp7byK6Q
udeA2TFUnBGeYJ3MbwnXlI0xz56YPIn+Rah5hoV8ppip7jyXKDTydybdnCD2
6VXIxLPLChuuPOUPNx1PM1NRvVHCz0eMVwG3E7hVA0bltsaE/lX9wKBjIt/R
PrJ7enr6C+dnLM9uO15q16MqMVEHi9HudRCncuqxIIlZ0x9etwluWiIfnhop
K5jmcHMri9YY5JkxgYhfcXXQ8cprv6BFmG8l6cjK7TFw8I/Oqu0cpSHUqSn+
fv6QoIPdmTTkl0QB+mBj7gv+bWzm3EjSRXm8Zfzf/D1n9gYfl9O4mskrodTm
IO8ETtZFqAXXN0vvtS0S5DsWrcxBnd1YjKw6RsYrn0Mb5HaZ2JPisqq6RmhM
6tQ0+rln0Yfqc/Pf8HeHNki5pChzJmPpSNbQ95gfaszPa+YlCmN+NO7iBrUz
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
    "], {{0, 173.9782527184102}, {797.1503562054744, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{797.1503562054744, 173.9782527184102},
  PlotRange->{{0, 797.1503562054744}, {0, 173.9782527184102}}]], "Input",
 CellID->212968093,ExpressionUUID->"229b9189-6885-404e-a75f-32107bfe6a4d"],

Cell[TextData[{
 "We have the average velocity which we name ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["v", "_"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5ba09af2-9ceb-41b2-8bc6-8528e2991d02"],
 "."
}], "Text",
 CellChangeTimes->{{3.875011376055541*^9, 3.8750113900638885`*^9}},
 CellID->143109431,ExpressionUUID->"2e5cf91e-98cd-4cfd-9ede-d2adb7a20aea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   OverscriptBox["v", "_"], "=", 
   TemplateBox[{"17.5", 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"h\""}], 
     "kilometers per hour", 
     FractionBox["\"Kilometers\"", "\"Hours\""]},
    "Quantity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.875011391267419*^9, 3.875011395139183*^9}, 
   3.875011433889946*^9},
 CellLabel->"In[4]:=",
 CellID->42039440,ExpressionUUID->"8a3bd2b1-a38b-4483-9789-f22bbbc15e12"],

Cell["\<\
We have the time stopped which is 20 minutes. We will s for this quantity \
variable.\
\>", "Text",
 CellChangeTimes->{{3.8750114019842033`*^9, 3.8750114222089863`*^9}},
 CellID->201421124,ExpressionUUID->"b3b9d832-2030-4d8a-8207-643ff59812ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   TemplateBox[{"20", "\"min\"", "minutes", "\"Minutes\""},
    "Quantity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.875011423082837*^9, 3.8750114293372536`*^9}},
 CellLabel->"In[2]:=",
 CellID->71618934,ExpressionUUID->"061e9e71-5877-46cd-aad1-112b4166347b"],

Cell["We have the cyclists speed which we name c.", "Text",
 CellChangeTimes->{{3.875011449936754*^9, 3.87501146034551*^9}},
 CellID->26772973,ExpressionUUID->"826019a2-fcf0-4a0d-999e-34816e8031ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   TemplateBox[{"22", 
     RowBox[{
      "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"h\""}], 
     "kilometers per hour", 
     FractionBox["\"Kilometers\"", "\"Hours\""]},
    "Quantity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.875011461348833*^9, 3.8750114673856606`*^9}},
 CellLabel->"In[7]:=",
 CellID->18719899,ExpressionUUID->"c0f28fc3-7dcf-42ad-97d4-31d9441386f0"],

Cell[TextData[{
 "We can use the equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "=", 
    RowBox[{
     OverscriptBox["v", "_"], "t"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "adbd7421-e2bc-4c06-87b9-a59e6905ee04"],
 " to find the distance."
}], "Text",
 CellChangeTimes->{{3.8750114727295055`*^9, 3.875011499786353*^9}},
 CellID->138601629,ExpressionUUID->"a7bc4939-68eb-4757-8196-0eb4c2eeef1e"],

Cell["We can solve for the time now.", "Text",
 CellChangeTimes->{{3.875011501914705*^9, 3.8750115058819985`*^9}},
 CellID->63492435,ExpressionUUID->"b24af248-f5b6-4b3f-88ab-ddf431b6c3cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    OverscriptBox["v", "_"], "==", 
    FractionBox[
     RowBox[{"c", " ", "t"}], 
     RowBox[{"s", "+", "t"}]]}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.875011510781359*^9, 3.8750115364676547`*^9}},
 CellLabel->"In[8]:=",
 CellID->713269602,ExpressionUUID->"6bfd7631-b1f8-41ab-b658-7ecb743d744c"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 8, 1, 33275504462993777011, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8750115373316317`*^9},
 CellLabel->"During evaluation of In[8]:=",
 CellID->342123661,ExpressionUUID->"a351d156-90ce-465d-8dd0-98f0c625f879"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", 
    TemplateBox[{"4666.666666666667`", "\"s\"", "seconds", "\"Seconds\""},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8750115373604455`*^9},
 CellLabel->"Out[8]=",
 CellID->259623945,ExpressionUUID->"05b4b49d-2cff-498e-8d2b-53cb897ff52d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{
   RowBox[{
    OverscriptBox["v", "_"], 
    RowBox[{"(", 
     RowBox[{"s", "+", "t"}], ")"}]}], "/.", 
   RowBox[{"First", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       OverscriptBox["v", "_"], "==", 
       FractionBox[
        RowBox[{"c", " ", "t"}], 
        RowBox[{"s", "+", "t"}]]}], ",", "t"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.875011542765587*^9, 3.87501158570043*^9}},
 CellLabel->"In[12]:=",
 CellID->614030663,ExpressionUUID->"512763c5-0d97-408b-9dc6-a1863096cf38"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 12, 4, 33275504462993777011, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.875011557261574*^9, 3.875011596086681*^9}},
 CellLabel->"During evaluation of In[12]:=",
 CellID->66728271,ExpressionUUID->"03e6b759-d324-4788-8c13-621578460fc7"],

Cell[BoxData[
 TemplateBox[{"28.518518518518523`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.875011557273884*^9, 3.8750115960984735`*^9}},
 CellLabel->"Out[12]=",
 CellID->612738351,ExpressionUUID->"2c945c8c-6f60-4cec-b511-2f51fec211e7"]
}, Open  ]],

Cell["The answer is 28.5185km.", "Text",
 CellChangeTimes->{{3.875011599444425*^9, 3.875011605357174*^9}},
 CellID->58038683,ExpressionUUID->"153c8926-e1c6-469f-9e5d-45a070b35fe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "StringTemplate", "[", 
   "\"\<The cyclist biked <* QuantityForm[#,\\\"Abbreviation\\\"] *>.\>\"", 
   "]"}], "[", "d", "]"}]], "Input",
 CellChangeTimes->{{3.875011607198584*^9, 3.875011641245783*^9}, {
  3.875011694143691*^9, 3.8750117233839474`*^9}},
 CellLabel->"In[17]:=",
 CellID->307634299,ExpressionUUID->"e757fbd8-19c8-4f5f-a0ab-f1d267719600"],

Cell[BoxData["\<\"The cyclist biked 28.5185\[InvisibleSpace] km.\"\>"], \
"Output",
 CellChangeTimes->{
  3.8750116416974077`*^9, {3.8750116949934273`*^9, 3.8750117238659534`*^9}},
 CellLabel->"Out[17]=",
 CellID->457808490,ExpressionUUID->"806f13cc-5854-486a-a0d6-d4f4ca85d6fa"]
}, Open  ]],

Cell["The closest answer is A).", "Text",
 CellChangeTimes->{{3.875011733015484*^9, 3.8750117414868517`*^9}},
 CellID->307471050,ExpressionUUID->"81320f42-189d-4e6d-86b8-89e976d31997"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem #5", "Section",
 CellChangeTimes->{{3.8750119196110086`*^9, 3.875011921395045*^9}, 
   3.875012469238413*^9},
 CellID->743554474,ExpressionUUID->"696c8f78-07ab-4d25-86c9-ea755f45cd25"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
r6ZZyKFmwpEUidX4jRfzBEeeMa+iwFf1mWNj1YG2d6K7xXyU1/tU97rWCuPq
+yAzDc1LJcIVn/G006rq1zIxVypQVD2cI8E0TOQv3OnXN1apmNx8LZo7o+nx
NhUtp2z6ohQDp1NrGc4tObJ6Q8xUV7vzhgF6voOBisEDkXfGTJTeXkc8ni7l
ODnE+Nb2Ksn7rKE6QXmVc75gDZS/OiGq6uEqzFP1SJQ2ItcJ4/AHfzPijvk2
kQdOq/9edSXNaxmwhJt65Uut4tlqHA7NyoQ996pZyFzeJ0Z8NMEzCA9R1cRu
9tm5jHA4aS7OjX940zY0LXd1JkpurVNZ4z7vqRWr7tHWFZq2L3krsAsb+7CK
wci9ordC/3rFXLbIwZmVx2JRs5hfBukhC0fVS3X40dyLK9UOxfO2e/5T4X1s
s4GxXQ5P1rMaAh7lzPVu8VxQe4rmKkE5WV0Bu1VW3Hgm6Cb0zPMklXmjjxhc
9lvPrYJxBP5vr51ErfVH7pCjn1d2jExDDDodwzlxhnKsssnRFtPvKDsJqtZR
cxsh6R/fdAwyJQ2C41cFdHajz87l6hssb1Disiu7hpgcBn2cCffegsu6Klsd
i4RV451ygl1raLqFYqqmvsXCyS86u6ZjmIkYQND8Cql6qS7EfH5VV0f6qKeA
teULbtODDfl5zfy1LPb0cNzZ5QYn4nlxDTMCcNltXiYEvcNRQlfljn9824rs
k8LPWrSb4KeUHEd4tR6se57/jj9Cc5gDSee0VE9kzpoGU9WLZCo1Fv33Ipvk
DpyJigfOT4QiisPm9SZsN+B9Ba05FHNOSUQDkQzVR0EBAcBj3niHGjEkULBf
83fgWIWLbJ6eYZbeWbdC51LxBKoR8FQ9bGHqY5Qzm78MLqc/+ACBZOQm+rSA
y+mm7iFobffmfVqQqucyR/q/jIsMXZNJZ4lEWMr+gA317vF2FT3zCNGt8iNJ
p5cro7wSHz/x9FsfE4LquXDRzfDj8aeIK9bermPO4F8VAzcxu8nbZBnhUMK8
nfOpp1SVea+6xb+KAq8z7rx038nKVGujZczn+RaWqkV5clrtWrqcqp54PGN0
Lg2rL/yAioqZW73oRJvVFbhHhWDu9W5RioHTqXV2eAsXrHmdetVDZKLF6Q49
oK5scNotHNnQyPsXSfOn+CS+ldy/Dw21tQ6IaSPWl1QrHeVN9rn8mYcsqn6z
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
LXkJSUkpqYlxSQUd0/wCfalOpgWFhgT7eVNTa4fF1Cp7rDWHRiV7k6lkSkhi
9SBcHGi4MdPfbusKVcLmawGRURGRMRkNPwTVnVP1XM7n10kJycmpqUmJCXEF
3Qz4KudzZWpiUkpKYvyzqn6UKnA+BfxN0DsY/lXEeMOJJ5erbAt8g/pQg9ma
E0z1cne9G14/weyrSo2kBft6UVOrB9jI6yjfZD0Np/l5+4a//IAxKRgvvWvh
WMCY+8NkZ0F0WGRMXHR0TGx6SjA1q4vNs+37+FsOIS9aOtrbO9qas+47p/7r
DjMDAAAAAAAAAOSB0fR457qb1Uz0qxDj1f3LT3mqlfHyxio1FSMy5i6b8YTT
pHNhfbLIRza95rHZ+nNBLYh6hUYKbm7b45j/HYKGu6oL4+/u1VTW2ePegBzw
nGqPstRbbmzvGZPX8OUn/MWR/BuHHF7wNvCzR1/fNVl7IeydsEDM3jQ7w01X
4tp4uneymnJwv2MBHRrraWooDziuSdjnW1zfUF/f2Ppl9pGCyFo99KOrtsD/
9Go1lZ3u2S1DLF7JWpMvGmqb34ot70JZH+ey6u5tUta3iBbd5T6WZrVcyeB+
4TRqvb91VGa6mWmpHqHEB0YV9cGZTHWFmsOTpcwcml9WzySyUT/RSn/rxewf
KHaczLu+z6NUKOqhTyn2tpR3/Jy40++Dj+4i17LgWUzWlbVqfykRZv+tWH2r
BqN9AQAAAAAAAAD/DcZz7NaYUrox9suPvbx7J0awjj9eemedMmG3SxWGrGcW
Oq3d44x1VZTJ0ruGOtu9hGc4WT3BZmomoa38QkCfsy9vJO2jNcHydbzK90ZI
9ZhQ4U6UwWVQPUppZ/NTRllo6l0r4+laLqc31IK09ngsf7MJl9Xgaoic8H3P
FlRTR/W41B040+2+e4irHxQL3mPDZXeEuIR9wDojzKy4uUZJ/2isqAKnZ1gv
V9K89ZyB/h14dlT7wIigeTa09edsFt7/f3t3/g5V+8cB/E9JlqQsFapHJbSq
b6VFlmypqWyFhCyJVoSS7IUs2WWP8tCCKCFFWVosleVhJoaZzpzjazdmYdSj
1PN+XXNdMXOW++iX9/nM577PNonlG9zLxs5JtkYdkF1mU8R3W0DSs613na2Y
zOfM1GPKVjGTVfiOJI+A+TyzAQAAAADmzKcYw5X7wtoEV9h7sx0t4xoZXxnD
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
5rIYNwuniAh7DTnz+6O16kGiNsLcJvzNrAr2VH/jXS9HN6/rwf5ebvaXMl73
Tr89h/4q0cvlgs/161d9r1wKLGoWlrj/BRSn/qqOSWLrdDcq3+hdjPEU35lp
tVL2UAbvHw8AAAAA4Kdi1gYYGYfzJOX+hlhT5UXbbbM+T32fZJRf3CYtvXQi
1Q9S7GovHVpai6hJmyI/JZqr04JrR3Mx633MQTWTlPdCdyc+5ztt13RJbRwY
2pdojD+57X82uf3Ctv5hAzV++ofvdIkW0sne8gvbVcxu1aJSDwAAAAC/FD39
+AbHjB7utyh2rd+uxUtX2z3sEbBDd6HTetnJVD84yGm6qa9zrlzEZMt47Lxe
3iyfMfFGX7atsoZVFkPQxhSnJdpUcZPtva8jv5L9RadVFm+0zv4q2rlmj112
aY9D6j+ibEqxGuOsDZzv1M7dLQYAAAAAgCiIzuQjKuZ5UyZ7kp/vWiiJSezy
KP8maBeK9fTMVkuuVD/I/himu9ahWKR0y3rguEphszfXZFTOmwCtpbIWDwTN
1O0r81AXX3WhaGDyLQ5n7vpvhi7NbdeJ+yJMfaUGGuLPOEaWDRf1WfWlz9rm
sCkIAAAAAGB6PTnW63XCp053pacck5MUUzyTPyBkp948H79nrMnfKfaLcxs0
RJkxSnE+XN8tsWJf2CeuM3bcMZYR3xRQxd+bz37iprpY0jCti/NPQ2nBg9KG
9v5pW2NYrzID/bwuuLuEPetlNZck3QwJvOrll1TaRgwvR1mVHhkWcs37alj+
OyFr/TCKXHTt8piTb/S9yYsKvXk7JirqdnRKYqBfev3wIKn+t7GnbYPuVdfV
1ta9rkw/65r0Z00YBgAAAIDfCrv80mZNh0LuOE4RLy9vFJcU3ygoZgvDiDso
ezi0ecZoS7HL3VQXKupGcTeu9yTTZMSUzt7nvYmgyNbg/ZLSsuZhyYFhqSWv
akpjnHQN7FPeswaFIL7UFaed05KX1PONDbj1oHnouvrrg7Vl1c6nZYZcS2/s
G+7qv0NT3GiV0S1grH05p3ZdLJoI9eSHREtz35rRYVEDbwP1t/uUsQfJjnTr
vxYtEJMYfy1Zdfqp0CEBAAAAAMy1/jRzBX3fWu74TrGeuqiISYrvuFkvelcJ
677DXztcS2Ys1lOsJ46rxRT1o7lDNT31iIyY3OlsJu/GI/cXUjIqJ2PHJtNS
7BpPTZl9F8qEfYswhFnmoSYhdyj41bexg9R5b5NYvsG9bGyhHbI16oDsMpsi
vkOQ9GzrXWcrJvM5M/WYslXMZBW+I8kjQNTZAwAAAAAAP01XlMGSQ1Nr7BSn
3vd/EpLis1qDnV16TkPteK4Iqb7ESUVMUTeyk7dWL++cw1erJ157bpWQktCO
mRwg6779ShnZY3nCW9+Z5efUJdR8xuM3xXnnryWpapU7cfSuBNOli2j8y+i0
p1oYXqzgmkpAVFzRlJFea2TvG5NRXN/O4jDpDNTkAQAAAGC+ITsi9GVMgz9O
LcqzHrqskVogdzKlW8hu7MrbUc+m5NuhVK++3jJr5lRP1HhuFl+hHc7dV98Z
f1Bm4ZpLT3gTM8VpCdwnIS1rUTCZwNklHuqLxCdDO7+hVK8huTWwhhg/yFCq
l5p4aNTgaKqX4kv1ZEfs4X3BNVOajqiBxtSzB9TlJIc7bSQU9ZxS3yHVAwAA
AMC805dAk9W98oqngb6vwnOzhJiaVbbgp0OR7XGXAt5O2YeVf2rllqn9+UL0
3DkkI7/Zi3sNnIagPYvF90ULeLbU0GGVFi8xy5/7VP+tLfqwjn/jlCFwPr//
ONwVRDA+vixK8DXftETGOODNzJcIAAAAAPBTsR65rt/hUswbkcnOnFOqMtK7
IwQ9M5ZVH3E5pHbqB8zko7IG196K0IjPaQjdr6Bo+2iy3Yb9+My6ZZs8J49I
EBPH6bhrrijJHfhHO3Bo2YIW0h8byvekek5jmOHR4HdTx0+PO26ZO3ki8kOk
vuqRtJkvEQAAAADg5/ocb7rWKJa/1YZi1oSarFbadPr+x6mtNu1PrrsGVk0t
4lPEG5/tq90LppnDOonoyLJate7yk7FUTbGrL21WtIz5MJqomVXX98gv3nnm
Uf/YMMrcNZZZxLSONuxQrKpLW6R3uRXzTqzlwix1V5OcXCeT4jT67ZDaaPdg
ItW33zFeKnU4h+sQFKfpuo5RfAvPsjj0aJPltLCG8ahPtsUcMvCqFuUaAQAA
AAB+JnZTkLbKqSeC8jjFbnlw3fJ/f6kfOnMz5/Gz8qLMWP8zdvaB5R28i0IS
nQmmyrRsYW34vMgvj7wN9tulVnV87apNc9U1cs7+NB6dB16HG65eoXu5dCKE
f61LPKlt4JlUWlP96Jat1l7L6Hqhmb73UbCd2Z51y5bKb9pv4RL2tKcq1slS
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
AAAAAMAf4//J+Opy
    "], {{0, 164.97937757780278`}, {757.4053243344582, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{757.4053243344582, 164.97937757780278`},
  PlotRange->{{0, 757.4053243344582}, {0, 164.97937757780278`}}]], "Input",
 CellID->74227303,ExpressionUUID->"d4e3fb99-f2f5-4c9c-8a0d-fa183ea6c1d6"],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    RowBox[{"m", "\[CenterDot]", 
     FractionBox[
      SuperscriptBox["v", "2"], "r"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "aac899f5-f786-4e3a-9b91-29ee7cd4b8e6"],
 ". We also use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "=", 
    FractionBox[
     RowBox[{"G", "\[CenterDot]", 
      SubscriptBox["m", "1"], "\[CenterDot]", 
      SubscriptBox["m", "2"]}], 
     SuperscriptBox["r", "2"]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4dd91700-de22-40af-a80e-0d651f598e9a"],
 "."
}], "Text",
 CellChangeTimes->{{3.875011929403181*^9, 3.8750119944448643`*^9}},
 CellID->23481574,ExpressionUUID->"7f17ee30-a62f-4d35-a515-e03cc878b8ff"],

Cell["\<\
We will use the approximate value for the distance from Earth to the Sun.\
\>", "Text",
 CellChangeTimes->{{3.875012039957732*^9, 3.8750120542147627`*^9}},
 CellID->386341421,ExpressionUUID->"69bd7760-94e4-4694-a297-36428b74a3a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  TemplateBox[{"1.5*^8", "\"km\"", "kilometers", "\"Kilometers\""},
   "Quantity"]}]], "Input",
 CellChangeTimes->{{3.8750120564331665`*^9, 3.8750120594383326`*^9}},
 CellLabel->"In[23]:=",
 CellID->128439433,ExpressionUUID->"a62931eb-57eb-4d1e-9559-b6180e221f7b"],

Cell[BoxData[
 TemplateBox[{"1.5`*^8", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8750120678934174`*^9, 3.8750121624452496`*^9},
 CellLabel->"Out[23]=",
 CellID->173607952,ExpressionUUID->"36a3ac96-6e3d-48fa-a192-db286c4be9b7"]
}, Open  ]],

Cell["\<\
I'm curious what the right SI prefix is to express this large distance. \
Sometimes UnitSimplify will work.\
\>", "Text",
 CellChangeTimes->{{3.87501209167848*^9, 3.8750121182230096`*^9}},
 CellID->573981839,ExpressionUUID->"0535b6e8-542e-4695-a56d-376695694e31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", "d", "]"}]], "Input",
 CellChangeTimes->{{3.8750120684809833`*^9, 3.875012070526725*^9}},
 CellLabel->"In[19]:=",
 CellID->129662362,ExpressionUUID->"13fe0c00-a3f5-4ffc-9332-c872c8e56f4b"],

Cell[BoxData[
 TemplateBox[{
  "1.0026880683402668`", "\"au\"", "astronomical units", 
   "\"AstronomicalUnit\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.875012070832775*^9},
 CellLabel->"Out[19]=",
 CellID->149901727,ExpressionUUID->"a49e250e-5f76-4da6-b822-1904d6e9a1b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"d", ",", "\"\<Megameters\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8750120730974464`*^9, 3.8750120779026976`*^9}},
 CellLabel->"In[20]:=",
 CellID->749148820,ExpressionUUID->"6d88d531-30c8-4521-9dd7-747615c089bf"],

Cell[BoxData[
 TemplateBox[{"150000.`", "\"Mm\"", "megameters", "\"Megameters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.875012078143328*^9},
 CellLabel->"Out[20]=",
 CellID->214245323,ExpressionUUID->"46ba40d1-02bb-40f7-a011-8a615b2cd073"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{"d", ",", "\"\<Gigameters\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8750120730974464`*^9, 3.8750120839592795`*^9}},
 CellLabel->"In[21]:=",
 CellID->286673712,ExpressionUUID->"4f528f8d-8412-49c7-b002-2837aa795469"],

Cell[BoxData[
 TemplateBox[{"150.`", "\"Gm\"", "gigameters", "\"Gigameters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8750120843134*^9},
 CellLabel->"Out[21]=",
 CellID->127676115,ExpressionUUID->"085ee2de-5a58-4713-a79b-db2afd2ae2e8"]
}, Open  ]],

Cell["Define d in terms of gigameters as d=150Gm.", "Text",
 CellChangeTimes->{{3.875012127359192*^9, 3.875012141143462*^9}},
 CellID->7140843,ExpressionUUID->"0710ab99-009a-4eae-a73f-6213af78c789"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"150", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Gm\"", "gigameters", 
      "\"Gigameters\""},
     "Quantity"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8750121426822147`*^9, 3.875012157576183*^9}},
 CellLabel->"In[24]:=",
 CellID->360578427,ExpressionUUID->"cf8cb438-cd33-4bd8-bf94-dcee1b8e4767"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[<|"query" -> "Earth mass", "boxes" -> RowBox[{
          TemplateBox[{"\"Earth\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
            "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
           "Entity"], "[", 
          TemplateBox[{"\"mass\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
            "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
           "EntityProperty"], "]"}], "allassumptions" -> {}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.7027768`7.298362409668283, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], 
     FractionBox[
      SuperscriptBox["v", "2"], "d"]}], "==", 
    RowBox[{
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"G\"", Italic, StripOnInput -> False], 
       "Newtonian gravitational constants", "\"GravitationalConstant\""},
      "Quantity"], 
     TemplateBox[<|"query" -> "mass of Earth", "boxes" -> RowBox[{
          TemplateBox[{"\"Earth\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
            "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
           "Entity"], "[", 
          TemplateBox[{"\"mass\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
            "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
           "EntityProperty"], "]"}], "allassumptions" -> {}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.6138072`7.239576971925323, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], 
     TemplateBox[<|"query" -> "mass of the Sun", "boxes" -> RowBox[{
          TemplateBox[{"\"Sun\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
            "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, "Entity"], 
          "[", 
          TemplateBox[{"\"mass\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Star\"", ",", "\"Mass\""}], "]"}], 
            "\"EntityProperty[\\\"Star\\\", \\\"Mass\\\"]\""}, 
           "EntityProperty"], "]"}], "allassumptions" -> {}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.6941092`7.292972794248649, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"]}]}], ",", "v"}], "]"}]], "Input",
 CellChangeTimes->{{3.8750119959995337`*^9, 3.875012032637576*^9}, {
  3.8750121680648527`*^9, 3.8750122013210397`*^9}},
 CellLabel->"In[25]:=",
 CellID->92315837,ExpressionUUID->"4ec79828-b880-4bd0-9cca-1ff132654b85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v", "\[Rule]", 
     TemplateBox[{
       RowBox[{"-", "4.461739299953532`3.35061491207214*^15"}], 
       RowBox[{
         SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
         "\[InvisibleSpace]", "\"s\""}], "meters squared per second", 
       FractionBox[
        SuperscriptBox["\"Meters\"", "2"], "\"Seconds\""]},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", "\[Rule]", 
     TemplateBox[{"4.461739299953532`3.35061491207214*^15", 
       RowBox[{
         SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/\"", 
         "\[InvisibleSpace]", "\"s\""}], "meters squared per second", 
       FractionBox[
        SuperscriptBox["\"Meters\"", "2"], "\"Seconds\""]},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8750122022873244`*^9},
 CellLabel->"Out[25]=",
 CellID->146065850,ExpressionUUID->"ee86b3a6-97c3-459e-964c-09bb07535b4f"]
}, Open  ]],

Cell["Add the assumption velocity is not negative.", "Text",
 CellChangeTimes->{{3.875012210473237*^9, 3.875012220625778*^9}},
 CellID->21197662,ExpressionUUID->"57c7a02a-6a1d-4242-8898-30044270e750"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[<|"query" -> "Earth mass", "boxes" -> RowBox[{
          TemplateBox[{"\"Earth\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
            "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
           "Entity"], "[", 
          TemplateBox[{"\"mass\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
            "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
           "EntityProperty"], "]"}], "allassumptions" -> {}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.7027768`7.298362409668283, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], 
     FractionBox[
      SuperscriptBox["v", "2"], "d"]}], "==", 
    RowBox[{
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"G\"", Italic, StripOnInput -> False], 
       "Newtonian gravitational constants", "\"GravitationalConstant\""},
      "Quantity"], 
     TemplateBox[<|"query" -> "mass of Earth", "boxes" -> RowBox[{
          TemplateBox[{"\"Earth\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
            "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
           "Entity"], "[", 
          TemplateBox[{"\"mass\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
            "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
           "EntityProperty"], "]"}], "allassumptions" -> {}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.6138072`7.239576971925323, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], 
     FractionBox[
      TemplateBox[<|"query" -> "mass of the Sun", "boxes" -> RowBox[{
           TemplateBox[{"\"Sun\"", 
             RowBox[{"Entity", "[", 
               RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
             "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, "Entity"], 
           "[", 
           TemplateBox[{"\"mass\"", 
             RowBox[{"EntityProperty", "[", 
               RowBox[{"\"Star\"", ",", "\"Mass\""}], "]"}], 
             "\"EntityProperty[\\\"Star\\\", \\\"Mass\\\"]\""}, 
            "EntityProperty"], "]"}], "allassumptions" -> {}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.6941092`7.292972794248649, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], 
      SuperscriptBox["d", "2"]]}]}], ",", "v", ",", 
   TemplateBox[{},
    "PositiveReals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8750119959995337`*^9, 3.875012032637576*^9}, {
  3.8750121680648527`*^9, 3.8750122408265023`*^9}, {3.875012389621438*^9, 
  3.8750123920081315`*^9}},
 CellLabel->"In[31]:=",
 CellID->1000441859,ExpressionUUID->"cfe3a9f9-8c59-49dc-8682-74f5485040cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"v", "\[Rule]", 
    TemplateBox[{"29744.9286663568788304074`3.6107790026422206", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.875012229598507*^9, 3.8750122413505754`*^9}, 
   3.875012392489051*^9},
 CellLabel->"Out[31]=",
 CellID->92391263,ExpressionUUID->"71f370c2-713c-4dac-951c-4cda52fee9d3"]
}, Open  ]],

Cell["\<\
Now compute the acceleration. I use l for acceleration because a is a vowel \
and l is in the word acceleration.\
\>", "Text",
 CellChangeTimes->{{3.8750122671379423`*^9, 3.875012303586658*^9}},
 CellID->52762262,ExpressionUUID->"4e11a26f-0034-4d96-bb7b-d36540966529"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["v", "2"], "d"], "/.", 
   RowBox[{"First", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        TemplateBox[<|"query" -> "Earth mass", "boxes" -> RowBox[{
             TemplateBox[{"\"Earth\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
               "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
              "Entity"], "[", 
             TemplateBox[{"\"mass\"", 
               RowBox[{"EntityProperty", "[", 
                 RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
               "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
              "EntityProperty"], "]"}], "allassumptions" -> {}, 
          "assumptions" -> {}, "open" -> {1, 2}, 
          "querystate" -> {
           "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
            0.7027768`7.298362409668283, "Messages" -> {}}, "contextinfo" -> 
          Automatic, "version" -> 5|>,
         "LinguisticAssistantTemplate"], 
        FractionBox[
         SuperscriptBox["v", "2"], "d"]}], "==", 
       RowBox[{
        TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1], 
          StyleBox["\"G\"", Italic, StripOnInput -> False], 
          "Newtonian gravitational constants", "\"GravitationalConstant\""},
         "Quantity"], 
        TemplateBox[<|"query" -> "mass of Earth", "boxes" -> RowBox[{
             TemplateBox[{"\"Earth\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
               "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
              "Entity"], "[", 
             TemplateBox[{"\"mass\"", 
               RowBox[{"EntityProperty", "[", 
                 RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
               "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
              "EntityProperty"], "]"}], "allassumptions" -> {}, 
          "assumptions" -> {}, "open" -> {1, 2}, 
          "querystate" -> {
           "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
            0.6138072`7.239576971925323, "Messages" -> {}}, "contextinfo" -> 
          Automatic, "version" -> 5|>,
         "LinguisticAssistantTemplate"], 
        FractionBox[
         TemplateBox[<|"query" -> "mass of the Sun", "boxes" -> RowBox[{
              TemplateBox[{"\"Sun\"", 
                RowBox[{"Entity", "[", 
                  RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
                "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, 
               "Entity"], "[", 
              TemplateBox[{"\"mass\"", 
                RowBox[{"EntityProperty", "[", 
                  RowBox[{"\"Star\"", ",", "\"Mass\""}], "]"}], 
                "\"EntityProperty[\\\"Star\\\", \\\"Mass\\\"]\""}, 
               "EntityProperty"], "]"}], "allassumptions" -> {}, 
           "assumptions" -> {}, "open" -> {1, 2}, 
           "querystate" -> {
            "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
             0.6941092`7.292972794248649, "Messages" -> {}}, "contextinfo" -> 
           Automatic, "version" -> 5|>,
          "LinguisticAssistantTemplate"], 
         SuperscriptBox["d", "2"]]}]}], ",", "v", ",", 
      TemplateBox[{},
       "PositiveReals"]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.875012274804799*^9, 3.875012319614401*^9}, 
   3.8750123977344756`*^9},
 CellLabel->"In[32]:=",
 CellID->14537228,ExpressionUUID->"2b21f807-2da4-494b-8038-32fdd8df774e"],

Cell[BoxData[
 TemplateBox[{"0.0058984052091110614`3.3097490069782394", 
   RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
   FractionBox["\"Meters\"", 
    SuperscriptBox["\"Seconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.875012320156827*^9, 3.8750123988467865`*^9},
 CellLabel->"Out[32]=",
 CellID->11451360,ExpressionUUID->"fd6b89b5-f28b-4243-9a56-76891965dd3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSimplify", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.875012322359454*^9, 3.875012324483264*^9}},
 CellLabel->"In[33]:=",
 CellID->90435974,ExpressionUUID->"18cc95d1-848b-40ac-abbf-d4d59ca65fef"],

Cell[BoxData[
 TemplateBox[{"0.0058984052091110614`3.3097490069782394", 
   RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
     SuperscriptBox["\"s\"", "2"]}], "meters per second squared", 
   FractionBox["\"Meters\"", 
    SuperscriptBox["\"Seconds\"", "2"]]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8750123247880325`*^9, 3.875012404107671*^9},
 CellLabel->"Out[33]=",
 CellID->61875961,ExpressionUUID->"5d0daa33-c1b0-4138-8a2d-c7d39be5915d"]
}, Open  ]],

Cell[TextData[{
 "It looks like the closest answer is B, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.006", "m", " ", 
    SuperscriptBox["s", 
     RowBox[{"-", "2"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9170f3e9-bde7-4906-8d22-e6df7430cb25"],
 "."
}], "Text",
 CellChangeTimes->{{3.87501241575686*^9, 3.875012440725641*^9}},
 CellID->143349560,ExpressionUUID->"232a5588-15ae-4fac-bc4f-93107ab8513f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c45f2dc0-da06-4c9a-9f5d-6c0cc61a449a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Abstract"->{
  Cell[1145, 36, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "AuthorName"->{
  Cell[874, 29, 268, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Examples"->{
  Cell[580, 22, 291, 5, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "TemplateCell"->{
  Cell[1145, 36, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "Your Essay Title"->{
  Cell[580, 22, 291, 5, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Abstract", 221537, 4190},
 {"AuthorName", 221717, 4194},
 {"Examples", 221876, 4198},
 {"TemplateCell", 222059, 4202},
 {"Your Essay Title", 222245, 4206}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 291, 5, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[874, 29, 268, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1145, 36, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1314, 42, 172, 2, 67, "Section",ExpressionUUID->"9952e69f-1ff1-46f0-b93a-e36b077bffca",
 CellID->627868314],
Cell[1489, 46, 39255, 647, 186, "Input",ExpressionUUID->"229b9189-6885-404e-a75f-32107bfe6a4d",
 CellID->212968093],
Cell[40747, 695, 386, 10, 35, "Text",ExpressionUUID->"2e5cf91e-98cd-4cfd-9ede-d2adb7a20aea",
 CellID->143109431],
Cell[41136, 707, 490, 13, 36, "Input",ExpressionUUID->"8a3bd2b1-a38b-4483-9789-f22bbbc15e12",
 CellID->42039440],
Cell[41629, 722, 254, 5, 35, "Text",ExpressionUUID->"b3b9d832-2030-4d8a-8207-643ff59812ea",
 CellID->201421124],
Cell[41886, 729, 305, 7, 36, "Input",ExpressionUUID->"061e9e71-5877-46cd-aad1-112b4166347b",
 CellID->71618934],
Cell[42194, 738, 198, 2, 35, "Text",ExpressionUUID->"826019a2-fcf0-4a0d-999e-34816e8031ea",
 CellID->26772973],
Cell[42395, 742, 440, 11, 36, "Input",ExpressionUUID->"c0f28fc3-7dcf-42ad-97d4-31d9441386f0",
 CellID->18719899],
Cell[42838, 755, 434, 12, 35, "Text",ExpressionUUID->"a7bc4939-68eb-4757-8196-0eb4c2eeef1e",
 CellID->138601629],
Cell[43275, 769, 188, 2, 35, "Text",ExpressionUUID->"b24af248-f5b6-4b3f-88ab-ddf431b6c3cb",
 CellID->63492435],
Cell[CellGroupData[{
Cell[43488, 775, 372, 10, 45, "Input",ExpressionUUID->"6bfd7631-b1f8-41ab-b658-7ecb743d744c",
 CellID->713269602],
Cell[43863, 787, 465, 9, 28, "Message",ExpressionUUID->"a351d156-90ce-465d-8dd0-98f0c625f879",
 CellID->342123661],
Cell[44331, 798, 334, 8, 41, "Output",ExpressionUUID->"05b4b49d-2cff-498e-8d2b-53cb897ff52d",
 CellID->259623945]
}, Open  ]],
Cell[CellGroupData[{
Cell[44702, 811, 565, 17, 45, "Input",ExpressionUUID->"512763c5-0d97-408b-9dc6-a1863096cf38",
 CellID->614030663],
Cell[45270, 830, 488, 9, 28, "Message",ExpressionUUID->"03e6b759-d324-4788-8c13-621578460fc7",
 CellID->66728271],
Cell[45761, 841, 286, 5, 39, "Output",ExpressionUUID->"2c945c8c-6f60-4cec-b511-2f51fec211e7",
 CellID->612738351]
}, Open  ]],
Cell[46062, 849, 180, 2, 35, "Text",ExpressionUUID->"153c8926-e1c6-469f-9e5d-45a070b35fe6",
 CellID->58038683],
Cell[CellGroupData[{
Cell[46267, 855, 390, 9, 28, "Input",ExpressionUUID->"e757fbd8-19c8-4f5f-a0ab-f1d267719600",
 CellID->307634299],
Cell[46660, 866, 279, 5, 32, "Output",ExpressionUUID->"806f13cc-5854-486a-a0d6-d4f4ca85d6fa",
 CellID->457808490]
}, Open  ]],
Cell[46954, 874, 184, 2, 35, "Text",ExpressionUUID->"81320f42-189d-4e6d-86b8-89e976d31997",
 CellID->307471050]
}, Open  ]],
Cell[CellGroupData[{
Cell[47175, 881, 198, 3, 67, "Section",ExpressionUUID->"696c8f78-07ab-4d25-86c9-ea755f45cd25",
 CellID->743554474],
Cell[47376, 886, 44535, 734, 177, "Input",ExpressionUUID->"d4e3fb99-f2f5-4c9c-8a0d-fa183ea6c1d6",
 CellID->74227303],
Cell[91914, 1622, 779, 24, 42, "Text",ExpressionUUID->"7f17ee30-a62f-4d35-a515-e03cc878b8ff",
 CellID->23481574],
Cell[92696, 1648, 240, 4, 35, "Text",ExpressionUUID->"69bd7760-94e4-4694-a297-36428b74a3a3",
 CellID->386341421],
Cell[CellGroupData[{
Cell[92961, 1656, 298, 6, 35, "Input",ExpressionUUID->"a62931eb-57eb-4d1e-9559-b6180e221f7b",
 CellID->128439433],
Cell[93262, 1664, 274, 5, 42, "Output",ExpressionUUID->"36a3ac96-6e3d-48fa-a192-db286c4be9b7",
 CellID->173607952]
}, Open  ]],
Cell[93551, 1672, 273, 5, 35, "Text",ExpressionUUID->"0535b6e8-542e-4695-a56d-376695694e31",
 CellID->573981839],
Cell[CellGroupData[{
Cell[93849, 1681, 232, 4, 28, "Input",ExpressionUUID->"13fe0c00-a3f5-4ffc-9332-c872c8e56f4b",
 CellID->129662362],
Cell[94084, 1687, 281, 7, 39, "Output",ExpressionUUID->"a49e250e-5f76-4da6-b822-1904d6e9a1b9",
 CellID->149901727]
}, Open  ]],
Cell[CellGroupData[{
Cell[94402, 1699, 273, 5, 28, "Input",ExpressionUUID->"6d88d531-30c8-4521-9dd7-747615c089bf",
 CellID->749148820],
Cell[94678, 1706, 249, 5, 39, "Output",ExpressionUUID->"46ba40d1-02bb-40f7-a011-8a615b2cd073",
 CellID->214245323]
}, Open  ]],
Cell[CellGroupData[{
Cell[94964, 1716, 273, 5, 28, "Input",ExpressionUUID->"4f528f8d-8412-49c7-b002-2837aa795469",
 CellID->286673712],
Cell[95240, 1723, 244, 5, 39, "Output",ExpressionUUID->"085ee2de-5a58-4713-a79b-db2afd2ae2e8",
 CellID->127676115]
}, Open  ]],
Cell[95499, 1731, 198, 2, 35, "Text",ExpressionUUID->"0710ab99-009a-4eae-a73f-6213af78c789",
 CellID->7140843],
Cell[95700, 1735, 386, 10, 35, "Input",ExpressionUUID->"cf8cb438-cd33-4bd8-bf94-dcee1b8e4767",
 CellID->360578427],
Cell[CellGroupData[{
Cell[96111, 1749, 3186, 67, 50, "Input",ExpressionUUID->"4ec79828-b880-4bd0-9cca-1ff132654b85",
 CellID->92315837],
Cell[99300, 1818, 985, 24, 44, "Output",ExpressionUUID->"ee86b3a6-97c3-459e-964c-09bb07535b4f",
 CellID->146065850]
}, Open  ]],
Cell[100300, 1845, 200, 2, 35, "Text",ExpressionUUID->"57c7a02a-6a1d-4242-8898-30044270e750",
 CellID->21197662],
Cell[CellGroupData[{
Cell[100525, 1851, 3355, 72, 68, "Input",ExpressionUUID->"cfe3a9f9-8c59-49dc-8682-74f5485040cd",
 CellID->1000441859],
Cell[103883, 1925, 546, 13, 44, "Output",ExpressionUUID->"71f370c2-713c-4dac-951c-4cda52fee9d3",
 CellID->92391263]
}, Open  ]],
Cell[104444, 1941, 278, 5, 35, "Text",ExpressionUUID->"4e11a26f-0034-4d96-bb7b-d36540966529",
 CellID->52762262],
Cell[CellGroupData[{
Cell[104747, 1950, 3604, 76, 68, "Input",ExpressionUUID->"2b21f807-2da4-494b-8038-32fdd8df774e",
 CellID->14537228],
Cell[108354, 2028, 473, 9, 43, "Output",ExpressionUUID->"fd6b89b5-f28b-4243-9a56-76891965dd3f",
 CellID->11451360]
}, Open  ]],
Cell[CellGroupData[{
Cell[108864, 2042, 229, 4, 28, "Input",ExpressionUUID->"18cc95d1-848b-40ac-abbf-d4d59ca65fef",
 CellID->90435974],
Cell[109096, 2048, 473, 9, 43, "Output",ExpressionUUID->"5d0daa33-c1b0-4138-8a2d-c7d39be5915d",
 CellID->61875961]
}, Open  ]],
Cell[109584, 2060, 435, 12, 35, "Text",ExpressionUUID->"232a5588-15ae-4fac-bc4f-93107ab8513f",
 CellID->143349560]
}, Open  ]]
}, Open  ]]
}
]
*)

