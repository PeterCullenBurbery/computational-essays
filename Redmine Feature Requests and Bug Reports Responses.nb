(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    991210,      22115]
NotebookOptionsPosition[    862670,      19618]
NotebookOutlinePosition[    976315,      21790]
CellTagsIndexPosition[    975924,      21776]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Redmine Feature Requests and Bug Reports Responses", "Title",
 CellChangeTimes->{{3.874137322927231*^9, 3.874137336207168*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Cullen", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.874137343984863*^9, 3.8741373484001675`*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["\<\
I respond to feature requests I created on Redmine. I also take a look at bug \
reports on Redmine I created.\
\>", "Abstract",
 CellChangeTimes->{{3.8741373705563917`*^9, 3.8741373888556113`*^9}},
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
FixedPoint documentation output is different from Mathematica output\
\>", "Section",
 CellChangeTimes->{{3.8741374113058195`*^9, 3.8741374211330166`*^9}},
 CellID->16145119,ExpressionUUID->"47356c06-8ce7-4ae6-88ab-e9c79b99ab83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "=", "0.1"}], "}"}], ",", 
   RowBox[{"FixedPoint", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"xy", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", " ", "\[Epsilon]"}], ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Epsilon]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "\[Epsilon]"}]}]}], "}"}]}], "}"}], ".", 
         "xy"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], "]"}]}], "]"}], "\n", 
 RowBox[{"{", 
  RowBox[{"1.", ",", "0."}], "}"}]}], "Input",
 CellChangeTimes->{{3.8741374310295205`*^9, 3.8741374310295205`*^9}},
 CellLabel->"In[1]:=",
 CellID->14910494,ExpressionUUID->"a5f8db25-d795-4a36-8488-b66916f05d57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`*^-323"}], "}"}]], "Output",
 CellChangeTimes->{3.874137431642686*^9},
 CellLabel->"Out[1]=",
 CellID->470178914,ExpressionUUID->"a6e75738-6972-4e32-8035-ef63858746ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.8741374317051682`*^9},
 CellLabel->"Out[2]=",
 CellID->458537866,ExpressionUUID->"6c3a86a6-199e-4c5a-a7e7-3c77559472d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", "=", "0.1"}], "}"}], ",", 
    RowBox[{"FixedPoint", "[", 
     RowBox[{
      RowBox[{"Function", "[", 
       RowBox[{"xy", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"2", " ", "\[Epsilon]"}], ",", "0"}], "}"}], "+", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Epsilon]"}]}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "\[Epsilon]"}]}]}], "}"}]}], "}"}], ".", 
          "xy"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.0"}], "}"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874137448903167*^9, 3.8741374537921906`*^9}},
 CellLabel->"In[3]:=",
 CellID->335710690,ExpressionUUID->"8c81bfab-5457-4ade-bdfd-2f18b3960a71"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     StyleBox["\<\"1.\"\>",
      ShowStringCharacters->False],
     1.,
     AutoDelete->True], ",", 
    InterpretationBox[
     StyleBox[
      RowBox[{"\<\"9.88131\"\>", "\[Times]", 
       SuperscriptBox["10", "\<\"-324\"\>"]}],
      ShowStringCharacters->False],
     1.*^-323,
     AutoDelete->True]}], "}"}],
  ScientificForm]], "Output",
 CellChangeTimes->{3.874137454464055*^9},
 CellLabel->"Out[3]//ScientificForm=",
 CellID->23903360,ExpressionUUID->"71a2bfbb-dd3d-42b4-bcb3-449c6b515e4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", "=", "0.1"}], "}"}], ",", 
   RowBox[{"FixedPoint", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"xy", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "\[Epsilon]"}], ",", "0"}], "}"}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "-", 
              RowBox[{"2", "\[Epsilon]"}]}]}], "}"}]}], "}"}], ".", 
         "xy"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->22022376,ExpressionUUID->"5397cd05-c20c-4091-a578-b410e0e617b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "1.`*^-323"}], "}"}]], "Output",
 CellChangeTimes->{3.8741374934203367`*^9},
 CellLabel->"Out[4]=",
 CellID->603734638,ExpressionUUID->"674b2b3b-f9b0-4d04-a151-26f24e3c110b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GraphQ", "Section",
 CellChangeTimes->{{3.8741418297515287`*^9, 3.8741418305484657`*^9}},
 CellID->951792585,ExpressionUUID->"16d63e6b-e6d1-44b5-8b02-6aede28ca19d"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.8741418820129023`*^9, 3.874141882497286*^9}},
 CellLabel->"In[74]:=",
 CellID->329019088,ExpressionUUID->"9976d276-561c-462c-bca1-4a9918f22ce1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomWeightedMixedGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
      "randomFunction_", ",", 
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"replaceCount", ",", "randomGraph", ",", "randomEdgeWeights"}], 
      "}"}], " ", ",", 
     RowBox[{
      RowBox[{"randomGraph", "=", 
       RowBox[{"RandomGraph", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vertices", ",", "edges"}], "}"}], ",", "options"}], 
        "]"}]}], ";", 
      RowBox[{"replaceCount", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
      RowBox[{"randomGraph", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{"Fold", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"EdgeAdd", "[", 
            RowBox[{
             RowBox[{"EdgeDelete", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], ",", 
             RowBox[{
              RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
              RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
          "randomGraph", ",", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
            "replaceCount"}], "]"}]}], "]"}], "]"}]}], ";", 
      RowBox[{"Graph", "[", 
       RowBox[{"randomGraph", ",", 
        RowBox[{"EdgeWeight", "->", 
         RowBox[{"(", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", 
              RowBox[{"randomFunction", "[", "]"}]}], "&"}], ",", 
            RowBox[{"EdgeList", "[", "randomGraph", "]"}]}], "]"}], ")"}]}]}],
        "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8741418765753913`*^9, 3.874141937971235*^9}, 
   3.8741424157306347`*^9},
 CellID->514806475,ExpressionUUID->"2bb972f6-866a-427c-af91-56c6eeb82390"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomWeightedMixedGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
   RowBox[{"RandomInteger", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874141833566192*^9, 3.8741418484151683`*^9}},
 CellLabel->"In[3]:=",
 CellID->273456737,ExpressionUUID->"fdb0bc35-c86e-4882-8618-2f04da267f2c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJylUdsNgDAI5HQFF3AlR+gC7v+nJjQ8CoYEEgI5Dq7Qc9zX2Iloe/1gFwNU
PgO4AoV60312hmnAN4YJugAW8ljLvPjPWA+iLd4zc8N5MM7mN0CRhUC2KieV
ietyKO0LUOVSMCHn5TqJ+opHzFAoAusPegBf3gIk
      "], {EdgeWeight -> {
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[], 
         1[]}, GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQfWJ3ofY17c/2ry42nXMpfGqfLnFE42rme3sdyY7V
29O/2xdZ6IppLPhjf31BIfucK3/sWeL6rrxhY3ZQrkxhmP/pk73Ken6/x++/
2HcVBIiz3WFwmPdlsv30qP/262yePzvu9tLe82mpaaXQB/uOqzI/UlZdsM95
zW28Vf6nvYN35P9F7o/sLZhqn/NIcjq0T7hZ1HL+mz0DFGgs4bjVceuPfTKv
yuObgd/sHZo1hSVOfLW/VyuU8PbRA3uzEg8NX9ar9m5xX1mfx7M6pNuaf9wj
9NRelrO177wbk4PkpzNGVR9+2s903/nzH+c/uLlPRE592Cf8314soUR7Yd83
+7Lzm17te/DY3kZ247uOlG/2f2cUl02U+2QvZH4wR/XbB/ttfe8Kn7r9tj96
sjRm26MP9ptspiUvVfltf2fX098Cs5gdADN5ma8=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{1, 16}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{1, 17}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{1, 18}, 0.031215627232034734`]}, 
         ArrowBox[{1, 11}, 0.031215627232034734`], 
         ArrowBox[{1, 12}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 8}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 11}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 16}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 19}, 0.031215627232034734`]}, 
         ArrowBox[{2, 3}, 0.031215627232034734`], 
         ArrowBox[{2, 18}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.031215627232034734`]}, 
         ArrowBox[{2, 20}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{2, 17}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{2, 12}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 11}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 19}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{3, 20}, 0.031215627232034734`]}, 
         ArrowBox[{3, 5}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{4, 16}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{4, 18}, 0.031215627232034734`]}, 
         ArrowBox[{4, 20}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{4, 19}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{5, 16}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{5, 17}, 0.031215627232034734`]}, 
         ArrowBox[{5, 11}, 0.031215627232034734`], 
         ArrowBox[{5, 14}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{6, 15}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.031215627232034734`]}, 
         ArrowBox[{6, 8}, 0.031215627232034734`], 
         ArrowBox[{6, 13}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.031215627232034734`]}, 
         ArrowBox[{6, 19}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.031215627232034734`]}, 
         ArrowBox[{7, 19}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{7, 17}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{7, 11}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{8, 12}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{8, 13}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{8, 17}, 0.031215627232034734`]}, 
         ArrowBox[{8, 11}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{9, 13}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{9, 14}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{10, 18}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.031215627232034734`]}, 
         ArrowBox[{11, 19}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{11, 16}, 0.031215627232034734`]}, 
         ArrowBox[{12, 18}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{13, 16}, 0.031215627232034734`]}, 
         ArrowBox[{13, 19}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{14, 19}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{14, 20}, 0.031215627232034734`]}, 
         ArrowBox[{14, 15}, 0.031215627232034734`], 
         ArrowBox[{14, 16}, 0.031215627232034734`], 
         {Arrowheads[0.], ArrowBox[{15, 18}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{16, 18}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{17, 19}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{17, 20}, 0.031215627232034734`]}, 
         {Arrowheads[0.], ArrowBox[{18, 19}, 0.031215627232034734`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.031215627232034734], DiskBox[2, 0.031215627232034734], 
         DiskBox[3, 0.031215627232034734], DiskBox[4, 0.031215627232034734], 
         DiskBox[5, 0.031215627232034734], DiskBox[6, 0.031215627232034734], 
         DiskBox[7, 0.031215627232034734], DiskBox[8, 0.031215627232034734], 
         DiskBox[9, 0.031215627232034734], DiskBox[10, 0.031215627232034734], 
         DiskBox[11, 0.031215627232034734], DiskBox[12, 0.031215627232034734],
          DiskBox[13, 0.031215627232034734], 
         DiskBox[14, 0.031215627232034734], DiskBox[15, 0.031215627232034734],
          DiskBox[16, 0.031215627232034734], 
         DiskBox[17, 0.031215627232034734], DiskBox[18, 0.031215627232034734],
          DiskBox[19, 0.031215627232034734], 
         DiskBox[20, 0.031215627232034734]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8741418488836327`*^9, 3.874141899809985*^9},
 CellLabel->"Out[3]=",
 CellID->63023862,ExpressionUUID->"14d472b0-c8d5-4df7-9b7a-5c2b33f2e923"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"RandomWeightedMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"RandomInteger", "[", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8741419024193697`*^9, 3.8741419041071415`*^9}},
 CellLabel->"In[4]:=",
 CellID->397827056,ExpressionUUID->"65ffeac4-3f41-43e1-b118-f86bbf66bf75"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 4, 7, 9, 10, 16, 20, 23, 25, \
26, 28, 29, 30, 32, 32, 32, 32, 32, 32, 32, 32}, {{3}, {12}, {20}, 
     {8}, {18}, {10}, {4}, {14}, {16}, {13}, {11}, {8}, {19}, {7}, {15}, \
{17}, {8}, {17}, {20}, {12}, {11}, {20}, {17}, {16}, {18}, {10}, {17}, 
     {19}, {20}, {16}, {15}, {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
  SparseArray[Automatic, {20, 20}, 0, {1, {{0, 4, 7, 11, 15, 18, 21, 25, 28, \
31, 32, 35, 37, 39, 42, 45, 45, 47, 48, 48, 48}, {{13}, {15}, 
     {17}, {19}, {3}, {9}, {11}, {7}, {8}, {10}, {20}, {11}, {15}, {17}, \
{19}, {13}, {18}, {20}, {9}, {11}, {18}, {9}, {13}, {18}, {19}, {11}, 
     {19}, {20}, {11}, {12}, {18}, {18}, {12}, {15}, {18}, {14}, {17}, {14}, \
{16}, {16}, {17}, {18}, {16}, {18}, {20}, {18}, {20}, {19}}}, {1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1}}]}, {EdgeWeight -> {0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], \
0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 
    0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], \
0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 
    0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], \
0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 0[], 
    0[]}, GraphLayout -> {\"Dimension\" -> 2}}]\
\>", "Output",
 CellChangeTimes->{3.874141904427421*^9},
 CellLabel->"Out[4]//InputForm=",
 CellID->964831862,ExpressionUUID->"8f27840a-4b76-4832-8ab4-59be2012f764"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RandomMixedGraph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
       RowBox[{"options", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], " ", ",", 
      RowBox[{
       RowBox[{"randomGraph", "=", 
        RowBox[{"RandomGraph", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vertices", ",", "edges"}], "}"}], ",", "options"}], 
         "]"}]}], ";", 
       RowBox[{"replaceCount", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
       RowBox[{"randomGraph", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EdgeAdd", "[", 
             RowBox[{
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
               RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
           "randomGraph", ",", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
             "replaceCount"}], "]"}]}], "]"}], "]"}]}]}]}], "]"}]}], ";"}], 
  "\n"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->854423488,ExpressionUUID->"f3f3437f-7d75-4e31-8f4a-2be93204d02c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomMixedGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "80"}], "}"}], ",", "0.4"}], "]"}]], "Input",
 CellChangeTimes->{{3.874142187277899*^9, 3.8741421934805365`*^9}},
 CellLabel->"In[2]:=",
 CellID->33945273,ExpressionUUID->"799019a3-f7b3-4b8d-aa2a-6f4bf25c5636"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKAYBRgZMgEuMEU0OF5scgM9scswiRR017aaGflLM
Rnc3ul/wmUNLd1IL0MKN2OKannE2nAG1/DrUwoza7h1q/gcBXGUToTKLkHnU
yqOEyjxccpSUqcSEAS5xUspzYgA2s6llJjXMIzZM8Kkl1lxq1vfE2kmsPmrW
T/So3ygF1G5/oZszWjYPTgAAs9ACMA==
      "]]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA5a/+a8Oq+D/FFrV1aQ30P5HjzAkO
y+I/JkjmEpXI4T8q6t+pjfsAQPZH0YQvh/g/AAAAAAAAAADo12/45C73P+NX
QZjEw+w/8o6Cd2Dl/D9R2GSP62j8P7hwn5F5cvA/pI23FvWD9D/Uzjw9qHT5
PzIdwWzhI94/xj0dA5DFAUCsXntO11XiP29ySO/G8vE/WE6rwvBdyj++ZZeV
kK7vPwJLZCS2peA/yb7qlGwk+T/dN+C21/L+P5qz6g6KsNI/MIGoZtt8BUCk
na/rBQr8P4ogmcL5mu0/VyJopFa86T++XCvc/Xv0P/GBpHCpWOw/G3FfxMKG
4D9o6tRkWgLBP6r7xx8nxvY/AAAAAAAAAABz2AQZSFr1PwYpNumJnQFATOci
3c8b9j/av56x3NLcP1YrjWZ3hu0/gfq7UZEu9j+Iu6an
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 11}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 18}, 0.027944328736424218`]}, 
         ArrowBox[{1, 20}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{1, 17}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 13}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 12}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.027944328736424218`]}, 
         ArrowBox[{2, 16}, 0.027944328736424218`], 
         ArrowBox[{2, 17}, 0.027944328736424218`], 
         ArrowBox[{2, 20}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{3, 13}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{3, 19}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{3, 20}, 0.027944328736424218`]}, 
         ArrowBox[{3, 15}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{4, 10}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{4, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{4, 16}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{4, 20}, 0.027944328736424218`]}, 
         ArrowBox[{4, 5}, 0.027944328736424218`], 
         ArrowBox[{4, 8}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.027944328736424218`]}, 
         ArrowBox[{4, 11}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.027944328736424218`]}, 
         ArrowBox[{5, 7}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{6, 13}, 0.027944328736424218`]}, 
         ArrowBox[{6, 10}, 0.027944328736424218`], 
         ArrowBox[{6, 18}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{6, 17}, 0.027944328736424218`]}, 
         ArrowBox[{6, 19}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.027944328736424218`]}, 
         ArrowBox[{7, 8}, 0.027944328736424218`], 
         ArrowBox[{7, 9}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{8, 15}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{8, 18}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{8, 20}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{9, 11}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{9, 16}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{9, 19}, 0.027944328736424218`]}, 
         ArrowBox[{9, 10}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{10, 20}, 0.027944328736424218`]}, 
         ArrowBox[{10, 11}, 0.027944328736424218`], 
         ArrowBox[{10, 16}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{11, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{11, 15}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{11, 18}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.027944328736424218`]}, 
         ArrowBox[{11, 19}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{12, 14}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{12, 16}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{14, 19}, 0.027944328736424218`]}, 
         ArrowBox[{14, 18}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{15, 17}, 0.027944328736424218`]}, 
         {Arrowheads[0.], ArrowBox[{15, 19}, 0.027944328736424218`]}, 
         ArrowBox[{15, 16}, 0.027944328736424218`], 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.027944328736424218`]}, 
         ArrowBox[{17, 20}, 0.027944328736424218`], 
         ArrowBox[{18, 20}, 0.027944328736424218`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.027944328736424218], DiskBox[2, 0.027944328736424218], 
         DiskBox[3, 0.027944328736424218], DiskBox[4, 0.027944328736424218], 
         DiskBox[5, 0.027944328736424218], DiskBox[6, 0.027944328736424218], 
         DiskBox[7, 0.027944328736424218], DiskBox[8, 0.027944328736424218], 
         DiskBox[9, 0.027944328736424218], DiskBox[10, 0.027944328736424218], 
         DiskBox[11, 0.027944328736424218], DiskBox[12, 0.027944328736424218],
          DiskBox[13, 0.027944328736424218], 
         DiskBox[14, 0.027944328736424218], DiskBox[15, 0.027944328736424218],
          DiskBox[16, 0.027944328736424218], 
         DiskBox[17, 0.027944328736424218], DiskBox[18, 0.027944328736424218],
          DiskBox[19, 0.027944328736424218], 
         DiskBox[20, 0.027944328736424218]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.874142193933238*^9, 3.874142991052911*^9},
 CellLabel->"Out[2]=",
 CellID->497384528,ExpressionUUID->"74e702f8-6ecd-40dc-aabc-311bb62c2ab3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomMixedGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
   RowBox[{"EdgeWeight", "->", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "11"}], "}"}], ",", "80"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.874142187277899*^9, 3.874142209365545*^9}},
 CellLabel->"In[7]:=",
 CellID->191294787,ExpressionUUID->"b8cd8871-1c5a-4315-a467-5928cd8dcbc4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKMYHGKEYmzgDFjlCfGoAfGbicys97MelnlruwqWH
FuEMM5cRjU+JWfj4pOil1C34zBno9EJIP63impqAVvl+sMUNLcFgdhs2QEy5
zIjGJkYvPjPIUUMsILXso0VdSKqdpJpLTDiSai618ikpaYISs8l1L6F2ETXj
htIwpWX7gFZmUjMNUdOdtCyXh1qZTw0AAKO8AjA=
      "], {
      EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQveT2sRdfuT/bl0+RL+/keGjPkvXMIPDUT3tu04kR
PB8YHG4+WvdOKu+Z/bLW0ohLH67Z/918fPbrxUwOIftibp6x/m/PAAUaIU9+
6vm+t69nSWCfLvXB/kCQwXHNpcvtVe6ph2iasjikRZzU1Jn9wf7It5v5S5dc
sXcXmMT3f/Ij+/gb2SpFsi/sJaOVHty9/8O+ga2M6+a7T/Z1rXMu/Gf/bK9m
NqPb+8IP+zYjm6a2yz/tt+yMS/nqyODQ4DdhOtf/avuUK/OTfkgwO+gI24gt
YHhov+WLP/OGDz/tr6a8O7n8yUf76+J3mG2lX9kbc83IWe3x0f5NcsnbGXY/
7P+siQlbpv/cPu/lbwf3qv/2QpP/yFkVvbX3LFWt/bnwg/0mHs9SobO/7V2W
b6+ZwHHP/sNWifIDzb/t170LY4lM/AH3NwBcA5l0
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{1, 10}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{1, 12}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{1, 13}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{1, 18}, 0.02674071184463772]}, 
         ArrowBox[{1, 14}, 0.02674071184463772], 
         ArrowBox[{1, 16}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{1, 9}, 0.02674071184463772]}, 
         ArrowBox[{1, 20}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{1, 8}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 7}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 9}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 10}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 16}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 18}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{2, 19}, 0.02674071184463772]}, 
         ArrowBox[{2, 4}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{3, 16}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{3, 19}, 0.02674071184463772]}, 
         ArrowBox[{3, 12}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02674071184463772]}, 
         ArrowBox[{3, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{4, 11}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{4, 15}, 0.02674071184463772]}, 
         ArrowBox[{4, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{5, 16}, 0.02674071184463772]}, 
         ArrowBox[{5, 9}, 0.02674071184463772], 
         ArrowBox[{5, 10}, 0.02674071184463772], 
         ArrowBox[{5, 15}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{6, 10}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{6, 18}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{6, 20}, 0.02674071184463772]}, 
         ArrowBox[{6, 14}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{6, 8}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{7, 14}, 0.02674071184463772]}, 
         ArrowBox[{7, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{7, 16}, 0.02674071184463772]}, 
         ArrowBox[{7, 20}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{8, 11}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{8, 20}, 0.02674071184463772]}, 
         ArrowBox[{8, 15}, 0.02674071184463772], 
         ArrowBox[{8, 19}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{9, 14}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{9, 17}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{9, 18}, 0.02674071184463772]}, 
         ArrowBox[{9, 10}, 0.02674071184463772], 
         ArrowBox[{9, 15}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{10, 16}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{10, 18}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{10, 19}, 0.02674071184463772]}, 
         ArrowBox[{10, 13}, 0.02674071184463772], 
         ArrowBox[{10, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{11, 15}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{11, 18}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{11, 19}, 0.02674071184463772]}, 
         ArrowBox[{11, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{12, 14}, 0.02674071184463772]}, 
         ArrowBox[{12, 13}, 0.02674071184463772], 
         ArrowBox[{12, 17}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{13, 16}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{14, 17}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{14, 19}, 0.02674071184463772]}, 
         ArrowBox[{14, 18}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.02674071184463772]}, 
         {Arrowheads[0.], ArrowBox[{15, 18}, 0.02674071184463772]}, 
         ArrowBox[{15, 19}, 0.02674071184463772], 
         ArrowBox[{15, 20}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{16, 17}, 0.02674071184463772]}, 
         ArrowBox[{16, 20}, 0.02674071184463772], 
         {Arrowheads[0.], ArrowBox[{17, 20}, 0.02674071184463772]}, 
         ArrowBox[{18, 19}, 0.02674071184463772]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02674071184463772], DiskBox[2, 0.02674071184463772], 
         DiskBox[3, 0.02674071184463772], DiskBox[4, 0.02674071184463772], 
         DiskBox[5, 0.02674071184463772], DiskBox[6, 0.02674071184463772], 
         DiskBox[7, 0.02674071184463772], DiskBox[8, 0.02674071184463772], 
         DiskBox[9, 0.02674071184463772], DiskBox[10, 0.02674071184463772], 
         DiskBox[11, 0.02674071184463772], DiskBox[12, 0.02674071184463772], 
         DiskBox[13, 0.02674071184463772], DiskBox[14, 0.02674071184463772], 
         DiskBox[15, 0.02674071184463772], DiskBox[16, 0.02674071184463772], 
         DiskBox[17, 0.02674071184463772], DiskBox[18, 0.02674071184463772], 
         DiskBox[19, 0.02674071184463772], 
         DiskBox[20, 0.02674071184463772]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8741422098495436`*^9},
 CellLabel->"Out[7]=",
 CellID->336613445,ExpressionUUID->"bb8837bd-47fa-4f5f-a37b-4922bc2f0e6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeWeightedGraphQ", "[", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"EdgeWeight", "->", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}], ",", "80"}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8741422118654385`*^9, 3.874142214631078*^9}},
 CellLabel->"In[8]:=",
 CellID->491104581,ExpressionUUID->"d7169efb-b091-454d-96f9-40f77b9e3f9c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8741422149433193`*^9},
 CellLabel->"Out[8]=",
 CellID->146314375,ExpressionUUID->"b6c32285-81fb-4f4c-a073-122dd833702a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"EdgeWeight", "->", 
     RowBox[{"BlockRandom", "@", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "11"}], "}"}], ",", "80"}], "]"}]}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8741422166776805`*^9, 3.874142244917651*^9}},
 CellLabel->"In[12]:=",
 CellID->288939544,ExpressionUUID->"467ce23a-5886-46e2-a25f-56026674c7c2"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 5, 7, 12, 15, 17, 19, 22, 23, \
24, 25, 25, 26, 28, 28, 28, 29, 32, 32, 32, 32}, {{20}, {5}, {16}, 
     {18}, {11}, {10}, {11}, {17}, {10}, {18}, {12}, {14}, {6}, {16}, {17}, \
{15}, {7}, {19}, {11}, {13}, {12}, {10}, {14}, {13}, {13}, {19}, 
     {16}, {18}, {19}, {20}, {19}, {18}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
  SparseArray[Automatic, {20, 20}, 0, {1, {{0, 2, 4, 8, 14, 17, 22, 25, 29, \
31, 33, 39, 42, 43, 45, 46, 46, 46, 48, 48, 48}, {{6}, {8}, {13}, 
     {16}, {6}, {7}, {8}, {15}, {7}, {9}, {12}, {14}, {15}, {20}, {6}, {9}, \
{18}, {7}, {9}, {10}, {14}, {17}, {9}, {16}, {18}, {10}, {13}, 
     {17}, {18}, {15}, {19}, {11}, {17}, {12}, {13}, {14}, {16}, {17}, {19}, \
{14}, {16}, {17}, {19}, {17}, {20}, {16}, {19}, {20}}}, {1, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, 
 {EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]\
\>", "Output",
 CellChangeTimes->{{3.87414221878614*^9, 3.8741422452298975`*^9}},
 CellLabel->"Out[12]//InputForm=",
 CellID->22341535,ExpressionUUID->"44b7ce48-acee-4312-8c1a-042680bf2c7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}], ",", "80"}], "]"}]], "Input",
 CellLabel->"In[11]:=",
 CellID->57873523,ExpressionUUID->"15a420b4-b1c5-411a-97c8-96c46c05c7f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "10", ",", "8", ",", "6", ",", "2", ",", "2", ",", "2", ",", "3", 
   ",", "1", ",", "2", ",", "9", ",", "6", ",", "2", ",", "7", ",", "2", ",", 
   "2", ",", "8", ",", "5", ",", "9", ",", "5", ",", "1", ",", "11", ",", "5",
    ",", "1", ",", "11", ",", "5", ",", "4", ",", "2", ",", "2", ",", "3", 
   ",", "10", ",", "4", ",", "7", ",", "10", ",", "8", ",", "8", ",", "11", 
   ",", "7", ",", "7", ",", "2", ",", "7", ",", "6", ",", "7", ",", "5", ",", 
   "6", ",", "2", ",", "6", ",", "4", ",", "5", ",", "6", ",", "5", ",", "9", 
   ",", "7", ",", "7", ",", "5", ",", "9", ",", "5", ",", "8", ",", "5", ",", 
   "6", ",", "1", ",", "9", ",", "10", ",", "2", ",", "5", ",", "7", ",", "3",
    ",", "8", ",", "7", ",", "7", ",", "4", ",", "9", ",", "6", ",", "6", ",",
    "4", ",", "7", ",", "5", ",", "8", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.8741422388705206`*^9},
 CellLabel->"Out[11]=",
 CellID->780708441,ExpressionUUID->"14820a20-ea74-49bf-b561-d165e35ddc49"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomMixedGraphRandomEdgeWeights", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", "threshold_", ",", 
      "randomFunction_", ",", 
      RowBox[{"options", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{"0", "<=", "threshold", "<=", "1"}]}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"replaceCount", ",", "randomGraph", ",", "randomEdgeWeights"}], 
      "}"}], " ", ",", 
     RowBox[{
      RowBox[{"randomGraph", "=", 
       RowBox[{"BlockRandom", "@", 
        RowBox[{"RandomGraph", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"vertices", ",", "edges"}], "}"}], ",", "options"}], 
         "]"}]}]}], ";", 
      RowBox[{"replaceCount", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
      RowBox[{"randomEdgeWeights", "=", 
       RowBox[{"BlockRandom", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"randomFunction", ",", "80"}], "]"}], "]"}]}], ";", 
      RowBox[{"randomGraph", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EdgeAdd", "[", 
             RowBox[{
              RowBox[{"EdgeDelete", "[", 
               RowBox[{"#1", ",", "#2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
               RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
           "randomGraph", ",", 
           RowBox[{"RandomSample", "[", 
            RowBox[{
             RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
             "replaceCount"}], "]"}]}], "]"}], ",", 
         RowBox[{"EdgeWeight", "->", "randomEdgeWeights"}]}], "]"}]}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.874142275567643*^9, 3.874142343064151*^9}, {
  3.874142389904154*^9, 3.8741424321972427`*^9}, {3.874142581865831*^9, 
  3.8741425835687437`*^9}},
 CellLabel->"In[35]:=",
 CellID->37458407,ExpressionUUID->"4c3dd8e3-a00e-4a62-8bb9-d46a4e6f9302"],

Cell[CellGroupData[{

Cell[BoxData["$RandomGeneratorState"], "Input",
 CellChangeTimes->{{3.874142360111661*^9, 3.8741423677966757`*^9}},
 CellLabel->"In[15]:=",
 CellID->42037230,ExpressionUUID->"4bf5ecbb-9f66-449e-8978-a0442ac4c24e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{0, 3, 3, 965, 200237, 0, 911, 3, 8, 20, 
      7181, 14540, 13, 3, 890665215119760, 1538891476598319390, 
      17966220438523558398, 18090758129855605711, 12011712694463806078, 
      1217670362820189375}], 55, 20, 14}, {CompressedData["
1:eJw9lUmOHUUQhluIBVuGC3CAlmKOjCXLllggIw5gRNvyxkhtS4jb82VVPjav
1VmVMfxT/fzn3+8+fPP09PTlO37evf/nl7e39//+/j3//PH5y6ePn1//evn8
9fXj61vFh9/2e9/y8+unL19f9jsRPeERtdrHROLlB07XrJUxtnJFhpTWy48c
d0l7hYY3L1gu0+vczNxz7fNlwhXzl584f06frKo2rVJ1bdH7gdd4SHDgnSmW
fXdId0uzWuLhKmvq/0pWbjKclV9j+HVBJ8KSYrNSfC2Jc2FZ9dKuslZlk1I7
rWWYcjia1m4Zs6tSdSRYWDPRxPhUXVgUCIywBSB5WVY+Gqxu2jsXO9TY454I
3MZ1apaMqO3GF0jcTJeaKbG9v/VdKCRXrzJPvR6GPFbQ5Ia2ejZ0LBA5NCyx
FcwoUZVtc0baPCh0LXqD/NhjZyioEpENli6ulpzerMykTDOStlTqXmL1tMBw
ytoIy5zWFgzJ9KwLbqCyTmuHINRTukD2ujePB91wEO4BsvCz7kowGcUWlKdI
i/TcNIzaltf4GvBDGzd88ElRX9XK+iL+0NgguJ6kw5bRCIDdhWA2EvkNKqCb
PyZaaNINEcAm6IHy2c0RLnvnKqRBPVuXAGZvhZigrXfFh8JiNcJYwKOxwCTr
EJqpWSNbfi1F46OMRJ57ft1gbd23XQ3AHgGjxMUxNMdhjXdiCyIptVxUjw3L
G5fNBjOjC6b7KC82/QoHDCuMcZ9DK00VBxkqFR29Fy7GRg3CHZQzjoHucwsw
DkEBEr2wxKnTTLxYu5uXWTzPoEn1QFaAmuwCGAeJ9p0A4dCcWBop3J2fC9MW
LCjGRCy0upUNcrbthlyb3fDqwVo5xlnO41pMN/5YbeOLOcfo5Jnr4XJ0ihiA
FQ8GeMQBVbU3fsHmhVRV5ujLFm9vPygglU5f5DwHb7XjUIZaQHI3BizbKPM2
iQXUqx6OQiY7uAz3OtKPezUyCrxHtx7QVkqeC6SXkrEYA8NtJtYRPBCQOwiU
J7ZFvG6Wk5gbhfhEMLqde0/UJJX68Id0A0C9s9x0a0hrewPN50HOsbCRalhK
dq7HcT6yJgmIV1bKIaX0IKoetnVCMBK1V0QfPyVxUoSF4GPbxjmb1ex4woCN
lrbl4m5NJjA6IQtzjopw+b0xgbZrwbG3bjndSKgCFqbccsSgOcc3jBNJFu1v
GJsQ2qfvhteVFOE5qQ5gp+8uAJkwjSVaI68622QTeBvds50/1ItcUTbZRSHC
l+/SjbQaZPDlIr5MMBtWvurgT8wI7VDNR8EftsHvMAZya384Jc5aeKOar6Bs
oWJoEP8PYdVnBA==
     "], 4, 0}}, RawArray["UnsignedInteger64",{10140831040400715922, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.874142362362404*^9, 3.874142368015427*^9}},
 CellLabel->"Out[15]=",
 CellID->39677405,ExpressionUUID->"8463647b-b991-47a1-9b19-0152536d0679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BlockRandom", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11"}], "}"}], "]"}], ",", "80"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8741423447670045`*^9, 3.8741423716560364`*^9}},
 CellLabel->"In[40]:=",
 CellID->47851711,ExpressionUUID->"9b25d4ba-e086-43a5-b41b-bc9f860d1b09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "9", ",", "9", ",", "3", ",", "6", ",", "7", ",", "4", ",", "4", 
   ",", "2", ",", "6", ",", "11", ",", "2", ",", "6", ",", "10", ",", "6", 
   ",", "11", ",", "10", ",", "3", ",", "5", ",", "8", ",", "7", ",", "6", 
   ",", "10", ",", "3", ",", "3", ",", "9", ",", "3", ",", "3", ",", "1", ",",
    "11", ",", "2", ",", "5", ",", "3", ",", "3", ",", "9", ",", "10", ",", 
   "6", ",", "8", ",", "7", ",", "7", ",", "11", ",", "5", ",", "8", ",", "3",
    ",", "5", ",", "8", ",", "6", ",", "1", ",", "7", ",", "8", ",", "5", ",",
    "8", ",", "5", ",", "7", ",", "9", ",", "7", ",", "2", ",", "9", ",", "8",
    ",", "5", ",", "5", ",", "7", ",", "11", ",", "1", ",", "11", ",", "5", 
   ",", "9", ",", "8", ",", "2", ",", "6", ",", "1", ",", "4", ",", "8", ",", 
   "8", ",", "11", ",", "3", ",", "8", ",", "4", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.874142354892643*^9, 3.8741423742029138`*^9}, 
   3.8741426008819284`*^9},
 CellLabel->"Out[40]=",
 CellID->243019735,ExpressionUUID->"00a400e0-5343-4663-86f5-d1ab9139ff9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$RandomGeneratorState"], "Input",
 CellChangeTimes->{{3.874142375234433*^9, 3.8741423768099346`*^9}},
 CellLabel->"In[17]:=",
 CellID->225520542,ExpressionUUID->"c6432b51-ff96-4931-a90e-278b8819c12b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{0, 3, 3, 965, 200237, 0, 911, 3, 8, 20, 
      7181, 14540, 13, 3, 890665215119760, 1538891476598319390, 
      17966220438523558398, 18090758129855605711, 12011712694463806078, 
      1217670362820189375}], 55, 20, 14}, {CompressedData["
1:eJw9lUmOHUUQhluIBVuGC3CAlmKOjCXLllggIw5gRNvyxkhtS4jb82VVPjav
1VmVMfxT/fzn3+8+fPP09PTlO37evf/nl7e39//+/j3//PH5y6ePn1//evn8
9fXj61vFh9/2e9/y8+unL19f9jsRPeERtdrHROLlB07XrJUxtnJFhpTWy48c
d0l7hYY3L1gu0+vczNxz7fNlwhXzl584f06frKo2rVJ1bdH7gdd4SHDgnSmW
fXdId0uzWuLhKmvq/0pWbjKclV9j+HVBJ8KSYrNSfC2Jc2FZ9dKuslZlk1I7
rWWYcjia1m4Zs6tSdSRYWDPRxPhUXVgUCIywBSB5WVY+Gqxu2jsXO9TY454I
3MZ1apaMqO3GF0jcTJeaKbG9v/VdKCRXrzJPvR6GPFbQ5Ia2ejZ0LBA5NCyx
FcwoUZVtc0baPCh0LXqD/NhjZyioEpENli6ulpzerMykTDOStlTqXmL1tMBw
ytoIy5zWFgzJ9KwLbqCyTmuHINRTukD2ujePB91wEO4BsvCz7kowGcUWlKdI
i/TcNIzaltf4GvBDGzd88ElRX9XK+iL+0NgguJ6kw5bRCIDdhWA2EvkNKqCb
PyZaaNINEcAm6IHy2c0RLnvnKqRBPVuXAGZvhZigrXfFh8JiNcJYwKOxwCTr
EJqpWSNbfi1F46OMRJ57ft1gbd23XQ3AHgGjxMUxNMdhjXdiCyIptVxUjw3L
G5fNBjOjC6b7KC82/QoHDCuMcZ9DK00VBxkqFR29Fy7GRg3CHZQzjoHucwsw
DkEBEr2wxKnTTLxYu5uXWTzPoEn1QFaAmuwCGAeJ9p0A4dCcWBop3J2fC9MW
LCjGRCy0upUNcrbthlyb3fDqwVo5xlnO41pMN/5YbeOLOcfo5Jnr4XJ0ihiA
FQ8GeMQBVbU3fsHmhVRV5ujLFm9vPygglU5f5DwHb7XjUIZaQHI3BizbKPM2
iQXUqx6OQiY7uAz3OtKPezUyCrxHtx7QVkqeC6SXkrEYA8NtJtYRPBCQOwiU
J7ZFvG6Wk5gbhfhEMLqde0/UJJX68Id0A0C9s9x0a0hrewPN50HOsbCRalhK
dq7HcT6yJgmIV1bKIaX0IKoetnVCMBK1V0QfPyVxUoSF4GPbxjmb1ex4woCN
lrbl4m5NJjA6IQtzjopw+b0xgbZrwbG3bjndSKgCFqbccsSgOcc3jBNJFu1v
GJsQ2qfvhteVFOE5qQ5gp+8uAJkwjSVaI68622QTeBvds50/1ItcUTbZRSHC
l+/SjbQaZPDlIr5MMBtWvurgT8wI7VDNR8EftsHvMAZya384Jc5aeKOar6Bs
oWJoEP8PYdVnBA==
     "], 4, 0}}, RawArray["UnsignedInteger64",{10140831040400715922, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.874142377028695*^9},
 CellLabel->"Out[17]=",
 CellID->407103618,ExpressionUUID->"5f07f96e-fcd0-4358-8f25-004c37249ba6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$RandomGeneratorState"], "Input",
 CellChangeTimes->{{3.874142436212866*^9, 3.874142436946974*^9}},
 CellLabel->"In[20]:=",
 CellID->294272086,ExpressionUUID->"94a1a0f5-fdf4-4d9b-98f4-cd7d4735bc4d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "8305913033308835694"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{0, 3, 3, 965, 200237, 0, 911, 3, 8, 20, 
      7181, 14540, 13, 3, 890665215119760, 1538891476598319390, 
      17966220438523558398, 18090758129855605711, 12011712694463806078, 
      1217670362820189375}], 55, 20, 14}, {CompressedData["
1:eJw9lUmOHUUQhluIBVuGC3CAlmKOjCXLllggIw5gRNvyxkhtS4jb82VVPjav
1VmVMfxT/fzn3+8+fPP09PTlO37evf/nl7e39//+/j3//PH5y6ePn1//evn8
9fXj61vFh9/2e9/y8+unL19f9jsRPeERtdrHROLlB07XrJUxtnJFhpTWy48c
d0l7hYY3L1gu0+vczNxz7fNlwhXzl584f06frKo2rVJ1bdH7gdd4SHDgnSmW
fXdId0uzWuLhKmvq/0pWbjKclV9j+HVBJ8KSYrNSfC2Jc2FZ9dKuslZlk1I7
rWWYcjia1m4Zs6tSdSRYWDPRxPhUXVgUCIywBSB5WVY+Gqxu2jsXO9TY454I
3MZ1apaMqO3GF0jcTJeaKbG9v/VdKCRXrzJPvR6GPFbQ5Ia2ejZ0LBA5NCyx
FcwoUZVtc0baPCh0LXqD/NhjZyioEpENli6ulpzerMykTDOStlTqXmL1tMBw
ytoIy5zWFgzJ9KwLbqCyTmuHINRTukD2ujePB91wEO4BsvCz7kowGcUWlKdI
i/TcNIzaltf4GvBDGzd88ElRX9XK+iL+0NgguJ6kw5bRCIDdhWA2EvkNKqCb
PyZaaNINEcAm6IHy2c0RLnvnKqRBPVuXAGZvhZigrXfFh8JiNcJYwKOxwCTr
EJqpWSNbfi1F46OMRJ57ft1gbd23XQ3AHgGjxMUxNMdhjXdiCyIptVxUjw3L
G5fNBjOjC6b7KC82/QoHDCuMcZ9DK00VBxkqFR29Fy7GRg3CHZQzjoHucwsw
DkEBEr2wxKnTTLxYu5uXWTzPoEn1QFaAmuwCGAeJ9p0A4dCcWBop3J2fC9MW
LCjGRCy0upUNcrbthlyb3fDqwVo5xlnO41pMN/5YbeOLOcfo5Jnr4XJ0ihiA
FQ8GeMQBVbU3fsHmhVRV5ujLFm9vPygglU5f5DwHb7XjUIZaQHI3BizbKPM2
iQXUqx6OQiY7uAz3OtKPezUyCrxHtx7QVkqeC6SXkrEYA8NtJtYRPBCQOwiU
J7ZFvG6Wk5gbhfhEMLqde0/UJJX68Id0A0C9s9x0a0hrewPN50HOsbCRalhK
dq7HcT6yJgmIV1bKIaX0IKoetnVCMBK1V0QfPyVxUoSF4GPbxjmb1ex4woCN
lrbl4m5NJjA6IQtzjopw+b0xgbZrwbG3bjndSKgCFqbccsSgOcc3jBNJFu1v
GJsQ2qfvhteVFOE5qQ5gp+8uAJkwjSVaI68622QTeBvds50/1ItcUTbZRSHC
l+/SjbQaZPDlIr5MMBtWvurgT8wI7VDNR8EftsHvMAZya384Jc5aeKOar6Bs
oWJoEP8PYdVnBA==
     "], 4, 0}}, RawArray["UnsignedInteger64",{10140831040400715922, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8741424372597275`*^9},
 CellLabel->"Out[20]=",
 CellID->283644840,ExpressionUUID->"aad7b2f3-6bf9-4f5a-9c07-630082f8a234"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomMixedGraphRandomEdgeWeights", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "11"}], "}"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8741424392438383`*^9, 3.8741424773658423`*^9}},
 CellLabel->"In[27]:=",
 CellID->182455214,ExpressionUUID->"cc82bc4f-9336-4570-b2ce-c575b68268ee"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKCYGMBKpBps6XHoZ8ajBZRYhcwipw6eWEY2m1DxC
etFpSs1CNodUs4gJF3IBpfppbR6tzB0q7qQlGEpupQYYaf5FBqSUn6SWUcSa
SaxZ2OobXOYRU28QquPILZexmUUtNdRIq+h+QuaT0hYgV81gyW/k+hWbHlrW
xejmDCbzGBmok0/QzcTHp6bZIwHQws8AriwCMA==
      "], {
      EdgeWeight -> {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, 
       GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQnXWt/+SD7Gv2e63zBS8s+2Pfx1d1uL73hT0DFJiJ
d3abm32073Zvu3rtwgd7Fe3bM5LyP9oz3tFTKfV6bF+k96n6Wvkj+6oZkQmJ
aY/smXTumj54/NOewf9X/bPmOfZ5zm0Mt/78stc8HKi8suerPUN44oboJDaH
C+pambeWfLbfIdv1QaieyUGs+WvK3J2X7BvELzue45ltH/S1T73j8y/7RatO
m3n++27/wlb9kuDXh/YeouEW00r+2VesyN24LOyv/Rn+e4q39VgcGJ1+5fdn
PLN/VOllZPrxmb3HZg121b+f7J+lr/8p+v62ve3nBW5WR97b/7hqYOd76Ki9
wnG2sMbtK+01C1dP5pjJ4LB6/2PXtLpv9hZ8P33eJ/+1577zR6Kk/Bk8HGxX
rVIpinttL+evU3/30xd7FRvF/Vcjv9kDAMjEl7Q=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.02877337894785574]}, 
         ArrowBox[{1, 10}, 0.02877337894785574], 
         ArrowBox[{1, 19}, 0.02877337894785574], 
         ArrowBox[{1, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.02877337894785574]}, 
         ArrowBox[{2, 11}, 0.02877337894785574], 
         ArrowBox[{2, 14}, 0.02877337894785574], 
         ArrowBox[{2, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.02877337894785574]}, 
         ArrowBox[{2, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.02877337894785574]}, 
         ArrowBox[{3, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.02877337894785574]}, 
         ArrowBox[{3, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 16}, 0.02877337894785574]}, 
         ArrowBox[{4, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 19}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 20}, 0.02877337894785574]}, 
         ArrowBox[{5, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{5, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 14}, 0.02877337894785574]}, 
         ArrowBox[{5, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.02877337894785574]}, 
         ArrowBox[{6, 13}, 0.02877337894785574], 
         ArrowBox[{6, 17}, 0.02877337894785574], 
         ArrowBox[{6, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 20}, 0.02877337894785574]}, 
         ArrowBox[{7, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 20}, 0.02877337894785574]}, 
         ArrowBox[{8, 13}, 0.02877337894785574], 
         ArrowBox[{9, 13}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{10, 19}, 0.02877337894785574]}, 
         ArrowBox[{10, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.02877337894785574]}, 
         ArrowBox[{11, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{12, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{12, 20}, 0.02877337894785574]}, 
         ArrowBox[{12, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{13, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{13, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.02877337894785574]}, 
         ArrowBox[{14, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{15, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.02877337894785574]}, 
         ArrowBox[{17, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.02877337894785574]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02877337894785574], DiskBox[2, 0.02877337894785574], 
         DiskBox[3, 0.02877337894785574], DiskBox[4, 0.02877337894785574], 
         DiskBox[5, 0.02877337894785574], DiskBox[6, 0.02877337894785574], 
         DiskBox[7, 0.02877337894785574], DiskBox[8, 0.02877337894785574], 
         DiskBox[9, 0.02877337894785574], DiskBox[10, 0.02877337894785574], 
         DiskBox[11, 0.02877337894785574], DiskBox[12, 0.02877337894785574], 
         DiskBox[13, 0.02877337894785574], DiskBox[14, 0.02877337894785574], 
         DiskBox[15, 0.02877337894785574], DiskBox[16, 0.02877337894785574], 
         DiskBox[17, 0.02877337894785574], DiskBox[18, 0.02877337894785574], 
         DiskBox[19, 0.02877337894785574], 
         DiskBox[20, 0.02877337894785574]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.874142451764639*^9, 3.87414249575889*^9}},
 CellLabel->"Out[28]=",
 CellID->111278949,ExpressionUUID->"1739e164-32f1-4ebe-ba0b-b86220423af1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "@", 
  RowBox[{"RandomMixedGraphRandomEdgeWeights", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11"}], "}"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8741424392438383`*^9, 3.8741424862265835`*^9}, {
  3.874142529149056*^9, 3.8741425363209305`*^9}},
 CellLabel->"In[31]:=",
 CellID->366655966,ExpressionUUID->"058b9fc2-2842-4e71-9e44-9eca6712e9c9"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 3, 8, 11, 15, 19, 23, 25, 26, \
27, 28, 29, 30, 30, 31, 31, 31, 32, 32, 32, 32}, {{10}, {19}, 
     {20}, {11}, {14}, {18}, {5}, {19}, {19}, {9}, {20}, {20}, {9}, {7}, \
{19}, {18}, {16}, {14}, {19}, {13}, {17}, {18}, {16}, {17}, {10}, 
     {13}, {13}, {15}, {15}, {17}, {20}, {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1}}], SparseArray[Automatic, {20, 20}, 0, {1, {{0, 4, 6, 12, 18, 20, 22, \
28, 31, 31, 33, 36, 38, 40, 44, 46, 47, 47, 47, 48, 48}, {{3}, 
     {5}, {14}, {15}, {6}, {15}, {5}, {6}, {10}, {15}, {17}, {18}, {5}, {6}, \
{12}, {14}, {15}, {16}, {11}, {20}, {9}, {11}, {8}, {9}, {12}, 
     {13}, {15}, {20}, {9}, {18}, {20}, {14}, {19}, {12}, {13}, {20}, {18}, \
{20}, {18}, {20}, {15}, {16}, {17}, {18}, {16}, {20}, {19}, {20}}}, 
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1}}]}, {EdgeWeight -> {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, 
  GraphLayout -> {\"Dimension\" -> 2}}]\
\>", "Output",
 CellChangeTimes->{
  3.8741424864138174`*^9, {3.8741425315081587`*^9, 3.8741425367429366`*^9}},
 CellLabel->"Out[32]//InputForm=",
 CellID->193118525,ExpressionUUID->"faa62867-79b4-4635-832e-ee2caa695234"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "@", 
  RowBox[{"RandomMixedGraphRandomEdgeWeights", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "11"}], "}"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8741424392438383`*^9, 3.8741424862265835`*^9}, {
  3.874142529149056*^9, 3.874142592835311*^9}},
 CellLabel->"In[38]:=",
 CellID->903767939,ExpressionUUID->"9fb11386-ad5c-4fc8-b29f-f91a56a8495a"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 4, 8, 11, 16, 17, 20, 23, 24, \
24, 24, 26, 27, 28, 30, 31, 31, 31, 31, 32, 32}, {{5}, {20}, {14}, 
     {3}, {5}, {11}, {14}, {6}, {18}, {20}, {5}, {20}, {14}, {16}, {7}, {5}, \
{11}, {9}, {13}, {16}, {10}, {12}, {9}, {9}, {20}, {12}, {20}, 
     {18}, {17}, {15}, {20}, {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
  SparseArray[Automatic, {20, 20}, 0, {1, {{0, 3, 6, 12, 17, 22, 25, 30, 33, \
34, 37, 39, 41, 42, 45, 46, 47, 48, 48, 48, 48}, {{10}, {15}, 
     {19}, {15}, {18}, {19}, {6}, {9}, {10}, {15}, {17}, {19}, {6}, {9}, \
{12}, {15}, {19}, {14}, {16}, {18}, {19}, {20}, {11}, {17}, {18}, {8}, 
     {13}, {15}, {17}, {20}, {13}, {18}, {20}, {13}, {14}, {15}, {19}, {13}, \
{15}, {17}, {18}, {20}, {16}, {18}, {20}, {16}, {19}, {20}}}, {1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1}}]}, {EdgeWeight -> {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
   2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, \
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, 
  GraphLayout -> {\"Dimension\" -> 2}}]\
\>", "Output",
 CellChangeTimes->{{3.874142564523551*^9, 3.8741425933506794`*^9}},
 CellLabel->"Out[39]//InputForm=",
 CellID->144810353,ExpressionUUID->"ae657f9e-a3f9-4412-93a7-d8d4e49ca3d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomInput", "[", "func_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{"func", ",", "80"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8741426095513763`*^9, 3.8741426540340347`*^9}},
 CellLabel->"In[47]:=",
 CellID->65498080,ExpressionUUID->"627f5851-a70c-406a-9def-94c1a88850ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomInput", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874142620188139*^9, 3.87414262512829*^9}},
 CellLabel->"In[48]:=",
 CellID->113417100,ExpressionUUID->"c4cba36f-802b-44ef-bc47-5ce655eeda08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.8741426254092903`*^9, 3.874142655783805*^9}},
 CellLabel->"Out[48]=",
 CellID->228247661,ExpressionUUID->"650b90c9-aad6-4ffd-acd6-506a909a38c8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"randomInput", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874142620188139*^9, 3.8741426314249945`*^9}},
 CellID->143976121,ExpressionUUID->"a1e3ed1a-f9eb-40bd-93dd-54598f42b136"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Random*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.874142793400276*^9, 3.8741427964783916`*^9}},
 CellLabel->"In[49]:=",
 CellID->91572431,ExpressionUUID->"af2bb66b-5e29-4ea5-b940-25c4ead2899a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BlockRandom\"\>", ",", "\<\"Random\"\>", 
   ",", "\<\"RandomArrayLayer\"\>", ",", "\<\"RandomChoice\"\>", 
   ",", "\<\"RandomColor\"\>", ",", "\<\"RandomComplex\"\>", 
   ",", "\<\"RandomEntity\"\>", ",", "\<\"RandomFunction\"\>", 
   ",", "\<\"RandomGeneratorState\"\>", ",", "\<\"RandomGeoPosition\"\>", 
   ",", "\<\"RandomGraph\"\>", ",", "\<\"RandomImage\"\>", 
   ",", "\<\"RandomInstance\"\>", ",", "\<\"RandomInteger\"\>", 
   ",", "\<\"RandomMixedGraph\"\>", 
   ",", "\<\"RandomMixedGraphRandomEdgeWeights\"\>", 
   ",", "\<\"RandomPermutation\"\>", ",", "\<\"RandomPoint\"\>", 
   ",", "\<\"RandomPointConfiguration\"\>", ",", "\<\"RandomPolygon\"\>", 
   ",", "\<\"RandomPolyhedron\"\>", ",", "\<\"RandomPrime\"\>", 
   ",", "\<\"RandomReal\"\>", ",", "\<\"RandomSample\"\>", 
   ",", "\<\"RandomSeed\"\>", ",", "\<\"RandomSeeding\"\>", 
   ",", "\<\"RandomTree\"\>", ",", "\<\"RandomVariate\"\>", 
   ",", "\<\"RandomWalkProcess\"\>", ",", "\<\"RandomWeightedMixedGraph\"\>", 
   ",", "\<\"RandomWord\"\>", ",", "\<\"SeedRandom\"\>", 
   ",", "\<\"SpatialRandomnessTest\"\>", ",", "\<\"$RandomGeneratorState\"\>",
    ",", "\<\"$RandomState\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8741427967593613`*^9},
 CellLabel->"Out[49]=",
 CellID->22694756,ExpressionUUID->"3ab19d68-b2d2-4598-b421-d05f2cf89eff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "/@", 
  RowBox[{"Names", "[", "\"\<*Random*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8741427977455263`*^9, 3.8741427996676693`*^9}},
 CellLabel->"In[50]:=",
 CellID->86071513,ExpressionUUID->"363d5c8f-ff08-4def-9074-b0b3d911df58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BlockRandom",
                ButtonNote->"paclet:ref/BlockRandom"],
               "\"paclet:ref/BlockRandom\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BlockRandom\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with all pseudorandom \
generators localized, so that uses of SeedRandom, RandomInteger, and related \
functions within the evaluation of \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) do not affect subsequent pseudorandom sequences.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/BlockRandom", 
                    "paclet:ref/BlockRandom", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/BlockRandom.\
html"], None}, "http://reference.wolfram.com/language/ref/BlockRandom.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"RandomSeeding", "\[Rule]", "Inherited"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"HoldFirst", ",", "Protected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`BlockRandom\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/BlockRandom",
                ButtonNote->"paclet:ref/BlockRandom"],
               "\"paclet:ref/BlockRandom\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"BlockRandom\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with all pseudorandom \
generators localized, so that uses of SeedRandom, RandomInteger, and related \
functions within the evaluation of \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) do not affect subsequent pseudorandom sequences.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"BlockRandom\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) evaluates \!\(\*StyleBox[\"expr\", \"TI\"]\) with all pseudorandom \
generators localized, so that uses of SeedRandom, RandomInteger, and related \
functions within the evaluation of \!\(\*StyleBox[\"expr\", \"TI\"]\) do not \
affect subsequent pseudorandom sequences.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/BlockRandom", "Web" -> 
        "http://reference.wolfram.com/language/ref/BlockRandom.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {RandomSeeding -> Inherited}, 
      "Attributes" -> {HoldFirst, Protected}, "FullName" -> 
      "System`BlockRandom"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Random",
                ButtonNote->"paclet:ref/Random"],
               "\"paclet:ref/Random\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", \\\"]\
\\\"}]\\) gives a uniformly distributed pseudorandom Real in the range 0 to \
1. \\n\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", RowBox[{StyleBox[\\\"type\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"range\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives a pseudorandom number of the specified type, lying in \
the specified range. Possible types are: Integer, Real and Complex. The \
default range is 0 to 1. You can give the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]\\) explicitly; a range specification of \
\\!\\(\\*StyleBox[\\\"max\\\", \\\"TI\\\"]\\) is equivalent to \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Random", 
                    "paclet:ref/Random", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Random.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Random.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Random\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/Random",
                ButtonNote->"paclet:ref/Random"],
               "\"paclet:ref/Random\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", \\\"]\
\\\"}]\\) gives a uniformly distributed pseudorandom Real in the range 0 to \
1. \\n\\!\\(\\*RowBox[{\\\"Random\\\", \\\"[\\\", RowBox[{StyleBox[\\\"type\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"range\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) gives a pseudorandom number of the specified type, lying in \
the specified range. Possible types are: Integer, Real and Complex. The \
default range is 0 to 1. You can give the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"max\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]\\) explicitly; a range specification of \
\\!\\(\\*StyleBox[\\\"max\\\", \\\"TI\\\"]\\) is equivalent to \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"}\\\"}]\\). \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"Random\", \"[\", \"]\"}]\) gives a uniformly \
distributed pseudorandom Real in the range 0 to 1. \n\
\!\(\*RowBox[{\"Random\", \"[\", RowBox[{StyleBox[\"type\", \"TI\"], \",\", \
StyleBox[\"range\", \"TI\"]}], \"]\"}]\) gives a pseudorandom number of the \
specified type, lying in the specified range. Possible types are: Integer, \
Real and Complex. The default range is 0 to 1. You can give the range \
\!\(\*RowBox[{\"{\", RowBox[{StyleBox[\"min\", \"TI\"], \",\", StyleBox[\"max\
\", \"TI\"]}], \"}\"}]\) explicitly; a range specification of \!\(\*StyleBox[\
\"max\", \"TI\"]\) is equivalent to \!\(\*RowBox[{\"{\", RowBox[{\"0\", \
\",\", StyleBox[\"max\", \"TI\"]}], \"}\"}]\). ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/Random", "Web" -> 
        "http://reference.wolfram.com/language/ref/Random.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`Random"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomArrayLayer",
                ButtonNote->"paclet:ref/RandomArrayLayer"],
               "\"paclet:ref/RandomArrayLayer\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomArrayLayer\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents a \
net layer that has no input and produces a random array from the univariate \
distribution \\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomArrayLayer\\\", \\\"[\\\", \
StyleBox[\\\"dfunc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) uses the univariate \
distribution \\!\\(\\*RowBox[{StyleBox[\\\"dfunc\\\", \\\"TI\\\"], \\\"[\\\", \
StyleBox[\\\"input\\\", \\\"TI\\\"], \\\"]\\\"}]\\) for each input \
value.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomArrayLayer", 
                    "paclet:ref/RandomArrayLayer", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomArrayLayer.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomArrayLayer.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomArrayLayer\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomArrayLayer",
                ButtonNote->"paclet:ref/RandomArrayLayer"],
               "\"paclet:ref/RandomArrayLayer\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomArrayLayer\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents a \
net layer that has no input and produces a random array from the univariate \
distribution \\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomArrayLayer\\\", \\\"[\\\", \
StyleBox[\\\"dfunc\\\", \\\"TI\\\"], \\\"]\\\"}]\\) uses the univariate \
distribution \\!\\(\\*RowBox[{StyleBox[\\\"dfunc\\\", \\\"TI\\\"], \\\"[\\\", \
StyleBox[\\\"input\\\", \\\"TI\\\"], \\\"]\\\"}]\\) for each input \
value.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomArrayLayer\", \"[\", StyleBox[\"dist\", \"TI\"], \
\"]\"}]\) represents a net layer that has no input and produces a random \
array from the univariate distribution \!\(\*StyleBox[\"dist\", \"TI\"]\).\n\
\!\(\*RowBox[{\"RandomArrayLayer\", \"[\", StyleBox[\"dfunc\", \"TI\"], \
\"]\"}]\) uses the univariate distribution \!\(\*RowBox[{StyleBox[\"dfunc\", \
\"TI\"], \"[\", StyleBox[\"input\", \"TI\"], \"]\"}]\) for each input value.",
       "Documentation" -> <|
       "Local" -> "paclet:ref/RandomArrayLayer", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomArrayLayer.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomArrayLayer"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomChoice",
                ButtonNote->"paclet:ref/RandomChoice"],
               "\"paclet:ref/RandomChoice\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom choice of one of the \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom choices. \
\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
choices. \\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) gives a pseudorandom choice weighted by the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) weighted choices.\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\
\\\", RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of weighted \
choices.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomChoice", 
                    "paclet:ref/RandomChoice", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomChoice.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomChoice.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomChoice\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomChoice",
                ButtonNote->"paclet:ref/RandomChoice"],
               "\"paclet:ref/RandomChoice\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom choice of one of the \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom choices. \
\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
choices. \\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) gives a pseudorandom choice weighted by the \
\\!\\(\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) weighted choices.\\n\\!\\(\\*RowBox[{\\\"RandomChoice\\\", \\\"[\
\\\", RowBox[{RowBox[{StyleBox[\\\"wlist\\\", \\\"TI\\\"], \\\"\[Rule]\\\", \
StyleBox[\\\"elist\\\", \\\"TI\\\"]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of weighted \
choices.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomChoice\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) gives a pseudorandom \
choice of one of the \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\
\", \"TI\"]]\). \n\!\(\*RowBox[{\"RandomChoice\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\
\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom choices. \n\!\
\(\*RowBox[{\"RandomChoice\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\
\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives an \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]]\
\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of pseudorandom choices. \n\!\(\*RowBox[{\
\"RandomChoice\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) gives a \
pseudorandom choice weighted by the \!\(\*SubscriptBox[StyleBox[\"w\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"RandomChoice\", \"[\", \
RowBox[{RowBox[{StyleBox[\"wlist\", \"TI\"], \"\[Rule]\", StyleBox[\"elist\", \
\"TI\"]}], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) weighted choices.\n\
\!\(\*RowBox[{\"RandomChoice\", \"[\", RowBox[{RowBox[{StyleBox[\"wlist\", \
\"TI\"], \"\[Rule]\", StyleBox[\"elist\", \"TI\"]}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) gives an \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of weighted choices.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomChoice", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomChoice.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RandomChoice"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomColor",
                ButtonNote->"paclet:ref/RandomColor"],
               "\"paclet:ref/RandomColor\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom color directive in the RGBColor space.\\n\
\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\
\"], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
pseudorandom colors.\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
StyleBox[\\\"model\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a color from the \
specified \\!\\(\\*StyleBox[\\\"model\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"model\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) colors.\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"model\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an array of colors.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomColor", 
                    "paclet:ref/RandomColor", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomColor.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomColor.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomColor\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomColor",
                ButtonNote->"paclet:ref/RandomColor"],
               "\"paclet:ref/RandomColor\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom color directive in the RGBColor space.\\n\
\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\
\"], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
pseudorandom colors.\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
StyleBox[\\\"model\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a color from the \
specified \\!\\(\\*StyleBox[\\\"model\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"model\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) colors.\\n\\!\\(\\*RowBox[{\\\"RandomColor\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"model\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an array of colors.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomColor\", \"[\", \"]\"}]\) gives a pseudorandom \
color directive in the RGBColor space.\n\!\(\*RowBox[{\"RandomColor\", \"[\", \
StyleBox[\"n\", \"TI\"], \"]\"}]\) gives \!\(\*StyleBox[\"n\", \"TI\"]\) \
pseudorandom colors.\n\!\(\*RowBox[{\"RandomColor\", \"[\", \
StyleBox[\"model\", \"TI\"], \"]\"}]\) gives a color from the specified \
\!\(\*StyleBox[\"model\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomColor\", \"[\", \
RowBox[{StyleBox[\"model\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives \!\(\*StyleBox[\"n\", \"TI\"]\) colors.\n\
\!\(\*RowBox[{\"RandomColor\", \"[\", RowBox[{StyleBox[\"model\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\
\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives an array of colors.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomColor", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomColor.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomColor"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomComplex",
                ButtonNote->"paclet:ref/RandomComplex"],
               "\"paclet:ref/RandomComplex\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \
\\\"[\\\", \\\"]\\\"}]\\) gives a pseudorandom complex number with real and \
imaginary parts in the range 0 to \
1.\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom complex number in the rectangle with corners given by the \
complex numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom complex number in the \
rectangle whose corners are the origin and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom complex \
numbers.\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
complex numbers.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomComplex",
                     "paclet:ref/RandomComplex", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomComplex.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomComplex.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomComplex\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomComplex",
                ButtonNote->"paclet:ref/RandomComplex"],
               "\"paclet:ref/RandomComplex\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \
\\\"[\\\", \\\"]\\\"}]\\) gives a pseudorandom complex number with real and \
imaginary parts in the range 0 to \
1.\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom complex number in the rectangle with corners given by the \
complex numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\\) and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom complex number in the \
rectangle whose corners are the origin and \
\\!\\(\\*SubscriptBox[StyleBox[\\\"z\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom complex \
numbers.\\n\\!\\(\\*RowBox[{\\\"RandomComplex\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
complex numbers.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomComplex\", \"[\", \"]\"}]\) gives a pseudorandom \
complex number with real and imaginary parts in the range 0 to 1.\n\
\!\(\*RowBox[{\"RandomComplex\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}], \"]\"}]\) gives a pseudorandom complex number in the rectangle with \
corners given by the complex numbers \!\(\*SubscriptBox[StyleBox[\"z\", \
\"TI\"], StyleBox[\"min\", \"TI\"]]\) and \!\(\*SubscriptBox[StyleBox[\"z\", \
\"TI\"], StyleBox[\"max\", \"TI\"]]\).\n\!\(\*RowBox[{\"RandomComplex\", \
\"[\", SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"max\", \"TI\"]], \
\"]\"}]\) gives a pseudorandom complex number in the rectangle whose corners \
are the origin and \!\(\*SubscriptBox[StyleBox[\"z\", \"TI\"], StyleBox[\"max\
\", \"TI\"]]\).\n\!\(\*RowBox[{\"RandomComplex\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom \
complex numbers.\n\!\(\*RowBox[{\"RandomComplex\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) gives an \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of pseudorandom complex numbers.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomComplex", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomComplex.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {WorkingPrecision -> MachinePrecision}, 
      "Attributes" -> {Protected}, "FullName" -> "System`RandomComplex"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomEntity",
                ButtonNote->"paclet:ref/RandomEntity"],
               "\"paclet:ref/RandomEntity\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomEntity\\\", \\\"[\\\", \
StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom \
entity with a type determined by the specification \\!\\(\\*StyleBox[\\\"spec\
\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomEntity\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom entities.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomEntity", 
                    "paclet:ref/RandomEntity", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomEntity.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomEntity.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomEntity\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomEntity",
                ButtonNote->"paclet:ref/RandomEntity"],
               "\"paclet:ref/RandomEntity\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomEntity\\\", \\\"[\\\", \
StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom \
entity with a type determined by the specification \\!\\(\\*StyleBox[\\\"spec\
\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomEntity\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom entities.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomEntity\", \"[\", StyleBox[\"spec\", \"TI\"], \"]\
\"}]\) gives a pseudorandom entity with a type determined by the \
specification \!\(\*StyleBox[\"spec\", \"TI\"]\).\n\
\!\(\*RowBox[{\"RandomEntity\", \"[\", RowBox[{StyleBox[\"spec\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom entities.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomEntity", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomEntity.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomEntity"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomFunction",
                ButtonNote->"paclet:ref/RandomFunction"],
               "\"paclet:ref/RandomFunction\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomFunction\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates a pseudorandom \
function from the process \\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"RandomFunction\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dt\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) generates a pseudorandom function from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps of \
\\!\\(\\*StyleBox[\\\"dt\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomFunction\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \\\" \\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates an ensemble of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom functions. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomFunction", "paclet:ref/RandomFunction", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomFunction.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/RandomFunction.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomFunction\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomFunction",
                ButtonNote->"paclet:ref/RandomFunction"],
               "\"paclet:ref/RandomFunction\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomFunction\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates a pseudorandom \
function from the process \\!\\(\\*StyleBox[\\\"proc\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"RandomFunction\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\",\\\", StyleBox[\\\"dt\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\\) generates a pseudorandom function from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"t\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) in steps of \
\\!\\(\\*StyleBox[\\\"dt\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomFunction\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"proc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \\\" \\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates an ensemble of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom functions. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomFunction\", \"[\", RowBox[{StyleBox[\"proc\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]}], \"]\"}]\) generates a pseudorandom \
function from the process \!\(\*StyleBox[\"proc\", \"TI\"]\) from \
\!\(\*SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"max\", \"TI\"]]\). \n\
\!\(\*RowBox[{\"RandomFunction\", \"[\", RowBox[{StyleBox[\"proc\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\
\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \",\", StyleBox[\"dt\", \"TI\"]}], \"}\"}]}], \"]\
\"}]\) generates a pseudorandom function from \!\(\*SubscriptBox[StyleBox[\"t\
\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"max\", \"TI\"]]\) in \
steps of \!\(\*StyleBox[\"dt\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomFunction\", \
\"[\", RowBox[{StyleBox[\"proc\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", \" \", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates an \
ensemble of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom functions. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomFunction", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomFunction.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomFunction"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGeneratorState",
                ButtonNote->"paclet:ref/RandomGeneratorState"],
               "\"paclet:ref/RandomGeneratorState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGeneratorState\\\", \\\
\"[\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) gives a \
representation of the internal state of a pseudorandom generator.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomGeneratorState", 
                    "paclet:ref/RandomGeneratorState", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomGeneratorState.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomGeneratorState.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomGeneratorState\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGeneratorState",
                ButtonNote->"paclet:ref/RandomGeneratorState"],
               "\"paclet:ref/RandomGeneratorState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGeneratorState\\\", \\\
\"[\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\"]\\\"}]\\) gives a \
representation of the internal state of a pseudorandom generator.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomGeneratorState\", \"[\", \
StyleBox[\"\[Ellipsis]\", \"TR\"], \"]\"}]\) gives a representation of the \
internal state of a pseudorandom generator.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomGeneratorState", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomGeneratorState.html"|>\
, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> 
      None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> 
      None, "Options" -> None, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`RandomGeneratorState"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGeoPosition",
                ButtonNote->"paclet:ref/RandomGeoPosition"],
               "\"paclet:ref/RandomGeoPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\
\\\", \\\"]\\\"}]\\) gives a pseudorandom geo position uniformly distributed \
on the surface of the Earth.\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\
\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"latmin\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"lonmin\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"latmax\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"lonmax\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}]\\) gives a pseudorandom geo position uniformly distributed in the \
given geo bounding box. \\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom geo position uniformly distributed in the geo region \
\\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom geo positions uniformly distributed in the geo \
region \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) pseudorandom geo position \
array.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomGeoPosition", 
                    "paclet:ref/RandomGeoPosition", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomGeoPosition.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomGeoPosition.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomGeoPosition\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGeoPosition",
                ButtonNote->"paclet:ref/RandomGeoPosition"],
               "\"paclet:ref/RandomGeoPosition\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\
\\\", \\\"]\\\"}]\\) gives a pseudorandom geo position uniformly distributed \
on the surface of the Earth.\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\
\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"latmin\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"lonmin\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"latmax\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"lonmax\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}], \
\\\"]\\\"}]\\) gives a pseudorandom geo position uniformly distributed in the \
given geo bounding box. \\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \
\\\"[\\\", StyleBox[\\\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom geo position uniformly distributed in the geo region \
\\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom geo positions uniformly distributed in the geo \
region \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomGeoPosition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"g\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) pseudorandom geo position \
array.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomGeoPosition\", \"[\", \"]\"}]\) gives a \
pseudorandom geo position uniformly distributed on the surface of the Earth.\n\
\!\(\*RowBox[{\"RandomGeoPosition\", \"[\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"latmin\", \"TI\"], \",\", StyleBox[\
\"lonmin\", \"TI\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"latmax\", \"TI\"], \",\", StyleBox[\"lonmax\", \"TI\"]}], \
\"}\"}]}], \"}\"}], \"]\"}]\) gives a pseudorandom geo position uniformly \
distributed in the given geo bounding box. \n\
\!\(\*RowBox[{\"RandomGeoPosition\", \"[\", StyleBox[\"g\", \"TI\"], \
\"]\"}]\) gives a pseudorandom geo position uniformly distributed in the geo \
region \!\(\*StyleBox[\"g\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomGeoPosition\", \
\"[\", RowBox[{StyleBox[\"g\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\
\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom geo \
positions uniformly distributed in the geo region \!\(\*StyleBox[\"g\", \
\"TI\"]\).\n\!\(\*RowBox[{\"RandomGeoPosition\", \"[\", \
RowBox[{StyleBox[\"g\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) gives an \
\!\(\*RowBox[{StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \"TI\"], \"\[Times]\", StyleBox[\" \", \"TI\"], \
StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \"TI\
\"], \"\[Times]\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) pseudorandom geo \
position array.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomGeoPosition", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomGeoPosition.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomGeoPosition"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGraph",
                ButtonNote->"paclet:ref/RandomGraph"],
               "\"paclet:ref/RandomGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom graph with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) vertices \
and \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) \
edges.\\n\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom \
graphs.\\n\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"gdist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) samples from the random graph \
distribution \\!\\(\\*StyleBox[\\\"gdist\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomGraph", 
                    "paclet:ref/RandomGraph", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomGraph.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomGraph.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                    PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AnnotationRules", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "False"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DirectedEdges", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeCost", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"EdgeLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EdgeWeight", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Editable", "\[Rule]", "False"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "False"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlight", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GraphHighlightStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphLayout", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphRoot", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GraphStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "All"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Properties", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"VertexCapacity", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexCoordinates", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"VertexLabelStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShape", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexShapeFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexWeight", "\[Rule]", "Automatic"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "59", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "59", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomGraph",
                ButtonNote->"paclet:ref/RandomGraph"],
               "\"paclet:ref/RandomGraph\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom graph with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) vertices \
and \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) \
edges.\\n\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom \
graphs.\\n\\!\\(\\*RowBox[{\\\"RandomGraph\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"gdist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) samples from the random graph \
distribution \\!\\(\\*StyleBox[\\\"gdist\\\", \\\"TI\\\"]\\).\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomGraph\", \"[\", RowBox[{\"{\", RowBox[{StyleBox[\
\"n\", \"TI\"], \",\", StyleBox[\"m\", \"TI\"]}], \"}\"}], \"]\"}]\) gives a \
pseudorandom graph with \!\(\*StyleBox[\"n\", \"TI\"]\) vertices and \
\!\(\*StyleBox[\"m\", \"TI\"]\) edges.\n\!\(\*RowBox[{\"RandomGraph\", \"[\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"m\", \"TI\"]}], \"}\"}], \",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\
\) gives a list of \!\(\*StyleBox[\"k\", \"TI\"]\) pseudorandom graphs.\n\!\(\
\*RowBox[{\"RandomGraph\", \"[\", RowBox[{StyleBox[\"gdist\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) samples from the random graph \
distribution \!\(\*StyleBox[\"gdist\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomGraph", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomGraph.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> 
        Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, 
        AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, 
        BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> 
        Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, 
        EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> 
        Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> 
        False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, 
        FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, 
        FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> 
        Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, 
        GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, 
        ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, 
        LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, 
        PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> 
        Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, 
        Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> 
        Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, 
        VertexCoordinates -> Automatic, VertexLabels -> None, 
        VertexLabelStyle -> Automatic, VertexShape -> Automatic, 
        VertexShapeFunction -> Automatic, VertexSize -> Automatic, 
        VertexStyle -> Automatic, VertexWeight -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`RandomGraph"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomImage",
                ButtonNote->"paclet:ref/RandomImage"],
               "\"paclet:ref/RandomImage\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives an image with \
pseudorandom pixel values in the range 0 to \\!\\(\\*StyleBox[\\\"max\\\", \\\
\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) generates \
pseudorandom pixel values in the range \\!\\(\\*StyleBox[\\\"min\\\", \
\\\"TI\\\"]\\) to \\!\\(\\*StyleBox[\\\"max\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates pixel values \
using a symbolic distribution \\!\\(\\*StyleBox[\\\"dist\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", RowBox[{StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"size\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a random image of the specified \
\\!\\(\\*StyleBox[\\\"size\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"size\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"type\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
an image converted to the specified type.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomImage", 
                    "paclet:ref/RandomImage", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomImage.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomImage.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomImage\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomImage",
                ButtonNote->"paclet:ref/RandomImage"],
               "\"paclet:ref/RandomImage\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives an image with \
pseudorandom pixel values in the range 0 to \\!\\(\\*StyleBox[\\\"max\\\", \\\
\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"min\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"max\\\", \\\"TI\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) generates \
pseudorandom pixel values in the range \\!\\(\\*StyleBox[\\\"min\\\", \
\\\"TI\\\"]\\) to \\!\\(\\*StyleBox[\\\"max\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates pixel values \
using a symbolic distribution \\!\\(\\*StyleBox[\\\"dist\\\", \\\"TI\\\"]\\).\
\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", RowBox[{StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", StyleBox[\\\"size\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates a random image of the specified \
\\!\\(\\*StyleBox[\\\"size\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomImage\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
StyleBox[\\\"size\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"type\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) gives \
an image converted to the specified type.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomImage\", \"[\", StyleBox[\"max\", \"TI\"], \
\"]\"}]\) gives an image with pseudorandom pixel values in the range 0 to \
\!\(\*StyleBox[\"max\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomImage\", \"[\", \
RowBox[{\"{\", RowBox[{StyleBox[\"min\", \"TI\"], \",\", StyleBox[\"max\", \
\"TI\"]}], \"}\"}], \"]\"}]\) generates pseudorandom pixel values in the \
range \!\(\*StyleBox[\"min\", \"TI\"]\) to \!\(\*StyleBox[\"max\", \"TI\"]\).\
\n\!\(\*RowBox[{\"RandomImage\", \"[\", StyleBox[\"dist\", \"TI\"], \"]\"}]\) \
generates pixel values using a symbolic distribution \!\(\*StyleBox[\"dist\", \
\"TI\"]\).\n\!\(\*RowBox[{\"RandomImage\", \"[\", RowBox[{StyleBox[\"\
\[Ellipsis]\", \"TR\"], \",\", StyleBox[\"size\", \"TI\"]}], \"]\"}]\) \
generates a random image of the specified \!\(\*StyleBox[\"size\", \"TI\"]\).\
\n\!\(\*RowBox[{\"RandomImage\", \"[\", RowBox[{StyleBox[\"\[Ellipsis]\", \
\"TR\"], \",\", StyleBox[\"size\", \"TI\"], \",\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"type\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) gives an image converted to the \
specified type.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomImage", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomImage.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomImage"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomInstance",
                ButtonNote->"paclet:ref/RandomInstance"],
               "\"paclet:ref/RandomInstance\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a random \
instance of an expression such as a geometric \
scene.\\n\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a random instance of \
an expression such as a geometric scene or biomolecular \
sequence.\\n\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) finds \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
instances.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomInstance", "paclet:ref/RandomInstance", 
                    "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomInstance.\
html"], None}, 
                    "http://reference.wolfram.com/language/ref/RandomInstance.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomInstance\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomInstance",
                ButtonNote->"paclet:ref/RandomInstance"],
               "\"paclet:ref/RandomInstance\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \
\\\"[\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a random \
instance of an expression such as a geometric \
scene.\\n\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) finds a random instance of \
an expression such as a geometric scene or biomolecular \
sequence.\\n\\!\\(\\*RowBox[{\\\"RandomInstance\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) finds \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
instances.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomInstance\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) finds a random instance of an expression such as a geometric scene.\
\n\!\(\*RowBox[{\"RandomInstance\", \"[\", StyleBox[\"expr\", \"TI\"], \
\"]\"}]\) finds a random instance of an expression such as a geometric scene \
or biomolecular sequence.\n\!\(\*RowBox[{\"RandomInstance\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\
\) finds \!\(\*StyleBox[\"n\", \"TI\"]\) instances.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomInstance", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomInstance.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomInstance"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomInteger",
                ButtonNote->"paclet:ref/RandomInteger"],
               "\"paclet:ref/RandomInteger\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\
\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom integer in \
the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom integer in the range \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\
\"[\\\", \\\"]\\\"}]\\) pseudorandomly gives 0 or 1. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom integers. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
integers. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomInteger",
                     "paclet:ref/RandomInteger", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomInteger.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomInteger.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomInteger\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomInteger",
                ButtonNote->"paclet:ref/RandomInteger"],
               "\"paclet:ref/RandomInteger\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\
\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom integer in \
the range \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom integer in the range \\!\\(\
\\*RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]\\). \\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\
\"[\\\", \\\"]\\\"}]\\) pseudorandomly gives 0 or 1. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom integers. \
\\n\\!\\(\\*RowBox[{\\\"RandomInteger\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
integers. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomInteger\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}], \"]\"}]\) gives a pseudorandom integer in the range \
\!\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}]\). \n\!\(\*RowBox[{\"RandomInteger\", \
\"[\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]], \
\"]\"}]\) gives a pseudorandom integer in the range \!\(\*RowBox[{\"{\", \
RowBox[{\"0\", \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}]\). \n\!\(\*RowBox[{\"RandomInteger\", \"[\", \"]\"}]\) pseudorandomly \
gives 0 or 1. \n\!\(\*RowBox[{\"RandomInteger\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom \
integers. \n\!\(\*RowBox[{\"RandomInteger\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) gives an \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of pseudorandom integers. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomInteger", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomInteger.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RandomInteger"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomMixedGraph\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                  StripOnInput->False]},
                {
                 TemplateBox[{"\"\[ThinSpace]\"", 
                   GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomMixedGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", 
                    "threshold_", ",", 
                    RowBox[{"options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
                    
                    RowBox[{
                    "0", "\[LessEqual]", "threshold", "\[LessEqual]", "1"}]}],
                     ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"RandomGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices", ",", "edges"}], "}"}], ",", 
                    "options"}], "]"}]}], ";", 
                    RowBox[{"replaceCount", "=", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeAdd", "[", 
                    RowBox[{
                    RowBox[{"EdgeDelete", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                    RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
                    "randomGraph", ",", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
                    "replaceCount"}], "]"}]}], "]"}], "]"}]}]}]}], "]"}]}]}, {
                    " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`RandomMixedGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomMixedGraph\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "Global`RandomMixedGraph", 
      "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
      "DownValues" -> 
      Information`InformationValueForm[
       DownValues, $CellContext`RandomMixedGraph, {Condition[
           $CellContext`RandomMixedGraph[{
             Pattern[$CellContext`vertices, 
              Blank[]], 
             Pattern[$CellContext`edges, 
              Blank[]]}, 
            Pattern[$CellContext`threshold, 
             Blank[]], 
            Pattern[$CellContext`options, 
             OptionsPattern[]]], 0 <= $CellContext`threshold <= 1] :> 
         Block[{$CellContext`replaceCount, $CellContext`randomGraph}, \
$CellContext`randomGraph = 
            RandomGraph[{$CellContext`vertices, $CellContext`edges}, \
$CellContext`options]; $CellContext`replaceCount = 
            Floor[$CellContext`threshold $CellContext`edges]; \
$CellContext`randomGraph = Graph[
              Fold[EdgeAdd[
                EdgeDelete[#, #2], 
                DirectedEdge[
                 First[#2], 
                 Last[#2]]]& , $CellContext`randomGraph, 
               RandomSample[
                
                EdgeList[$CellContext`randomGraph], \
$CellContext`replaceCount]]]]}], "SubValues" -> None, "DefaultValues" -> None,
       "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {}, "FullName" -> "Global`RandomMixedGraph"|>, True]], 
   ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomMixedGraphRandomEdgeWeights\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                  StripOnInput->False]},
                {
                 TemplateBox[{"\"\[ThinSpace]\"", 
                   GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomMixedGraphRandomEdgeWeights", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", 
                    "threshold_", ",", "randomFunction_", ",", 
                    RowBox[{"options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
                    
                    RowBox[{
                    "0", "\[LessEqual]", "threshold", "\[LessEqual]", "1"}]}],
                     ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"replaceCount", ",", "randomGraph", ",", 
                    "randomEdgeWeights"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"BlockRandom", "[", 
                    RowBox[{"RandomGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices", ",", "edges"}], "}"}], ",", 
                    "options"}], "]"}], "]"}]}], ";", 
                    RowBox[{"replaceCount", "=", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
                    RowBox[{"randomEdgeWeights", "=", 
                    RowBox[{"BlockRandom", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{"randomFunction", ",", "80"}], "]"}], "]"}]}], 
                    ";", 
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeAdd", "[", 
                    RowBox[{
                    RowBox[{"EdgeDelete", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                    RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
                    "randomGraph", ",", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
                    "replaceCount"}], "]"}]}], "]"}], ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", "randomEdgeWeights"}]}], 
                    "]"}]}]}]}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Global`RandomMixedGraphRandomEdgeWeights\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomMixedGraphRandomEdgeWeights\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "Global`RandomMixedGraphRandomEdgeWeights", "Documentation" -> None, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
      Information`InformationValueForm[
       DownValues, $CellContext`RandomMixedGraphRandomEdgeWeights, {Condition[
           $CellContext`RandomMixedGraphRandomEdgeWeights[{
             Pattern[$CellContext`vertices, 
              Blank[]], 
             Pattern[$CellContext`edges, 
              Blank[]]}, 
            Pattern[$CellContext`threshold, 
             Blank[]], 
            Pattern[$CellContext`randomFunction, 
             Blank[]], 
            Pattern[$CellContext`options, 
             OptionsPattern[]]], 0 <= $CellContext`threshold <= 1] :> 
         Block[{$CellContext`replaceCount, $CellContext`randomGraph, \
$CellContext`randomEdgeWeights}, $CellContext`randomGraph = BlockRandom[
              
              RandomGraph[{$CellContext`vertices, $CellContext`edges}, \
$CellContext`options]]; $CellContext`replaceCount = 
            Floor[$CellContext`threshold $CellContext`edges]; \
$CellContext`randomEdgeWeights = BlockRandom[
              
              Table[$CellContext`randomFunction, 
               80]]; $CellContext`randomGraph = Graph[
              Fold[EdgeAdd[
                EdgeDelete[#, #2], 
                DirectedEdge[
                 First[#2], 
                 Last[#2]]]& , $CellContext`randomGraph, 
               RandomSample[
                
                EdgeList[$CellContext`randomGraph], \
$CellContext`replaceCount]], EdgeWeight -> $CellContext`randomEdgeWeights]]}],
       "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
      "FullName" -> "Global`RandomMixedGraphRandomEdgeWeights"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPermutation",
                ButtonNote->"paclet:ref/RandomPermutation"],
               "\"paclet:ref/RandomPermutation\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPermutation\\\", \\\"[\
\\\", StyleBox[\\\"gr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom \
permutation in the permutation group \\!\\(\\*StyleBox[\\\"gr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPermutation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"gr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom permutations in the permutation group \
\\!\\(\\*StyleBox[\\\"gr\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomPermutation", 
                    "paclet:ref/RandomPermutation", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomPermutation.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomPermutation.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPermutation\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPermutation",
                ButtonNote->"paclet:ref/RandomPermutation"],
               "\"paclet:ref/RandomPermutation\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPermutation\\\", \\\"[\
\\\", StyleBox[\\\"gr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom \
permutation in the permutation group \\!\\(\\*StyleBox[\\\"gr\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPermutation\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"gr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom permutations in the permutation group \
\\!\\(\\*StyleBox[\\\"gr\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPermutation\", \"[\", StyleBox[\"gr\", \"TI\"], \
\"]\"}]\) gives a pseudorandom permutation in the permutation group \
\!\(\*StyleBox[\"gr\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomPermutation\", \
\"[\", RowBox[{StyleBox[\"gr\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom \
permutations in the permutation group \!\(\*StyleBox[\"gr\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPermutation", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPermutation.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomPermutation"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPoint",
                ButtonNote->"paclet:ref/RandomPoint"],
               "\"paclet:ref/RandomPoint\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom point \
uniformly distributed in the region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom points uniformly distributed in the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of pseudorandom \
points.\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) restricts to the bounds \
\\!\\(\\*RowBox[{RowBox[{\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"]\\\"}], \\\"\[Times]\\\", \
\\\"\[CenterEllipsis]\\\"}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomPoint", 
                    "paclet:ref/RandomPoint", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomPoint.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomPoint.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPoint\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPoint",
                ButtonNote->"paclet:ref/RandomPoint"],
               "\"paclet:ref/RandomPoint\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom point \
uniformly distributed in the region \\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom points uniformly distributed in the region \
\\!\\(\\*StyleBox[\\\"reg\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of pseudorandom \
points.\\n\\!\\(\\*RowBox[{\\\"RandomPoint\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"reg\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) restricts to the bounds \
\\!\\(\\*RowBox[{RowBox[{\\\"[\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"]\\\"}], \\\"\[Times]\\\", \
\\\"\[CenterEllipsis]\\\"}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPoint\", \"[\", StyleBox[\"reg\", \"TI\"], \
\"]\"}]\) gives a pseudorandom point uniformly distributed in the region \!\(\
\*StyleBox[\"reg\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomPoint\", \"[\", \
RowBox[{StyleBox[\"reg\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom points \
uniformly distributed in the region \!\(\*StyleBox[\"reg\", \"TI\"]\).\n\
\!\(\*RowBox[{\"RandomPoint\", \"[\", RowBox[{StyleBox[\"reg\", \"TI\"], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\
\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives an \!\(\*RowBox[{StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \"TI\"], \"\[Times]\", StyleBox[\" \", \"TI\"], \
StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \"TI\
\"], \"\[Times]\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) array of \
pseudorandom points.\n\!\(\*RowBox[{\"RandomPoint\", \"[\", RowBox[{StyleBox[\
\"reg\", \"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"], \",\", \
RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\
\"], StyleBox[\"max\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]}], \"]\"}]\) restricts to the bounds \
\!\(\*RowBox[{RowBox[{\"[\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"]\"}], \"\[Times]\", \
\"\[CenterEllipsis]\"}]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPoint", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPoint.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Method -> Automatic, WorkingPrecision -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`RandomPoint"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPointConfiguration",
                ButtonNote->"paclet:ref/RandomPointConfiguration"],
               "\"paclet:ref/RandomPointConfiguration\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPointConfiguration\\\",\
 \\\"[\\\", RowBox[{StyleBox[\\\"pproc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"reg\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) generates a pseudorandom spatial \
point configuration from the spatial point process \
\\!\\(\\*StyleBox[\\\"pproc\\\", \\\"TI\\\"]\\) in the observation region \\!\
\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomPointConfiguration\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"pproc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"reg\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates an ensemble of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) spatial point configurations. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomPointConfiguration", 
                    "paclet:ref/RandomPointConfiguration", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomPointConfiguration.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomPointConfiguration.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPointConfiguration\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPointConfiguration",
                ButtonNote->"paclet:ref/RandomPointConfiguration"],
               "\"paclet:ref/RandomPointConfiguration\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPointConfiguration\\\",\
 \\\"[\\\", RowBox[{StyleBox[\\\"pproc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"reg\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) generates a pseudorandom spatial \
point configuration from the spatial point process \
\\!\\(\\*StyleBox[\\\"pproc\\\", \\\"TI\\\"]\\) in the observation region \\!\
\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomPointConfiguration\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"pproc\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"reg\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) generates an ensemble of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) spatial point configurations. \
\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPointConfiguration\", \"[\", \
RowBox[{StyleBox[\"pproc\", \"TI\"], \",\", StyleBox[\"reg\", \"TI\"]}], \
\"]\"}]\) generates a pseudorandom spatial point configuration from the \
spatial point process \!\(\*StyleBox[\"pproc\", \"TI\"]\) in the observation \
region \!\(\*StyleBox[\"reg\", \"TI\"]\). \n\
\!\(\*RowBox[{\"RandomPointConfiguration\", \"[\", \
RowBox[{StyleBox[\"pproc\", \"TI\"], \",\", StyleBox[\"reg\", \"TI\"], \",\", \
StyleBox[\" \", \"TI\"], StyleBox[\"n\", \"TI\"]}], \"]\"}]\) generates an \
ensemble of \!\(\*StyleBox[\"n\", \"TI\"]\) spatial point configurations. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPointConfiguration", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPointConfiguration.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomPointConfiguration"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPolygon",
                ButtonNote->"paclet:ref/RandomPolygon"],
               "\"paclet:ref/RandomPolygon\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom simple polygon with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertex points.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", StyleBox[\
\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom polygon with \
the specified specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) pseudorandom \
polygons.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[Rule]\\\", StyleBox[\\\
\"spec\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives a pseudorandom polygon in dimension \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomPolygon",
                     "paclet:ref/RandomPolygon", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomPolygon.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomPolygon.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPolygon\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPolygon",
                ButtonNote->"paclet:ref/RandomPolygon"],
               "\"paclet:ref/RandomPolygon\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \
\\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom simple polygon with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
vertex points.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", StyleBox[\
\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom polygon with \
the specified specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) pseudorandom \
polygons.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[Rule]\\\", StyleBox[\\\
\"spec\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives a pseudorandom polygon in dimension \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPolygon\", \"[\", StyleBox[\"n\", \"TI\"], \
\"]\"}]\) gives a pseudorandom simple polygon with \!\(\*StyleBox[\"n\", \"TI\
\"]\) vertex points.\n\!\(\*RowBox[{\"RandomPolygon\", \"[\", StyleBox[\"spec\
\", \"TI\"], \"]\"}]\) gives a pseudorandom polygon with the specified \
specification \!\(\*StyleBox[\"spec\", \"TI\"]\).\n\
\!\(\*RowBox[{\"RandomPolygon\", \"[\", RowBox[{StyleBox[\"spec\", \"TI\"], \
\",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"k\", \"TI\"]\) pseudorandom polygons.\n\
\!\(\*RowBox[{\"RandomPolygon\", \"[\", RowBox[{RowBox[{StyleBox[\"d\", \
\"TI\"], \"\[Rule]\", StyleBox[\"spec\", \"TI\"]}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) gives a pseudorandom polygon in dimension \
\!\(\*StyleBox[\"d\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPolygon", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPolygon.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomPolygon"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPolyhedron",
                ButtonNote->"paclet:ref/RandomPolyhedron"],
               "\"paclet:ref/RandomPolyhedron\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolyhedron\\\", \
\\\"[\\\", StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom polyhedron with the specified specification \\!\\(\\*StyleBox[\\\
\"spec\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolyhedron\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom polyhedra.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomPolyhedron", 
                    "paclet:ref/RandomPolyhedron", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomPolyhedron.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomPolyhedron.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPolyhedron\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPolyhedron",
                ButtonNote->"paclet:ref/RandomPolyhedron"],
               "\"paclet:ref/RandomPolyhedron\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolyhedron\\\", \
\\\"[\\\", StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom polyhedron with the specified specification \\!\\(\\*StyleBox[\\\
\"spec\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolyhedron\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom polyhedra.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPolyhedron\", \"[\", StyleBox[\"spec\", \"TI\"], \
\"]\"}]\) gives a pseudorandom polyhedron with the specified specification \!\
\(\*StyleBox[\"spec\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomPolyhedron\", \"[\", \
RowBox[{StyleBox[\"spec\", \"TI\"], \",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\
\) gives a list of \!\(\*StyleBox[\"k\", \"TI\"]\) pseudorandom polyhedra.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPolyhedron", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPolyhedron.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomPolyhedron"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPrime",
                ButtonNote->"paclet:ref/RandomPrime"],
               "\"paclet:ref/RandomPrime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom prime number \
in the range \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom prime number in the range 2 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom primes.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomPrime", 
                    "paclet:ref/RandomPrime", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomPrime.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomPrime.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPrime\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomPrime",
                ButtonNote->"paclet:ref/RandomPrime"],
               "\"paclet:ref/RandomPrime\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom prime number \
in the range \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\
\\\"min\\\", \\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom prime number in the range 2 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPrime\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\
\"TI\\\"]\\) pseudorandom primes.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomPrime\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]], \",\
\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]}], \
\"}\"}], \"]\"}]\) gives a pseudorandom prime number in the range \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"min\", \"TI\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \"TI\"]]\).\n\!\
\(\*RowBox[{\"RandomPrime\", \"[\", SubscriptBox[StyleBox[\"i\", \"TI\"], \
StyleBox[\"max\", \"TI\"]], \"]\"}]\) gives a pseudorandom prime number in \
the range 2 to \!\(\*SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"max\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"RandomPrime\", \"[\", \
RowBox[{StyleBox[\"range\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom \
primes.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomPrime", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomPrime.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomPrime"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomReal",
                ButtonNote->"paclet:ref/RandomReal"],
               "\"paclet:ref/RandomReal\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom real number in the range 0 to 1. \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom real number in the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom real number in the range 0 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom reals. \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", RowBox[{StyleBox[\\\"range\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
reals. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomReal", 
                    "paclet:ref/RandomReal", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomReal.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomReal.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomReal\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomReal",
                ButtonNote->"paclet:ref/RandomReal"],
               "\"paclet:ref/RandomReal\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom real number in the range 0 to 1. \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a \
pseudorandom real number in the range \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]], \\\"]\\\"}]\\) gives a pseudorandom real number in the range 0 \
to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom reals. \
\\n\\!\\(\\*RowBox[{\\\"RandomReal\\\", \\\"[\\\", RowBox[{StyleBox[\\\"range\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis] array of pseudorandom \
reals. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomReal\", \"[\", \"]\"}]\) gives a pseudorandom \
real number in the range 0 to 1. \n\!\(\*RowBox[{\"RandomReal\", \"[\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"min\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]}], \"}\"}], \"]\"}]\) gives a pseudorandom real \
number in the range \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"min\", \"TI\"]]\) to \!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], \
StyleBox[\"max\", \"TI\"]]\). \n\!\(\*RowBox[{\"RandomReal\", \"[\", \
SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]], \"]\"}]\) \
gives a pseudorandom real number in the range 0 to \
\!\(\*SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"max\", \"TI\"]]\).\n\!\
\(\*RowBox[{\"RandomReal\", \"[\", RowBox[{StyleBox[\"range\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom reals. \n\
\!\(\*RowBox[{\"RandomReal\", \"[\", RowBox[{StyleBox[\"range\", \"TI\"], \",\
\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\
\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives an \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]]\
\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]\)\[Times]\[Ellipsis] array of pseudorandom reals. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomReal", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomReal.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {WorkingPrecision -> MachinePrecision}, 
      "Attributes" -> {Protected}, "FullName" -> "System`RandomReal"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomSample",
                ButtonNote->"paclet:ref/RandomSample"],
               "\"paclet:ref/RandomSample\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
pseudorandom sample of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
pseudorandom sample of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) chosen using weights \
\\!\\(\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom permutation of \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomSample", 
                    "paclet:ref/RandomSample", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomSample.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomSample.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomSample\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomSample",
                ButtonNote->"paclet:ref/RandomSample"],
               "\"paclet:ref/RandomSample\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
pseudorandom sample of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"w\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\
\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a \
pseudorandom sample of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) of the \\!\
\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\\) chosen using weights \
\\!\\(\\*SubscriptBox[StyleBox[\\\"w\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\).\\n\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", RowBox[{\\\
\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\
\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) gives a pseudorandom permutation of \
the \\!\\(\\*SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomSample\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"n\", \
\"TI\"]}], \"]\"}]\) gives a pseudorandom sample of \!\(\*StyleBox[\"n\", \
\"TI\"]\) of the \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"RandomSample\", \"[\", \
RowBox[{RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \
\"}\"}], \"\[Rule]\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}]}], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives a \
pseudorandom sample of \!\(\*StyleBox[\"n\", \"TI\"]\) of the \
\!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) chosen \
using weights \!\(\*SubscriptBox[StyleBox[\"w\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]\).\n\!\(\*RowBox[{\"RandomSample\", \"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \"]\"}]\) gives a pseudorandom \
permutation of the \!\(\*SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomSample", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomSample.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RandomSample"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/RandomSeed.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/RandomSeed.html"],
               
               "\"http://reference.wolfram.com/language/ref/RandomSeed.html\"\
"],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`RandomSeed\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomSeed.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomSeed.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomSeed\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                
                ButtonData->
                 "http://reference.wolfram.com/language/ref/RandomSeed.html",
                
                ButtonNote->
                 "http://reference.wolfram.com/language/ref/RandomSeed.html"],
               
               "\"http://reference.wolfram.com/language/ref/RandomSeed.html\"\
"],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\"System`RandomSeed\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "System`RandomSeed", 
      "Documentation" -> <|
       "Web" -> "http://reference.wolfram.com/language/ref/RandomSeed.html"|>,
       "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RandomSeed"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomSeeding",
                ButtonNote->"paclet:ref/RandomSeeding"],
               "\"paclet:ref/RandomSeeding\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"RandomSeeding is an option that specifies what \
seeding of pseudorandom generators should be done inside the operation of a \
function.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomSeeding",
                     "paclet:ref/RandomSeeding", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomSeeding.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomSeeding.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomSeeding\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomSeeding",
                ButtonNote->"paclet:ref/RandomSeeding"],
               "\"paclet:ref/RandomSeeding\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"RandomSeeding is an option that specifies what \
seeding of pseudorandom generators should be done inside the operation of a \
function.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "RandomSeeding is an option that specifies what seeding of pseudorandom \
generators should be done inside the operation of a function.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomSeeding", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomSeeding.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
      "FullName" -> "System`RandomSeeding"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomTree",
                ButtonNote->"paclet:ref/RandomTree"],
               "\"paclet:ref/RandomTree\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomTree\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom tree \
with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) nodes.\\n\\!\\(\\*RowBox[{\\\
\"RandomTree\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom \
trees.\\n\\!\\(\\*RowBox[{\\\"RandomTree\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives a \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*RowBox[{StyleBox[\\\" \\\", \\\"TI\\\"], \
SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}]\\)\[Times]\\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\\) array of trees.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomTree", 
                    "paclet:ref/RandomTree", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomTree.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomTree.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomTree\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomTree",
                ButtonNote->"paclet:ref/RandomTree"],
               "\"paclet:ref/RandomTree\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomTree\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom tree \
with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) nodes.\\n\\!\\(\\*RowBox[{\\\
\"RandomTree\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\
\", StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \
\\!\\(\\*StyleBox[\\\"k\\\", \\\"TI\\\"]\\) pseudorandom \
trees.\\n\\!\\(\\*RowBox[{\\\"RandomTree\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives a \
\\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*RowBox[{StyleBox[\\\" \\\", \\\"TI\\\"], \
SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}]\\)\[Times]\\!\\(\\*StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]\\) array of trees.\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomTree\", \"[\", StyleBox[\"n\", \"TI\"], \
\"]\"}]\) gives a pseudorandom tree with \!\(\*StyleBox[\"n\", \"TI\"]\) \
nodes.\n\!\(\*RowBox[{\"RandomTree\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"k\", \"TI\"]\) pseudorandom trees.\n\
\!\(\*RowBox[{\"RandomTree\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives a \!\(\*SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"1\", \
\"TR\"]]\)\[Times]\!\(\*RowBox[{StyleBox[\" \", \"TI\"], \
SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"2\", \
\"TR\"]]}]\)\[Times]\!\(\*StyleBox[\"\[Ellipsis]\", \"TR\"]\) array of \
trees.", "Documentation" -> <|
       "Local" -> "paclet:ref/RandomTree", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomTree.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomTree"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomVariate",
                ButtonNote->"paclet:ref/RandomVariate"],
               "\"paclet:ref/RandomVariate\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom variate from the symbolic distribution \
\\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom variates from the symbolic distribution \
\\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of pseudorandom variates \
from the symbolic distribution \\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomVariate",
                     "paclet:ref/RandomVariate", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomVariate.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomVariate.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"WorkingPrecision", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomVariate\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomVariate",
                ButtonNote->"paclet:ref/RandomVariate"],
               "\"paclet:ref/RandomVariate\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \
\\\"[\\\", StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a \
pseudorandom variate from the symbolic distribution \
\\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom variates from the symbolic distribution \
\\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomVariate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"dist\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) gives an \
\\!\\(\\*RowBox[{StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\" \\\", \\\"TI\\\"], StyleBox[SubscriptBox[StyleBox[\\\"n\\\", \\\
\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"TI\\\"], \\\"\[Times]\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}]\\) array of pseudorandom variates \
from the symbolic distribution \\!\\(\\*StyleBox[\\\"dist\\\", \
\\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomVariate\", \"[\", StyleBox[\"dist\", \"TI\"], \
\"]\"}]\) gives a pseudorandom variate from the symbolic distribution \
\!\(\*StyleBox[\"dist\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomVariate\", \"[\", \
RowBox[{StyleBox[\"dist\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\
\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom variates from \
the symbolic distribution \!\(\*StyleBox[\"dist\", \"TI\"]\).\n\!\(\*RowBox[{\
\"RandomVariate\", \"[\", RowBox[{StyleBox[\"dist\", \"TI\"], \",\", RowBox[{\
\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \
\"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \
\"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) \
gives an \!\(\*RowBox[{StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \"TI\"], \"\[Times]\", StyleBox[\" \", \"TI\"], \
StyleBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \"TI\
\"], \"\[Times]\", StyleBox[\"\[Ellipsis]\", \"TR\"]}]\) array of \
pseudorandom variates from the symbolic distribution \!\(\*StyleBox[\"dist\", \
\"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomVariate", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomVariate.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {Method -> Automatic, WorkingPrecision -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`RandomVariate"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomWalkProcess",
                ButtonNote->"paclet:ref/RandomWalkProcess"],
               "\"paclet:ref/RandomWalkProcess\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomWalkProcess\\\", \\\"[\
\\\", StyleBox[\\\"p\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents a random \
walk on a line with the probability of a positive unit step \
\\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\) and the probability of a negative \
unit step \\!\\(\\*RowBox[{\\\"1\\\", \\\"-\\\", StyleBox[\\\"p\\\", \\\"TI\\\
\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"RandomWalkProcess\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"p\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"q\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a random walk with the probability \
of a positive unit step \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\), the \
probability of a negative unit step \\!\\(\\*StyleBox[\\\"q\\\", \
\\\"TI\\\"]\\), and the probability of a zero step \
\\!\\(\\*RowBox[{\\\"1\\\", \\\"-\\\", StyleBox[\\\"p\\\", \\\"TI\\\"], \\\"-\
\\\", StyleBox[\\\"q\\\", \\\"TI\\\"]}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/RandomWalkProcess", 
                    "paclet:ref/RandomWalkProcess", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
RandomWalkProcess.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
RandomWalkProcess.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomWalkProcess\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomWalkProcess",
                ButtonNote->"paclet:ref/RandomWalkProcess"],
               "\"paclet:ref/RandomWalkProcess\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomWalkProcess\\\", \\\"[\
\\\", StyleBox[\\\"p\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents a random \
walk on a line with the probability of a positive unit step \
\\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\) and the probability of a negative \
unit step \\!\\(\\*RowBox[{\\\"1\\\", \\\"-\\\", StyleBox[\\\"p\\\", \\\"TI\\\
\"]}]\\).\\n\\!\\(\\*RowBox[{\\\"RandomWalkProcess\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"p\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"q\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) represents a random walk with the probability \
of a positive unit step \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\), the \
probability of a negative unit step \\!\\(\\*StyleBox[\\\"q\\\", \
\\\"TI\\\"]\\), and the probability of a zero step \
\\!\\(\\*RowBox[{\\\"1\\\", \\\"-\\\", StyleBox[\\\"p\\\", \\\"TI\\\"], \\\"-\
\\\", StyleBox[\\\"q\\\", \\\"TI\\\"]}]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomWalkProcess\", \"[\", StyleBox[\"p\", \"TI\"], \
\"]\"}]\) represents a random walk on a line with the probability of a \
positive unit step \!\(\*StyleBox[\"p\", \"TI\"]\) and the probability of a \
negative unit step \!\(\*RowBox[{\"1\", \"-\", StyleBox[\"p\", \"TI\"]}]\).\n\
\!\(\*RowBox[{\"RandomWalkProcess\", \"[\", RowBox[{StyleBox[\"p\", \"TI\"], \
\",\", StyleBox[\"q\", \"TI\"]}], \"]\"}]\) represents a random walk with the \
probability of a positive unit step \!\(\*StyleBox[\"p\", \"TI\"]\), the \
probability of a negative unit step \!\(\*StyleBox[\"q\", \"TI\"]\), and the \
probability of a zero step \!\(\*RowBox[{\"1\", \"-\", StyleBox[\"p\", \
\"TI\"], \"-\", StyleBox[\"q\", \"TI\"]}]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomWalkProcess", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomWalkProcess.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomWalkProcess"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomWeightedMixedGraph\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                  StripOnInput->False]},
                {
                 TemplateBox[{"\"\[ThinSpace]\"", 
                   GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomWeightedMixedGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", 
                    "threshold_", ",", "randomFunction_", ",", 
                    RowBox[{"options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
                    
                    RowBox[{
                    "0", "\[LessEqual]", "threshold", "\[LessEqual]", "1"}]}],
                     ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"RandomGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices", ",", "edges"}], "}"}], ",", 
                    "options"}], "]"}]}], ";", 
                    RowBox[{"replaceCount", "=", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeAdd", "[", 
                    RowBox[{
                    RowBox[{"EdgeDelete", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                    RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
                    "randomGraph", ",", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
                    "replaceCount"}], "]"}]}], "]"}], "]"}]}], ";", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"randomGraph", ",", 
                    RowBox[{"EdgeWeight", "\[Rule]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "\[Rule]", 
                    RowBox[{"randomFunction", "[", "]"}]}], "&"}], ")"}], 
                    "/@", 
                    RowBox[{"EdgeList", "[", "randomGraph", "]"}]}]}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`RandomWeightedMixedGraph\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"Global`RandomWeightedMixedGraph\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> "Global`RandomWeightedMixedGraph", 
      "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
      "DownValues" -> 
      Information`InformationValueForm[
       DownValues, $CellContext`RandomWeightedMixedGraph, {Condition[
           $CellContext`RandomWeightedMixedGraph[{
             Pattern[$CellContext`vertices, 
              Blank[]], 
             Pattern[$CellContext`edges, 
              Blank[]]}, 
            Pattern[$CellContext`threshold, 
             Blank[]], 
            Pattern[$CellContext`randomFunction, 
             Blank[]], 
            Pattern[$CellContext`options, 
             OptionsPattern[]]], 0 <= $CellContext`threshold <= 1] :> 
         Block[{$CellContext`replaceCount, $CellContext`randomGraph}, \
$CellContext`randomGraph = 
            RandomGraph[{$CellContext`vertices, $CellContext`edges}, \
$CellContext`options]; $CellContext`replaceCount = 
            Floor[$CellContext`threshold $CellContext`edges]; \
$CellContext`randomGraph = Graph[
              Fold[EdgeAdd[
                EdgeDelete[#, #2], 
                DirectedEdge[
                 First[#2], 
                 Last[#2]]]& , $CellContext`randomGraph, 
               RandomSample[
                
                EdgeList[$CellContext`randomGraph], \
$CellContext`replaceCount]]]; 
           Graph[$CellContext`randomGraph, EdgeWeight -> 
             Map[# -> $CellContext`randomFunction[]& , 
               EdgeList[$CellContext`randomGraph]]]]}], "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {}, "FullName" -> 
      "Global`RandomWeightedMixedGraph"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomWord",
                ButtonNote->"paclet:ref/RandomWord"],
               "\"paclet:ref/RandomWord\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom commonly used word.\\n\\!\\(\\*RowBox[{\\\
\"RandomWord\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \
gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom \
words.\\n\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
StyleBox[\\\"type\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom word \
of the specified \\!\\(\\*StyleBox[\\\"type\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"type\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom words of the specified \\!\\(\\*StyleBox[\\\"type\
\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomWord", 
                    "paclet:ref/RandomWord", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomWord.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomWord.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomWord\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/RandomWord",
                ButtonNote->"paclet:ref/RandomWord"],
               "\"paclet:ref/RandomWord\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
\\\"]\\\"}]\\) gives a pseudorandom commonly used word.\\n\\!\\(\\*RowBox[{\\\
\"RandomWord\\\", \\\"[\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) \
gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) pseudorandom \
words.\\n\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
StyleBox[\\\"type\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom word \
of the specified \\!\\(\\*StyleBox[\\\"type\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomWord\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"type\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) pseudorandom words of the specified \\!\\(\\*StyleBox[\\\"type\
\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"RandomWord\", \"[\", \"]\"}]\) gives a pseudorandom \
commonly used word.\n\!\(\*RowBox[{\"RandomWord\", \"[\", StyleBox[\"n\", \
\"TI\"], \"]\"}]\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) \
pseudorandom words.\n\!\(\*RowBox[{\"RandomWord\", \"[\", StyleBox[\"type\", \
\"TI\"], \"]\"}]\) gives a pseudorandom word of the specified \!\(\*StyleBox[\
\"type\", \"TI\"]\).\n\!\(\*RowBox[{\"RandomWord\", \"[\", \
RowBox[{StyleBox[\"type\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\
\) gives a list of \!\(\*StyleBox[\"n\", \"TI\"]\) pseudorandom words of the \
specified \!\(\*StyleBox[\"type\", \"TI\"]\).", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/RandomWord", "Web" -> 
        "http://reference.wolfram.com/language/ref/RandomWord.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, 
      "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
      "System`RandomWord"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SeedRandom",
                ButtonNote->"paclet:ref/SeedRandom"],
               "\"paclet:ref/SeedRandom\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SeedRandom\\\", \\\"[\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"]\\\"}]\\) resets the pseudorandom \
generator, using \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) as a seed. \
\\n\\!\\(\\*RowBox[{\\\"SeedRandom\\\", \\\"[\\\", \\\"]\\\"}]\\) resets the \
generator, using as a seed the time of day and certain attributes of the \
current \\!\\(\\*StyleBox[\\\"Wolfram System\\\", \\\"RebrandingTerm\\\"]\\) \
session. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/SeedRandom", 
                    "paclet:ref/SeedRandom", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/SeedRandom.\
html"], None}, "http://reference.wolfram.com/language/ref/SeedRandom.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", "Protected", "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SeedRandom\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SeedRandom",
                ButtonNote->"paclet:ref/SeedRandom"],
               "\"paclet:ref/SeedRandom\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SeedRandom\\\", \\\"[\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"], \\\"]\\\"}]\\) resets the pseudorandom \
generator, using \\!\\(\\*StyleBox[\\\"s\\\", \\\"TI\\\"]\\) as a seed. \
\\n\\!\\(\\*RowBox[{\\\"SeedRandom\\\", \\\"[\\\", \\\"]\\\"}]\\) resets the \
generator, using as a seed the time of day and certain attributes of the \
current \\!\\(\\*StyleBox[\\\"Wolfram System\\\", \\\"RebrandingTerm\\\"]\\) \
session. \"\>", "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SeedRandom\", \"[\", StyleBox[\"s\", \"TI\"], \
\"]\"}]\) resets the pseudorandom generator, using \!\(\*StyleBox[\"s\", \"TI\
\"]\) as a seed. \n\!\(\*RowBox[{\"SeedRandom\", \"[\", \"]\"}]\) resets the \
generator, using as a seed the time of day and certain attributes of the \
current \!\(\*StyleBox[\"Wolfram System\", \"RebrandingTerm\"]\) session. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SeedRandom", "Web" -> 
        "http://reference.wolfram.com/language/ref/SeedRandom.html"|>, 
      "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> {Method -> Automatic}, 
      "Attributes" -> {Protected}, "FullName" -> "System`SeedRandom"|>, 
     True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpatialRandomnessTest",
                ButtonNote->"paclet:ref/SpatialRandomnessTest"],
               "\"paclet:ref/SpatialRandomnessTest\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpatialRandomnessTest\\\", \
\\\"[\\\", StyleBox[\\\"pdata\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
the point collection \\!\\(\\*StyleBox[\\\"pdata\\\", \\\"TI\\\"]\\) is \
distributed uniformly over the observation \
region.\\n\\!\\(\\*RowBox[{\\\"SpatialRandomnessTest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"pdata\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\
\\\\!\\\\(\\\\*StyleBox[\\\\\\\"property\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\
\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) returns the value of \
\\\"\\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\)\\\".\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/SpatialRandomnessTest", 
                    "paclet:ref/SpatialRandomnessTest", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
SpatialRandomnessTest.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
SpatialRandomnessTest.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"PerformanceGoal", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"SignificanceLevel", "\[Rule]", 
                    FractionBox["1", "20"]}]}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                    RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`SpatialRandomnessTest\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/SpatialRandomnessTest",
                ButtonNote->"paclet:ref/SpatialRandomnessTest"],
               "\"paclet:ref/SpatialRandomnessTest\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"\\!\\(\\*RowBox[{\\\"SpatialRandomnessTest\\\", \
\\\"[\\\", StyleBox[\\\"pdata\\\", \\\"TI\\\"], \\\"]\\\"}]\\) tests whether \
the point collection \\!\\(\\*StyleBox[\\\"pdata\\\", \\\"TI\\\"]\\) is \
distributed uniformly over the observation \
region.\\n\\!\\(\\*RowBox[{\\\"SpatialRandomnessTest\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"pdata\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\\\\\\\"\
\\\\!\\\\(\\\\*StyleBox[\\\\\\\"property\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\
\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) returns the value of \
\\\"\\!\\(\\*StyleBox[\\\"property\\\", \\\"TI\\\"]\\)\\\".\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "\!\(\*RowBox[{\"SpatialRandomnessTest\", \"[\", StyleBox[\"pdata\", \
\"TI\"], \"]\"}]\) tests whether the point collection \
\!\(\*StyleBox[\"pdata\", \"TI\"]\) is distributed uniformly over the \
observation region.\n\!\(\*RowBox[{\"SpatialRandomnessTest\", \"[\", \
RowBox[{StyleBox[\"pdata\", \"TI\"], \",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\
\\\"property\\\",\\\"TI\\\"]\\)\\\"\", ShowStringCharacters->True]}], \"]\"}]\
\) returns the value of \"\!\(\*StyleBox[\"property\", \"TI\"]\)\".", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/SpatialRandomnessTest", "Web" -> 
        "http://reference.wolfram.com/language/ref/SpatialRandomnessTest.\
html"|>, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
      "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, 
      "Options" -> {
       Method -> Automatic, PerformanceGoal -> Automatic, SignificanceLevel -> 
        Rational[1, 20]}, "Attributes" -> {Protected, ReadProtected}, 
      "FullName" -> "System`SpatialRandomnessTest"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/$RandomGeneratorState",
                ButtonNote->"paclet:ref/$RandomGeneratorState"],
               "\"paclet:ref/$RandomGeneratorState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"$RandomGeneratorState gives a representation of \
the internal state of the default pseudorandom generator.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                  StripOnInput->False]},
                {
                 TemplateBox[{"\"\[ThinSpace]\"", 
                   GridBox[{{
                    RowBox[{"$RandomGeneratorState", "=", 
                    TagBox[
                    RowBox[{"RandomGeneratorState", "[", 
                    RowBox[{"\"ExtendedCA\"", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"<\"", ",", 
                    RowBox[{"ShowStringCharacters", "\[Rule]", "False"}], ",", 
                    RowBox[{"StripOnInput", "\[Rule]", "True"}]}], "]"}], ",",
                     "\"StateData\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\">\"", ",", 
                    RowBox[{"ShowStringCharacters", "\[Rule]", "False"}], ",", 
                    RowBox[{"StripOnInput", "\[Rule]", "True"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"StripOnInput", "\[Rule]", "True"}]}], "]"}]}], 
                    "]"}], False, Editable -> False, SelectWithContents -> 
                    True]}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/$RandomGeneratorState", 
                    "paclet:ref/$RandomGeneratorState", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/$\
RandomGeneratorState.html"], None}, 
                    "http://reference.wolfram.com/language/ref/$\
RandomGeneratorState.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`$RandomGeneratorState\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/$RandomGeneratorState",
                ButtonNote->"paclet:ref/$RandomGeneratorState"],
               "\"paclet:ref/$RandomGeneratorState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"$RandomGeneratorState gives a representation of \
the internal state of the default pseudorandom generator.\"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "$RandomGeneratorState gives a representation of the internal state of \
the default pseudorandom generator.", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/$RandomGeneratorState", "Web" -> 
        "http://reference.wolfram.com/language/ref/$RandomGeneratorState.\
html"|>, "OwnValues" -> 
      Information`InformationValueForm[
       OwnValues, $RandomGeneratorState, {$RandomGeneratorState -> 
         RandomGeneratorState[{"ExtendedCA", {80, 4, 0}}, {{
             RawArray[
             "UnsignedInteger64", {
              200, 0, 122707, 19, 2, 88355353295, 1255397536204629905, 
               4949098877438333531, 12120939468777262203, 
               18050325456994069567, 17342801310523964694, 
               6619616326995261248, 6326770080334976798, 17068314833896601919,
                13244735847217691010, 15386833120878484082, 
               1659739851727131179, 8218970842743985742, 8216351159695926374, 
               14174326517332257899}], 0, 20, 20}, {
             RawArray["UnsignedInteger64", CompressedData["
1:eJw9lUuOVDsMhnvACoAN3AUg+RnbS2iJAWIJDJAYMeDuX3w5SVGD6q6cE8f+
X/nvx+/vP7+9vb39+cDX119//n//xD9LUmU63WtNT+SS98+sf1GV9FjLW2TZ
yi57NkSUlMYKFVtr6Ug+6ynh7tqWq0aVjXUK2Yolmh2tosOG0PNgtFTNpSWr
usNl7o5xXTFmHbWqzfw+GJPJWS4rRT3bw+4OKlMg3LqWND/XnWLWjExRstQs
q+/hyVrxvqxi8pDRe8biNKajJ1f10Fr9zGfAYUuYzdNHl9z1FONUwJoAAWNO
f9aZyAI4qyLChGr9/nGvp9F5r2Cw4nWJW565jOY1pNV1Ss86IO92XJz+R3zm
0qDtSwHI1QuKOu5gDCq1DDagVmtKTp8TMWNwRL0G9uyzoccqK7OBoJgMEs8J
UlRnlU4VTIROnwEGRhWwgzojMkcXHJxGp5kDkd40fOtH+qKKltgYdfTU50QQ
Y6ROHTZvQO8GFuNpvVoMGdwHQZ21smQFqGxNXc40B6zRijNXhOflBkQRCixs
pSBAKHlGcFOAXFOBzhCs3VaBtFkqrYAkge+rr0byWsmsmzBEbgfULwioEDQY
aTWIyz0YjDLRRKMTwVuWV6gZKAgMNhSyNXvQS9QII6jdtxEgoZ71XpajvWUn
E7DQZ714w0APA+mmAUVdloHFkvlmAUTjlCMjXGz4Df4bLRlUP0jkniYhDjPW
FvXhZsTAhVlbtSGTja/+feVwHL3TEJxeo22RwlYjx+qh0MuzjuaS8di40OaO
gAs2NBtC13yg3UCdVkfhCl0hv+rcorkkFK1qEyDNwL4V8MyATWe7cABN2Jqn
zhYnJsitsX3uFuQDXWagI/ri70IZZMVeJz2QD6jBnWOEfiUCOocFNUi1oDdq
nUbRFumC9Zm2toyuBRunEmtE6XigFwLrZTXa4XVYxD0I0/QFK6VZhexZ1I/6
52ZHP6hgkRioXOLw6TYkxAZPIHb4HP7PEnMUXwgs48YLDjeqOkRb7ACTCwZc
8ZJsTfODZi9tQQoCU3QicSz5ItqKyK9Cr9VofEih86AwKrm91e1wQB8HV932
D5DwpuXE85cfrgOyhExKKMeddV1Ye3dufnpHyQ661wOuIVIV1eUgqZn7AMdu
k+fiLqMsrR2GNo6GU6CydwNVpyXYTT7SMbDWSDyuZIhgCELBiI1YWud94p1e
gwtvp0sY9jn1WSagOHjTnI2kD9qAnZsg7jbegI6bYLZvWE0qk9Aw4W2XNu4t
0nzIvB0/3Dp/AbHwXPQ=
              "]], 4, 0}}, 
           RawArray["UnsignedInteger64", {14538324463913099283, 0}]]}], 
      "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
      "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
      "Options" -> None, "Attributes" -> {}, "FullName" -> 
      "System`$RandomGeneratorState"|>, True]], ",", 
   InterpretationBox[
    StyleBox[
     FrameBox[
      DynamicModuleBox[{System`InformationDump`open$$ = True, 
       System`InformationDump`mouseOver$$ = False}, 
       PaneSelectorBox[{True->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False,
               BaseStyle -> None],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"],
                  ImageSizeCache->{13., {4., 9.}}], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"],
                  ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/$RandomState",
                ButtonNote->"paclet:ref/$RandomState"],
               "\"paclet:ref/$RandomState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"$RandomState gives a representation of the \
internal state of the pseudorandom generator used by Random. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[GridBox[{
                {
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    StyleBox["\<\" Assignment\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"OwnValues\"",
                    TooltipStyle->"TextStyling"],
                   Annotation[#, "OwnValues", "Tooltip"]& ], "DialogStyle",
                  StripOnInput->False]},
                {
                 TemplateBox[{"\"\[ThinSpace]\"", 
                   GridBox[{{
                    
                    RowBox[{
                    "$RandomState", "=", 
                    "302059715293635385660859271032427156280045886403544720850\
818202392757050834117794334635120714397979597792860511534834284580019588170481\
908492353464424824454267734898461131220787289960510622653936298771012824825302\
987149476059627594458515371588973235174436313498698645382545518678642889649875\
868518225515690866494127737709350927461180029368878998528561497936626567869634\
791056120084573076280677298239916308769900033871292126418163368863109420079943\
113017192112537248571038588037421855439317158556087672875202251379945792279617\
11644565019848624576898290493008670337197747867904473"}]}, {" "}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  "RowDefault"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
           {
            PaneBox[GridBox[{
               {
                
                DynamicModuleBox[{System`InformationDump`open$$ = {
                 False, False, False, False, False, False}}, 
                 StyleBox[GridBox[{
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                    TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/$RandomState", 
                    "paclet:ref/$RandomState", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/$RandomState.\
html"], None}, "http://reference.wolfram.com/language/ref/$RandomState.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                    {
                    TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`$RandomState\"\>"}
                   },
                   AutoDelete->False,
                   GridBoxAlignment->{"Columns" -> {Right, Left}},
                   GridBoxDividers->None,
                   GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                  StripOnInput->False],
                 DynamicModuleValues:>{}]}
              },
              DefaultBaseStyle->"Column",
              GridBoxAlignment->{"Columns" -> {{Left}}},
              GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.5599999999999999]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[3.6]}, 
                  Offset[0.2]}}],
             FrameMargins->{{6, 6}, {6, 3}}], ""},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpener"],
                 ImageSizeCache->{10., {3., 7.}}], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "UpPointerOpenerHot"],
                 ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, False],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"], False->
        TagBox[GridBox[{
           {
            ItemBox[
             PaneBox[
              StyleBox["\<\" Symbol\"\>", "InformationTitleText",
               StripOnInput->False],
              FrameMargins->{{4, 0}, {-1, 1}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], 
            ItemBox[
             PaneBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIcon"]], True->
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                  CurrentValue["MouseOver"]]],
                Appearance->None,
                BaseStyle->"Link",
                ButtonData->"paclet:ref/$RandomState",
                ButtonNote->"paclet:ref/$RandomState"],
               "\"paclet:ref/$RandomState\""],
              FrameMargins->{{0, 4}, {0, 2}}],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             PaneBox[
              
              StyleBox["\<\"$RandomState gives a representation of the \
internal state of the pseudorandom generator used by Random. \"\>", 
               "InformationUsageText",
               StripOnInput->False,
               LineSpacing->{1.5, 1.5, 3.}],
              FrameMargins->{{10, 10}, {8, 10}}],
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False], 
            ItemBox["\<\"\"\>",
             BaseStyle->"InformationUsageSubtitleBackground",
             StripOnInput->False]},
           {
            ItemBox[
             TagBox[
              ButtonBox[
               PaneSelectorBox[{False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpener"]], True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
                System`InformationDump`mouseOver$$]],
               Alignment->Left,
               Appearance->{"Default" -> None},
               
               ButtonFunction:>FEPrivate`Set[
                System`InformationDump`open$$, True],
               Evaluator->Automatic,
               FrameMargins->{{9, 0}, {0, 0}},
               ImageMargins->0,
               ImageSize->Full,
               Method->"Preemptive"],
              
              EventHandlerTag[{
               "MouseEntered" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
                "MouseExited" :> 
                FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
                Method -> "Preemptive", PassEventsDown -> Automatic, 
                PassEventsUp -> True}]],
             BaseStyle->"InformationTitleBackground",
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          FrameStyle->Directive[
            GrayLevel[0.8], 
            Thickness[Tiny]],
          GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
          
          GridBoxDividers->{
           "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}, Dynamic[System`InformationDump`open$$],
        BaselinePosition->Baseline,
        FrameMargins->0,
        ImageSize->Automatic],
       DynamicModuleValues:>{}],
      BaseStyle->"InformationGridFrame",
      StripOnInput->False], "InformationGridPlain",
     StripOnInput->False],
    InformationData[<|
     "ObjectType" -> "Symbol", "Usage" -> 
      "$RandomState gives a representation of the internal state of the \
pseudorandom generator used by Random. ", 
      "Documentation" -> <|
       "Local" -> "paclet:ref/$RandomState", "Web" -> 
        "http://reference.wolfram.com/language/ref/$RandomState.html"|>, 
      "OwnValues" -> 
      Information`InformationValueForm[
       OwnValues, $RandomState, {$RandomState -> 
         302059715293635385660859271032427156280045886403544720850818202392757\
050834117794334635120714397979597792860511534834284580019588170481908492353464\
424824454267734898461131220787289960510622653936298771012824825302987149476059\
627594458515371588973235174436313498698645382545518678642889649875868518225515\
690866494127737709350927461180029368878998528561497936626567869634791056120084\
573076280677298239916308769900033871292126418163368863109420079943113017192112\
537248571038588037421855439317158556087672875202251379945792279617116445650198\
48624576898290493008670337197747867904473}], "UpValues" -> None, "DownValues" -> 
      None, "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
      "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
      "FullName" -> "System`$RandomState"|>, True]]}], "}"}]], "Output",
 CellChangeTimes->{3.8741428020503583`*^9},
 CellLabel->"Out[50]=",
 CellID->11922385,ExpressionUUID->"12f3bcd9-4f62-4f89-804c-45175ff117f6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Edge Labels", "Section",
 CellChangeTimes->{{3.8741430101282077`*^9, 3.874143011839307*^9}},
 CellID->544653339,ExpressionUUID->"56273a81-39f7-46ff-85cc-de35e9038fd2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomMixedGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "30"}], "}"}], ",", "0.5", ",", 
   RowBox[{"EdgeLabels", "->", "\"\<EdgeWeight\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.874143012370493*^9, 3.874143037478215*^9}, {
  3.8741431173109164`*^9, 3.8741431194648786`*^9}},
 CellLabel->"In[9]:=",
 CellID->111550531,ExpressionUUID->"fcc866ba-6190-4561-a36d-7777118236b7"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKIYBRjSaAYscLQGxdtDTfejm0jocqGE+KWbQwj/0
DjNqAHq5cSiExSgYBfQAxJYTxOQZWuYraplNablISD01w2C0nBoYwMgwcsN+
oNqdgwmMNP+CAAB4tQH+
      "], {EdgeLabels -> {"EdgeWeight"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], {
         {Arrowheads[0.], 
          ArrowBox[{{1.2168725850478077`, 2.2639003467526417`}, {
           1.4931403902175397`, 1.5487609465524905`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.3550064876326737, 1.9063306466525662}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.2168725850478077`, 2.2639003467526417`}, {
           2.0361487536500884`, 1.7455125999148824`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.626510669348948, 2.004706473333762}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.2168725850478077`, 2.2639003467526417`}, {
          0.5981233520301361, 2.7039182166067026`}}, 0.05281308740722328], 
         InsetBox["1", {0.9074979685389719, 2.483909281679672}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.2168725850478077`, 2.2639003467526417`}, {
           1.1180032754324294`, 3.21212748875372}}, 0.05281308740722328]}, 
         InsetBox["\<\"EdgeWeight\"\>", {1.1674379302401185, 2.7380139177531806},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.2168725850478077`, 2.2639003467526417`}, {
           2.0169277104881544`, 2.6623183623485263`}}, 0.05281308740722328]}, 
         InsetBox["\<\"EdgeWeight\"\>", {1.6169001477679812, 2.4631093545505838},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.588817423815887, 2.046513618134146}, {
           2.0169277104881544`, 2.6623183623485263`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.8028725671520207, 2.3544159902413364}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.588817423815887, 2.046513618134146}, {
           1.3450874480970456`, 2.5864881595542224`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.4669524359564663, 2.3165008888441845}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.588817423815887, 2.046513618134146}, {
          1.4931403902175397`, 1.5487609465524905`}}, 0.05281308740722328], 
         InsetBox["1", {1.5409789070167133, 1.7976372823433184}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1180032754324294`, 3.21212748875372}, {
           1.1236098685365525`, 4.244826400169961}}, 0.05281308740722328]}, 
         InsetBox["1", {1.1208065719844909, 3.7284769444618404}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.1180032754324294`, 3.21212748875372}, {
          0.5981233520301361, 2.7039182166067026`}}, 0.05281308740722328], 
         InsetBox["1", {0.8580633137312828, 2.9580228526802115}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1180032754324294`, 3.21212748875372}, {
           2.0169277104881544`, 2.6623183623485263`}}, 0.05281308740722328]}, 
         InsetBox["\<\"EdgeWeight\"\>", {1.567465492960292, 2.937222925551123},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.4165222161438895`, 1.0065279789708568`}, {
           1.4931403902175397`, 1.5487609465524905`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.9548313031807147, 1.2776444627616736}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.4165222161438895`, 1.0065279789708568`}, {
           2.0361487536500884`, 1.7455125999148824`}}, 0.05281308740722328]}, 
         InsetBox["1", {2.226335484896989, 1.3760202894428697}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.4165222161438895`, 1.0065279789708568`}, {
          3.1849890276422363`, 1.7738810944254664`}}, 0.05281308740722328], 
         InsetBox["1", {2.800755621893063, 1.3902045366981617}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.4165222161438895`, 1.0065279789708568`}, {
          2.5853539092729054`, 0.}}, 0.05281308740722328], 
         InsetBox["1", {2.5009380627083972, 0.5032639894854284}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0169277104881544`, 2.6623183623485263`}, {
           3.2055452662349775`, 2.8978302795859348`}}, 0.05281308740722328]}, 
         InsetBox["1", {2.611236488361566, 2.7800743209672305}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{2.0169277104881544`, 2.6623183623485263`}, {
           2.0361487536500884`, 1.7455125999148824`}}, 0.05281308740722328]}, 
         InsetBox["1", {2.0265382320691216, 2.2039154811317045}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.0169277104881544`, 2.6623183623485263`}, {
          2.0234266826059515`, 3.380701321416498}}, 0.05281308740722328], 
         InsetBox["1", {2.0201771965470527, 3.021509841882512}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{0.4873139441735588, 5.3115485758385965`}, {0., 
           6.098210204463429}}, 0.05281308740722328]}, 
         InsetBox["1", {0.2436569720867794, 5.704879390151013}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.4873139441735588, 5.3115485758385965`}, {
          1.1236098685365525`, 4.244826400169961}}, 0.05281308740722328], 
         InsetBox["1", {0.8054619063550557, 4.778187488004279}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{6.676030315054124, 4.251950349621524}, {5.989802349506185,
           3.6675496047186136`}}, 0.05281308740722328], 
         InsetBox["1", {6.3329163322801545, 3.959749977170069}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{5.989802349506185, 3.6675496047186136`}, {
          4.683764557405849, 3.3139736352520845`}}, 0.05281308740722328], 
         InsetBox["1", {5.336783453456016, 3.4907616199853493}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{5.989802349506185, 3.6675496047186136`}, {
           6.878902515199842, 3.5080126208690676`}}, 0.05281308740722328]}, 
         InsetBox["\<\"EdgeWeight\"\>", {6.4343524323530135, 3.5877811127938406},
           ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.5981233520301361, 2.7039182166067026`}, {
          1.3450874480970456`, 2.5864881595542224`}}, 0.05281308740722328], 
         InsetBox["1", {0.9716054000635909, 2.6452031880804627}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3.2055452662349775`, 2.8978302795859348`}, {
           3.1849890276422363`, 1.7738810944254664`}}, 0.05281308740722328]}, 
         InsetBox["1", {3.195267146938607, 2.335855687005701}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{3.2055452662349775`, 2.8978302795859348`}, {
           4.683764557405849, 3.3139736352520845`}}, 0.05281308740722328]}, 
         InsetBox["1", {3.944654911820413, 3.1059019574190097}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3.2055452662349775`, 2.8978302795859348`}, {
          2.0234266826059515`, 3.380701321416498}}, 0.05281308740722328], 
         InsetBox["1", {2.6144859744204645, 3.1392658005012164}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.3450874480970456`, 2.5864881595542224`}, {
           1.4931403902175397`, 1.5487609465524905`}}, 0.05281308740722328]}, 
         InsetBox["1", {1.4191139191572928, 2.0676245530533564}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.3450874480970456`, 2.5864881595542224`}, {
           2.0234266826059515`, 3.380701321416498}}, 0.05281308740722328]}, 
         InsetBox["1", {1.6842570653514986, 2.98359474048536}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {Arrowheads[0.], 
          ArrowBox[{{1.1236098685365525`, 4.244826400169961}, {
           2.0234266826059515`, 3.380701321416498}}, 0.05281308740722328]}, 
         InsetBox["1", {1.573518275571252, 3.8127638607932295}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        DiskBox[{1.2168725850478077, 2.2639003467526417}, 
         0.05281308740722328], 
        DiskBox[{1.588817423815887, 2.046513618134146}, 0.05281308740722328], 
        DiskBox[{1.1180032754324294, 3.21212748875372}, 0.05281308740722328], 
        DiskBox[{2.4165222161438895, 1.0065279789708568}, 
         0.05281308740722328], 
        DiskBox[{2.0169277104881544, 2.6623183623485263}, 
         0.05281308740722328], 
        DiskBox[{0.4873139441735588, 5.3115485758385965}, 
         0.05281308740722328], 
        DiskBox[{6.676030315054124, 4.251950349621524}, 0.05281308740722328], 
        DiskBox[{5.989802349506185, 3.6675496047186136}, 0.05281308740722328],
         DiskBox[{6.878902515199842, 3.5080126208690676}, 
         0.05281308740722328], 
        DiskBox[{0.5981233520301361, 2.7039182166067026}, 
         0.05281308740722328], 
        DiskBox[{3.2055452662349775, 2.8978302795859348}, 
         0.05281308740722328], 
        DiskBox[{3.1849890276422363, 1.7738810944254664}, 
         0.05281308740722328], 
        DiskBox[{4.683764557405849, 3.3139736352520845}, 0.05281308740722328],
         DiskBox[{1.3450874480970456, 2.5864881595542224}, 
         0.05281308740722328], 
        DiskBox[{1.4931403902175397, 1.5487609465524905}, 
         0.05281308740722328], 
        DiskBox[{2.5853539092729054, 0.}, 0.05281308740722328], 
        DiskBox[{1.1236098685365525, 4.244826400169961}, 0.05281308740722328],
         DiskBox[{0., 6.098210204463429}, 0.05281308740722328], 
        DiskBox[{2.0361487536500884, 1.7455125999148824}, 
         0.05281308740722328], 
        DiskBox[{2.0234266826059515, 3.380701321416498}, 
         0.05281308740722328]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{379.8, Automatic}]], "Output",
 CellChangeTimes->{{3.874143026424617*^9, 3.8741430378216825`*^9}, {
  3.8741431132636633`*^9, 3.874143119886467*^9}},
 CellLabel->"Out[10]=",
 CellID->237325083,ExpressionUUID->"4155c2f3-3282-4329-827f-8206834f5535"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputForm", "[", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], ",", "0.5", ",", 
    RowBox[{"EdgeLabels", "->", "\"\<EdgeWeight\>\""}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.874143052675041*^9, 3.874143054315655*^9}, {
  3.874143125371107*^9, 3.874143127280221*^9}},
 CellLabel->"In[11]:=",
 CellID->311576868,ExpressionUUID->"9c3cd047-8699-4909-baea-6c783aef23f2"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 3, 4, 6, 8, 9, 10, 11, 13, 13, \
14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15}, {{10}, {3}, {5}, 
     {15}, {10}, {5}, {12}, {16}, {20}, {17}, {8}, {13}, {9}, {14}, {20}}}, \
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], 
  SparseArray[Automatic, {20, 20}, 0, {1, {{0, 2, 4, 5, 7, 9, 10, 10, 10, 10, \
10, 12, 12, 12, 14, 14, 14, 15, 15, 15, 15}, {{15}, {19}, {5}, 
     {14}, {17}, {15}, {19}, {11}, {19}, {18}, {12}, {13}, {15}, {20}, \
{20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, 
 {EdgeLabels -> {\"EdgeWeight\"}}]\
\>", "Output",
 CellChangeTimes->{3.874143054627907*^9, 3.8741431275924754`*^9},
 CellLabel->"Out[12]//InputForm=",
 CellID->21755356,ExpressionUUID->"edfd9015-9f58-42f1-b87a-9032c4bf7b96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RandomMixedGraph"}]], "Input",
 CellChangeTimes->{{3.8741430662529016`*^9, 3.87414306786261*^9}},
 CellLabel->"In[7]:=",
 CellID->331611524,ExpressionUUID->"f3419ec1-e11b-4479-9953-0328a0ebf089"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`RandomMixedGraph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomMixedGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices_", ",", "edges_"}], "}"}], ",", 
                    "threshold_", ",", 
                    RowBox[{"options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
                    
                    RowBox[{
                    "0", "\[LessEqual]", "threshold", "\[LessEqual]", "1"}]}],
                     ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"replaceCount", ",", "randomGraph"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"RandomGraph", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"vertices", ",", "edges"}], "}"}], ",", 
                    "options"}], "]"}]}], ";", 
                    RowBox[{"replaceCount", "=", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"threshold", " ", "edges"}], "]"}]}], ";", 
                    RowBox[{"randomGraph", "=", 
                    RowBox[{"Graph", "[", 
                    RowBox[{"Fold", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EdgeAdd", "[", 
                    RowBox[{
                    RowBox[{"EdgeDelete", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "\[DirectedEdge]", 
                    RowBox[{"Last", "[", "#2", "]"}]}]}], "]"}], "&"}], ",", 
                    "randomGraph", ",", 
                    RowBox[{"RandomSample", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "randomGraph", "]"}], ",", 
                    "replaceCount"}], "]"}]}], "]"}], "]"}]}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`RandomMixedGraph\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`RandomMixedGraph\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`RandomMixedGraph", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`RandomMixedGraph, {Condition[
         $CellContext`RandomMixedGraph[{
           Pattern[$CellContext`vertices, 
            Blank[]], 
           Pattern[$CellContext`edges, 
            Blank[]]}, 
          Pattern[$CellContext`threshold, 
           Blank[]], 
          Pattern[$CellContext`options, 
           OptionsPattern[]]], 0 <= $CellContext`threshold <= 1] :> 
       Block[{$CellContext`replaceCount, $CellContext`randomGraph}, \
$CellContext`randomGraph = 
          RandomGraph[{$CellContext`vertices, $CellContext`edges}, \
$CellContext`options]; $CellContext`replaceCount = 
          Floor[$CellContext`threshold $CellContext`edges]; \
$CellContext`randomGraph = Graph[
            Fold[EdgeAdd[
              EdgeDelete[#, #2], 
              DirectedEdge[
               First[#2], 
               Last[#2]]]& , $CellContext`randomGraph, 
             RandomSample[
              
              EdgeList[$CellContext`randomGraph], \
$CellContext`replaceCount]]]]}], "SubValues" -> None, "DefaultValues" -> None,
     "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`RandomMixedGraph"|>, 
   False]]], "Output",
 CellChangeTimes->{3.874143068159368*^9},
 CellLabel->"Out[7]=",
 CellID->17138060,ExpressionUUID->"485d9bdf-814c-48f6-94c4-e5081a39d408"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Subgraph", "Section",
 CellChangeTimes->{{3.8741432596873755`*^9, 3.8741432608533716`*^9}},
 CellID->53704207,ExpressionUUID->"e232b33b-e1ee-4c78-bdd9-bd99e563687d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomMixedGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "80"}], "}"}], ",", "0.4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8741432615874605`*^9, 3.874143294601058*^9}},
 CellLabel->"In[15]:=",
 CellID->259240167,ExpressionUUID->"12464f98-eb74-4e5f-9b0a-b0c2b283d108"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKCYGMBKpBps6XHoZ8ajBZRYhcwipw6eWEY2m1DxC
etFpSs1CNodUs4gJF3IBpfppbR6tzB0q7qQlGEpupQYYaf5FBqSUn6SWUcSa
SaxZ2OobXOYRU28QquPILZexmUUtNdRIq+h+QuaT0hYgV81gyW/k+hWbHlrW
xejmDCbzGBmok0/QzcTHp6bZIwHQws8AriwCMA==
      "]]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQnXWt/+SD7Gv2e63zBS8s+2Pfx1d1uL73hT0DFJiJ
d3abm32073Zvu3rtwgd7Fe3bM5LyP9oz3tFTKfV6bF+k96n6Wvkj+6oZkQmJ
aY/smXTumj54/NOewf9X/bPmOfZ5zm0Mt/78stc8HKi8suerPUN44oboJDaH
C+pambeWfLbfIdv1QaieyUGs+WvK3J2X7BvELzue45ltH/S1T73j8y/7RatO
m3n++27/wlb9kuDXh/YeouEW00r+2VesyN24LOyv/Rn+e4q39VgcGJ1+5fdn
PLN/VOllZPrxmb3HZg121b+f7J+lr/8p+v62ve3nBW5WR97b/7hqYOd76Ki9
wnG2sMbtK+01C1dP5pjJ4LB6/2PXtLpv9hZ8P33eJ/+1577zR6Kk/Bk8HGxX
rVIpinttL+evU3/30xd7FRvF/Vcjv9kDAMjEl7Q=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.02877337894785574]}, 
         ArrowBox[{1, 10}, 0.02877337894785574], 
         ArrowBox[{1, 19}, 0.02877337894785574], 
         ArrowBox[{1, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.02877337894785574]}, 
         ArrowBox[{2, 11}, 0.02877337894785574], 
         ArrowBox[{2, 14}, 0.02877337894785574], 
         ArrowBox[{2, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.02877337894785574]}, 
         ArrowBox[{2, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.02877337894785574]}, 
         ArrowBox[{3, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.02877337894785574]}, 
         ArrowBox[{3, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 16}, 0.02877337894785574]}, 
         ArrowBox[{4, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 19}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 20}, 0.02877337894785574]}, 
         ArrowBox[{5, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{5, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 14}, 0.02877337894785574]}, 
         ArrowBox[{5, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.02877337894785574]}, 
         ArrowBox[{6, 13}, 0.02877337894785574], 
         ArrowBox[{6, 17}, 0.02877337894785574], 
         ArrowBox[{6, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 20}, 0.02877337894785574]}, 
         ArrowBox[{7, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 20}, 0.02877337894785574]}, 
         ArrowBox[{8, 13}, 0.02877337894785574], 
         ArrowBox[{9, 13}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{10, 19}, 0.02877337894785574]}, 
         ArrowBox[{10, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.02877337894785574]}, 
         ArrowBox[{11, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{12, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{12, 20}, 0.02877337894785574]}, 
         ArrowBox[{12, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{13, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{13, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.02877337894785574]}, 
         ArrowBox[{14, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{15, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.02877337894785574]}, 
         ArrowBox[{17, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.02877337894785574]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02877337894785574], DiskBox[2, 0.02877337894785574], 
         DiskBox[3, 0.02877337894785574], DiskBox[4, 0.02877337894785574], 
         DiskBox[5, 0.02877337894785574], DiskBox[6, 0.02877337894785574], 
         DiskBox[7, 0.02877337894785574], DiskBox[8, 0.02877337894785574], 
         DiskBox[9, 0.02877337894785574], DiskBox[10, 0.02877337894785574], 
         DiskBox[11, 0.02877337894785574], DiskBox[12, 0.02877337894785574], 
         DiskBox[13, 0.02877337894785574], DiskBox[14, 0.02877337894785574], 
         DiskBox[15, 0.02877337894785574], DiskBox[16, 0.02877337894785574], 
         DiskBox[17, 0.02877337894785574], DiskBox[18, 0.02877337894785574], 
         DiskBox[19, 0.02877337894785574], 
         DiskBox[20, 0.02877337894785574]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8741432666187086`*^9, 3.874143295007056*^9}},
 CellLabel->"Out[16]=",
 CellID->117585957,ExpressionUUID->"62fb87d4-08ac-4155-aca6-2fe328a20cd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Subgraph", "[", 
  RowBox[{
   RowBox[{"RandomMixedGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "80"}], "}"}], ",", "0.4"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.87414327553442*^9, 3.8741433019142675`*^9}},
 CellLabel->"In[18]:=",
 CellID->224782917,ExpressionUUID->"2cad6837-8fe6-40a0-8aaf-e7036777e52f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 3}, {Null, 
       SparseArray[
       Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, Pattern}]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[{{1., 0.}, {-1., 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.874143279502845*^9, 3.8741433023045015`*^9}},
 CellLabel->"Out[19]=",
 CellID->443318181,ExpressionUUID->"092a032e-eec9-4942-b268-da43a3e80fb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";", 
  RowBox[{"EdgeWeightedGraphQ", "[", 
   RowBox[{"RandomMixedGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "80"}], "}"}], ",", "0.4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8741432832218914`*^9, 3.874143315617964*^9}},
 CellLabel->"In[20]:=",
 CellID->371937608,ExpressionUUID->"1489ae4d-79b1-464a-b4f8-1c7a5b7a6761"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8741433211335583`*^9},
 CellLabel->"Out[20]=",
 CellID->775925205,ExpressionUUID->"98b0346d-506b-4a2a-b0f3-0290abdf3e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], 
  ";"}], "\[IndentingNewLine]", "$RandomGeneratorState", \
"\[IndentingNewLine]", 
 RowBox[{"randomweights", "=", 
  RowBox[{"BlockRandom", "[", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "11"}], "}"}], ",", "80"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", "$RandomGeneratorState", "\
\[IndentingNewLine]", 
 RowBox[{"BlockRandom", "@", 
  RowBox[{"RandomMixedGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
    RowBox[{"EdgeWeight", "->", "randomweights"}]}], 
   "]"}]}], "\[IndentingNewLine]", "$RandomGeneratorState", "\
\[IndentingNewLine]", 
 RowBox[{"BlockRandom", "[", 
  RowBox[{"InputForm", "[", 
   RowBox[{"RandomMixedGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
     RowBox[{"EdgeWeight", "->", "randomweights"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", "$RandomGeneratorState", \
"\[IndentingNewLine]", 
 RowBox[{"BlockRandom", "[", 
  RowBox[{"EdgeWeightedGraphQ", "[", 
   RowBox[{"RandomMixedGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
     RowBox[{"EdgeWeight", "->", "randomweights"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", "$RandomGeneratorState", \
"\[IndentingNewLine]", 
 RowBox[{"BlockRandom", "[", 
  RowBox[{"MixedGraphQ", "[", 
   RowBox[{"RandomMixedGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
     RowBox[{"EdgeWeight", "->", "randomweights"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", "$RandomGeneratorState", \
"\[IndentingNewLine]", 
 RowBox[{"BlockRandom", "[", 
  RowBox[{"Subgraph", "[", 
   RowBox[{
    RowBox[{"RandomMixedGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"20", ",", "80"}], "}"}], ",", "0.4", ",", 
      RowBox[{"EdgeWeight", "->", "randomweights"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8741432832218914`*^9, 3.8741434370832863`*^9}, {
  3.874143484927653*^9, 3.8741435298333006`*^9}, {3.874143564879236*^9, 
  3.874143575279847*^9}},
 CellLabel->"In[116]:=",
 CellID->323785945,ExpressionUUID->"a669fbfb-e0f6-4628-b9da-730510157ff6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.874143575764127*^9},
 CellLabel->"Out[117]=",
 CellID->82976417,ExpressionUUID->"30810113-4360-4de0-9268-1534980281e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "5", ",", "1", ",", "8", ",", "1", ",", "1", ",", "9", ",", "7", 
   ",", "1", ",", "5", ",", "2", ",", "9", ",", "6", ",", "2", ",", "2", ",", 
   "2", ",", "4", ",", "3", ",", "11", ",", "2", ",", "7", ",", "1", ",", "3",
    ",", "7", ",", "5", ",", "6", ",", "5", ",", "4", ",", "1", ",", "2", ",",
    "4", ",", "6", ",", "4", ",", "1", ",", "4", ",", "3", ",", "4", ",", 
   "10", ",", "6", ",", "2", ",", "6", ",", "3", ",", "4", ",", "10", ",", 
   "2", ",", "1", ",", "5", ",", "5", ",", "2", ",", "6", ",", "3", ",", "8", 
   ",", "10", ",", "10", ",", "9", ",", "11", ",", "1", ",", "11", ",", "11", 
   ",", "8", ",", "5", ",", "10", ",", "3", ",", "7", ",", "4", ",", "3", ",",
    "2", ",", "2", ",", "7", ",", "2", ",", "2", ",", "7", ",", "9", ",", "7",
    ",", "6", ",", "7", ",", "1", ",", "11", ",", "8", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435758977504`*^9},
 CellLabel->"Out[118]=",
 CellID->541297938,ExpressionUUID->"836d920d-e316-4e3e-8d30-3784837497de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.874143576029732*^9},
 CellLabel->"Out[119]=",
 CellID->757041500,ExpressionUUID->"ffc8d5a0-5611-41f0-a4d5-22078a3fb83f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
       20}, CompressedData["
1:eJxTTMoPymNmYGBgAmIRKCYGMBKpBps6XHoZ8ajBZRYhcwipw6eWEY2m1DxC
etFpSs1CNodUs4gJF3IBpfppbR6tzB0q7qQlGEpupQYYaf5FBqSUn6SWUcSa
SaxZ2OobXOYRU28QquPILZexmUUtNdRIq+h+QuaT0hYgV81gyW/k+hWbHlrW
xejmDCbzGBmok0/QzcTHp6bZIwHQws8AriwCMA==
      "], {
      EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQnXWt/+SD7Gv2e63zBS8s+2Pfx1d1uL73hT0DFJiJ
d3abm32073Zvu3rtwgd7Fe3bM5LyP9oz3tFTKfV6bF+k96n6Wvkj+6oZkQmJ
aY/smXTumj54/NOewf9X/bPmOfZ5zm0Mt/78stc8HKi8suerPUN44oboJDaH
C+pambeWfLbfIdv1QaieyUGs+WvK3J2X7BvELzue45ltH/S1T73j8y/7RatO
m3n++27/wlb9kuDXh/YeouEW00r+2VesyN24LOyv/Rn+e4q39VgcGJ1+5fdn
PLN/VOllZPrxmb3HZg121b+f7J+lr/8p+v62ve3nBW5WR97b/7hqYOd76Ki9
wnG2sMbtK+01C1dP5pjJ4LB6/2PXtLpv9hZ8P33eJ/+1577zR6Kk/Bk8HGxX
rVIpinttL+evU3/30xd7FRvF/Vcjv9kDAMjEl7Q=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{1, 15}, 0.02877337894785574]}, 
         ArrowBox[{1, 10}, 0.02877337894785574], 
         ArrowBox[{1, 19}, 0.02877337894785574], 
         ArrowBox[{1, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{2, 15}, 0.02877337894785574]}, 
         ArrowBox[{2, 11}, 0.02877337894785574], 
         ArrowBox[{2, 14}, 0.02877337894785574], 
         ArrowBox[{2, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.02877337894785574]}, 
         ArrowBox[{2, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{3, 18}, 0.02877337894785574]}, 
         ArrowBox[{3, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.02877337894785574]}, 
         ArrowBox[{3, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 16}, 0.02877337894785574]}, 
         ArrowBox[{4, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{4, 19}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 20}, 0.02877337894785574]}, 
         ArrowBox[{5, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{5, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{5, 14}, 0.02877337894785574]}, 
         ArrowBox[{5, 19}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.02877337894785574]}, 
         ArrowBox[{6, 13}, 0.02877337894785574], 
         ArrowBox[{6, 17}, 0.02877337894785574], 
         ArrowBox[{6, 18}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{7, 20}, 0.02877337894785574]}, 
         ArrowBox[{7, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{8, 20}, 0.02877337894785574]}, 
         ArrowBox[{8, 13}, 0.02877337894785574], 
         ArrowBox[{9, 13}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{10, 14}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{10, 19}, 0.02877337894785574]}, 
         ArrowBox[{10, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{11, 12}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 13}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{11, 20}, 0.02877337894785574]}, 
         ArrowBox[{11, 15}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{12, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{12, 20}, 0.02877337894785574]}, 
         ArrowBox[{12, 17}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{13, 18}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{13, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 15}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 17}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{14, 18}, 0.02877337894785574]}, 
         ArrowBox[{14, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{15, 20}, 0.02877337894785574]}, 
         {Arrowheads[0.], ArrowBox[{16, 19}, 0.02877337894785574]}, 
         ArrowBox[{17, 20}, 0.02877337894785574], 
         {Arrowheads[0.], ArrowBox[{19, 20}, 0.02877337894785574]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02877337894785574], DiskBox[2, 0.02877337894785574], 
         DiskBox[3, 0.02877337894785574], DiskBox[4, 0.02877337894785574], 
         DiskBox[5, 0.02877337894785574], DiskBox[6, 0.02877337894785574], 
         DiskBox[7, 0.02877337894785574], DiskBox[8, 0.02877337894785574], 
         DiskBox[9, 0.02877337894785574], DiskBox[10, 0.02877337894785574], 
         DiskBox[11, 0.02877337894785574], DiskBox[12, 0.02877337894785574], 
         DiskBox[13, 0.02877337894785574], DiskBox[14, 0.02877337894785574], 
         DiskBox[15, 0.02877337894785574], DiskBox[16, 0.02877337894785574], 
         DiskBox[17, 0.02877337894785574], DiskBox[18, 0.02877337894785574], 
         DiskBox[19, 0.02877337894785574], 
         DiskBox[20, 0.02877337894785574]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435762713475`*^9},
 CellLabel->"Out[120]=",
 CellID->166539215,ExpressionUUID->"cf3c9c83-4a9a-4a1f-b839-f26c48f8a4ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.874143576410123*^9},
 CellLabel->"Out[121]=",
 CellID->487375283,ExpressionUUID->"27dd283f-807c-42cc-ba08-3cf157284654"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.874143576548847*^9},
 CellLabel->"Out[123]=",
 CellID->216030487,ExpressionUUID->"aabadde0-ddfa-4aea-a27d-b9a0caff2ab8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.87414357668736*^9},
 CellLabel->"Out[124]=",
 CellID->27421668,ExpressionUUID->"66066d76-839f-4e1d-a06d-ffe0952f587e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435768261013`*^9},
 CellLabel->"Out[125]=",
 CellID->34865218,ExpressionUUID->"e1f3d858-d1b4-45a3-8da8-3df1447d4d31"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435769646897`*^9},
 CellLabel->"Out[126]=",
 CellID->334422864,ExpressionUUID->"36583e84-94e6-4e07-bf08-a9b081cf0955"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2326817337339842197", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{200, 96, 57171, 49907, 138, 45775, 42897, 
      91, 123, 63, 995961978134, 15578944, 30, 63, 14722, 0, 3, 590, 6, 107}],
      0, 20, 20}, {CompressedData["
1:eJw9lU2uXUUMhCPEgCk/G2ABkfzbtocMn8QABbGAIJIokyAlkRC75+vbfbmD
897x6XbbVeXqn//8+837b169evXlOx5v3v7zy+fPb//9/Xte/vj05eOHT+/+
evn09d2Hd59XvP9tr/uWx68fv3x9+ZF/lqTKdLrXmp7IJS8/EX+tKumxlrfI
spVd9tgQUVIaK1RsraUj+YinhLtrW64aVTbWSWQrlmh2tIoOG0LPh9FSNZeW
rOoOl7k7xnXFmHXUqjbz+2FMJme5rBT1bA+7O8hMgnDrWtK8rtvFrBmZImWp
WVbfw5NYsV5W0XnI6D1jcRrdUZOremitfvRnwGFL6M3TR5fceIpxKmBNgIDR
pz/idGQBnFURYUK2fvlhx9OovFfQWLFc4qanL6N4DWl1ndITB+RdjotT/4jP
XBq0fSkAuXpBUcdtjEallsEG1GpNyalzImYMjsjXwJ59NvRYZWU2EBSdQeI5
QYrsRKlUwUSo9NHAwKgCdpBnRObogoPTqDRzINKbgm/+SF9k0RIbI4+e/JwI
YrTUqcPmDejdQDAepVeLIYP7IcizVpasAJWtqcuZ5oA1WnH6ivC83IAoQoGF
rRQECCWPFtwUINdUoDMEa7dUIG1CpRWQJPB99dVIXivpdROGyO2A+hoBFYIG
I60GcbkHg1Emmmh0IsyW5RVqBgoCgw2FbM0e9BI1wghq9z0IkFCPeC/L0d6y
kwlY6BMvVhjoMUC6aUBRl2VgsaS/WQDRTMqREVNszBv8N1oyqH4gkbubhDiG
sbaoDzcjBi702qoNmWx81u8rh+OonYLg9A7aFilsNXKsHhI9Z9bRXNIeGxfa
3BZwwYZmQ+iaD2g3UKfUUbhCV8ivOrdoLglFqdoYSNOwbwU8emBMZ0/hAJqw
NU+eLU6GILfG9rlbkA/oMgMdURd/F8rAK3Yc90A+oAZ3ziD00xHQOSyoQaoF
tZHrFIq2cBdGn25ry+iOYDOp2BpWOh7oBcN6jhrlsBwWmR6EafqEldREIXsW
+aP+n2ZHP6hg4RioXOLw6TY4xAZPIHb4Hf5PiD6KBwLLuPbChBtZHaIttoHJ
BQOuWCRb07xQ7KUtcEFgik4kzkg+ibbC8qvQazUaH1zofCgGFd/e6nY4oI6D
q+7xD5DwpuRk5i8/XAd4CZ6UUM501p3C2rtz89PbSrbRPT9wDeGqqC4HSc3c
D0zsHvJc3GWkpbTD0MbRmBSo7F1A1SkJdpOfdAysNRKPKxksGIJQMGLDltZZ
j71Ta3DhbXcJY3xOfsIYFAdvmrOR9EEbsHMTxN3GCui4Dmb7htUkMw4NE952
aePews0Hz9v2w63zHzf8Z9k=
     "], 4, 0}}, RawArray["UnsignedInteger64",{2326817337339842197, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435771034956`*^9},
 CellLabel->"Out[127]=",
 CellID->102459692,ExpressionUUID->"5bded293-1db4-47fb-b0ef-934bafcc113c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2}, {}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.00001, -0.000030000000000000004`}, {
       0.00001, -0.00001}}, {{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 2.5460000000000007*^-7], 
         DiskBox[2, 2.5460000000000007*^-7]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.8741435773377776`*^9},
 CellLabel->"Out[128]=",
 CellID->441459515,ExpressionUUID->"fbf9f564-17f4-4d93-bd34-d6835b509bc1"],

Cell["\<\
Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 
 {SparseArray[Automatic, {20, 20}, 0, {1, {{0, 3, 8, 11, 15, 19, 23, 25, 26, \
27, 28, 29, 30, 30, 31, 31, 31, 32, 32, 32, 32}, {{10}, {19}, 
     {20}, {11}, {14}, {18}, {5}, {19}, {19}, {9}, {20}, {20}, {9}, {7}, \
{19}, {18}, {16}, {14}, {19}, {13}, {17}, {18}, {16}, {17}, {10}, 
     {13}, {13}, {15}, {15}, {17}, {20}, {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1}}], SparseArray[Automatic, {20, 20}, 0, {1, {{0, 4, 6, 12, 18, 20, \
22, 28, 31, 31, 33, 36, 38, 40, 44, 46, 47, 47, 47, 48, 48}, 
     {{3}, {5}, {14}, {15}, {6}, {15}, {5}, {6}, {10}, {15}, {17}, {18}, {5}, \
{6}, {12}, {14}, {15}, {16}, {11}, {20}, {9}, {11}, {8}, {9}, 
     {12}, {13}, {15}, {20}, {9}, {18}, {20}, {14}, {19}, {12}, {13}, {20}, \
{18}, {20}, {18}, {20}, {15}, {16}, {17}, {18}, {16}, {20}, {19}, 
     {20}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1}}]}, {EdgeWeight -> {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
   1}}]\
\>", "Output",
 CellChangeTimes->{{3.8741433708989325`*^9, 3.874143437427033*^9}, {
   3.874143474561516*^9, 3.8741434982073655`*^9}, 3.8741435301298895`*^9, 
   3.87414357747659*^9},
 CellID->298401481,ExpressionUUID->"d40657d1-8028-4bef-8bb8-713a9b27de32"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Section",
 CellID->638818736,ExpressionUUID->"01728e35-633c-4e24-9f8e-e02250ec2913"],

Cell[BoxData[{
 RowBox[{"deleteSelect", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deleteSelect", "[", 
   RowBox[{"l_List", ",", "crit_", ",", 
    RowBox[{"n_", ":", "Infinity"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"l", ",", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"crit", "[", "#", "]"}]}], "&"}], ",", "n"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deleteSelect", "[", 
   RowBox[{"l_List", ",", "crit_", ",", 
    RowBox[{"n_", ":", "Infinity"}]}], "]"}], ":=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"l", ",", 
    RowBox[{"x_", "/;", 
     RowBox[{"crit", "[", "x", "]"}]}], ",", "n"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deleteSelect", "[", 
    RowBox[{"expr_", ",", "crit_"}], "]"}], ":=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"expr", ",", 
     RowBox[{"_", "?", "crit"}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"deleteSelect", "[", 
   RowBox[{"l_List", ",", "crit_", ",", 
    RowBox[{"n_", ":", "Infinity"}]}], "]"}], ":=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{"l", ",", 
    RowBox[{"_", "?", "crit"}], ",", "n"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.874610679180401*^9, 3.8746106975211897`*^9}, {
  3.8746108030595436`*^9, 3.8746108032640905`*^9}},
 CellLabel->"In[137]:=",
 CellID->625998492,ExpressionUUID->"d3d648f7-fa4b-433a-ae68-b7d60a2926be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deleteSelect", "[", 
  RowBox[{
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "a", ",", "b", ",", "a", ",", "c", ",", "c", ",", "c", ",", 
       "a", ",", "a", ",", "d", ",", "e", ",", "d", ",", "f", ",", "d"}], 
      "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Union", "[", "#", "]"}], "]"}], "==", "1"}]}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746107016102715`*^9, 3.8746107646750307`*^9}},
 CellLabel->"In[143]:=",
 CellID->654930369,ExpressionUUID->"38a63df0-3a97-4b9f-b147-70a7361e9d9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", ",", "c", ",", "c"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8746107655295324`*^9, 3.874610868499199*^9},
 CellLabel->"Out[143]=",
 CellID->62994594,ExpressionUUID->"49f407ed-c2c2-4c2f-b1fa-989da0408e59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deleteSelect", "[", 
  RowBox[{
   RowBox[{"Subsequences", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "a", ",", "b", ",", "a", ",", "c", ",", "c", ",", "c", ",", 
       "a", ",", "a", ",", "d", ",", "e", ",", "d", ",", "f", ",", "d"}], 
      "}"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Union", "[", "#", "]"}], "]"}], "==", "1"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87461078955678*^9, 3.8746107913331366`*^9}},
 CellLabel->"In[136]:=",
 CellID->53421602,ExpressionUUID->"af75279a-775d-4430-b961-73bfb07b0522"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.874610792669458*^9},
 CellLabel->"Out[136]=",
 CellID->178161959,ExpressionUUID->"c788e546-dcea-41c2-b2c7-090e6c77af2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deleteSelect", "[", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"a", "->", "1"}], ",", 
     RowBox[{"b", "->", "2"}], ",", 
     RowBox[{"c", "->", "3"}], ",", 
     RowBox[{"d", "->", "4"}]}], "|>"}], ",", 
   RowBox[{
    RowBox[{"#", "<", "2"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746108079075785`*^9, 3.874610811227461*^9}},
 CellLabel->"In[142]:=",
 CellID->199446457,ExpressionUUID->"16ee2440-7dd4-4c67-898a-526352f83df8"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"c", "\[Rule]", "3"}], ",", 
   RowBox[{"d", "\[Rule]", "4"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.874610811594782*^9},
 CellLabel->"Out[142]=",
 CellID->149624819,ExpressionUUID->"6a36c053-05f0-4b7e-b43c-6379b84ca4d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "@", 
  RowBox[{"ParallelMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "->", 
      RowBox[{"Length", "[", "#", "]"}]}], "&"}], ",", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10", ",", "10"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8746109861423283`*^9, 3.8746110074867296`*^9}},
 CellLabel->"In[145]:=",
 CellID->730211,ExpressionUUID->"06d617ec-abfc-43c5-9543-3c60b7f82c1f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "920", ",", "106", ",", "927", ",", "965", ",", "808", ",", "333", ",",
         "229", ",", "171", ",", "548", ",", "886"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "271", ",", "90", ",", "785", ",", "54", ",", "344", ",", "166", ",", 
        "832", ",", "608", ",", "208", ",", "942"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "930", ",", "11", ",", "262", ",", "828", ",", "822", ",", "472", ",", 
        "728", ",", "918", ",", "849", ",", "811"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "393", ",", "584", ",", "922", ",", "23", ",", "576", ",", "642", ",", 
        "514", ",", "596", ",", "599", ",", "422"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "867", ",", "856", ",", "397", ",", "61", ",", "890", ",", "103", ",", 
        "579", ",", "53", ",", "739", ",", "302"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "881", ",", "427", ",", "792", ",", "690", ",", "117", ",", "117", ",",
         "407", ",", "878", ",", "965", ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "41", ",", "296", ",", "381", ",", "561", ",", "545", ",", "58", ",", 
        "71", ",", "28", ",", "963", ",", "187"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "995", ",", "113", ",", "470", ",", "140", ",", "200", ",", "936", ",",
         "386", ",", "121", ",", "469", ",", "764"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "724", ",", "700", ",", "777", ",", "88", ",", "121", ",", "804", ",", 
        "457", ",", "860", ",", "158", ",", "365"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "146", ",", "354", ",", "916", ",", "551", ",", "481", ",", "146", ",",
         "442", ",", "674", ",", "956", ",", "511"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "372", ",", "586", ",", "433", ",", "975", ",", "960", ",", "994", ",",
         "123", ",", "998", ",", "268", ",", "22"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "854", ",", "821", ",", "888", ",", "360", ",", "902", ",", "562", ",",
         "316", ",", "755", ",", "617", ",", "884"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "927", ",", "27", ",", "327", ",", "423", ",", "152", ",", "39", ",", 
        "570", ",", "991", ",", "563", ",", "469"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "390", ",", "223", ",", "762", ",", "919", ",", "94", ",", "388", ",", 
        "163", ",", "722", ",", "274", ",", "69"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "396", ",", "593", ",", "534", ",", "839", ",", "649", ",", "764", ",",
         "518", ",", "971", ",", "942", ",", "893"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "622", ",", "261", ",", "740", ",", "426", ",", "619", ",", "875", ",",
         "713", ",", "126", ",", "706", ",", "298"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "986", ",", "431", ",", "113", ",", "365", ",", "449", ",", "757", ",",
         "548", ",", "359", ",", "49", ",", "293"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "808", ",", "54", ",", "634", ",", "419", ",", "349", ",", "982", ",", 
        "89", ",", "641", ",", "708", ",", "591"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "505", ",", "19", ",", "138", ",", "995", ",", "139", ",", "510", ",", 
        "632", ",", "551", ",", "298", ",", "223"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "802", ",", "42", ",", "505", ",", "292", ",", "107", ",", "444", ",", 
        "968", ",", "289", ",", "546", ",", "132"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "237", ",", "201", ",", "528", ",", "442", ",", "537", ",", "562", ",",
         "973", ",", "638", ",", "120", ",", "818"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "677", ",", "694", ",", "884", ",", "565", ",", "955", ",", "901", ",",
         "205", ",", "559", ",", "46", ",", "314"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "976", ",", "206", ",", "537", ",", "552", ",", "584", ",", "424", ",",
         "857", ",", "999", ",", "561", ",", "219"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "890", ",", "441", ",", "915", ",", "696", ",", "606", ",", "271", ",",
         "68", ",", "344", ",", "144", ",", "165"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "678", ",", "64", ",", "183", ",", "523", ",", "333", ",", "251", ",", 
        "172", ",", "878", ",", "766", ",", "673"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "609", ",", "767", ",", "284", ",", "695", ",", "708", ",", "633", ",",
         "997", ",", "911", ",", "444", ",", "553"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "194", ",", "502", ",", "685", ",", "968", ",", "246", ",", "756", ",",
         "291", ",", "724", ",", "671", ",", "660"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "625", ",", "323", ",", "577", ",", "316", ",", "88", ",", "872", ",", 
        "789", ",", "816", ",", "653", ",", "729"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "805", ",", "39", ",", "916", ",", "377", ",", "992", ",", "288", ",", 
        "151", ",", "634", ",", "845", ",", "298"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "574", ",", "414", ",", "599", ",", "521", ",", "754", ",", "725", ",",
         "903", ",", "216", ",", "485", ",", "355"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "745", ",", "752", ",", "963", ",", "215", ",", "794", ",", "437", ",",
         "323", ",", "970", ",", "580", ",", "963"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "14", ",", "954", ",", "629", ",", "855", ",", "699", ",", "245", ",", 
        "405", ",", "417", ",", "199", ",", "248"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "915", ",", "207", ",", "411", ",", "12", ",", "305", ",", "403", ",", 
        "538", ",", "937", ",", "691", ",", "355"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "565", ",", "460", ",", "191", ",", "904", ",", "907", ",", "796", ",",
         "301", ",", "703", ",", "184", ",", "724"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "431", ",", "340", ",", "254", ",", "646", ",", "501", ",", "386", ",",
         "563", ",", "969", ",", "773", ",", "735"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "816", ",", "329", ",", "147", ",", "745", ",", "857", ",", "630", ",",
         "552", ",", "243", ",", "894", ",", "404"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "424", ",", "435", ",", "118", ",", "942", ",", "299", ",", "645", ",",
         "326", ",", "703", ",", "767", ",", "61"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "469", ",", "316", ",", "405", ",", "333", ",", "506", ",", "423", ",",
         "213", ",", "893", ",", "757", ",", "535"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "850", ",", "923", ",", "213", ",", "282", ",", "377", ",", "671", ",",
         "246", ",", "906", ",", "532", ",", "712"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "201", ",", "721", ",", "715", ",", "125", ",", "327", ",", "961", ",",
         "524", ",", "832", ",", "895", ",", "669"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "167", ",", "365", ",", "186", ",", "195", ",", "776", ",", "847", ",",
         "919", ",", "873", ",", "877", ",", "629"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "314", ",", "223", ",", "239", ",", "745", ",", "765", ",", "86", ",", 
        "360", ",", "453", ",", "125", ",", "165"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "950", ",", "363", ",", "404", ",", "520", ",", "993", ",", "426", ",",
         "597", ",", "320", ",", "836", ",", "506"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "916", ",", "793", ",", "710", ",", "325", ",", "763", ",", "208", ",",
         "931", ",", "86", ",", "759", ",", "837"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "315", ",", "931", ",", "740", ",", "887", ",", "224", ",", "61", ",", 
        "167", ",", "354", ",", "519", ",", "285"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "299", ",", "662", ",", "190", ",", "228", ",", "676", ",", "607", ",",
         "473", ",", "453", ",", "149", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "138", ",", "506", ",", "870", ",", "908", ",", "813", ",", "600", ",",
         "557", ",", "120", ",", "98", ",", "939"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "416", ",", "378", ",", "626", ",", "795", ",", "314", ",", "865", ",",
         "691", ",", "635", ",", "477", ",", "849"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "379", ",", "580", ",", "695", ",", "598", ",", "565", ",", "514", ",",
         "938", ",", "837", ",", "643", ",", "27"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "799", ",", "277", ",", "702", ",", "145", ",", "535", ",", "584", ",",
         "728", ",", "376", ",", "836", ",", "354"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "343", ",", "348", ",", "866", ",", "718", ",", "261", ",", "44", ",", 
        "49", ",", "463", ",", "476", ",", "931"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "132", ",", "248", ",", "703", ",", "252", ",", "535", ",", "657", ",",
         "986", ",", "566", ",", "820", ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "322", ",", "867", ",", "325", ",", "101", ",", "478", ",", "836", ",",
         "935", ",", "142", ",", "939", ",", "460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "809", ",", "950", ",", "102", ",", "127", ",", "803", ",", "60", ",", 
        "123", ",", "705", ",", "813", ",", "880"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "58", ",", "618", ",", "122", ",", "19", ",", "152", ",", "590", ",", 
        "739", ",", "20", ",", "513", ",", "553"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "143", ",", "680", ",", "427", ",", "818", ",", "688", ",", "439", ",",
         "228", ",", "101", ",", "166", ",", "684"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "885", ",", "994", ",", "873", ",", "434", ",", "266", ",", "462", ",",
         "262", ",", "183", ",", "169", ",", "748"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "20", ",", "25", ",", "768", ",", "819", ",", "832", ",", "195", ",", 
        "605", ",", "936", ",", "128", ",", "196"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "73", ",", "553", ",", "115", ",", "488", ",", "253", ",", "630", ",", 
        "773", ",", "24", ",", "826", ",", "462"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "408", ",", "904", ",", "253", ",", "19", ",", "368", ",", "472", ",", 
        "761", ",", "92", ",", "641", ",", "890"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "82", ",", "868", ",", "677", ",", "654", ",", "369", ",", "120", ",", 
        "658", ",", "131", ",", "183", ",", "906"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "320", ",", "816", ",", "795", ",", "604", ",", "438", ",", "659", ",",
         "857", ",", "174", ",", "750", ",", "797"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "425", ",", "301", ",", "433", ",", "670", ",", "973", ",", "974", ",",
         "153", ",", "966", ",", "929", ",", "255"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "166", ",", "652", ",", "983", ",", "106", ",", "580", ",", "870", ",",
         "796", ",", "951", ",", "437", ",", "929"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "39", ",", "25", ",", "536", ",", "465", ",", "100", ",", "487", ",", 
        "766", ",", "529", ",", "865", ",", "279"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "414", ",", "322", ",", "237", ",", "894", ",", "646", ",", "804", ",",
         "174", ",", "984", ",", "707", ",", "945"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "398", ",", "550", ",", "886", ",", "801", ",", "433", ",", "646", ",",
         "993", ",", "698", ",", "733", ",", "116"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "441", ",", "256", ",", "371", ",", "601", ",", "340", ",", "600", ",",
         "350", ",", "422", ",", "77", ",", "347"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "872", ",", "540", ",", "542", ",", "308", ",", "46", ",", "325", ",", 
        "756", ",", "676", ",", "728", ",", "982"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "430", ",", "975", ",", "927", ",", "477", ",", "94", ",", "450", ",", 
        "527", ",", "401", ",", "89", ",", "954"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "651", ",", "660", ",", "727", ",", "75", ",", "701", ",", "454", ",", 
        "771", ",", "365", ",", "746", ",", "925"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "735", ",", "710", ",", "654", ",", "485", ",", "498", ",", "192", ",",
         "555", ",", "248", ",", "346", ",", "560"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "433", ",", "270", ",", "366", ",", "820", ",", "670", ",", "863", ",",
         "732", ",", "464", ",", "519", ",", "927"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "514", ",", "581", ",", "782", ",", "559", ",", "97", ",", "846", ",", 
        "567", ",", "237", ",", "473", ",", "395"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "889", ",", "407", ",", "993", ",", "77", ",", "327", ",", "165", ",", 
        "731", ",", "829", ",", "612", ",", "985"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "329", ",", "415", ",", "171", ",", "816", ",", "410", ",", "643", ",",
         "138", ",", "743", ",", "880", ",", "359"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "209", ",", "616", ",", "495", ",", "118", ",", "640", ",", "458", ",",
         "620", ",", "242", ",", "176", ",", "294"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "439", ",", "599", ",", "34", ",", "588", ",", "585", ",", "633", ",", 
        "909", ",", "193", ",", "913", ",", "751"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "497", ",", "56", ",", "351", ",", "437", ",", "430", ",", "374", ",", 
        "49", ",", "316", ",", "287", ",", "593"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "793", ",", "960", ",", "636", ",", "163", ",", "418", ",", "953", ",",
         "268", ",", "785", ",", "502", ",", "223"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "113", ",", "26", ",", "608", ",", "496", ",", "197", ",", "240", ",", 
        "814", ",", "933", ",", "461", ",", "611"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "212", ",", "927", ",", "400", ",", "992", ",", "998", ",", "572", ",",
         "71", ",", "47", ",", "732", ",", "414"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "906", ",", "760", ",", "444", ",", "45", ",", "835", ",", "699", ",", 
        "882", ",", "743", ",", "193", ",", "527"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "966", ",", "571", ",", "991", ",", "356", ",", "170", ",", "310", ",",
         "494", ",", "59", ",", "671", ",", "272"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "544", ",", "320", ",", "918", ",", "688", ",", "553", ",", "769", ",",
         "447", ",", "752", ",", "330", ",", "669"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "246", ",", "984", ",", "71", ",", "478", ",", "87", ",", "955", ",", 
        "195", ",", "92", ",", "789", ",", "942"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "536", ",", "551", ",", "470", ",", "96", ",", "492", ",", "113", ",", 
        "61", ",", "809", ",", "913", ",", "693"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "535", ",", "339", ",", "15", ",", "285", ",", "759", ",", "709", ",", 
        "39", ",", "263", ",", "239", ",", "34"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "943", ",", "130", ",", "357", ",", "147", ",", "206", ",", "851", ",",
         "792", ",", "365", ",", "864", ",", "102"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "251", ",", "659", ",", "826", ",", "594", ",", "324", ",", "306", ",",
         "778", ",", "48", ",", "816", ",", "927"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "834", ",", "756", ",", "457", ",", "426", ",", "904", ",", "347", ",",
         "956", ",", "495", ",", "421", ",", "962"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "997", ",", "281", ",", "73", ",", "15", ",", "338", ",", "804", ",", 
        "344", ",", "483", ",", "604", ",", "323"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "366", ",", "995", ",", "911", ",", "463", ",", "692", ",", "728", ",",
         "747", ",", "425", ",", "995", ",", "922"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "838", ",", "908", ",", "380", ",", "985", ",", "222", ",", "219", ",",
         "924", ",", "11", ",", "434", ",", "420"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "617", ",", "920", ",", "949", ",", "184", ",", "202", ",", "519", ",",
         "756", ",", "905", ",", "651", ",", "114"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "893", ",", "799", ",", "508", ",", "488", ",", "907", ",", "557", ",",
         "278", ",", "80", ",", "427", ",", "787"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "411", ",", "854", ",", "231", ",", "877", ",", "490", ",", "921", ",",
         "651", ",", "445", ",", "448", ",", "454"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "852", ",", "51", ",", "758", ",", "676", ",", "736", ",", "689", ",", 
        "661", ",", "364", ",", "228", ",", "25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "879", ",", "760", ",", "393", ",", "615", ",", "268", ",", "13", ",", 
        "199", ",", "311", ",", "291", ",", "727"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "382", ",", "86", ",", "52", ",", "185", ",", "474", ",", "648", ",", 
        "247", ",", "107", ",", "518", ",", "772"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8746109929634004`*^9, 3.8746110079258842`*^9}},
 CellLabel->"Out[145]=",
 CellID->618230238,ExpressionUUID->"c180bcd3-2292-4cd9-9fa2-79d49a1eabbf"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Parallelize", "[", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{"Length", ",", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10", ",", "10"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746110168126698`*^9, 3.874611025742697*^9}},
 CellLabel->"In[146]:=",
 CellID->101325724,ExpressionUUID->"66b15926-e218-4913-a4ef-99fb17703cb2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "990", ",", "544", ",", "356", ",", "721", ",", "933", ",", "391", ",",
         "734", ",", "519", ",", "37", ",", "754"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "102", ",", "772", ",", "342", ",", "361", ",", "173", ",", "628", ",",
         "478", ",", "957", ",", "631", ",", "26"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "393", ",", "295", ",", "103", ",", "123", ",", "309", ",", "535", ",",
         "990", ",", "89", ",", "791", ",", "677"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "545", ",", "235", ",", "556", ",", "77", ",", "815", ",", "930", ",", 
        "610", ",", "943", ",", "720", ",", "851"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "155", ",", "116", ",", "857", ",", "754", ",", "71", ",", "920", ",", 
        "597", ",", "174", ",", "562", ",", "920"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "410", ",", "538", ",", "229", ",", "622", ",", "514", ",", "286", ",",
         "547", ",", "287", ",", "165", ",", "223"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "269", ",", "955", ",", "918", ",", "842", ",", "729", ",", "89", ",", 
        "85", ",", "466", ",", "592", ",", "494"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "73", ",", "594", ",", "852", ",", "19", ",", "271", ",", "939", ",", 
        "90", ",", "571", ",", "132", ",", "102"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "432", ",", "968", ",", "420", ",", "400", ",", "104", ",", "328", ",",
         "612", ",", "602", ",", "742", ",", "780"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "238", ",", "399", ",", "211", ",", "685", ",", "694", ",", "591", ",",
         "528", ",", "63", ",", "16", ",", "513"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "151", ",", "497", ",", "800", ",", "290", ",", "516", ",", "469", ",",
         "540", ",", "368", ",", "805", ",", "650"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "820", ",", "31", ",", "219", ",", "645", ",", "872", ",", "294", ",", 
        "904", ",", "521", ",", "206", ",", "419"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "178", ",", "502", ",", "405", ",", "294", ",", "14", ",", "824", ",", 
        "414", ",", "761", ",", "517", ",", "100"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "1000", ",", "700", ",", "657", ",", "523", ",", "38", ",", "197", ",",
         "638", ",", "141", ",", "343", ",", "357"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "979", ",", "365", ",", "317", ",", "598", ",", "608", ",", "971", ",",
         "913", ",", "828", ",", "890", ",", "204"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "90", ",", "922", ",", "173", ",", "762", ",", "293", ",", "619", ",", 
        "894", ",", "580", ",", "193", ",", "104"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "87", ",", "665", ",", "282", ",", "594", ",", "830", ",", "377", ",", 
        "895", ",", "717", ",", "609", ",", "258"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "500", ",", "715", ",", "87", ",", "415", ",", "100", ",", "104", ",", 
        "212", ",", "964", ",", "232", ",", "319"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "929", ",", "817", ",", "476", ",", "408", ",", "759", ",", "606", ",",
         "151", ",", "29", ",", "210", ",", "386"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "714", ",", "695", ",", "575", ",", "606", ",", "881", ",", "888", ",",
         "399", ",", "64", ",", "434", ",", "870"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "848", ",", "34", ",", "573", ",", "627", ",", "172", ",", "471", ",", 
        "298", ",", "801", ",", "996", ",", "141"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "369", ",", "871", ",", "812", ",", "763", ",", "748", ",", "221", ",",
         "60", ",", "375", ",", "22", ",", "861"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "891", ",", "653", ",", "937", ",", "702", ",", "739", ",", "555", ",",
         "316", ",", "561", ",", "685", ",", "307"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "242", ",", "337", ",", "668", ",", "538", ",", "986", ",", "47", ",", 
        "467", ",", "227", ",", "643", ",", "189"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "564", ",", "223", ",", "436", ",", "533", ",", "723", ",", "208", ",",
         "526", ",", "301", ",", "633", ",", "504"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "908", ",", "157", ",", "50", ",", "559", ",", "377", ",", "521", ",", 
        "89", ",", "208", ",", "245", ",", "582"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "962", ",", "508", ",", "82", ",", "375", ",", "125", ",", "778", ",", 
        "672", ",", "364", ",", "462", ",", "634"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "754", ",", "159", ",", "819", ",", "92", ",", "26", ",", "417", ",", 
        "988", ",", "618", ",", "835", ",", "304"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "805", ",", "714", ",", "826", ",", "911", ",", "563", ",", "667", ",",
         "854", ",", "28", ",", "488", ",", "810"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "196", ",", "843", ",", "272", ",", "796", ",", "941", ",", "86", ",", 
        "479", ",", "89", ",", "235", ",", "601"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "294", ",", "762", ",", "788", ",", "785", ",", "306", ",", "727", ",",
         "902", ",", "54", ",", "629", ",", "498"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "963", ",", "450", ",", "414", ",", "712", ",", "558", ",", "708", ",",
         "737", ",", "394", ",", "343", ",", "160"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "261", ",", "517", ",", "848", ",", "745", ",", "178", ",", "190", ",",
         "659", ",", "113", ",", "45", ",", "256"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "657", ",", "655", ",", "865", ",", "239", ",", "470", ",", "246", ",",
         "461", ",", "688", ",", "600", ",", "103"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "85", ",", "804", ",", "361", ",", "201", ",", "406", ",", "193", ",", 
        "401", ",", "403", ",", "479", ",", "654"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "81", ",", "556", ",", "691", ",", "372", ",", "188", ",", "84", ",", 
        "935", ",", "803", ",", "449", ",", "862"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "231", ",", "473", ",", "192", ",", "279", ",", "967", ",", "647", ",",
         "731", ",", "306", ",", "170", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "998", ",", "950", ",", "698", ",", "762", ",", "318", ",", "880", ",",
         "671", ",", "269", ",", "429", ",", "377"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "484", ",", "154", ",", "774", ",", "941", ",", "634", ",", "303", ",",
         "242", ",", "173", ",", "429", ",", "329"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "226", ",", "907", ",", "119", ",", "416", ",", "854", ",", "713", ",",
         "289", ",", "653", ",", "607", ",", "100"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "330", ",", "329", ",", "66", ",", "271", ",", "122", ",", "63", ",", 
        "512", ",", "397", ",", "810", ",", "436"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "370", ",", "792", ",", "433", ",", "88", ",", "583", ",", "488", ",", 
        "240", ",", "241", ",", "203", ",", "649"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "560", ",", "249", ",", "567", ",", "600", ",", "335", ",", "13", ",", 
        "702", ",", "942", ",", "306", ",", "12"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "281", ",", "69", ",", "343", ",", "967", ",", "536", ",", "936", ",", 
        "827", ",", "407", ",", "980", ",", "300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "350", ",", "406", ",", "91", ",", "469", ",", "699", ",", "670", ",", 
        "584", ",", "393", ",", "955", ",", "334"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "711", ",", "562", ",", "915", ",", "425", ",", "934", ",", "796", ",",
         "866", ",", "714", ",", "764", ",", "997"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "722", ",", "87", ",", "729", ",", "561", ",", "365", ",", "159", ",", 
        "63", ",", "264", ",", "712", ",", "164"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "407", ",", "135", ",", "304", ",", "284", ",", "481", ",", "480", ",",
         "497", ",", "780", ",", "232", ",", "925"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "593", ",", "828", ",", "704", ",", "991", ",", "134", ",", "422", ",",
         "76", ",", "429", ",", "387", ",", "997"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "950", ",", "699", ",", "246", ",", "67", ",", "311", ",", "282", ",", 
        "742", ",", "518", ",", "81", ",", "118"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "561", ",", "975", ",", "177", ",", "676", ",", "920", ",", "543", ",",
         "103", ",", "728", ",", "156", ",", "991"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "663", ",", "806", ",", "815", ",", "523", ",", "656", ",", "162", ",",
         "481", ",", "918", ",", "868", ",", "829"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "681", ",", "201", ",", "840", ",", "809", ",", "399", ",", "943", ",",
         "937", ",", "883", ",", "284", ",", "302"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "872", ",", "994", ",", "404", ",", "310", ",", "721", ",", "538", ",",
         "28", ",", "106", ",", "551", ",", "678"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "167", ",", "517", ",", "462", ",", "271", ",", "46", ",", "941", ",", 
        "778", ",", "873", ",", "282", ",", "544"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "796", ",", "970", ",", "316", ",", "488", ",", "967", ",", "273", ",",
         "409", ",", "374", ",", "438", ",", "830"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "393", ",", "356", ",", "925", ",", "135", ",", "488", ",", "828", ",",
         "395", ",", "165", ",", "667", ",", "602"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "831", ",", "47", ",", "766", ",", "488", ",", "522", ",", "303", ",", 
        "673", ",", "38", ",", "481", ",", "773"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "884", ",", "865", ",", "369", ",", "117", ",", "211", ",", "611", ",",
         "161", ",", "889", ",", "482", ",", "534"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "78", ",", "897", ",", "677", ",", "908", ",", "112", ",", "387", ",", 
        "22", ",", "160", ",", "797", ",", "299"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "298", ",", "237", ",", "861", ",", "356", ",", "153", ",", "753", ",",
         "881", ",", "740", ",", "783", ",", "653"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "348", ",", "335", ",", "830", ",", "982", ",", "827", ",", "150", ",",
         "788", ",", "780", ",", "97", ",", "43"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "535", ",", "330", ",", "23", ",", "789", ",", "563", ",", "716", ",", 
        "408", ",", "639", ",", "602", ",", "279"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "81", ",", "767", ",", "339", ",", "954", ",", "266", ",", "656", ",", 
        "944", ",", "522", ",", "902", ",", "507"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "518", ",", "152", ",", "368", ",", "361", ",", "102", ",", "463", ",",
         "346", ",", "697", ",", "769", ",", "781"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "242", ",", "835", ",", "948", ",", "374", ",", "129", ",", "685", ",",
         "392", ",", "276", ",", "359", ",", "497"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "342", ",", "340", ",", "764", ",", "619", ",", "338", ",", "731", ",",
         "239", ",", "839", ",", "522", ",", "845"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "396", ",", "595", ",", "415", ",", "397", ",", "381", ",", "683", ",",
         "249", ",", "243", ",", "963", ",", "140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "459", ",", "119", ",", "946", ",", "177", ",", "699", ",", "771", ",",
         "264", ",", "526", ",", "91", ",", "464"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "221", ",", "51", ",", "613", ",", "295", ",", "671", ",", "996", ",", 
        "32", ",", "887", ",", "404", ",", "521"}], "}"}]}], "}"}], "\[Rule]",
     "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "196", ",", "650", ",", "44", ",", "311", ",", "881", ",", "920", ",", 
        "55", ",", "261", ",", "94", ",", "361"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "353", ",", "536", ",", "309", ",", "877", ",", "877", ",", "512", ",",
         "729", ",", "696", ",", "30", ",", "235"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "648", ",", "215", ",", "717", ",", "474", ",", "983", ",", "853", ",",
         "717", ",", "434", ",", "177", ",", "756"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "790", ",", "31", ",", "187", ",", "304", ",", "413", ",", "28", ",", 
        "835", ",", "141", ",", "801", ",", "654"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "662", ",", "501", ",", "83", ",", "325", ",", "682", ",", "577", ",", 
        "877", ",", "972", ",", "426", ",", "918"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "106", ",", "200", ",", "813", ",", "615", ",", "429", ",", "810", ",",
         "518", ",", "620", ",", "240", ",", "890"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "26", ",", "951", ",", "85", ",", "413", ",", "619", ",", "930", ",", 
        "740", ",", "622", ",", "750", ",", "854"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "262", ",", "692", ",", "166", ",", "737", ",", "628", ",", "130", ",",
         "115", ",", "802", ",", "151", ",", "991"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "222", ",", "649", ",", "996", ",", "20", ",", "447", ",", "68", ",", 
        "750", ",", "255", ",", "699", ",", "537"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "362", ",", "799", ",", "776", ",", "852", ",", "687", ",", "622", ",",
         "736", ",", "562", ",", "169", ",", "58"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "148", ",", "552", ",", "985", ",", "387", ",", "943", ",", "58", ",", 
        "84", ",", "42", ",", "896", ",", "861"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "167", ",", "875", ",", "884", ",", "204", ",", "215", ",", "339", ",",
         "59", ",", "59", ",", "679", ",", "587"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "138", ",", "746", ",", "937", ",", "410", ",", "214", ",", "27", ",", 
        "730", ",", "307", ",", "919", ",", "522"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "363", ",", "723", ",", "246", ",", "554", ",", "415", ",", "264", ",",
         "580", ",", "448", ",", "267", ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "746", ",", "584", ",", "963", ",", "306", ",", "152", ",", "231", ",",
         "397", ",", "840", ",", "13", ",", "267"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "279", ",", "505", ",", "644", ",", "269", ",", "241", ",", 
        "611", ",", "365", ",", "246", ",", "610"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "480", ",", "167", ",", "213", ",", "860", ",", "983", ",", "123", ",",
         "52", ",", "171", ",", "438", ",", "811"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "559", ",", "882", ",", "904", ",", "733", ",", "859", ",", "761", ",",
         "871", ",", "891", ",", "776", ",", "460"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "637", ",", "358", ",", "825", ",", "339", ",", "81", ",", "269", ",", 
        "890", ",", "444", ",", "721", ",", "125"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "180", ",", "435", ",", "120", ",", "473", ",", "753", ",", "733", ",",
         "173", ",", "577", ",", "288", ",", "724"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "793", ",", "911", ",", "520", ",", "329", ",", "120", ",", "604", ",",
         "82", ",", "252", ",", "27", ",", "939"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "206", ",", "209", ",", "707", ",", "724", ",", "789", ",", "527", ",",
         "428", ",", "650", ",", "458", ",", "938"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "840", ",", "550", ",", "242", ",", "975", ",", "20", ",", "911", ",", 
        "31", ",", "992", ",", "882", ",", "62"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "560", ",", "489", ",", "335", ",", "729", ",", "840", ",", "747", ",",
         "843", ",", "1000", ",", "819", ",", "726"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "819", ",", "870", ",", "111", ",", "144", ",", "49", ",", "46", ",", 
        "863", ",", "522", ",", "272", ",", "709"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "105", ",", "363", ",", "785", ",", "37", ",", "401", ",", "158", ",", 
        "951", ",", "174", ",", "413", ",", "846"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "300", ",", "194", ",", "21", ",", "636", ",", "413", ",", "891", ",", 
        "421", ",", "754", ",", "503", ",", "995"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "598", ",", "543", ",", "419", ",", "957", ",", "615", ",", "615", ",",
         "568", ",", "768", ",", "696", ",", "283"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "851", ",", "708", ",", "753", ",", "843", ",", "831", ",", "926", ",",
         "447", ",", "479", ",", "863", ",", "251"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "959", ",", "241", ",", "81", ",", "441", ",", "320", ",", "83", ",", 
        "763", ",", "837", ",", "626", ",", "478"}], "}"}]}], "}"}], 
    "\[Rule]", "10"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8746110266139946`*^9},
 CellLabel->"Out[146]=",
 CellID->563154015,ExpressionUUID->"40c96778-7b24-4a18-99c6-4699ceb21262"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arity", "Section",
 CellChangeTimes->{{3.8746110988372974`*^9, 3.8746110994771185`*^9}},
 CellID->38972837,ExpressionUUID->"287e7973-232a-43e3-b3ce-e856f2c0ab37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arity", "[", "f_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"argumentsPattern", "=", 
      RowBox[{"\"\<ArgumentsPattern\>\"", "/.", " ", 
       RowBox[{"SyntaxInformation", "[", "f", "]"}]}]}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tentativeMax", "=", 
        RowBox[{"Count", "[", 
         RowBox[{"argumentsPattern", ",", 
          RowBox[{"Except", "[", 
           RowBox[{"Alternatives", "@@", 
            RowBox[{"Verbatim", "/@", 
             RowBox[{"{", 
              RowBox[{"___", ",", 
               RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}]}], "]"}]}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tentativeMax", "-", 
         RowBox[{"Count", "[", 
          RowBox[{"argumentsPattern", ",", 
           RowBox[{"Verbatim", "[", "_.", "]"}]}], "]"}]}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"argumentsPattern", ",", 
            RowBox[{
             RowBox[{"Verbatim", "[", "__", "]"}], "|", 
             RowBox[{"Verbatim", "[", "___", "]"}]}]}], "]"}], ",", 
          "Infinity", ",", "tentativeMax"}], "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.874611100166485*^9, 3.8746111001684837`*^9}},
 CellLabel->"In[147]:=",
 CellID->96265856,ExpressionUUID->"f320fa90-8e34-40a9-b05b-700893c6b0dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arity", "[", "DSolve", "]"}]], "Input",
 CellChangeTimes->{{3.87461110126515*^9, 3.874611105210679*^9}},
 CellLabel->"In[148]:=",
 CellID->123076937,ExpressionUUID->"466dbba1-a4c9-4180-8cf8-a5d673f3223c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "\[Infinity]"}], "}"}]], "Output",
 CellChangeTimes->{3.874611105600791*^9},
 CellLabel->"Out[148]=",
 CellID->456319555,ExpressionUUID->"83c27d45-f41f-42ab-8aa0-e47a6aa0402d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746111152715616`*^9, 3.8746111266430187`*^9}},
 CellLabel->"In[150]:=",
 CellID->723497619,ExpressionUUID->"cee163c8-25b3-48c4-b507-8037937b2143"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Refine\"\>", ",", "\<\"SequencePredictorFunction\"\>", 
   ",", "\<\"CompilerEnvironmentAppendTo\"\>", ",", "\<\"GraphComplement\"\>",
    ",", "\<\"\[FormalScriptCapitalD]\"\>", ",", "\<\"Length\"\>", 
   ",", "\<\"ImageHistogram\"\>", ",", "\<\"ShowPageBreaks\"\>", 
   ",", "\<\"KnapsackSolve\"\>", ",", "\<\"SetAccuracy\"\>", 
   ",", "\<\"FileHash\"\>", ",", "\<\"CarlemanLinearize\"\>", 
   ",", "\<\"TubeBezierCurveBoxOptions\"\>", ",", "\<\"RootReduce\"\>", 
   ",", "\<\"RegionDistanceFunction\"\>", ",", "\<\"GeodesyData\"\>", 
   ",", "\<\"TreeGraphQ\"\>", ",", "\<\"WaringYuleDistribution\"\>", 
   ",", "\<\"BoundaryDiscretizeRegion\"\>", ",", "\<\"MaxFilter\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.874611124138711*^9, 3.8746111269292526`*^9}},
 CellLabel->"Out[150]=",
 CellID->86412948,ExpressionUUID->"da7eb2c9-5c6e-448b-b097-c3bdb4c84d27"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.874611174239064*^9, 3.874611178078012*^9}},
 CellLabel->"",
 CellID->489172957,ExpressionUUID->"8f143c14-6701-4d3e-a094-7c72c0b362dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"arity", "[", 
     RowBox[{"ToExpression", "@", "#"}], "]"}], "&"}], ",", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", "20"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746111280162954`*^9, 3.8746111870744495`*^9}},
 CellLabel->"In[154]:=",
 CellID->8081446,ExpressionUUID->"4b28dcdb-bd25-4fdd-9ef2-345baa5af384"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ScheduledTaskObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CTCLossLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CompoundElement\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GeneratedQuantityMagnitudes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Into\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ContourSmoothing\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$TimedOut\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NearestNeighborG\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DihedralGroup\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NotSucceedsTilde\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"LQOutputRegulatorGains\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageIdentify\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"AcyclicGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SpheroidalS2Prime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalL]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ClassifierFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"TextParagraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HeatFluxValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"ToSphericalCoordinates\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ConvexPolygonQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.874611135723819*^9, 3.8746111917431774`*^9}},
 CellLabel->"Out[154]=",
 CellID->524244016,ExpressionUUID->"6ce74f55-b774-411a-9da5-54b9c6fee01a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"arity", "[", 
     RowBox[{"ToExpression", "@", "#"}], "]"}], "&"}], ",", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", "1000"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8746112629485617`*^9, 3.8746112643070507`*^9}},
 CellLabel->"In[155]:=",
 CellID->484941913,ExpressionUUID->"e190e73d-579f-460b-8508-1bfec8aa830e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"PartialCorrelationFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MeshShading\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxwellDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MinkowskiQuestionMark\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"LinkService\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RawBoxes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"VectorLess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeCapacity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HankelH2\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FileSystemScan\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Binarize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternatingFactorial\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PrincipalValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AxesOrigin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalXi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Opening\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageMultiply\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"AutocompletionFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"StringQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Subtract\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CorrelationFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DampingFactor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DownRightVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"DominatorVertexList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Append\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TernaryPlotCorners\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StabilityMargins\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SphericalRegion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GetLinebreakInformationPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AutoOpenPalettes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Annuity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ModelPredictiveController\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FindCurvePath\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CloseOnClickOutside\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"OutputPorts\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ActiveItem\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HalfLine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DiscreteMinLimit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RuleForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TableViewBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"UnitVectorLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"InactiveStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PairCorrelationG\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ArrayFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SignPadding\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Csc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Ratios\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Unset\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SmoothKernelDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Selection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PolyLog\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SingularValues\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NotebookResetGeneratedCells\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PolyhedronGenus\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MeshCellMarker\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StringTemplate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"UnitSystem\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageSizeCache\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LineOpacity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ValueQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MixedRadixQuantity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TypeEvaluate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CellInsertionPointCell\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalA]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ExpandAll\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TrackedSymbols\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TextContents\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DifferenceQuotient\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CheckAll\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DebuggerSettings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"URLSave\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Below\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$SyntaxHandler\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$ImportFormats\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MouseButtons\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FrontFaceTexture\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DeleteFile\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"WeaklyConnectedGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DeviceReadLatest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Precedence\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TabFilling\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeElementShapeFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DirectedEdge\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TableViewBoxBackground\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FindHamiltonianPath\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"FindInstance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"DateOverlapsQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SymbolName\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MeanNeighborDegree\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"LongestCommonSubsequencePositions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SingularValuePlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PhaseMargins\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Curry\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ContainsAll\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$Display\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MortalityData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Pattern\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"OutputMathEditExpression\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TsallisQGaussianDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ListVectorPlot3D\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PyramidBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ControlPlacement\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WebNotebooksDirectory\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"After\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCurlyEpsilon]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NegativeDefiniteMatrixQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NRoots\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SplitBy\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RuntimeOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PolyhedronBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FiniteGroupCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Tr\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"FindIndependentVertexSet\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ListPlot3D\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SquaresR\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AnimationRunning\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SolarTime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"AntihermitianMatrixQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FunctionSurjective\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"LineSpacing\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Xnor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ButtonFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SetBoxFormNamesPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RandomGeoPosition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"StreamMarkers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ColumnsEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ErrorBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Editable\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeZoneConvert\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TransformedField\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SubtractSides\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SimplePolygonQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DownLeftVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"KVertexConnectedGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BorelTannerDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AsymptoticProduct\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Pruning\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"WeierstrassHalfPeriodW1\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ScheduledTaskInformation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MedianDeviation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SquareFreeQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalOmicron]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ConstantTimesLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FlattenAt\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Input\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GroupSetwiseStabilizer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ContentLocationFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$DefaultKernels\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TextLine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CellBaseline\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Line3DBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StippleShading\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$NumberMarks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RightTriangleEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptM]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ExternalObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Total\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"GeneratedAssetLocation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PeriodicInterpolation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MultivariateHypergeometricDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FileExtension\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BoxMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalJ]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FeedbackSectorStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MersennePrimeExponentQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Permanent\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TransformationClass\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DifferentialD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ShowSelection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PeakDetect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"LogLogisticDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GeometricTransformation3DBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioChannelCombine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TextSentences\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LineWrapParts\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PrimeZetaP\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PaneBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NoncentralStudentTDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BarlowProschanImportance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Latitude\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ExternalSessionObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"$CloudVersion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LeftTriangleEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"HostLookup\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$ReleaseNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CellTrayPosition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ExponentialFamily\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SetValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LiftingFilterData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoSmoothHistogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"NetworkPacketCapture\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FeatureNearest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CloudFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Using\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ConjugateTranspose\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ExpandFileName\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TunnelData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"WeaklyConnectedGraphComponents\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"LocatorPaneBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ListLinePlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Messages\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"InhomogeneousPoissonProcess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FromCoefficientRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"EllipticE\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ConvexPolygonQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FullOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Sort\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SumConvergence\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TagStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WordOrientation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ButtonBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ScriptForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeometricMeanFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LowerLeftArrow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"LogSeriesDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"QuestionObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"NetAppend\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PacletSymbol\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"MapIndexed\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EulerPhi\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Hypergeometric0F1Regularized\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ShowShortBoxForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FactorComplete\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeJoinForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TraceOn\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StandbyDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"DrawEdges\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ArgMin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"GroupElementQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GreaterEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ArcTan\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AbsoluteCorrelation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ClosingSaveDialog\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ValuePreprocessingFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TransparentColor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PacletSites\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LibraryFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FactorInteger\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Interval\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"MathieuC\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"RayleighDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ParetoPickandsDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"AlgebraicNumberTrace\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TransferFunctionZeros\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DisplayForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ConvertToPostScriptPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DawsonF\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ExpandNumerator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DataStructure\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Select\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Yesterday\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CSGRegion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ItemStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"UnderBar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DeleteObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Divisors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"StartAsynchronousTask\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DebugTag\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DiskMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FlightData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FontSubstitutions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Cap\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"SpatialBinnedPointData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"PowersRepresentations\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"OwnValues\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SearchIndices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"JuliaSetIterationCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ReIm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ResidueSum\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageDifference\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BooleanCountingFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ExcludedLines\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SplicedDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CepstrumArray\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$MinNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Overlay\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeCycleMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PanelBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Cuboid\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SystemsModelVectorRelativeOrders\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Indeterminate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BetaDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DefaultFrameStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Join\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"RightComposition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"WebItem\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"GaussianOrthogonalMatrixDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BinarySerialize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$Path\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LaplaceTransform\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LineIndentMaxFraction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TriangleMeasurement\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RealBlockDiagonalForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoDensityPlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ThreadingLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SystemsModelParallelConnect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"CellAutoOverwrite\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeElementStyleFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ImagePad\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Block\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TildeTilde\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"PacletDirectoryLoad\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FullSimplify\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Point\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TextAlignment\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PartitionGranularity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityStores\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalPi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ReliefPlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PlaceholderLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PositionIndex\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"JuliaSetBoettcher\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Closing\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"TraceOff\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BondQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LatticeData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"HelpBrowserSettings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoBoundary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"AtomList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CellPrint\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BinCounts\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"EnterExpressionPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"InfiniteFuture\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CreatePermissionsGroup\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CellFrameStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CountDistinctBy\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptH]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AccuracyGoal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Labeled\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Spacer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SignTest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CompressedData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$CacheBaseDirectory\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PrintingCopies\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HistogramList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Message\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FileNameForms\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GumbelDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CompleteGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FourierDSTMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Package\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MessageDialog\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CopyDatabin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Initialize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MAProcess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Merge\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ShortestMatch\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"HandwritingInputSettings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PreprocessingRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CloudDeploy\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NetTrainResultsObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"MissingStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HeunT\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}]}], ",", 
   RowBox[{"\<\"VectorColorFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FourierDCT\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GaugeFaceStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TelegraphProcess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RightDownVectorBar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"MatrixLog\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PolygonHoleScale\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FinancialIndicator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageAccumulate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$MachineEpsilon\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ConnectedGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"QuestionGenerator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ControllerManipulate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ReliefImage\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImagePyramid\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"$MachineAddresses\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Sphere\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphCenter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"LightBlue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SystemInstall\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"KEdgeConnectedGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"IndependentEdgeSetQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalY]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Tube\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageAssemble\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WaveletScale\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CellLabelTemplate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoOrientationData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"LerchPhi\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"NotTildeFullEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FormObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ComponentwiseContextMenu\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ComposeList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CoordinateBoundingBoxArray\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"NonNegativeIntegers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StructuralImportance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GroupPageBreakWithin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PulsarData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"AutoIndentSpacings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SetEnvironment\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"LogisticDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"NormFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WindowFrame\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MeshConnectivityGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SectorChart\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ASATriangle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EndAdd\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FieldSize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RealDigits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"ExponentialPowerDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"LocalizeDefinitions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Molecule\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PrependLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AsymptoticDSolveValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"SolidRegionQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PairedZTest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Language\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FontFamily\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SpanSymmetric\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$ConditionHold\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WelchWindow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AbsoluteDashing\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"WindingPolygon\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ToUpperCase\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FileFormatProperties\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DoubleDownArrow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Notebook\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MissingBehavior\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioFrequencyShift\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"FourierCoefficient\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityPropertyClass\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BinaryWrite\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NetStateObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PolygonScale\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BlomqvistBeta\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TableHeadings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Evaluatable\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BitClear\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GreaterGreater\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NoncentralFRatioDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"QRDecomposition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeZoneOffset\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"AppellF1\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}]}], ",", 
   RowBox[{"\<\"ViewVertical\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SpaceCurveData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"PillaiTraceTest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalUnion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Count\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Diagonal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ReadByteArray\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CodeAssistOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$DefaultMailbox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DefaultDockedCellStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"InverseWeierstrassP\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"JuliaSetPoints\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PodStates\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NotRightTriangle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"RarerProbability\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Medium\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"UnderscriptBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AnchoredSearch\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DiskBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxMixtureKernels\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FindTextualAnswer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"SolidMechanicsStress\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Duration\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSeriesResample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Attributes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ReplaceAll\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"McLaughlinGroupMcL\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MarchenkoPasturDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Exp\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Interpreter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"PacletNewerQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ComplexPlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Dividers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Regularization\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"VerifyDerivedKey\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$ResourceSystemBase\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FeatureExtractor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Import\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NicholsGridLines\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"OptimumFlowData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ScaleRangeStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CenterArray\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"CellFrame\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LayerSizeFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"IconData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SliderBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TraceAbove\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BayesianMinimization\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TextJustification\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ColorToneMapping\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TemporalRegularity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TensorExpand\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RandomPolygon\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Parallelize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageMarkers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AutoNumberFormatting\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StringRepeat\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BoundaryMesh\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"VertexStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DimensionalCombinations\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ExtentElementFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MedianFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ClosingEvent\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Adjugate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TraceOriginal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TooBig\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StruveH\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"V2Get\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CompanyData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"PerfectNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CellLabelStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoProjection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HighlightMesh\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LeftTeeVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"$MachineName\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AutoOpenNotebooks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSeriesMapThread\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EccentricityCentrality\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CompositeQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DeleteStopwords\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"KroneckerDelta\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"GeneratorDescription\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalKoppa]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RemoveVideoStream\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Raster3DBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BlockMap\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"WindVectorData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TextureCoordinateFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SpeciesData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ControllerInformationData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FileNameDrop\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AppendLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LessThan\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DynamicImage\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Subscripted\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Downsample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ListPlay\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NDSolve\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"LogGamma\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GeometricStep\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Dictionaries\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioLocalMeasurements\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ScriptSizeMultipliers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ChartLayout\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HalfNormalDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"OrderingLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ExternalDataCharacterEncoding\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ExpirationDate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"AnimationCycleRepetitions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CreatePalettePacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Atom\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"StringMatchQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ButtonData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BoxRatios\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Span\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BinLists\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Indent\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StieltjesGamma\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AcousticSoundHardValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Between\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Encode\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"QuadraticOptimization\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"StationaryWaveletPacketTransform\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"$UserAgentOperatingSystem\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ResetMenusPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LinkedItems\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageCorrelate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"IntersectedEntityClass\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"AllowVersionUpdate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NotNestedGreaterGreater\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NumberDecompose\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Highlighted\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ScheduledTaskInformationData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TransferFunctionModel\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RenderAll\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LessLess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FischerGroupFi22\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ScorerGiPrime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SeriesTermGoal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ParallelAxisPlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageLines\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Polynomials\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Collect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BattleLemarieWavelet\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SelfLoopStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"KalmanEstimator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MathematicaNotation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AllowLooseGrammar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"JoinAcross\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Eigensystem\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSeriesRescale\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphLinkEfficiency\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"UniqueElements\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Pivoting\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"General\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DataRange\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageAugmentationLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NotebooksMenu\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"WordBoundary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"KillProcess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DynamicGeoGraphics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"AspectRatio\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MoleculeDraw\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FrameBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BoxForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ShortLeftArrow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FrameStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HotellingTSquareDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RegionQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageGraphics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"HeunCPrime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}]}], ",", 
   RowBox[{"\<\"CornerNeighbors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"VertexCoordinateRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FindDevices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ByteCount\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Animator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Arrays\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"$EntityStores\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HankelMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Quartics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SucceedsTilde\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Temporary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SubsetCases\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageInstanceQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TargetUnits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StyleBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"AnnotationRules\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EvaluationMode\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SecuredAuthenticationKey\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeExtract\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"SequenceForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"MatrixNormalDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BandstopFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"WebSearch\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SpecificityGoal\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BeniniDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ExponentialDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RandomTree\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SpeechRecognize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$UserAgentVersion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HarmonicNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MathieuS\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Automatic\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"KleinInvariantJ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoGridPosition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TooltipStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioAmplify\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FindMaximumCut\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ParentList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Dt\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Apart\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BlockchainKeyEncode\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"WatsonUSquareTest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Delimiter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GaussianIntegers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GridBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeTags\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ColumnAlignments\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioBlockMap\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DownTeeArrow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CombinatorS\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SmoothDensityHistogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"AssociationThread\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalEpsilon]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PetersenGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MailAddressValidation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DerivativeFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"RemoteKernelObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MatrixRank\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CreateDocument\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FileNameDepth\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ToDate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalBeta]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ExpressionGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TrainTextContentDetector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphPeriphery\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ExponentStep\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ContentDetectorFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"MeshRange\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FractionBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ConvexRegionQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PageBreakAbove\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PassEventsUp\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PunctuationCharacter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SemanticInterpretation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"RotationTransform\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageAlign\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SessionSubmit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DefaultNewGraphics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HeatTemperatureCondition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"LocalTimeZone\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"PrecedesEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CountryData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CoulombH2\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ClusterClassify\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Exponent\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"$ModuleNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LocalCache\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FindExternalEvaluators\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BuckyballGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$NewSymbol\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SlideShowVideo\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Dodecahedron\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"EvaluationData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Callout\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Catalan\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"IsomorphicSubgraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PathGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"HypoexponentialDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"KaiserBesselWindow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageStitch\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Reinstall\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FeedbackLinearize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"InitializationValue\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Break\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PausedTime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"KirchhoffGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$DefaultLocalBase\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HistogramDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ParagraphIndent\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"UnderoverscriptBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FindRepeat\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ToExpression\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"NotebookSetupLayoutInformationPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MaxDetect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Underflow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalRho]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LogLikelihood\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ExtentSize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeologicalPeriodData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"EncryptFile\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FindSequenceFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"BeckmannDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}]}], ",", 
   RowBox[{"\<\"InheritScope\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LeftDownVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"PrintTemporary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"VectorColorFunctionScaling\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Wronskian\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"LaunchKernels\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DirichletCharacter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"TableSpacing\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CarlsonRC\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSeriesInvertibility\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TensorRank\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Printout3D\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AbsArg\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoElevationData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoLength\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RemoteFile\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DefaultOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalMarkersStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoVectorENU\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"RightDownVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"DoubleBracketingBar\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NetEncoder\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"VideoQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BlinkingCellInsertionPoint\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FoldList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"FindMinimumCostFlow\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FunctionCompile\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ColorBalance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"UpperTriangularize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FromDigits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PauliMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$AudioEncoders\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$MaxMachineNumber\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NotebookGetLayoutInformationPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ParallelArray\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"SetSecuredAuthenticationKey\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ShiftRegisterSequence\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Erfc\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NormalDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Sunday\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Selectable\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ConvertToPostScript\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Point3DBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RowsEqual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Tuesday\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ColorProfileData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"SourceLink\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphRoot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Or\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"DigitCharacter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphIntersection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"NIntegrate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FindMaximum\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TraceDepth\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Label\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$NotebookInlineStorageLimit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SpheroidalS1Prime\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"DigitQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TitsGroupT\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PearsonDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], ",", 
   RowBox[{"\<\"LinkReadHeld\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"DirichletLambda\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SequenceAttentionLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GaborFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"NMinimize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"UndirectedGraph\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FindPath\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioReverse\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"BlockLowerTriangularMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AffineHalfSpace\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"CircularQuaternionMatrixDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"TimesBy\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PostScriptBoxAlignment\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"InString\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"LogIntegral\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"StateOutputEstimator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DiscreteChirpZTransform\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"TimeSeriesShift\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"WhittakerW\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DeviceReadBuffer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BarLegend\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Definition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$Packages\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Drop\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"RemoveUsers\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CompleteGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FisherHypergeometricDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalIota]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EnableConsolePrintPacket\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptU]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$Assumptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Tally\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"WindowClickSelect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BitLength\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$Aborted\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HomePage\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CoxianDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DialogLevel\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Postfix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"ActiveClassification\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LearnDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"FoxHReduce\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LightCyan\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Tiny\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EdgeDelete\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"PowerModList\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BitShiftLeft\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FlashSelection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$UserBasePacletsDirectory\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ConstantArrayLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalD]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptV]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"SpeakerMatchQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"KochCurve\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"InterruptSettings\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ScaleDivisions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Variance\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"StripOnInput\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalG]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TubeBSplineCurveBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoProjectionData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ControllableDecomposition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"NetPairEmbeddingOperator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LogGammaDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ReverseUpEquilibrium\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"PathGraphQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SynthesizeMissingValues\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RecursionLimit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CornerFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Position\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"PromptForm\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TestReportObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CloudUnshare\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ContourDetect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Expand\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"SelectionCellParentStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Ask\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"InverseBetaRegularized\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"SequenceFold\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"$EvaluationEnvironment\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeElementShape\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FormBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RemoteAuthorizationCaching\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HighpassFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"BlockchainTransactionSubmit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Failure\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"GroupOpenerColor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StepMonitor\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"VerifyConvergence\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ChannelHistoryLength\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"OceanData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"UseGraphicsRange\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PacletInformation\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"HermiteDecomposition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"SoundAndGraphics\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CoxModelFit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"NotNestedLessLess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Streams\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GeoBoundsRegionBoundary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"$AudioInputDevices\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalCapitalNu]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DataStructureQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityGroup\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"MeanAbsoluteLossLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"OLEData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Style$\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"VoigtDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"MinimalPolynomial\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"JacobiSD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FunctionBijective\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"Subscript\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"InhomogeneousPoissonPointProcess\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ColorDetect\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Numerator\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GraphicsStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Keys\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Assumptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ParentEdgeLabelStyle\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"InnerPolygon\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Padding\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RiceDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Until\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Eigenvectors\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"InverseGudermannian\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CounterBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"MoleculeEquivalentQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"$EmbedCodeEnvironments\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalScriptCapitalU]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Once\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ImagePreviewFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"RightUpTeeVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"CellElementsBoundingBox\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"BesselK\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"JacobiNC\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CaseSensitive\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ManagedLibraryExpressionQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"LinkClose\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalX]$\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PrivateKey\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"$CloudSystemRootDirectory\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"$Notebooks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"FileNameJoin\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalIntersection\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"Inner\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}]}], ",", 
   RowBox[{"\<\"LocalClusteringCoefficient\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"ArrayComponents\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DownLeftTeeVector\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"AllowKernelInitialization\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ChartElementDataFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"CauchyDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Laplacian\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"RudinShapiro\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CopyTag\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"StackedDateListPlot\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FileSize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"GalleryView\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageDemosaic\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AutocorrelationTest\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"ColorFunction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DisplayAllSteps\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"KeepExistingVersion\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Setter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"RandomSeeding\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"NetFlatten\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PalindromeQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DeviceClose\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"CombinatorY\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"AuthenticationDialog\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PolyhedronData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"BoundedRegionQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"KroneckerModelDecomposition\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"PrintPrecision\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"EulerMatrix\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RegionFit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"WordFrequency\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"Eliminate\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"RamanujanTauZ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"NetInitialize\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"Lighter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"FindFit\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"\[FormalPsi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"PackingMethod\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"DropoutLayer\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Function\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"DumpSave\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"TreeElementLabel\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"Multiplicity\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"InverseShortTimeFourier\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], ",", 
   RowBox[{"\<\"FourierDCTFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"PoissonConsulDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AudioReplace\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], ",", 
   RowBox[{"\<\"HumpDownHump\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], ",", 
   RowBox[{"\<\"UpTee\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"CloudBase\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"InitializationObject\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"DynamicBoxOptions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"VertexTextureCoordinates\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"LaplacianFilter\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"EllipticExp\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"AutoAction\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ImageFormattingWidth\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"\<\"ListSliceVectorPlot3D\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"FactorialMoment\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ChiSquareDistribution\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"\<\"Gather\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"ChebyshevT\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8746112956796064`*^9},
 CellLabel->"Out[155]=",
 CellID->6978272,ExpressionUUID->"24b5b0fe-8ecd-4e32-b887-3341d7f0d529"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["replace while", "Section",
 CellChangeTimes->{{3.8746114304591184`*^9, 3.8746114329981184`*^9}},
 CellID->805124745,ExpressionUUID->"719f1823-4791-4c5b-b071-3f671e78aadb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReplaceWhile", "[", 
   RowBox[{"rule_", ",", "expr_", ",", "args__"}], "]"}], ":=", 
  RowBox[{"NestWhile", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/.", " ", "rule"}], "&"}], ",", "expr", ",", "args"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ReplaceWhile", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":>", "x"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"g", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", "UnsameQ", ",", "2"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8746114337411375`*^9, 3.874611439068118*^9}},
 CellLabel->"In[157]:=",
 CellID->357929370,ExpressionUUID->"3a17efab-6505-447b-b337-6feba65c990c"],

Cell[BoxData[
 RowBox[{"g", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.8746114394991283`*^9},
 CellLabel->"Out[158]=",
 CellID->484697127,ExpressionUUID->"5688bdce-f9cd-43b1-bed1-da0ea01ad7ab"]
}, Open  ]]
}, Open  ]],

Cell["", "Chapter",
 CellID->263264901,ExpressionUUID->"b8eddc23-5c9e-4e4a-9da8-b791092376bc"]
}, Open  ]]
},
WindowSize->{574.8, 565.8},
WindowMargins->{{
  Automatic, -4.7999999999999545`}, {-4.7999999999999545`, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 253, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 253, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[836, 27, 266, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1105, 34, 323, 6, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1105, 34, 323, 6, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1453, 44, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1585, 48, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1718, 52, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1872, 58, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[2114, 65, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 974174, 21733},
 {"Your Essay Title", 974361, 21737},
 {"AuthorName", 974542, 21741},
 {"Abstract", 974701, 21745},
 {"TemplateCell", 974883, 21749},
 {"SectionHeader", 975066, 21753},
 {"ExampleTopicSentence", 975242, 21757},
 {"ExampleCodeText", 975417, 21761},
 {"ExampleInput", 975587, 21765},
 {"ExampleOutput", 975753, 21769}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 253, 3, 160, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[836, 27, 266, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1105, 34, 323, 6, 85, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1453, 44, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1585, 48, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1718, 52, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1872, 58, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[2114, 65, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2371, 73, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2469, 76, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]],
Cell[CellGroupData[{
Cell[2601, 82, 239, 4, 105, "Section",ExpressionUUID->"47356c06-8ce7-4ae6-88ab-e9c79b99ab83",
 CellID->16145119],
Cell[CellGroupData[{
Cell[2865, 90, 1067, 31, 105, "Input",ExpressionUUID->"a5f8db25-d795-4a36-8488-b66916f05d57",
 CellID->14910494],
Cell[3935, 123, 223, 5, 35, "Output",ExpressionUUID->"a6e75738-6972-4e32-8035-ef63858746ad",
 CellID->470178914],
Cell[4161, 130, 219, 5, 32, "Output",ExpressionUUID->"6c3a86a6-199e-4c5a-a7e7-3c77559472d0",
 CellID->458537866]
}, Open  ]],
Cell[CellGroupData[{
Cell[4417, 140, 1072, 30, 28, "Input",ExpressionUUID->"8c81bfab-5457-4ade-bdfd-2f18b3960a71",
 CellID->335710690],
Cell[5492, 172, 576, 19, 49, "Output",ExpressionUUID->"71a2bfbb-dd3d-42b4-bcb3-449c6b515e4d",
 CellID->23903360]
}, Open  ]],
Cell[CellGroupData[{
Cell[6105, 196, 922, 28, 28, "Input",ExpressionUUID->"5397cd05-c20c-4091-a578-b410e0e617b0",
 CellID->22022376],
Cell[7030, 226, 225, 5, 35, "Output",ExpressionUUID->"674b2b3b-f9b0-4d04-a151-26f24e3c110b",
 CellID->603734638]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7304, 237, 170, 2, 67, "Section",ExpressionUUID->"16d63e6b-e6d1-44b5-8b02-6aede28ca19d",
 CellID->951792585],
Cell[7477, 241, 197, 3, 28, "Input",ExpressionUUID->"9976d276-561c-462c-bca1-4a9918f22ce1",
 CellID->329019088],
Cell[7677, 246, 2149, 57, 124, "Input",ExpressionUUID->"2bb972f6-866a-427c-af91-56c6eeb82390",
 CellID->514806475],
Cell[CellGroupData[{
Cell[9851, 307, 365, 8, 28, "Input",ExpressionUUID->"fdb0bc35-c86e-4882-8618-2f04da267f2c",
 CellID->273456737],
Cell[10219, 317, 8819, 202, 302, "Output",ExpressionUUID->"14d472b0-c8d5-4df7-9b7a-5c2b33f2e923",
 CellID->63023862]
}, Open  ]],
Cell[CellGroupData[{
Cell[19075, 524, 407, 9, 28, "Input",ExpressionUUID->"65ffeac4-3f41-43e1-b118-f86bbf66bf75",
 CellID->397827056],
Cell[19485, 535, 1755, 26, 234, "Output",ExpressionUUID->"8f27840a-4b76-4832-8ab4-59be2012f764",
 CellID->964831862]
}, Open  ]],
Cell[21255, 564, 1669, 45, 219, "Input",ExpressionUUID->"f3f3437f-7d75-4e31-8f4a-2be93204d02c",
 CellID->854423488],
Cell[CellGroupData[{
Cell[22949, 613, 310, 7, 28, "Input",ExpressionUUID->"799019a3-f7b3-4b8d-aa2a-6f4bf25c5636",
 CellID->33945273],
Cell[23262, 622, 7566, 123, 317, "Output",ExpressionUUID->"74e702f8-6ecd-40dc-aabc-311bb62c2ab3",
 CellID->497384528]
}, Open  ]],
Cell[CellGroupData[{
Cell[30865, 750, 481, 13, 48, "Input",ExpressionUUID->"b8cd8871-1c5a-4315-a467-5928cd8dcbc4",
 CellID->191294787],
Cell[31349, 765, 7576, 126, 321, "Output",ExpressionUUID->"bb8837bd-47fa-4f5f-a37b-4922bc2f0e6d",
 CellID->336613445]
}, Open  ]],
Cell[CellGroupData[{
Cell[38962, 896, 536, 14, 28, "Input",ExpressionUUID->"d7169efb-b091-454d-96f9-40f77b9e3f9c",
 CellID->491104581],
Cell[39501, 912, 173, 3, 32, "Output",ExpressionUUID->"b6c32285-81fb-4f4c-a073-122dd833702a",
 CellID->146314375]
}, Open  ]],
Cell[CellGroupData[{
Cell[39711, 920, 568, 15, 28, "Input",ExpressionUUID->"467ce23a-5886-46e2-a25f-56026674c7c2",
 CellID->288939544],
Cell[40282, 937, 1564, 23, 200, "Output",ExpressionUUID->"44b7ce48-acee-4312-8c1a-042680bf2c7b",
 CellID->22341535]
}, Open  ]],
Cell[CellGroupData[{
Cell[41883, 965, 238, 6, 28, "Input",ExpressionUUID->"15a420b4-b1c5-411a-97c8-96c46c05c7f4",
 CellID->57873523],
Cell[42124, 973, 1046, 16, 52, "Output",ExpressionUUID->"14820a20-ea74-49bf-b561-d165e35ddc49",
 CellID->780708441]
}, Open  ]],
Cell[43185, 992, 2182, 56, 124, "Input",ExpressionUUID->"4c3dd8e3-a00e-4a62-8bb9-d46a4e6f9302",
 CellID->37458407],
Cell[CellGroupData[{
Cell[45392, 1052, 213, 3, 28, "Input",ExpressionUUID->"4bf5ecbb-9f66-449e-8978-a0442ac4c24e",
 CellID->42037230],
Cell[45608, 1057, 4717, 92, 64, "Output",ExpressionUUID->"8463647b-b991-47a1-9b19-0152536d0679",
 CellID->39677405]
}, Open  ]],
Cell[CellGroupData[{
Cell[50362, 1154, 388, 10, 28, "Input",ExpressionUUID->"9b25d4ba-e086-43a5-b41b-bc9f860d1b09",
 CellID->47851711],
Cell[50753, 1166, 1106, 18, 52, "Output",ExpressionUUID->"00a400e0-5343-4663-86f5-d1ab9139ff9b",
 CellID->243019735]
}, Open  ]],
Cell[CellGroupData[{
Cell[51896, 1189, 214, 3, 28, "Input",ExpressionUUID->"c6432b51-ff96-4931-a90e-278b8819c12b",
 CellID->225520542],
Cell[52113, 1194, 4694, 92, 64, "Output",ExpressionUUID->"5f07f96e-fcd0-4358-8f25-004c37249ba6",
 CellID->407103618]
}, Open  ]],
Cell[CellGroupData[{
Cell[56844, 1291, 212, 3, 28, "Input",ExpressionUUID->"94a1a0f5-fdf4-4d9b-98f4-cd7d4735bc4d",
 CellID->294272086],
Cell[57059, 1296, 4696, 92, 64, "Output",ExpressionUUID->"aad7b2f3-6bf9-4f5a-9c07-630082f8a234",
 CellID->283644840]
}, Open  ]],
Cell[CellGroupData[{
Cell[61792, 1393, 518, 12, 48, "Input",ExpressionUUID->"cc82bc4f-9336-4570-b2ce-c575b68268ee",
 CellID->182455214],
Cell[62313, 1407, 7705, 127, 259, "Output",ExpressionUUID->"1739e164-32f1-4ebe-ba0b-b86220423af1",
 CellID->111278949]
}, Open  ]],
Cell[CellGroupData[{
Cell[70055, 1539, 606, 14, 48, "Input",ExpressionUUID->"058b9fc2-2842-4e71-9e44-9eca6712e9c9",
 CellID->366655966],
Cell[70664, 1555, 1641, 25, 217, "Output",ExpressionUUID->"faa62867-79b4-4635-832e-ee2caa695234",
 CellID->193118525]
}, Open  ]],
Cell[CellGroupData[{
Cell[72342, 1585, 604, 14, 48, "Input",ExpressionUUID->"9fb11386-ad5c-4fc8-b29f-f91a56a8495a",
 CellID->903767939],
Cell[72949, 1601, 1610, 24, 217, "Output",ExpressionUUID->"ae657f9e-a3f9-4412-93a7-d8d4e49ca3d0",
 CellID->144810353]
}, Open  ]],
Cell[74574, 1628, 320, 7, 28, "Input",ExpressionUUID->"627f5851-a70c-406a-9def-94c1a88850ac",
 CellID->65498080],
Cell[CellGroupData[{
Cell[74919, 1639, 318, 7, 28, "Input",ExpressionUUID->"c4cba36f-802b-44ef-bc47-5ce655eeda08",
 CellID->113417100],
Cell[75240, 1648, 1063, 16, 52, "Output",ExpressionUUID->"650b90c9-aad6-4ffd-acd6-506a909a38c8",
 CellID->228247661]
}, Open  ]],
Cell[76318, 1667, 297, 6, 28, "Input",ExpressionUUID->"a1e3ed1a-f9eb-40bd-93dd-54598f42b136",
 CellID->143976121],
Cell[CellGroupData[{
Cell[76640, 1677, 239, 4, 28, "Input",ExpressionUUID->"af2bb66b-5e29-4ea5-b940-25c4ead2899a",
 CellID->91572431],
Cell[76882, 1683, 1367, 23, 109, "Output",ExpressionUUID->"3ab19d68-b2d2-4598-b421-d05f2cf89eff",
 CellID->22694756]
}, Open  ]],
Cell[CellGroupData[{
Cell[78286, 1711, 275, 5, 28, "Input",ExpressionUUID->"363d5c8f-ff08-4def-9074-b0b3d911df58",
 CellID->86071513],
Cell[78564, 1718, 539070, 11950, 6793, "Output",ExpressionUUID->"12f3bcd9-4f62-4f89-804c-45175ff117f6",
 CellID->11922385]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[617683, 13674, 173, 2, 67, "Section",ExpressionUUID->"56273a81-39f7-46ff-85cc-de35e9038fd2",
 CellID->544653339],
Cell[CellGroupData[{
Cell[617881, 13680, 507, 11, 48, "Input",ExpressionUUID->"fcc866ba-6190-4561-a36d-7777118236b7",
 CellID->111550531],
Cell[618391, 13693, 11408, 198, 355, "Output",ExpressionUUID->"4155c2f3-3282-4329-827f-8206834f5535",
 CellID->237325083]
}, Open  ]],
Cell[CellGroupData[{
Cell[629836, 13896, 547, 13, 48, "Input",ExpressionUUID->"9c3cd047-8699-4909-baea-6c783aef23f2",
 CellID->311576868],
Cell[630386, 13911, 862, 14, 132, "Output",ExpressionUUID->"edfd9015-9f58-42f1-b87a-9032c4bf7b96",
 CellID->21755356]
}, Open  ]],
Cell[CellGroupData[{
Cell[631285, 13930, 224, 4, 28, "Input",ExpressionUUID->"f3419ec1-e11b-4479-9953-0328a0ebf089",
 CellID->331611524],
Cell[631512, 13936, 12388, 305, 265, "Output",ExpressionUUID->"485d9bdf-814c-48f6-94c4-e5081a39d408",
 CellID->17138060]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[643949, 14247, 171, 2, 67, "Section",ExpressionUUID->"e232b33b-e1ee-4c78-bdd9-bd99e563687d",
 CellID->53704207],
Cell[CellGroupData[{
Cell[644145, 14253, 396, 9, 48, "Input",ExpressionUUID->"12464f98-eb74-4e5f-9b0a-b0c2b283d108",
 CellID->259240167],
Cell[644544, 14264, 7373, 122, 259, "Output",ExpressionUUID->"62fb87d4-08ac-4155-aca6-2fe328a20cd3",
 CellID->117585957]
}, Open  ]],
Cell[CellGroupData[{
Cell[651954, 14391, 509, 13, 48, "Input",ExpressionUUID->"2cad6837-8fe6-40a0-8aaf-e7036777e52f",
 CellID->224782917],
Cell[652466, 14406, 980, 20, 38, "Output",ExpressionUUID->"092a032e-eec9-4942-b268-da43a3e80fb6",
 CellID->443318181]
}, Open  ]],
Cell[CellGroupData[{
Cell[653483, 14431, 424, 10, 28, "Input",ExpressionUUID->"1489ae4d-79b1-464a-b4f8-1c7a5b7a6761",
 CellID->371937608],
Cell[653910, 14443, 175, 3, 32, "Output",ExpressionUUID->"98b0346d-506b-4a2a-b0f3-0290abdf3e92",
 CellID->775925205]
}, Open  ]],
Cell[CellGroupData[{
Cell[654122, 14451, 2363, 62, 257, "Input",ExpressionUUID->"a669fbfb-e0f6-4628-b9da-730510157ff6",
 CellID->323785945],
Cell[656488, 14515, 4680, 91, 64, "Output",ExpressionUUID->"30810113-4360-4de0-9268-1534980281e4",
 CellID->82976417],
Cell[661171, 14608, 1182, 19, 52, "Output",ExpressionUUID->"836d920d-e316-4e3e-8d30-3784837497de",
 CellID->541297938],
Cell[662356, 14629, 4681, 91, 64, "Output",ExpressionUUID->"ffc8d5a0-5611-41f0-a4d5-22078a3fb83f",
 CellID->757041500],
Cell[667040, 14722, 7770, 128, 259, "Output",ExpressionUUID->"cf3c9c83-4a9a-4a1f-b839-f26c48f8a4ef",
 CellID->166539215],
Cell[674813, 14852, 4681, 91, 64, "Output",ExpressionUUID->"27dd283f-807c-42cc-ba08-3cf157284654",
 CellID->487375283],
Cell[679497, 14945, 4681, 91, 64, "Output",ExpressionUUID->"aabadde0-ddfa-4aea-a27d-b9a0caff2ab8",
 CellID->216030487],
Cell[684181, 15038, 299, 5, 32, "Output",ExpressionUUID->"66066d76-839f-4e1d-a06d-ffe0952f587e",
 CellID->27421668],
Cell[684483, 15045, 4682, 91, 64, "Output",ExpressionUUID->"e1f3d858-d1b4-45a3-8da8-3df1447d4d31",
 CellID->34865218],
Cell[689168, 15138, 303, 5, 32, "Output",ExpressionUUID->"36583e84-94e6-4e07-bf08-a9b081cf0955",
 CellID->334422864],
Cell[689474, 15145, 4683, 91, 64, "Output",ExpressionUUID->"5bded293-1db4-47fb-b0ef-934bafcc113c",
 CellID->102459692],
Cell[694160, 15238, 958, 22, 449, "Output",ExpressionUUID->"fbf9f564-17f4-4d93-bd34-d6835b509bc1",
 CellID->441459515],
Cell[695121, 15262, 1643, 25, 203, "Output",ExpressionUUID->"d40657d1-8028-4bef-8bb8-713a9b27de32",
 CellID->298401481]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[696813, 15293, 94, 1, 67, "Section",ExpressionUUID->"01728e35-633c-4e24-9f8e-e02250ec2913",
 CellID->638818736],
Cell[696910, 15296, 1412, 38, 181, "Input",ExpressionUUID->"d3d648f7-fa4b-433a-ae68-b7d60a2926be",
 CellID->625998492],
Cell[CellGroupData[{
Cell[698347, 15338, 687, 19, 67, "Input",ExpressionUUID->"38a63df0-3a97-4b9f-b147-70a7361e9d9d",
 CellID->654930369],
Cell[699037, 15359, 272, 6, 32, "Output",ExpressionUUID->"49f407ed-c2c2-4c2f-b1fa-989da0408e59",
 CellID->62994594]
}, Open  ]],
Cell[CellGroupData[{
Cell[699346, 15370, 660, 18, 67, "Input",ExpressionUUID->"af75279a-775d-4430-b961-73bfb07b0522",
 CellID->53421602],
Cell[700009, 15390, 514, 16, 32, "Output",ExpressionUUID->"c788e546-dcea-41c2-b2c7-090e6c77af2b",
 CellID->178161959]
}, Open  ]],
Cell[CellGroupData[{
Cell[700560, 15411, 479, 13, 28, "Input",ExpressionUUID->"16ee2440-7dd4-4c67-898a-526352f83df8",
 CellID->199446457],
Cell[701042, 15426, 350, 8, 32, "Output",ExpressionUUID->"6a36c053-05f0-4b7e-b43c-6379b84ca4d0",
 CellID->149624819]
}, Open  ]],
Cell[CellGroupData[{
Cell[701429, 15439, 571, 16, 48, "Input",ExpressionUUID->"06d617ec-abfc-43c5-9543-3c60b7f82c1f",
 CellID->730211],
Cell[702003, 15457, 19144, 445, 1916, "Output",ExpressionUUID->"c180bcd3-2292-4cd9-9fa2-79d49a1eabbf",
 CellID->618230238]
}, Closed]],
Cell[CellGroupData[{
Cell[721184, 15907, 500, 13, 44, "Input",ExpressionUUID->"66b15926-e218-4913-a4ef-99fb17703cb2",
 CellID->101325724],
Cell[721687, 15922, 19107, 445, 1916, "Output",ExpressionUUID->"40c96778-7b24-4a18-99c6-4699ceb21262",
 CellID->563154015]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740843, 16373, 168, 2, 67, "Section",ExpressionUUID->"287e7973-232a-43e3-b3ce-e856f2c0ab37",
 CellID->38972837],
Cell[741014, 16377, 1490, 39, 220, "Input",ExpressionUUID->"f320fa90-8e34-40a9-b05b-700893c6b0dc",
 CellID->96265856],
Cell[CellGroupData[{
Cell[742529, 16420, 228, 4, 28, "Input",ExpressionUUID->"466dbba1-a4c9-4180-8cf8-a5d673f3223c",
 CellID->123076937],
Cell[742760, 16426, 225, 5, 32, "Output",ExpressionUUID->"83c27d45-f41f-42ab-8aa0-e47a6aa0402d",
 CellID->456319555]
}, Open  ]],
Cell[CellGroupData[{
Cell[743022, 16436, 310, 7, 28, "Input",ExpressionUUID->"cee163c8-25b3-48c4-b507-8037937b2143",
 CellID->723497619],
Cell[743335, 16445, 911, 15, 135, "Output",ExpressionUUID->"da7eb2c9-5c6e-448b-b097-c3bdb4c84d27",
 CellID->86412948]
}, Open  ]],
Cell[744261, 16463, 183, 3, 28, "Input",ExpressionUUID->"8f143c14-6701-4d3e-a094-7c72c0b362dc",
 CellID->489172957],
Cell[CellGroupData[{
Cell[744469, 16470, 467, 12, 48, "Input",ExpressionUUID->"4b28dcdb-bd25-4fdd-9ef2-345baa5af384",
 CellID->8081446],
Cell[744939, 16484, 2571, 65, 210, "Output",ExpressionUUID->"6ce74f55-b774-411a-9da5-54b9c6fee01a",
 CellID->524244016]
}, Open  ]],
Cell[CellGroupData[{
Cell[747547, 16554, 471, 12, 48, "Input",ExpressionUUID->"e190e73d-579f-460b-8508-1bfec8aa830e",
 CellID->484941913],
Cell[748021, 16568, 113354, 3005, 9040, "Output",ExpressionUUID->"24b5b0fe-8ecd-4e32-b887-3341d7f0d529",
 CellID->6978272]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[861424, 19579, 177, 2, 67, "Section",ExpressionUUID->"719f1823-4791-4c5b-b071-3f671e78aadb",
 CellID->805124745],
Cell[CellGroupData[{
Cell[861626, 19585, 705, 19, 67, "Input",ExpressionUUID->"3a17efab-6505-447b-b337-6feba65c990c",
 CellID->357929370],
Cell[862334, 19606, 199, 4, 32, "Output",ExpressionUUID->"5688bdce-f9cd-43b1-bed1-da0ea01ad7ab",
 CellID->484697127]
}, Open  ]]
}, Open  ]],
Cell[862560, 19614, 94, 1, 69, "Chapter",ExpressionUUID->"b8eddc23-5c9e-4e4a-9da8-b791092376bc",
 CellID->263264901]
}, Open  ]]
}
]
*)

